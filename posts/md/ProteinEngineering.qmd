---
title: "AI 기술로 새로운 단백질을 설계하고 안정성 및 다양성을 개선하는 방법"
author: "Taeyoon Kim"
categories: [Python, Biology, Bioinformatics, Programming]
draft: true
date: "2024-12-22"
date-modified: last-modified
---

![](ProteinEngineering.png){width=100% fig-align="center"}

최근 생명과학 분야에서 딥러닝을 활용한 혁신적인 AI 모델들이 속속 등장하고 있습니다. 이런 모델들은 단백질의 열 안정성, 결합 친화력, 기능을 획기적으로 향상시키는 데 탁월한 성과를 보이고 있습니다. AI 모델을 활용한 단백질 최적화와 다양화, 그리고 새로운 기능성 단백질 설계는 매우 흥미로운 연구 분야로 이 분야의 구체적인 적용 사례들을 살펴보며 AI 가 단백질 공학에 어떤 혁신을 가져올 수 있는지 알아보죠.[^1]

# 일반적인 워크플로우

단백질-리간드 복합체 구조 예측에는 RFAA와 RDAA를, 단백질-단백질 복합체 구조에는 RoseTTAFold와 RFDiffusion을 주로 사용합니다. AI 도구를 활용한 단백질 결합 친화력과 열 안정성 개선 절차는 다음과 같습니다:

1. RFAA로 단백질-리간드 또는 단백질-단백질 복합체 구조 예측
2. RDAA 또는 RFDiffusion에 이전 단계의 PDB 파일을 입력하여 유사 단백질 백본 생성
3. 단백질 언어 모델(AF2Bind, Evo, ESM-2, AlphaMissense) 또는 UniProt 데이터베이스로 중요 구조 모티프 식별 후, RFDiffusion All Atom으로 새로운 단백질 구조 스캐폴딩
4. 분자 역학 시뮬레이션으로 일시적 결합 포켓 분석 및 중요 잔기 식별 (선택적으로 AlphaFlow 사용)
5. 선택적으로 분포 그래포머로 단백질의 볼츠만 분포 샘플링 (4번째 단계 대체 가능)
6. RFDiffusion All Atom으로 기능적 구조 모티프 스캐폴딩
7. Evo로 기능 향상/저하 돌연변이 예측 및 유리한 아미노산 편향 데이터 생성
8. Evo, AF2Bind, AlphaMissense 정보를 바탕으로 LigandMPNN으로 특정 잔기 편향 아미노산 서열 생성
9. AlphaFold2로 새 아미노산 서열 품질 검증 및 RFAA의 PAE 결과에서 LIS 점수로 결합 친화도 예측 및 필터링
10. 선택적으로 ThermoMPNN으로 열 안정성 예측
11. 실험을 통한 최종 검증

## RoseTTAFold All Atom 을 이용한 단백질 - 리간드 복합체 구조 예측

RoseTTAFold All Atom(RFAA) 의 설치 방법과 설정 과정은 [GitHub](https://github.com/baker-laboratory/RoseTTAFold-All-Atom) 페이지에서 자세히 확인할 수 있습니다. RFAA 를 사용하면 다양한 복합체 구조를 예측할 수 있습니다:

1. 단백질 - 리간드 복합체:
   리간드의 SMILES 문자열과 단백질 서열을 입력하면 복합체 구조를 예측할 수 있습니다. 예를 들어, 플라스틱 분해 단백질과 PET 분자의 복합체 구조를 얻을 수 있습니다.

2. 단백질 - 단백질 복합체:
   두 단백질의 서열을 제공하면 그들의 복합체 구조를 예측할 수 있습니다.

RFAA 의 결과는 PDB 파일 형식으로 제공됩니다. 이 PDB 파일은 RFdiffusion All Atom 이나 RFDiffusion 의 입력 데이터로 활용할 수 있어, 추가적인 구조 분석이나 최적화에 사용할 수 있습니다.

## 부분 확산을 이용한 단백질 구조 다양화

RFDiffusion과 RFDiffusion All Atom(RFAA)은 단백질 구조를 다양화하는 데 사용되는 강력한 도구입니다. 이 도구들의 Google Colab 버전을 통해 온라인에서 쉽게 접근할 수 있습니다.

- [Link 1](https://colab.research.google.com/github/sokrypton/ColabDesign/blob/main/rf/examples/diffusion_ori.ipynb)
- [Link 2](https://colab.research.google.com/github/sokrypton/ColabDesign/blob/main/rf/examples/diffusion_foldcond.ipynb)

RFAA에서 얻은 PDB 결과는 RFAA나 RFDiffusion의 입력 데이터로 재사용할 수 있습니다. RFAA는 저분자 리간드도 처리할 수 있지만, RFDiffusion은 단백질에만 적용됩니다.

"부분 확산" 기법은 단백질 백본 구조에 소량의 노이즈를 추가한 후 제거하는 방식으로 작동합니다. 이를 통해 원래 단백질과 유사하면서도 새로운 백본을 생성할 수 있으며, 노이즈의 양을 조절하여 다양성을 제어할 수 있습니다.

RFAA를 사용하여 저분자 리간드를 컨텍스트로 이 과정을 수행하면, 리간드와 형태 상보성이 높은 새로운 백본을 설계할 수 있습니다. 이는 단백질과 리간드 간의 결합 친화력을 향상시킬 가능성이 큽니다. 단백질-단백질 복합체의 경우, RFDiffusion을 사용하여 단백질 결합제와 표적 사이의 형태 상보성을 개선함으로써 결합 친화력을 높일 수 있습니다.

노이즈 적용은 특정 잔기를 선택하거나 전체 구조에 적용할 수 있으며, 이는 단백질에 대한 사전 지식이나 AF2Bind, Evo, pLM 등의 도구를 활용하여 결정할 수 있습니다.

RFDiffusion은 높은 친화도와 특이성을 가진 새로운 단백질 결합체를 설계할 수 있어, 의도한 표적에 잘 결합하고 비특이적 상호작용을 최소화합니다. RFAA 역시 특정 저분자에 결합하는 새로운 단백질을 설계할 수 있어, 높은 형태 상보성을 가진 결합 포켓을 생성할 수 있습니다.

이 외에도 대칭 올리고머 생성, 대칭 모티프 스캐폴딩, 무조건적 단백질 백본 생성, 폴드 컨디셔닝, 유도 전위 사용 등 다양한 기능이 있습니다.

# 중요한 단백질 구조 식별하기

## AF2Bind와 구조 분석

RFDiffusion의 모티프 스캐폴딩 기능을 활용하면 원래 단백질과 다르지만 동일한 중요 모티프를 포함하는 새로운 단백질을 설계할 수 있습니다. 단백질의 결합 부위를 식별하는 방법은 다음과 같습니다:

1. 리간드나 표적 단백질과 우리 단백질 구조 사이의 인터페이스에서 일정 거리 내 잔기 선택
2. AF2Bind와 같은 도구를 사용하여 결합 부위 예측

UniProt이나 PDB에서 활성 부위, 촉매 부위 등 관심 영역에 대한 주석도 참고할 수 있습니다.

[AF2Bind](https://www.solab.org/af2bind)는 결합 부위 결정 외에도 각 잔기와 유리하게 상호작용하는 '미끼 아미노산'을 제안합니다. 이는 잔기의 화학적 특성을 나타내며, LigandMPNN을 사용해 결합 친화도를 향상시키는 단백질 서열 설계에 유용한 정보를 제공합니다.

## Evo와 단백질 언어 모델

[Evo](https://github.com/evo-design/evo)는 DNA 언어 모델로, 다양한 생성 및 예측 작업을 수행합니다. 주요 기능으로는 변이 효과 예측, 기능에 유익하거나 해로운 변이 판단, 그리고 그 정도를 설명하는 것이 있습니다.

이는 로그-가능성 비율(LLR)을 사용하여 단백질의 모든 점 돌연변이 효과를 예측하고 결과를 히트맵으로 표시하는 방식과 유사합니다. ESM-2와 같은 단백질 언어 모델(pLM)을 사용하면 이러한 분석이 가능해집니다.

이러한 도구들을 통해 단백질의 중요한 구조적 모티프를 식별하고, 이를 바탕으로 더 효과적인 단백질 설계와 기능 예측을 수행할 수 있습니다.

```python
from transformers import AutoTokenizer, EsmForMaskedLM
import torch
import matplotlib.pyplot as plt
import numpy as np
from typing import List

# 모델과 토크나이저 로드
model_name: str = "facebook/esm2_t6_8M_UR50D"
tokenizer: AutoTokenizer = AutoTokenizer.from_pretrained(model_name)
model: EsmForMaskedLM = EsmForMaskedLM.from_pretrained(model_name)

# 입력 단백질 서열
protein_sequence: str = "MAPLRKTYVLKLYVAGNTPNSVRALKTLNNILEKEFKGVYALKVIDVLKNPQLAEEDKILATPTLAKVLPPPVRRIIGDLSNREKVLIGLDLLYEEIGDQAEDDLGLE"

# 입력 서열 토큰화
input_ids: torch.Tensor = tokenizer.encode(protein_sequence, return_tensors="pt")
sequence_length: int = input_ids.shape[1] - 2  # 특수 토큰 제외

# 아미노산 목록
amino_acids: List[str] = list("ACDEFGHIKLMNPQRSTVWY")

# 히트맵 초기화
heatmap: np.ndarray = np.zeros((20, sequence_length))

# 각 위치와 아미노산에 대한 LLR 계산
for position in range(1, sequence_length + 1):
    # 대상 위치 마스킹
    masked_input_ids: torch.Tensor = input_ids.clone()
    masked_input_ids[0, position] = tokenizer.mask_token_id

    # 마스킹된 토큰에 대한 로짓 얻기
    with torch.no_grad():
        logits: torch.Tensor = model(masked_input_ids).logits

    # 로그 확률 계산
    probabilities: torch.Tensor = torch.nn.functional.softmax(logits[0, position], dim=0)
    log_probabilities: torch.Tensor = torch.log(probabilities)

    # 야생형 잔기의 로그 확률 얻기
    wt_residue: int = input_ids[0, position].item()
    log_prob_wt: float = log_probabilities[wt_residue].item()

    # 각 변이에 대한 LLR 계산
    for i, amino_acid in enumerate(amino_acids):
        log_prob_mt: float = log_probabilities[tokenizer.convert_tokens_to_ids(amino_acid)].item()
        heatmap[i, position - 1] = log_prob_mt - log_prob_wt

# 히트맵 시각화
plt.figure(figsize=(15, 5))
plt.imshow(heatmap, cmap="viridis", aspect="auto")
plt.xticks(range(sequence_length), list(protein_sequence))
plt.yticks(range(20), amino_acids)
plt.xlabel("단백질 서열 내 위치")
plt.ylabel("아미노산")
plt.title("단백질 서열에 대한 돌연변이의 예측 효과(LLR)")
plt.colorbar(label="로그 우도비(LLR)")
plt.show()
```

히트맵을 통해 단백질 서열의 다양한 특성을 시각적으로 파악할 수 있습니다. 이를 통해 보존도가 높아 돌연변이가 잘 일어나지 않거나, 일어나더라도 큰 영향을 미치지 않는 영역을 확인할 수 있습니다. 또한 거의 모든 아미노산으로 쉽게 변이가 가능한 유연성이 높은 잔기나 영역도 식별할 수 있습니다.

이러한 정보는 단백질 공학에 매우 유용한 통찰을 제공합니다. 어떤 부분을 보존해야 하고, 어떤 부분을 수정하거나 재설계해야 할지 결정하는 데 도움이 되기 때문입니다. 더불어 특정 위치에서 유익하거나 해로울 수 있는 아미노산을 파악할 수 있어, LigandMPNN과 같은 도구를 이용한 서열 설계 시 이를 반영할 수 있습니다.

단백질 돌연변이의 영향을 이해하는 것은 생물학적 과정의 분자적 기반을 밝히는 데 핵심적입니다. 제시된 코드는 사전 학습된 트랜스포머 모델을 활용해 단백질 서열 내 다양한 위치에서 아미노산 치환의 잠재적 결과를 예측합니다. 이는 로그 우도비(LLR)를 통해 특정 돌연변이가 해로운지, 중립적인지, 혹은 이로운지를 추정합니다.

이러한 분석은 LigandMPNN을 이용한 서열 설계 시 특정 잔기를 20개 표준 아미노산 중 일부로 제한하는 등, 더 정교한 설계 전략을 수립하는 데 활용될 수 있습니다. 결과적으로 이는 더 효과적이고 목적에 맞는 단백질 설계를 가능하게 합니다.

## 알파미센스

돌연변이의 영향을 예측하는 또 다른 강력한 방법은 AlphaFold2를 사용하는 [AlphaMissense](https://github.com/google-deepmind/alphamissense)입니다. 이 도구는 돌연변이가 유익한지, 중립적인지, 또는 단백질 기능에 해로운지를 예측합니다.

변이 효과 분석에 익숙하지 않다면 적절한 방법을 선택하기 어려울 수 있습니다. 최고의 성능을 위해서는 Evo를 권장하지만, 코딩 경험이 없다면 위에서 제공한 ESM-2 예제가 가장 간단한 구현 방법일 것입니다. 코딩 경험이 있다면 Evo를 사용하여 유사한 스코어링 및 히트맵 시각화를 구현하는 것이 비교적 쉽습니다. AlphaMissense는 널리 알려진 AlphaFold2를 사용하고 Nature에 게재되어 가장 주목받은 방법입니다. ESM-2와 같은 pLM보다 성능이 우수할 가능성이 높지만, Evo만큼 뛰어나지는 않습니다.

## AlphaFlow로 컨포메이션 앙상블 얻기

[AlphaFlow](https://github.com/bjing2016/alphaflow)는 확산 모델을 일반화한 흐름 매칭 모델로, MD 시뮬레이션 데이터로 부분 훈련되었습니다. AlphaFlow는 RFDiffusion과 달리 단일 정적 백본 대신 분자 역학 시뮬레이션을 요약하는 여러 단백질 백본 컨포메이션을 생성합니다.

## 분포 그래포머로 단백질의 볼츠만 분포 샘플링하기

분포 그래포머 또는 "[DiG](https://distributionalgraphormer.github.io/)"는 단백질의 볼츠만 분포, 준안정 상태 간 전이 경로, 리간드 결합 구조 생성, 촉매 표면의 흡착제 구성 샘플링, 특성 유도 구조 생성(역설계) 등을 위한 생성적 확산 모델입니다.

DiG를 사용하면 특정 준안정 상태나 전이 상태에만 존재하는 일시적 결합 포켓을 더 잘 처리할 수 있습니다. 이를 통해 리간드나 단백질 결합에 관여하는 더 포괄적인 잔기 또는 구조적 모티프 세트를 얻을 수 있으며, RFDiffusion이나 RFAA로 스캐폴드할 추가 모티프나 부위를 식별할 수 있습니다. 이러한 새로운 결합 부위를 찾으려면 AlphaFlow나 Distributional Graphormer에서 생성된 다양한 구조에 대해 AF2Bind를 실행하면 됩니다.

## 모티프 스캐폴딩을 통한 단백질 백본 생성 및 서열 설계

단백질 서열의 다양한 특성은 히트맵을 통해 시각화할 수 있습니다. 이를 통해 보존도가 높아 돌연변이가 잘 일어나지 않는 영역과 유연성이 높아 다양한 아미노산으로 쉽게 변이가 가능한 영역을 식별할 수 있습니다.

이러한 정보는 단백질 공학에 중요한 통찰을 제공합니다. 보존해야 할 부분과 수정 또는 재설계가 필요한 부분을 파악할 수 있으며, 특정 위치에서 유익하거나 해로운 아미노산을 식별하여 LigandMPNN과 같은 도구를 이용한 서열 설계에 반영할 수 있습니다.

단백질 돌연변이의 영향을 이해하는 것은 생물학적 과정의 분자적 기반을 밝히는 데 핵심적입니다. 사전 학습된 트랜스포머 모델을 활용하여 단백질 서열 내 다양한 위치에서 아미노산 치환의 잠재적 결과를 예측할 수 있으며, 로그 우도비(LLR)를 통해 특정 돌연변이의 영향을 추정합니다.

이러한 분석은 LigandMPNN을 이용한 서열 설계 시 특정 잔기를 일부 아미노산으로 제한하는 등 더 정교한 설계 전략을 수립하는 데 도움을 줍니다. 결과적으로 더 효과적이고 목적에 맞는 단백질 설계가 가능해집니다.

## LigandMPNN을 활용한 서열 설계

LigandMPNN은 주어진 백본 구조에 대해 단백질 서열을 자동으로 설계하는 생성 모델입니다. 이 모델은 단백질 전용 그래프, 리간드 내 그래프, 단백질-리간드 그래프를 기반으로 작동하며, 단백질 백본 인코더, 단백질-리간드 인코더, 디코더로 구성되어 있습니다.

LigandMPNN의 주요 특징으로는 특정 잔기의 아미노산 제한 또는 편향, 개별 잔기 가중치 부여, 다른 모델이나 데이터베이스 정보와의 결합 가능성 등이 있습니다. 이를 통해 단백질의 결합 친화도와 열 안정성 개선에 도움을 줄 수 있으며, RFDiffusion이나 RFAA로 생성한 백본뿐만 아니라 원래의 단백질 백본에도 적용 가능합니다.

추가적으로 LigandMPNN은 대칭 처리, 막 통과 잔기 생성, 측쇄 형태 생성, 서열 다양성 조절, 백본 노이즈 추가 등 다양한 기능을 제공합니다. 이러한 다양한 기능과 조절 가능한 매개변수들을 통해 LigandMPNN은 단백질 설계에 있어 매우 유연하고 강력한 도구로 활용될 수 있습니다.

## AlphaFold2로 설계된 서열 검증하기

LigandMPNN으로 단백질 백본에 대한 서열을 설계한 후, AlphaFold2나 OpenFold를 사용해 결과를 검증하고 품질을 확인하는 것이 일반적인 절차입니다. 이 과정은 다음과 같습니다:

1. OpenFold를 사용해 LigandMPNN이 생성한 서열의 구조를 예측합니다. 이때 MSA나 템플릿 없이 서열만을 입력으로 사용합니다.
2. 예측된 구조를 RFDiffusion이나 RFAA가 생성한 원래의 구조와 비교합니다. 주로 RMSD(Root Mean Square Deviation)를 사용하여 두 구조 간의 차이를 수치화합니다.
3. RMSD 점수를 기준으로 품질이 낮은 서열을 걸러냅니다. 예측된 구조와 원래 구조 사이의 RMSD가 높다면, 이는 LigandMPNN이 설계한 서열의 품질이 낮다는 것을 의미합니다.

이러한 검증 단계를 통해 설계된 서열의 신뢰성을 확보하고, 더 나은 품질의 단백질 설계 결과를 얻을 수 있습니다.

## RoseTTAFold All Atom의 LIS 점수로 결합 친화도 예측하기

[AlphaFold-Multimer LIS Score](https://github.com/flyark/AFM-LIS)는 AlphaFold-Multimer나 OpenFold의 예측 정렬 오류(PAE) 출력을 기반으로 계산되는 새로운 지표입니다. 이 점수는 단백질 간 상호작용 예측에 매우 효과적인 방법으로 주목받고 있습니다.

현재까지 AFM-LIS를 단백질-저분자 또는 단백질-DNA/RNA 상호작용 예측에 적용한 사례는 없지만, 이론적으로 이러한 상호작용에도 확장 적용이 가능할 것으로 보입니다. LIS 점수는 PAE를 기반으로 계산되며, 다양한 딥러닝 모델들보다 더 우수한 결합 친화도 예측력을 보여주고 있습니다.

LIS 점수 계산과 단백질 간 상호작용 예측 시에는 OpenFold나 RoseTTAFold All Atom의 PAE 결과를 사용하는 것이 좋습니다. 단백질-리간드 또는 단백질-DNA/RNA 상호작용의 경우에는 RoseTTAFold All Atom을 사용하는 것이 권장됩니다. 이를 통해 LIS 점수를 기준으로 품질이 낮은 서열을 더 효과적으로 필터링할 수 있습니다.

## ThermoMPNN으로 열 안정성 예측하기

열 안정성 향상이 목표라면 ProteinMPNN의 개선 버전인 [ThermoMPNN](https://github.com/Kuhlman-Lab/ThermoMPNN) 사용을 추천합니다. ThermoMPNN은 단백질 점 돌연변이의 열 안정성 변화를 예측하기 위해 개발된 그래프 신경망을 사용합니다. 이 모델은 다양한 단백질 길이와 돌연변이 유형을 포함하는 메가스케일과 파이어프로트 데이터셋을 통해 훈련되었습니다. ThermoMPNN의 작동 과정은 다음과 같습니다:

1. 입력 단백질이 ProteinMPNN을 통과하며 각 디코더 층에서 임베딩을 추출합니다.
2. 추출된 임베딩은 학습된 서열 임베딩과 결합되어 잔기 환경의 벡터 표현을 생성합니다.
3. 이 벡터는 자기 주의 블록을 통과하며 학습된 컨텍스트에 따라 가중치가 부여됩니다.
4. 마지막으로, 다층 퍼셉트론이 각 가능한 아미노산 돌연변이에 대한 ΔΔG°를 예측합니다.

# 결론

이러한 다양한 방법들을 효과적으로 조합하면 단백질의 결합 친화력, 열 안정성, 기능을 획기적으로 개선하거나 전혀 새로운 특성을 지닌 단백질을 설계할 수 있습니다. 이는 환경 보호, 질병 치료, 인간 건강 증진 등 광범위한 분야에서 혁신적인 해결책을 제시할 수 있는 강력한 도구로 자리잡을 것입니다. 그러니 이 기술들을 활용해 세상에 의미 있는 변화를 만들어내는 선구자가 되시길 기대합니다.

# Reference

[^1]: https://huggingface.co/blog/AmelieSchreiber/protein-optimization-and-design
