<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>tomorrow-lab</title>
<link>https://tomorrow-lab.github.io/</link>
<atom:link href="https://tomorrow-lab.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>The future of scientific discovery lies at the convergence of computational power and biological complexity. Our mission is to provide a platform where enthusiasts, researchers, and professionals can learn about and contribute to the rapidly evolving fields of bioinformatics, computational biology, and systems biology.</description>
<generator>quarto-1.6.42</generator>
<lastBuildDate>Sat, 01 Mar 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>LLM을 사용한 스팸 메시지 분류</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/LLM_classification.html</link>
  <description><![CDATA[ 




<p>이메일은 현대 사회의 필수적인 커뮤니케이션 도구입니다. 하지만 스팸 메일의 범람은 사용자들에게 큰 골칫거리가 되고 있습니다. 광고부터 악성 피싱 시도까지 스팸 메일은 생산성을 저하시키고 보안 위험을 초래합니다. 이러한 문제를 해결하기 위해 다양한 스팸 필터링 기술이 개발되어 왔지만 최근 인공지능 기술의 발전으로 더욱 정교하고 효과적인 방법이 등장했습니다.</p>
<p>바로 대규모 언어 모델(Large Language Model, LLM)을 활용한 스팸 필터링입니다. LLM은 방대한 양의 텍스트 데이터로 사전 학습된 모델로 인간의 언어를 이해하고 생성하는 데 탁월한 성능을 보입니다. 이러한 LLM의 강력한 언어 이해 능력을 스팸 필터링에 적용하면 기존 방식보다 훨씬 더 정확하고 효과적으로 스팸을 탐지할 수 있습니다.</p>
<p>본 글에서는 LLM 모델을 사용하여 스팸 필터링 시스템을 구축하는 과정을 단계별로 살펴보겠습니다. 데이터 전처리부터 모델 설정, 미세 조정, 그리고 실제 적용까지 과정을 다룰 예정입니다.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
    direction LR
    A: Preprocess dataset
    B: Create data loaders
    C: Load pretrained model
    D: Model setup
    F: Fine-tune model
    G: Use model on new data
    state Stage1{
         A --&gt; B
    }
    Stage1 --&gt; Stage2 
    state Stage2{
         C --&gt; D
    }
    Stage2 --&gt; Stage3
    state Stage3{
        F --&gt; G
    }
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>위 다이어그램은 LLM 모델을 사용하여 스팸 필터링을 위한 분류 미세 조정의 3단계 과정을 보여줍니다. 1단계는 데이터셋을 준비하는 과정입니다. 먼저 스팸 메일과 정상 메일 데이터를 수집하여 데이터셋을 구축합니다. 그런 다음, 데이터셋을 LLM 모델에 적합한 형태로 전처리합니다. 여기에는 불필요한 문자 제거, 텍스트 정규화, 토큰화 등의 작업이 포함될 수 있습니다. 마지막으로, 전처리된 데이터셋을 모델 학습에 사용할 수 있도록 데이터 로더를 생성합니다. 데이터 로더는 데이터를 일괄 처리하고 모델에 공급하는 역할을 합니다.</p>
<p>2단계는 모델을 설정하는 과정입니다. Hugging Face와 같은 라이브러리를 사용하여 사전 훈련된 LLM 모델을 로드합니다. BERT, RoBERTa와 같은 모델을 사용할 수 있습니다. 그런 다음, 로드한 모델을 스팸 필터링 작업에 맞게 설정합니다. 여기에는 모델의 출력 레이어 수정, 추가적인 레이어 추가 등의 작업이 포함될 수 있습니다.</p>
<p>3단계는 모델을 미세 조정하고 실제 스팸 필터링에 활용하는 과정입니다. 1단계에서 준비한 데이터셋을 사용하여 2단계에서 설정한 모델을 미세 조정합니다. 미세 조정은 모델이 스팸 메일과 정상 메일을 구분하는 방법을 학습하는 과정입니다. 충분한 미세 조정 후에는 모델을 새로운 데이터에 적용하여 스팸 메일을 분류할 수 있습니다. 이제 단계별로 코드 예제를 다루어 보죠.</p>
<section id="단계-데이터셋-준비" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 1단계: 데이터셋 준비</h1>
<div id="cell-2" class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>matplotlib version: 3.10.0
numpy version: 2.2.3
tiktoken version: 0.9.0
torch version: 2.6.0
pandas version: 2.2.3</code></pre>
</div>
</div>
<div id="cell-3" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urllib.request</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zipfile</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 상수 정의: 파일 경로 및 URL을 쉽게 관리하기 위함</span></span>
<span id="cb2-9">DATA_URL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://archive.ics.uci.edu/static/public/228/sms+spam+collection.zip"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋 URL</span></span>
<span id="cb2-10">DATA_FILENAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sms_spam_collection.zip"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다운로드할 ZIP 파일 이름</span></span>
<span id="cb2-11">DATA_DIR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/input"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 저장 디렉토리</span></span>
<span id="cb2-12">EXTRACTED_DIR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(DATA_DIR) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sms_spam_collection"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 압축 해제 후 데이터 저장 디렉토리</span></span>
<span id="cb2-13">DATA_FILEPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EXTRACTED_DIR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SMSSpamCollection.tsv"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최종 데이터 파일 경로</span></span>
<span id="cb2-14"></span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> download_and_extract_data(url, filename, extract_dir, filepath):</span>
<span id="cb2-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""SMS 스팸 컬렉션 데이터셋을 다운로드하고 압축 해제합니다.</span></span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        url (str): 데이터셋 URL</span></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        filename (str): 다운로드할 파일 이름</span></span>
<span id="cb2-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        extract_dir (Path): 압축 해제할 디렉토리</span></span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        filepath (Path): 최종 데이터 파일 경로</span></span>
<span id="cb2-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-25"></span>
<span id="cb2-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> filepath.exists():  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일이 이미 존재하면 다운로드 및 압축 해제 생략</span></span>
<span id="cb2-27">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>filepath<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> already exists. Skipping download and extraction."</span>)</span>
<span id="cb2-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span></span>
<span id="cb2-29"></span>
<span id="cb2-30">    os.makedirs(extract_dir, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 압축 해제 디렉토리 생성 (존재하지 않을 경우)</span></span>
<span id="cb2-31"></span>
<span id="cb2-32">    zip_filepath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(DATA_DIR) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> filename  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ZIP 파일 경로</span></span>
<span id="cb2-33"></span>
<span id="cb2-34">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Downloading data from </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>zip_filepath<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">..."</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다운로드 시작 메시지 출력</span></span>
<span id="cb2-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> urllib.request.urlopen(url) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> response:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># URL에 연결</span></span>
<span id="cb2-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(zip_filepath, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wb"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> out_file:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일 쓰기 모드로 열기</span></span>
<span id="cb2-37">            out_file.write(response.read())  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일에 내용 쓰기</span></span>
<span id="cb2-38"></span>
<span id="cb2-39">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Extracting data from </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>zip_filepath<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>extract_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">..."</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 압축 해제 시작 메시지 출력</span></span>
<span id="cb2-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> zipfile.ZipFile(zip_filepath, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> zip_ref:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ZIP 파일 열기</span></span>
<span id="cb2-41">        zip_ref.extractall(extract_dir)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 압축 해제</span></span>
<span id="cb2-42"></span>
<span id="cb2-43">    original_filepath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> extract_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SMSSpamCollection"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원래 파일 이름</span></span>
<span id="cb2-44">    os.rename(original_filepath, filepath)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일 이름 변경</span></span>
<span id="cb2-45"></span>
<span id="cb2-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Data downloaded and extracted to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>filepath<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 완료 메시지 출력</span></span>
<span id="cb2-47">    os.remove(zip_filepath)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 임시 ZIP 파일 삭제</span></span>
<span id="cb2-48"></span>
<span id="cb2-49"></span>
<span id="cb2-50"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> load_data(filepath):</span>
<span id="cb2-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""SMS 스팸 컬렉션 데이터를 pandas DataFrame으로 로드합니다.</span></span>
<span id="cb2-52"></span>
<span id="cb2-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb2-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        filepath (Path): 데이터 파일 경로</span></span>
<span id="cb2-55"></span>
<span id="cb2-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb2-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pandas.DataFrame: 데이터셋</span></span>
<span id="cb2-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb2-60">        df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(filepath, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Text"</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TSV 파일 읽기</span></span>
<span id="cb2-61">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df</span>
<span id="cb2-62">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">FileNotFoundError</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일이 없을 경우</span></span>
<span id="cb2-63">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Error: File not found at </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>filepath<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-64">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-65">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다른 에러 발생 시</span></span>
<span id="cb2-66">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"An error occurred while reading the file: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-68"></span>
<span id="cb2-69"></span>
<span id="cb2-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 다운로드 및 압축 해제</span></span>
<span id="cb2-71">download_and_extract_data(DATA_URL, DATA_FILENAME, EXTRACTED_DIR, DATA_FILEPATH)</span>
<span id="cb2-72"></span>
<span id="cb2-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 로드</span></span>
<span id="cb2-74">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_data(DATA_FILEPATH)</span>
<span id="cb2-75">df.tail()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>../data/input/sms_spam_collection/SMSSpamCollection.tsv already exists. Skipping download and extraction.</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Label</th>
<th data-quarto-table-cell-role="th">Text</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">5567</td>
<td>spam</td>
<td>This is the 2nd time we have tried 2 contact u...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5568</td>
<td>ham</td>
<td>Will ü b going to esplanade fr home?</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">5569</td>
<td>ham</td>
<td>Pity, * was in mood for that. So...any other s...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5570</td>
<td>ham</td>
<td>The guy did some bitching but I acted like i'd...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">5571</td>
<td>ham</td>
<td>Rofl. Its true to its name</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="cell-4" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># label 열의 값 분포 계산</span></span>
<span id="cb4-5">label_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>].value_counts()</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화</span></span>
<span id="cb4-8">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># figure 크기 설정</span></span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 막대 색상 지정</span></span>
<span id="cb4-11">bar_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#8FBCBB"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원하는 색상 코드</span></span>
<span id="cb4-12"></span>
<span id="cb4-13">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.countplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bar_color)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># countplot 사용</span></span>
<span id="cb4-14"></span>
<span id="cb4-15">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 제목 설정</span></span>
<span id="cb4-16">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x축 레이블 설정</span></span>
<span id="cb4-17">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of Samples"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># y축 레이블 설정</span></span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 레이블의 비율 표시</span></span>
<span id="cb4-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, count <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(label_counts):</span>
<span id="cb4-21">    percentage <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 백분율 계산</span></span>
<span id="cb4-22">    plt.text(i, count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>percentage<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span>, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 추가</span></span>
<span id="cb4-23"></span>
<span id="cb4-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 오른쪽 및 위쪽 테두리 제거</span></span>
<span id="cb4-25">ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb4-26">ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb4-27"></span>
<span id="cb4-28">plt.show()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 출력</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_classification_files/figure-html/cell-4-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_classification_files/figure-html/cell-4-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<section id="데이터셋-불균형-해소" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="데이터셋-불균형-해소"><span class="header-section-number">1.1</span> 데이터셋 불균형 해소</h2>
<p>머신러닝 모델 훈련 시 가장 흔하게 마주하는 문제 중 하나는 데이터셋의 불균형입니다. 특히 스팸 필터링과 같이 특정 클래스의 데이터가 현저히 적은 경우 모델의 성능 저하를 야기할 수 있습니다. 이를 해결하기 위해 “ham” 메일과 “spam” 메일의 개수를 동일하게 맞춰줍니다. 구체적으로 “ham” 메일 중에서 “spam” 메일의 개수만큼 무작위로 샘플링하여 두 종류의 메일을 합쳐 균형 잡힌 데이터셋을 생성할 것입니다. 이렇게 생성된 <code>balanced_df</code>는 “ham”을 0, “spam”을 1로 매핑하여 숫자 레이블로 변환합니다.</p>
<div id="cell-6" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> create_balanced_dataset(df):</span>
<span id="cb5-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "spam" 인스턴스 개수 세기</span></span>
<span id="cb5-3">    num_spam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spam"</span>].shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb5-4"></span>
<span id="cb5-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "spam" 인스턴스 개수와 일치하도록 "ham" 인스턴스 무작위 샘플링</span></span>
<span id="cb5-6">    ham_subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ham"</span>].sample(num_spam, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb5-7"></span>
<span id="cb5-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "ham" 서브셋과 "spam" 데이터 결합</span></span>
<span id="cb5-9">    balanced_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([ham_subset, df[df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spam"</span>]])</span>
<span id="cb5-10"></span>
<span id="cb5-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> balanced_df</span>
<span id="cb5-12"></span>
<span id="cb5-13"></span>
<span id="cb5-14">balanced_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_balanced_dataset(df)</span>
<span id="cb5-15">balanced_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> balanced_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ham"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spam"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>})</span>
<span id="cb5-16"></span>
<span id="cb5-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(balanced_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>].value_counts())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Label
0    747
1    747
Name: count, dtype: int64</code></pre>
</div>
</div>
</section>
</section>
<section id="단계-사전-훈련된-모델-설정" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 2단계: 사전 훈련된 모델 설정</h1>
<section id="데이터-로더-생성-creating-data-loaders" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="데이터-로더-생성-creating-data-loaders"><span class="header-section-number">2.1</span> 데이터 로더 생성 (Creating data loaders)</h2>
<p>앞서 준비한 데이터를 LLM 모델의 학습 데이터로 사용하려면, 메시지 길이가 서로 다르다는 점을 고려해야 합니다. 여러 훈련 예제를 하나의 배치로 묶어 학습하는 과정에서, 메시지 길이가 다르면 문제가 발생할 수 있습니다. 이를 해결하기 위해 다음 두 가지 방법 중 하나를 선택해야 합니다.</p>
<ol type="1">
<li>데이터셋 또는 배치 내에서 가장 짧은 메시지 길이에 맞춰 모든 메시지를 잘라내는 방법: 이 방법은 간단하지만, 메시지 내용의 일부가 손실될 수 있다는 단점이 있습니다. 특히 중요한 정보가 메시지 앞부분에 위치하는 경우, 정보 손실로 인해 모델 성능이 저하될 수 있습니다.</li>
<li>데이터셋 또는 배치 내에서 가장 긴 메시지 길이에 맞춰 모든 메시지를 패딩하는 방법: 이 방법은 메시지 내용 손실 없이 모든 메시지를 동일한 길이로 맞출 수 있다는 장점이 있습니다. 다만, 패딩된 부분은 모델 학습에 영향을 미치지 않도록 마스크 처리를 해야 합니다.</li>
</ol>
<p>본 튜토리얼에서는 2번 방법을 선택하여 모든 메시지를 데이터셋에서 가장 긴 메시지 길이에 맞춰 패딩합니다. 패딩된 부분은 모델 학습 시 마스크 처리를 통해 무시하도록 합니다.</p>
</section>
<section id="사전-훈련된-모델-가중치-초기화-initializing-a-model-with-pretrained-weights" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="사전-훈련된-모델-가중치-초기화-initializing-a-model-with-pretrained-weights"><span class="header-section-number">2.2</span> 사전 훈련된 모델 가중치 초기화 (Initializing a model with pretrained weights)</h2>
<section id="모델-선택-choosing-a-model" class="level3" data-number="2.2.1">
<h3 data-number="2.2.1" class="anchored" data-anchor-id="모델-선택-choosing-a-model"><span class="header-section-number">2.2.1</span> 모델 선택 (Choosing a model)</h3>
<p>본 튜토리얼에서는 <code>answerdotai/ModernBERT-base</code> 모델을 사용합니다. 이 모델은 허깅페이스(Hugging Face)의 transformers 라이브러리를 사용하면 간단하게 모델을 불러올 수 있습니다.</p>
</section>
<section id="모델-초기화-initializing-the-model" class="level3" data-number="2.2.2">
<h3 data-number="2.2.2" class="anchored" data-anchor-id="모델-초기화-initializing-the-model"><span class="header-section-number">2.2.2</span> 모델 초기화 (Initializing the model)</h3>
<p><code>AutoModelForSequenceClassification</code> 클래스를 사용하여 사전 훈련된 모델을 불러오고, 원하는 task에 맞게 head 부분을 수정합니다. 본 튜토리얼에서는 스팸 메일 분류를 위해 2개의 label (스팸, 햄)을 가진 <code>classification head</code>를 사용합니다.</p>
<div id="cell-8" class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DataLoader, Dataset</span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb7-4">    AutoModelForSequenceClassification,</span>
<span id="cb7-5">    AutoTokenizer,</span>
<span id="cb7-6">    Trainer,</span>
<span id="cb7-7">    TrainingArguments,</span>
<span id="cb7-8">)</span>
<span id="cb7-9"></span>
<span id="cb7-10">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answerdotai/ModernBERT-base"</span></span>
<span id="cb7-11"></span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저를 데이터셋 생성 또는 멀티프로세싱 전에 전역적으로 초기화합니다.</span></span>
<span id="cb7-13">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_id)</span>
<span id="cb7-14"></span>
<span id="cb7-15"></span>
<span id="cb7-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 로더 클래스 정의</span></span>
<span id="cb7-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> CustomDataset(Dataset):</span>
<span id="cb7-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, texts, labels, tokenizer):  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저를 인자로 추가</span></span>
<span id="cb7-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> texts</span>
<span id="cb7-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> labels</span>
<span id="cb7-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokenizer  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전달받은 토크나이저 사용</span></span>
<span id="cb7-22"></span>
<span id="cb7-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__len__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb7-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.texts)</span>
<span id="cb7-25"></span>
<span id="cb7-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__getitem__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, idx):</span>
<span id="cb7-27">        encoding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tokenizer(</span>
<span id="cb7-28">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.texts[idx],</span>
<span id="cb7-29">            truncation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb7-30">            padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max_length"</span>,</span>
<span id="cb7-31">            max_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>,</span>
<span id="cb7-32">            return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>,</span>
<span id="cb7-33">        )</span>
<span id="cb7-34">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {</span>
<span id="cb7-35">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>: encoding[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>].flatten(),</span>
<span id="cb7-36">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"attention_mask"</span>: encoding[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"attention_mask"</span>].flatten(),</span>
<span id="cb7-37">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"labels"</span>: torch.tensor(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.labels[idx], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">long</span>),</span>
<span id="cb7-38">        }</span>
<span id="cb7-39"></span>
<span id="cb7-40"></span>
<span id="cb7-41">texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> balanced_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Text"</span>].to_list()</span>
<span id="cb7-42">labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> balanced_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>].to_list()</span>
<span id="cb7-43"></span>
<span id="cb7-44">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CustomDataset(texts, labels, tokenizer)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저 인스턴스 전달</span></span>
<span id="cb7-45">train_loader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(dataset, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-46"></span>
<span id="cb7-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 로드 및 설정</span></span>
<span id="cb7-48"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> torch.backends.mps.is_available():</span>
<span id="cb7-49">    device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb7-50">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Using MPS"</span>)</span>
<span id="cb7-51"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> torch.cuda.is_available():</span>
<span id="cb7-52">    device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>)</span>
<span id="cb7-53">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Using CUDA"</span>)</span>
<span id="cb7-54"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb7-55">    device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cpu"</span>)</span>
<span id="cb7-56">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Using CPU"</span>)</span>
<span id="cb7-57"></span>
<span id="cb7-58">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForSequenceClassification.from_pretrained(model_id, num_labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb7-59">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.to(device)</span>
<span id="cb7-60"></span>
<span id="cb7-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 학습 설정 및 조정</span></span>
<span id="cb7-62">training_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TrainingArguments(</span>
<span id="cb7-63">    output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/output/ModernBERT-spam"</span>,</span>
<span id="cb7-64">    num_train_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb7-65">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,</span>
<span id="cb7-66">    logging_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/output/ModernBERT-spam/logs"</span>,</span>
<span id="cb7-67">    logging_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>,</span>
<span id="cb7-68">)</span>
<span id="cb7-69"></span>
<span id="cb7-70">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Trainer(</span>
<span id="cb7-71">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb7-72">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>training_args,</span>
<span id="cb7-73">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset,</span>
<span id="cb7-74">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Using MPS</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Some weights of ModernBertForSequenceClassification were not initialized from the model checkpoint at answerdotai/ModernBERT-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.</code></pre>
</div>
</div>
</section>
</section>
</section>
<section id="단계-모델-미세-조정" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 3단계: 모델 미세 조정</h1>
<section id="모델-가중치-동결-freezing-pretrained-weights" class="level3" data-number="3.0.1">
<h3 data-number="3.0.1" class="anchored" data-anchor-id="모델-가중치-동결-freezing-pretrained-weights"><span class="header-section-number">3.0.1</span> 모델 가중치 동결 (Freezing pretrained weights)</h3>
<p>사전 훈련된 모델의 가중치를 미세 조정(fine-tuning) 과정에서 동결하는 것은 일반적인 방법입니다. 이를 통해 사전 훈련된 모델이 가진 지식을 유지하면서, 특정 task에 맞게 모델을 조정할 수 있습니다. 하지만 여기에서는 모든 가중치를 미세 조정하여 모델 성능을 극대화합니다.</p>
<div id="cell-10" class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 조정 수행</span></span>
<span id="cb10-2">trainer.train()</span></code></pre></div>
<div class="cell-output cell-output-display">

    <div>
      
      <progress value="282" max="282" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [282/282 04:08, Epoch 3/3]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>40</td>
<td>0.251200</td>
</tr>
<tr class="even">
<td>80</td>
<td>0.079900</td>
</tr>
<tr class="odd">
<td>120</td>
<td>0.046400</td>
</tr>
<tr class="even">
<td>160</td>
<td>0.027300</td>
</tr>
<tr class="odd">
<td>200</td>
<td>0.041400</td>
</tr>
<tr class="even">
<td>240</td>
<td>0.001200</td>
</tr>
<tr class="odd">
<td>280</td>
<td>0.000200</td>
</tr>
</tbody>
</table>
<p>
</p></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>TrainOutput(global_step=282, training_loss=0.06348936739650139, metrics={'train_runtime': 250.0251, 'train_samples_per_second': 17.926, 'train_steps_per_second': 1.128, 'total_flos': 381819166460928.0, 'train_loss': 0.06348936739650139, 'epoch': 3.0})</code></pre>
</div>
</div>
</section>
<section id="모델로-예측하기" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="모델로-예측하기"><span class="header-section-number">3.1</span> 모델로 예측하기</h2>
<p>앞서 구축하고 미세 조정한 LLM 모델을 이용하여 실제 환경에서 새로운 이메일에 대한 스팸 여부를 예측해보겠습니다. 이 과정은 모델의 실용성을 검증하는 핵심적인 단계입니다.</p>
<div id="cell-12" class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 새로운 데이터에 대한 예측 사용</span></span>
<span id="cb12-2">predict_texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb12-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CONGRATULATIONS! You've been selected to receive a FREE iPhone 14 Pro Max! Click the link below to claim your prize within the next 30 minutes: bit.ly/free-iphone-claim. Don't miss out on this EXCLUSIVE offer"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 스팸</span></span>
<span id="cb12-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hi, how are you? I wanted to catch up and see if you're free for a call sometime this week."</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 햄</span></span>
<span id="cb12-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reminder: Don't forget to pick up your dry cleaning today."</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 햄</span></span>
<span id="cb12-6">]</span>
<span id="cb12-7"></span>
<span id="cb12-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예측 시 *동일한* 토크나이저 인스턴스 사용</span></span>
<span id="cb12-9">predict_encodings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokenizer(  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전역적으로 초기화된 토크나이저 사용</span></span>
<span id="cb12-10">    predict_texts, truncation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span></span>
<span id="cb12-11">)</span>
<span id="cb12-12"></span>
<span id="cb12-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 예측</span></span>
<span id="cb12-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb12-15">    outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model(</span>
<span id="cb12-16">        input_ids<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predict_encodings[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>].to(device),</span>
<span id="cb12-17">        attention_mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predict_encodings[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"attention_mask"</span>].to(device),</span>
<span id="cb12-18">    )</span>
<span id="cb12-19"></span>
<span id="cb12-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예측 결과 추출</span></span>
<span id="cb12-21">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.argmax(outputs.logits, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb12-22"></span>
<span id="cb12-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예측 결과 해석 및 출력</span></span>
<span id="cb12-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> text, prediction <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(predict_texts, predictions):</span>
<span id="cb12-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> prediction.item() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb12-26">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"스팸: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb12-28">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"햄: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>스팸: CONGRATULATIONS! You've been selected to receive a FREE iPhone 14 Pro Max! Click the link below to claim your prize within the next 30 minutes: bit.ly/free-iphone-claim. Don't miss out on this EXCLUSIVE offer
햄: Hi, how are you? I wanted to catch up and see if you're free for a call sometime this week.
햄: Reminder: Don't forget to pick up your dry cleaning today.</code></pre>
</div>
</div>
<p>위의 출력을 보니 성능이 꽤 괜찮은 것 처럼 보이네요.</p>
</section>
<section id="hugging-face-hub에-모델-저장" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="hugging-face-hub에-모델-저장"><span class="header-section-number">3.2</span> Hugging Face Hub에 모델 저장</h2>
<p>이제 미세 조정한 모델을 허깅페이스에 업로드합니다. 이렇게 올려두면 모델을 공유하거나 필요할때 다운로드해서 바로 사용할 수 있습니다.</p>
<div id="cell-14" class="cell" data-scrolled="true">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저 업로드</span></span>
<span id="cb14-2">tokenizer.push_to_hub(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ehottl/ModernBERT-spam"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 본인 계정 이름과 저장소 이름 작성</span></span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 트레이너를 사용한 모델 업로드</span></span>
<span id="cb14-5">trainer.push_to_hub(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ehottl/ModernBERT-spam"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 본인 계정 이름과 저장소 이름 작성</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>No files have been modified since last commit. Skipping to prevent empty commit.</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>CommitInfo(commit_url='https://huggingface.co/ehottl/ModernBERT-spam/commit/23f02271322e82762e9c5ca4322dad918205d6bf', commit_message='ehottl/ModernBERT-spam', commit_description='', oid='23f02271322e82762e9c5ca4322dad918205d6bf', pr_url=None, repo_url=RepoUrl('https://huggingface.co/ehottl/ModernBERT-spam', endpoint='https://huggingface.co', repo_type='model', repo_id='ehottl/ModernBERT-spam'), pr_revision=None, pr_num=None)</code></pre>
</div>
</div>
</section>
</section>
<section id="마치며" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 마치며</h1>
<p>이번 튜토리얼에서는 사전 훈련된 언어 모델(LLM)을 활용하여 스팸 메일을 분류하는 방법을 단계별로 살펴보았습니다. 데이터셋 준비, 모델 설정, 모델 학습 및 평가, 그리고 최종적으로 허깅페이스 Hub에 모델을 공유하는 방법까지, 스팸 메일 분류 모델을 개발하고 배포하는 전체 과정을 경험해 보았습니다. 이 튜토리얼을 통해 독자분들은 LLM 모델을 활용한 텍스트 분류 task에 대한 기본적인 이해를 얻었을 것입니다. 스팸 메일 분류는 자연어 처리 기술이 실제로 활용될 수 있는 흥미로운 분야 중 하나입니다.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>LLM</category>
  <category>Hugginface</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/LLM_classification.html</guid>
  <pubDate>Sat, 01 Mar 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>파이썬으로 Epitope binning 하기</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/python_Epitope_binning.html</link>
  <description><![CDATA[ 




<p>치료용 단클론 항체(mAbs)는 바이오의약품 시장의 70% 이상을 차지하며 지속적으로 성장하고 있습니다. 항체 개발 초기 단계에서 치료제 및 진단 도구로 사용하기 위해 적절한 특성을 가진 후보를 선별하는 것이 중요합니다. 에피토프 빈닝은 mAbs가 표적 단백질(항원)에 결합하는 특성을 파악하는 방법입니다. 이 과정에서 동일한 표적 단백질에 특이적인 mAbs를 쌍으로 테스트하여 항원의 특정 부위에 대한 결합을 서로 차단하는지 여부를 평가합니다. 같은 에피토프에 대한 결합을 차단하는 mAbs는 함께 “빈”으로 분류됩니다. 같은 빈에 속한 mAbs는 종종 유사한 기능을 하므로 에피토프 빈을 통해 후보 항체의 다양성을 확인 할 수 있습니다. 에피토프 다양성은 지적 재산권 보호를 확대하는 데도 중요합니다. 예를 들면 항체들이 같은 항원에 결합하더라도 작용 메커니즘이 다를 수 있는데 이는 일부 암과 감염성 질환 치료에 중요하기 때문입니다.</p>
<blockquote class="blockquote">
<p>에피토프 빈닝은 에피토프 매핑과 혼동해서는 안 됩니다. 에피토프 매핑에서는 항원의 개별 단편에 대한 항체 결합을 테스트하여 항체가 결합하는 항원의 특정 에피토프를 정의합니다.</p>
</blockquote>
<p>SPR을 이용한 에피토프 빈닝의 주요 장점은 항원과 소량의 정제된 항체만 있으면 테스트할 수 있다는 것입니다. SPR을 통한 에피토프 비닝의 원리를 간략하게 설명하면 다음과 같습니다. 첫번째 항체를 고정시켜 놓고 항원과 두번째 항체를 넣어서 RU값을 측정하는데, 에피토프가 겹치지 않는 경우에 RU 값이 높게 측정됩니다. 즉, 에피토프가 비슷한 경우는 RU 값이 낮게 측정되는 것입니다. 이제 SPR을 통해 얻은 epitope binning 데이터를 파이썬으로 분석해서 어떤 항체 커뮤니티가 있는지 식별해보도록 하겠습니다.</p>
<section id="데이터-준비" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 데이터 준비</h1>
<p><a href="https://doi.org/10.1093/abt/tbaa016">Tom Z Yuan et al</a>에서 공개한 데이터를 가지고 시작해보겠습니다.</p>
<div id="cell-2" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 불러오기(원본 데이터는 wide 형태의 데이터 입니다.)</span></span>
<span id="cb1-4">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/input/EpitopeBinning.csv"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># wide데이터를 tidy 형태로 변환</span></span>
<span id="cb1-7">tidy_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.reset_index().melt(id_vars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mAb ID"</span>, var_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Antigen"</span>, value_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binding Value"</span>)</span>
<span id="cb1-8">tidy_df.columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First_ab"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Second_ab"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binding"</span>]</span>
<span id="cb1-9">tidy_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tidy_df.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First_ab"</span>).sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binding"</span>, ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환한 데이터 저장하기</span></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 히트맵을 그리기 위해 다시 wide로 만들기</span></span>
<span id="cb1-13">wide_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tidy_df.pivot_table(</span>
<span id="cb1-14">    index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First_ab"</span>,</span>
<span id="cb1-15">    columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Second_ab"</span>,</span>
<span id="cb1-16">    values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binding"</span>,</span>
<span id="cb1-17">    aggfunc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>,</span>
<span id="cb1-18">)</span>
<span id="cb1-19">wide_data.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Second_ab</th>
<th data-quarto-table-cell-role="th">ADI-15734</th>
<th data-quarto-table-cell-role="th">ADI-15741</th>
<th data-quarto-table-cell-role="th">ADI-15742</th>
<th data-quarto-table-cell-role="th">ADI-15743</th>
<th data-quarto-table-cell-role="th">ADI-15751</th>
<th data-quarto-table-cell-role="th">ADI-15757</th>
<th data-quarto-table-cell-role="th">ADI-15767</th>
<th data-quarto-table-cell-role="th">ADI-15776</th>
<th data-quarto-table-cell-role="th">ADI-15779</th>
<th data-quarto-table-cell-role="th">ADI-15782</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">ADI-16003</th>
<th data-quarto-table-cell-role="th">ADI-16017</th>
<th data-quarto-table-cell-role="th">ADI-16025</th>
<th data-quarto-table-cell-role="th">ADI-16031</th>
<th data-quarto-table-cell-role="th">ADI-16032</th>
<th data-quarto-table-cell-role="th">ADI-16047</th>
<th data-quarto-table-cell-role="th">ADI-16050</th>
<th data-quarto-table-cell-role="th">FVM09</th>
<th data-quarto-table-cell-role="th">KZ52</th>
<th data-quarto-table-cell-role="th">mab100</th>
</tr>
<tr class="even">
<th data-quarto-table-cell-role="th">First_ab</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ADI-15734</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>1.0</td>
<td>0.0</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>...</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>3.0</td>
<td>1.0</td>
<td>1.0</td>
<td>1.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ADI-15741</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>...</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>2.0</td>
<td>0.0</td>
<td>1.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ADI-15742</td>
<td>1.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>1.0</td>
<td>0.0</td>
<td>3.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>...</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>3.0</td>
<td>0.0</td>
<td>1.0</td>
<td>2.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ADI-15743</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>1.0</td>
<td>2.0</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>...</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>2.0</td>
<td>0.0</td>
<td>1.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ADI-15751</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>2.0</td>
<td>0.0</td>
<td>1.0</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>1.0</td>
<td>...</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>1.0</td>
</tr>
</tbody>
</table>

<p>5 rows × 54 columns</p>
</div>
</div>
</div>
<div id="cell-3" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">tidy_df.describe()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Binding</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">count</td>
<td>2563.000000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">mean</td>
<td>1.304331</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">std</td>
<td>0.870324</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">min</td>
<td>0.000000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">25%</td>
<td>1.000000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">50%</td>
<td>1.000000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">75%</td>
<td>2.000000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">max</td>
<td>6.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>위의 결과를 통해 데이터의 형태를 파악할 수 있습니다. 총 2563개가 있고 최대값과 최소값을 보아하니 실제 실험 값이 아닌 일종의 후처리가된 값으로 구성되어 있음을 알 수 있습니다.</p>
</section>
<section id="시각화" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 시각화</h1>
<section id="히트맵" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="히트맵"><span class="header-section-number">2.1</span> 히트맵</h2>
<p>히트맵은 차단, 비차단 및 불확실한 항체 쌍에 대한 빠른 개요를 제공합니다. 이를 통해 히트맵 내 데이터를 간편하게 검사할 수 있으며 다음과 같은 이점을 제공합니다:</p>
<ol type="1">
<li>직관적 이해: 복잡한 데이터를 색상 코드로 표현하여 한눈에 파악할 수 있습니다.</li>
<li>패턴 식별: 대량의 데이터에서 패턴이나 트렌드를 쉽게 발견할 수 있습니다.</li>
<li>유연한 분석: 컷오프 값을 조정함으로써 다양한 조건에서 데이터를 분석할 수 있습니다.</li>
<li>효율적인 데이터 해석: 많은 양의 정보를 압축된 형태로 표현하여 빠른 의사결정을 돕습니다.</li>
</ol>
<div id="cell-5" class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.colors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mcolors</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Nord Aurora 색상</span></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A3BE8C: Nord8 (녹색)</span></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># EBCB8B: Nord9 (노란색)</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># BF616A: Nord11 (빨간색)</span></span>
<span id="cb3-10">aurora_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#BF616A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EBCB8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A3BE8C"</span>]</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용자 정의 색상 맵 생성</span></span>
<span id="cb3-13">cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.color_palette(aurora_colors)</span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 마스크 생성: NaN은 True, 나머지는 False</span></span>
<span id="cb3-16">mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.isnan(wide_data)</span>
<span id="cb3-17"></span>
<span id="cb3-18">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb3-19">sns.heatmap(</span>
<span id="cb3-20">    df,</span>
<span id="cb3-21">    cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cmap,</span>
<span id="cb3-22">    annot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb3-23">    linewidths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb3-24">    mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mask,</span>
<span id="cb3-25">    vmin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최소값을 0으로 설정</span></span>
<span id="cb3-26">    vmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최대값을 1로 설정 (필요에 따라 조정)</span></span>
<span id="cb3-27">    center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 중간값을 0.5로 설정</span></span>
<span id="cb3-28">    cbar_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>},</span>
<span id="cb3-29">    cbar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb3-30">    square<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb3-31">)</span>
<span id="cb3-32"></span>
<span id="cb3-33">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-34">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-35">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-36">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Epitope_binning_files/figure-html/cell-4-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Epitope_binning_files/figure-html/cell-4-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>위 히트맵 결과를 통해 크게 4개의 클러스터가 존재하고 있다는 것을 쉽게 유추할 수 있습니다.</p>
</section>
<section id="knn-클러스터링-및-네트워크-시각화" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="knn-클러스터링-및-네트워크-시각화"><span class="header-section-number">2.2</span> KNN 클러스터링 및 네트워크 시각화</h2>
<p>K-Nearest Neighbors (KNN) 클러스터링은 에피토프 빈닝 데이터를 분석하고 시각화하는 데 유용한 방법으로 히트맵보다 더 명료한 결과를 보여줍니다.</p>
<div id="cell-7" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.colors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mcolors</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> networkx <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nx</span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> adjustText <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> adjust_text</span>
<span id="cb4-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.cluster <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KMeans</span>
<span id="cb4-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 로드</span></span>
<span id="cb4-9">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tidy_df.reset_index()</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NaN 값을 포함한 행 제거 및 First_ab와 Second_ab가 동일한 행 제거</span></span>
<span id="cb4-12">data_clean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.dropna().query(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First_ab != Second_ab"</span>)</span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 방향성 그래프 생성</span></span>
<span id="cb4-15">G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.DiGraph()</span>
<span id="cb4-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _, row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> data_clean.iterrows():</span>
<span id="cb4-17">    G.add_edge(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First_ab"</span>], row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Second_ab"</span>], weight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binding"</span>])</span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 인접 행렬 생성</span></span>
<span id="cb4-20">adj_matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.to_numpy_array(G)</span>
<span id="cb4-21"></span>
<span id="cb4-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 특성 스케일링</span></span>
<span id="cb4-23">scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StandardScaler()</span>
<span id="cb4-24">adj_matrix_scaled <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.fit_transform(adj_matrix)</span>
<span id="cb4-25"></span>
<span id="cb4-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># KMeans 클러스터링</span></span>
<span id="cb4-27">n_clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 클러스터 수 고정</span></span>
<span id="cb4-28">kmeans <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> KMeans(n_clusters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_clusters, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">420</span>)</span>
<span id="cb4-29">cluster_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kmeans.fit_predict(adj_matrix_scaled)</span>
<span id="cb4-30"></span>
<span id="cb4-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 클러스터 정보 저장</span></span>
<span id="cb4-32">partition <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(G.nodes(), cluster_labels))</span>
<span id="cb4-33"></span>
<span id="cb4-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 클러스터 중심 계산</span></span>
<span id="cb4-35">cluster_centers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kmeans.cluster_centers_</span>
<span id="cb4-36"></span>
<span id="cb4-37"></span>
<span id="cb4-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 노드 위치 조정 함수</span></span>
<span id="cb4-39"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> adjust_positions(pos, partition, cluster_centers):</span>
<span id="cb4-40">    new_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb4-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> node, position <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pos.items():</span>
<span id="cb4-42">        cluster <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> partition[node]</span>
<span id="cb4-43">        center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cluster_centers[cluster][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2D 좌표만 사용</span></span>
<span id="cb4-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 노드를 클러스터 중심 방향으로 이동</span></span>
<span id="cb4-45">        new_pos[node] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span></span>
<span id="cb4-46">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> new_pos</span>
<span id="cb4-47"></span>
<span id="cb4-48"></span>
<span id="cb4-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 시각화</span></span>
<span id="cb4-50">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그림 크기를 더 크게 조정</span></span>
<span id="cb4-51">pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.spring_layout(G, k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, iterations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb4-52">pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adjust_positions(pos, partition, cluster_centers)</span>
<span id="cb4-53"></span>
<span id="cb4-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 노드 색상 설정</span></span>
<span id="cb4-55">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [partition[node] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> node <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> G.nodes()]</span>
<span id="cb4-56"></span>
<span id="cb4-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Nord Aurora 색상 정의</span></span>
<span id="cb4-58">aurora_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A3BE8C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EBCB8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#D08770"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#BF616A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#B48EAD"</span>]</span>
<span id="cb4-59"></span>
<span id="cb4-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Aurora 색상으로 ColorMap 생성</span></span>
<span id="cb4-61">aurora_cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mcolors.ListedColormap(aurora_colors)</span>
<span id="cb4-62"></span>
<span id="cb4-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 노드 그리기</span></span>
<span id="cb4-64">nx.draw_networkx_nodes(G, pos, node_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors, node_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>aurora_cmap)</span>
<span id="cb4-65"></span>
<span id="cb4-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 엣지 그리기 (방향성과 가중치 반영)</span></span>
<span id="cb4-67">edge_weights <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [G[u][v][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weight"</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> u, v <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> G.edges()]</span>
<span id="cb4-68">max_weight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(edge_weights)</span>
<span id="cb4-69">edge_widths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> max_weight) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> w <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> edge_weights]</span>
<span id="cb4-70"></span>
<span id="cb4-71">nx.draw_networkx_edges(</span>
<span id="cb4-72">    G,</span>
<span id="cb4-73">    pos,</span>
<span id="cb4-74">    alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb4-75">    edge_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgray"</span>,</span>
<span id="cb4-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># width=edge_widths,</span></span>
<span id="cb4-77">    arrows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb4-78">    arrowsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb4-79">)</span>
<span id="cb4-80"></span>
<span id="cb4-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 라벨 위치 조정을 위한 준비</span></span>
<span id="cb4-82">texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-83"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> node, (x, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pos.items():</span>
<span id="cb4-84">    texts.append(plt.text(x, y, node, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>))</span>
<span id="cb4-85"></span>
<span id="cb4-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 라벨 위치 자동 조정</span></span>
<span id="cb4-87">adjust_text(texts, arrowprops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"arrowstyle"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lw"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>})</span>
<span id="cb4-88"></span>
<span id="cb4-89">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Directed Graph with Weighted Edges"</span>)</span>
<span id="cb4-90">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb4-91">plt.tight_layout()</span>
<span id="cb4-92">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Epitope_binning_files/figure-html/cell-5-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Epitope_binning_files/figure-html/cell-5-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>위의 결과를 통해 총 4개의 항체의 클러스터를 확인 할 수 있었고 히트맵 결과와 유사함이 확인되었습니다.</p>
</section>
</section>
<section id="마치며" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 마치며</h1>
<p>에피토프 빈닝은 항체의 결합 특성을 파악하고 다양한 에피토프를 표적으로 하는 항체를 선별할 수 있습니다. 히트맵과 KNN 클러스터링 등의 시각화 방법으로 항체 패널의 다양성을 확인하고 가장 유망한 후보를 선별하는 데 도움을 줍니다.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>Visualization</category>
  <category>Epitope binning</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/python_Epitope_binning.html</guid>
  <pubDate>Sun, 23 Feb 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>AKTA chromatogram visualization</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/python_AKTA_plot.html</link>
  <description><![CDATA[ 




<p>AKTA 시스템은 단백질 정제 과정에서 널리 사용되는 크로마토그래피 시스템입니다. 과거에는 GE healthcare에서 현재는 Cytiva사에서 판매되고 있으며 자체 소프트웨어 UNICORN를 제공합니다. 여기서는 UNICORN에서 추출한 스프레드 시트 데이터를 사용해 크로마토그래피 그래프를 생성하는 방법을 알아보겠습니다. 데이터 처리부터 시각화까지 단계별로 파이썬을 사용하였습니다.</p>
<div id="cell-2" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-5"></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> read_and_preprocess_data(file_path: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pd.DataFrame:</span>
<span id="cb1-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""엑셀 파일을 읽고 전처리하는 함수"""</span></span>
<span id="cb1-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 엑셀 파일 읽기 (상위 2행 스킵)</span></span>
<span id="cb1-10">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_excel(file_path, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, skiprows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb1-11"></span>
<span id="cb1-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 컬럼 이름 변경</span></span>
<span id="cb1-13">    new_columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb1-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml"</span>,</span>
<span id="cb1-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mAU"</span>,</span>
<span id="cb1-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_1"</span>,</span>
<span id="cb1-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mS_cm"</span>,</span>
<span id="cb1-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_2"</span>,</span>
<span id="cb1-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"percent"</span>,</span>
<span id="cb1-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_3"</span>,</span>
<span id="cb1-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%B"</span>,</span>
<span id="cb1-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_4"</span>,</span>
<span id="cb1-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pH"</span>,</span>
<span id="cb1-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_5"</span>,</span>
<span id="cb1-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MPa"</span>,</span>
<span id="cb1-26">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_6"</span>,</span>
<span id="cb1-27">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_min"</span>,</span>
<span id="cb1-28">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_7"</span>,</span>
<span id="cb1-29">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temperature_C"</span>,</span>
<span id="cb1-30">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_8"</span>,</span>
<span id="cb1-31">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frac"</span>,</span>
<span id="cb1-32">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_9"</span>,</span>
<span id="cb1-33">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Injections"</span>,</span>
<span id="cb1-34">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_10"</span>,</span>
<span id="cb1-35">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set_Marks"</span>,</span>
<span id="cb1-36">    ]</span>
<span id="cb1-37">    df.columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_columns</span>
<span id="cb1-38"></span>
<span id="cb1-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># %B 값 수정</span></span>
<span id="cb1-40">    elution_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set_Marks"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Block Isocratic_Elution"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_10"</span>].values[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb1-41">    df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%B"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> elution_start <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-42"></span>
<span id="cb1-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df</span>
<span id="cb1-44"></span>
<span id="cb1-45"></span>
<span id="cb1-46"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> setup_plot() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>[plt.Figure, plt.Axes]:</span>
<span id="cb1-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""플롯 초기 설정"""</span></span>
<span id="cb1-48">    fig, ax_main <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb1-49">    plt.subplots_adjust(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.85</span>)</span>
<span id="cb1-50">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> fig, ax_main</span>
<span id="cb1-51"></span>
<span id="cb1-52"></span>
<span id="cb1-53"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_mau(ax: plt.Axes, df: pd.DataFrame) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb1-54">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""mAU 데이터 플로팅"""</span></span>
<span id="cb1-55">    ax.plot(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml"</span>], df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mAU"</span>], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mAU"</span>)</span>
<span id="cb1-56">    ax.fill_between(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml"</span>], df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mAU"</span>], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb1-57">    ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml"</span>)</span>
<span id="cb1-58">    ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mAU"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb1-59">    ax.set_ylim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2500</span>)</span>
<span id="cb1-60">    ax.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>, labelcolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb1-61"></span>
<span id="cb1-62"></span>
<span id="cb1-63"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_b_percentage(ax: plt.Axes, df: pd.DataFrame) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> plt.Axes:</span>
<span id="cb1-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""%B 데이터 플로팅"""</span></span>
<span id="cb1-65">    ax_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.twinx()</span>
<span id="cb1-66">    ax_b.plot(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml"</span>], df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%B"</span>], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%B"</span>)</span>
<span id="cb1-67">    ax_b.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%B"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb1-68">    ax_b.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>, labelcolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb1-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ax_b</span>
<span id="cb1-70"></span>
<span id="cb1-71"></span>
<span id="cb1-72"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_ph(ax: plt.Axes, df: pd.DataFrame) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> plt.Axes:</span>
<span id="cb1-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""pH 데이터 플로팅"""</span></span>
<span id="cb1-74">    ax_ph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.twinx()</span>
<span id="cb1-75">    ax_ph.plot(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_4"</span>], df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pH"</span>], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pH"</span>)</span>
<span id="cb1-76">    ax_ph.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pH"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>)</span>
<span id="cb1-77">    ax_ph.set_ylim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-78">    ax_ph.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>, labelcolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>)</span>
<span id="cb1-79">    ax_ph.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>].set_position((<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"outward"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>))</span>
<span id="cb1-80">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ax_ph</span>
<span id="cb1-81"></span>
<span id="cb1-82"></span>
<span id="cb1-83"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_fraction_lines(ax: plt.Axes, df: pd.DataFrame) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb1-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""분획 정보 표시"""</span></span>
<span id="cb1-85">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _, row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df.iterrows():</span>
<span id="cb1-86">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pd.notna(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frac"</span>]):</span>
<span id="cb1-87">            ax.axvline(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_8"</span>], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray"</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb1-88">            ax.text(</span>
<span id="cb1-89">                row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_8"</span>],</span>
<span id="cb1-90">                ax.get_ylim()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb1-91">                row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frac"</span>],</span>
<span id="cb1-92">                rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>,</span>
<span id="cb1-93">                va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,</span>
<span id="cb1-94">                ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>,</span>
<span id="cb1-95">            )</span>
<span id="cb1-96"></span>
<span id="cb1-97"></span>
<span id="cb1-98"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_combined_legend(axes: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[plt.Axes]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb1-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""모든 축의 범례 통합"""</span></span>
<span id="cb1-100">    lines, labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [], []</span>
<span id="cb1-101">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ax <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> axes:</span>
<span id="cb1-102">        ax_lines, ax_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.get_legend_handles_labels()</span>
<span id="cb1-103">        lines.extend(ax_lines)</span>
<span id="cb1-104">        labels.extend(ax_labels)</span>
<span id="cb1-105">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].legend(lines, labels, loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upper left"</span>)</span>
<span id="cb1-106"></span>
<span id="cb1-107"></span>
<span id="cb1-108"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> process_and_plot_file(file_path: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb1-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""단일 파일 처리 및 플로팅"""</span></span>
<span id="cb1-110">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Processing file: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>os<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>basename(file_path)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-111"></span>
<span id="cb1-112">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> read_and_preprocess_data(file_path)</span>
<span id="cb1-113">    fig, ax_main <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> setup_plot()</span>
<span id="cb1-114"></span>
<span id="cb1-115">    plot_mau(ax_main, df)</span>
<span id="cb1-116">    ax_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_b_percentage(ax_main, df)</span>
<span id="cb1-117">    ax_ph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_ph(ax_main, df)</span>
<span id="cb1-118">    add_fraction_lines(ax_main, df)</span>
<span id="cb1-119">    add_combined_legend([ax_main, ax_b, ax_ph])</span>
<span id="cb1-120"></span>
<span id="cb1-121">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>os<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>basename(file_path)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Plot"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span>)</span>
<span id="cb1-122">    ax_main.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb1-123">    plt.tight_layout()</span>
<span id="cb1-124">    plt.show()</span>
<span id="cb1-125"></span>
<span id="cb1-126"></span>
<span id="cb1-127"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> process_folder(folder_path: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb1-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""폴더 내 모든 .xls 파일 처리"""</span></span>
<span id="cb1-129">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> filename <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> os.listdir(folder_path):</span>
<span id="cb1-130">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> filename.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".xls"</span>):</span>
<span id="cb1-131">            file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(folder_path, filename)</span>
<span id="cb1-132">            process_and_plot_file(file_path)</span></code></pre></div>
</div>
<section id="데이터-살펴보기" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 데이터 살펴보기</h1>
<p>UNICORN 소프트웨어에서 실험 데이터를 엑셀 파일로 저장할 수 있고 일반적으로 다음과 같은 구조를 가집니다:</p>
<ul>
<li>헤더 정보: 실험 조건, 날짜, 시간 등</li>
<li>컬럼 헤더: 각 데이터 열의 이름과 단위</li>
<li>데이터 행: 시간에 따른 다양한 측정값</li>
</ul>
<p>데이터 테이블을 출력해 확인해 봅니다.</p>
<div id="cell-4" class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_excel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/input/AKTA_run_1.xls"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, skiprows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb2-2">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="25">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">ml</th>
<th data-quarto-table-cell-role="th">mAU</th>
<th data-quarto-table-cell-role="th">ml.1</th>
<th data-quarto-table-cell-role="th">mS/cm</th>
<th data-quarto-table-cell-role="th">ml.2</th>
<th data-quarto-table-cell-role="th">%</th>
<th data-quarto-table-cell-role="th">ml.3</th>
<th data-quarto-table-cell-role="th">%B</th>
<th data-quarto-table-cell-role="th">ml.4</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">ml.6</th>
<th data-quarto-table-cell-role="th">ml/min</th>
<th data-quarto-table-cell-role="th">ml.7</th>
<th data-quarto-table-cell-role="th">°C</th>
<th data-quarto-table-cell-role="th">ml.8</th>
<th data-quarto-table-cell-role="th">(Fractions)</th>
<th data-quarto-table-cell-role="th">ml.9</th>
<th data-quarto-table-cell-role="th">(Injections)</th>
<th data-quarto-table-cell-role="th">ml.10</th>
<th data-quarto-table-cell-role="th">(Set Marks)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0.000000</td>
<td>-0.099</td>
<td>0.000000</td>
<td>14.197</td>
<td>0.000000</td>
<td>14.2</td>
<td>0.000000</td>
<td>0.0</td>
<td>0.000000</td>
<td>6.86</td>
<td>...</td>
<td>0.000000</td>
<td>14.98</td>
<td>0.000000</td>
<td>26.3</td>
<td>-0.3</td>
<td>A1</td>
<td>0.0</td>
<td>3.0</td>
<td>-12.47</td>
<td>Method Run 11/21/2024, 2:05:53 PM Korea Standa...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0.095014</td>
<td>-0.091</td>
<td>0.095257</td>
<td>14.198</td>
<td>0.190336</td>
<td>14.2</td>
<td>0.190336</td>
<td>0.0</td>
<td>0.095257</td>
<td>6.86</td>
<td>...</td>
<td>0.095257</td>
<td>14.50</td>
<td>0.381111</td>
<td>26.3</td>
<td>9.7</td>
<td>A2</td>
<td>NaN</td>
<td>NaN</td>
<td>-12.47</td>
<td>Batch ID: 14DB55F2-E6A8-4734-8806-041C9AA49E11</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>0.190028</td>
<td>-0.081</td>
<td>0.190514</td>
<td>14.199</td>
<td>0.380673</td>
<td>14.2</td>
<td>0.380673</td>
<td>0.0</td>
<td>0.190514</td>
<td>6.87</td>
<td>...</td>
<td>0.190514</td>
<td>13.54</td>
<td>0.762222</td>
<td>26.3</td>
<td>19.7</td>
<td>A3</td>
<td>NaN</td>
<td>NaN</td>
<td>-12.47</td>
<td>Base CV, 0.40 {ml}</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>0.285042</td>
<td>-0.074</td>
<td>0.285772</td>
<td>14.203</td>
<td>0.571009</td>
<td>14.2</td>
<td>0.571009</td>
<td>0.0</td>
<td>0.285772</td>
<td>6.87</td>
<td>...</td>
<td>0.285772</td>
<td>8.78</td>
<td>1.143333</td>
<td>26.2</td>
<td>29.7</td>
<td>A4</td>
<td>NaN</td>
<td>NaN</td>
<td>-12.47</td>
<td>Block Start_with_PumpWash_Purifier</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>0.380056</td>
<td>-0.067</td>
<td>0.381029</td>
<td>14.204</td>
<td>0.761346</td>
<td>14.2</td>
<td>0.761346</td>
<td>0.0</td>
<td>0.381029</td>
<td>6.87</td>
<td>...</td>
<td>0.381029</td>
<td>8.00</td>
<td>1.524444</td>
<td>26.2</td>
<td>39.7</td>
<td>A5</td>
<td>NaN</td>
<td>NaN</td>
<td>-12.47</td>
<td>Base SameAsMain</td>
</tr>
</tbody>
</table>

<p>5 rows × 22 columns</p>
</div>
</div>
</div>
<section id="주요-데이터-열-확인하기" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="주요-데이터-열-확인하기"><span class="header-section-number">1.1</span> 주요 데이터 열 확인하기</h2>
<p>파일에서 흔히 볼 수 있는 주요 데이터 열은 다음과 같습니다:</p>
<ul>
<li>ml (Volume): 용출 부피</li>
<li>mAU (UV Absorbance): 자외선 흡광도</li>
<li>mS/cm (Conductivity): 전도도</li>
<li>%B (Buffer B Concentration): 버퍼 B의 농도 비율</li>
<li>pH: pH 값</li>
<li>MPa (Pressure): 시스템 압력</li>
<li>°C (Temperature): 온도</li>
<li>Fractions: 분획 번호</li>
</ul>
</section>
</section>
<section id="시각화-하기" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 시각화 하기</h1>
<div id="cell-6" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 여기에 폴더 경로를 입력하세요.</span></span>
<span id="cb3-2">folder_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/input"</span></span>
<span id="cb3-3">process_folder(folder_path)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Processing file: AKTA_run_2.xls</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_AKTA_plot_files/figure-html/cell-4-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_AKTA_plot_files/figure-html/cell-4-output-2.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Processing file: AKTA_run_3.xls</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_AKTA_plot_files/figure-html/cell-4-output-4.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_AKTA_plot_files/figure-html/cell-4-output-4.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Processing file: AKTA_run_1.xls</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_AKTA_plot_files/figure-html/cell-4-output-6.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_AKTA_plot_files/figure-html/cell-4-output-6.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Processing file: AKTA_run_4.xls</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_AKTA_plot_files/figure-html/cell-4-output-8.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_AKTA_plot_files/figure-html/cell-4-output-8.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>생성된 그래프를 통해 다음과 같은 정보를 얻을 수 있습니다:</p>
<ul>
<li>mAU 값의 변화: 단백질 농도 변화 추적</li>
<li>%B 값의 변화: 버퍼 농도 변화 확인</li>
<li>pH 변화: 용출 조건 모니터링</li>
<li>분획 정보: 각 분획의 위치 확인</li>
</ul>
</section>
<section id="결론" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 결론</h1>
<p>이 방법을 통해 AKTA 데이터를 효과적으로 시각화할 수 있으며 이는 단백질 정제 과정의 최적화와 결과 해석에 큰 도움이 될 것입니다.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>Visualization</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/python_AKTA_plot.html</guid>
  <pubDate>Fri, 14 Feb 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>실습으로 배우는 대규모 언어 모델</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM.html</link>
  <description><![CDATA[ 




<p>최근 출간된 책 Hands-On Large Language Models (Jay Alammar, Maarten Grootendorst 저, 2024)을 읽고 그 내용을 정리해보려고 합니다. 이 책은 급속도로 발전하고 있는 대규모 언어 모델(Large Language Models, LLMs)의 이론을 쉽게 풀어내며 동시에 실습을 통해 독자들이 직접 경험할 수 있도록 구성했습니다. LLM의 전반적인 내용을 다루고 있어 AI와 자연어 처리에 관심 있는 분들에게 훌륭한 가이드가 될 것 같습니다. 이번 포스팅에서는 이 책의 내용 중 쓸만한 코드와 짧은 설명을 공유하려고 합니다.</p>
<section id="대규모-언어-모델의-이해" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 대규모 언어 모델의 이해</h1>
<section id="tokens-and-embedding" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="tokens-and-embedding"><span class="header-section-number">1.1</span> Tokens and Embedding</h2>
<p>토크나이저는 어떻게 텍스트를 자르는가? 3가지 중요 팩터: 1. 어휘 크기 (Vocabulary size) 2. 미등록 단어 (Out-of-vocabulary words) 처리 3. 언어의 특성 (Language characteristics)</p>
<p>토크나이저 분류</p>
<ol type="1">
<li>Word token: 공백이나 구두점을 기준으로 단어 단위로 분리</li>
<li>Subword token: 자주 사용되는 단어는 그대로 두고, 드문 단어는 더 작은 단위로 분리 (예: WordPiece, BPE)</li>
<li>Character token: 개별 문자 단위로 분리</li>
<li>Byte token: 바이트 단위로 분리, 모든 언어와 특수 문자 처리 가능</li>
</ol>
</section>
<section id="inside-of-llm" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="inside-of-llm"><span class="header-section-number">1.2</span> Inside of LLM</h2>
<p>LLM은 3개의 컴포넌트로 구성:</p>
<ul>
<li>Tokenizer: 입력 텍스트를 토큰으로 변환</li>
<li>Transformer: 토큰을 처리하고 문맥을 이해하는 핵심 아키텍처</li>
<li>LM head: Transformer의 출력을 받아 다음 토큰을 예측하는 층</li>
</ul>
<section id="최근-트랜스포머-블록의-발전" class="level3" data-number="1.2.1">
<h3 data-number="1.2.1" class="anchored" data-anchor-id="최근-트랜스포머-블록의-발전"><span class="header-section-number">1.2.1</span> 최근 트랜스포머 블록의 발전</h3>
<section id="rope" class="level4" data-number="1.2.1.1">
<h4 data-number="1.2.1.1" class="anchored" data-anchor-id="rope"><span class="header-section-number">1.2.1.1</span> RoPE</h4>
<p>RoPE는 다음과 같은 특징을 가집니다:</p>
<ul>
<li>상대적 위치 정보 인코딩: RoPE는 토큰 간의 상대적 위치 관계를 직접적으로 모델링합니다.</li>
<li>회전 행렬 사용: 위치 정보를 회전 행렬을 통해 인코딩하여 효율적으로 처리합니다.</li>
<li>길이 외삽(extrapolation) 능력: 학습 시 사용된 시퀀스 길이보다 긴 시퀀스에 대해서도 잘 작동합니다.</li>
<li>계산 효율성: 기존 위치 임베딩 방식에 비해 계산 효율성이 높습니다.</li>
<li>성능 향상: 특히 장문 텍스트 처리에서 성능 향상을 보입니다.</li>
</ul>
<p>RoPE는 GPT-3, PaLM, LLaMA 등 최신 대규모 언어 모델에서 널리 사용되고 있으며, 특히 긴 문맥을 다루는 데 효과적입니다.</p>
</section>
</section>
</section>
</section>
<section id="사전-학습된-llm-사용" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 사전 학습된 LLM 사용</h1>
<section id="텍스트-분류" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="텍스트-분류"><span class="header-section-number">2.1</span> 텍스트 분류</h2>
<p>자연어 처리에서 흔히 수행되는 작업 중 하나가 분류입니다. 이 작업의 목표는 입력된 텍스트에 레이블이나 클래스를 할당하도록 모델을 훈련시키는 것입니다. 텍스트 분류는 전 세계적으로 다양한 용도로 활용되고 있습니다. 감성 분석, 의도 파악, 개체 추출, 언어 감지 등이 그 예입니다.</p>
<p>대표적 언어 모델과 생성형 언어 모델이 분류 작업에 미치는 영향은 실로 막대합니다. 이러한 모델들은 텍스트 분류의 정확도와 효율성을 크게 향상시켰으며 더 복잡하고 미묘한 분류 작업을 가능하게 만들었습니다. 특히 사전 학습된 대규모 언어 모델(LLM)의 등장으로 텍스트 분류 작업의 성능이 비약적으로 발전했습니다.</p>
<section id="텍스트-감정-분석-with-representation-model" class="level3" data-number="2.1.1">
<h3 data-number="2.1.1" class="anchored" data-anchor-id="텍스트-감정-분석-with-representation-model"><span class="header-section-number">2.1.1</span> 텍스트 감정 분석 with Representation model</h3>
<p>텍스트 데이터를 가져와 텍스트의 감정 분석을 “cardiffnlp/twitter-roberta-base-sentiment-latest” 모델을 사용해 진행합니다. 이 모델은 RoBERTa 아키텍처를 기반으로 하며, 특히 트위터 데이터로 미세 조정되어 소셜 미디어 텍스트의 감정 분석에 최적화되어 있습니다.</p>
<div id="364a609e" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> classification_report</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers.pipelines.pt_utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KeyDataset</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋 불러오기</span></span>
<span id="cb1-9">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rotten_tomatoes"</span>)</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hugging Face 모델</span></span>
<span id="cb1-12">model_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cardiffnlp/twitter-roberta-base-sentiment-latest"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델을 파이프라인에 로드</span></span>
<span id="cb1-15">pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model_name, tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model_name, top_k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda:0"</span>)</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 추론 실행</span></span>
<span id="cb1-18">y_pred: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> output <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tqdm(pipe(KeyDataset(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>)), total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>])):</span>
<span id="cb1-20">    negative_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score"</span>]</span>
<span id="cb1-21">    positive_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score"</span>]</span>
<span id="cb1-22">    assignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax([negative_score, positive_score])</span>
<span id="cb1-23">    y_pred.append(assignment)</span>
<span id="cb1-24"></span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> evaluate_performance(y_true: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], y_pred: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb1-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""분류 보고서 생성 및 출력"""</span></span>
<span id="cb1-28">    performance: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classification_report(y_true, y_pred, target_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"부정적"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"긍정적"</span>])</span>
<span id="cb1-29">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(performance)</span>
<span id="cb1-30"></span>
<span id="cb1-31"></span>
<span id="cb1-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 성능 평가 실행</span></span>
<span id="cb1-33">evaluate_performance(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>], y_pred)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>100%|█████████████████████████| 1066/1066 [00:02&lt;00:00, 459.29it/s]</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>              precision    recall  f1-score   support

         부정적       0.50      1.00      0.67       533
         긍정적       0.00      0.00      0.00       533

    accuracy                           0.50      1066
   macro avg       0.25      0.50      0.33      1066
weighted avg       0.25      0.50      0.33      1066
</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
</div>
</section>
<section id="텍스트-감정-분석-with-generative-model" class="level3" data-number="2.1.2">
<h3 data-number="2.1.2" class="anchored" data-anchor-id="텍스트-감정-분석-with-generative-model"><span class="header-section-number">2.1.2</span> 텍스트 감정 분석 with Generative model</h3>
<p>생성형 모델을 사용한 텍스트 감정 분석은 기존의 분류 기반 접근 방식과는 다른 새로운 패러다임을 제시합니다. 이 방식은 기존 방법보다 더 정확하고 세밀한 결과를 제공할 수 있지만, 모델의 훈련과 계산 비용이 높다는 단점도 있습니다.</p>
<div id="2bf7aab2" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb5-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline</span>
<span id="cb5-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers.pipelines.pt_utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KeyDataset</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 영화 리뷰 데이터셋 로드</span></span>
<span id="cb5-8">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rotten_tomatoes"</span>)</span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hugging Face 모델</span></span>
<span id="cb5-11">model_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"google/flan-t5-small"</span></span>
<span id="cb5-12"></span>
<span id="cb5-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델을 파이프라인에 로드</span></span>
<span id="cb5-14">pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text2text-generation"</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model_name, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda:0"</span>)</span>
<span id="cb5-15"></span>
<span id="cb5-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 준비</span></span>
<span id="cb5-17">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Is the following sentence positive or negative? "</span></span>
<span id="cb5-18">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> example: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t5"</span>: prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>]})</span>
<span id="cb5-19"></span>
<span id="cb5-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 추론 실행</span></span>
<span id="cb5-21">y_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb5-22"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> output <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tqdm(pipe(KeyDataset(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t5"</span>)), total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>])):</span>
<span id="cb5-23">    text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>]</span>
<span id="cb5-24">    y_pred.append(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-25"></span>
<span id="cb5-26"></span>
<span id="cb5-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> evaluate_performance(y_true: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], y_pred: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb5-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""분류 보고서 생성 및 출력"""</span></span>
<span id="cb5-29">    performance: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classification_report(y_true, y_pred, target_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"부정적"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"긍정적"</span>])</span>
<span id="cb5-30">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(performance)</span>
<span id="cb5-31"></span>
<span id="cb5-32"></span>
<span id="cb5-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 성능 평가 실행</span></span>
<span id="cb5-34">evaluate_performance(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>], y_pred)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>100%|█████████████████████████| 1066/1066 [00:08&lt;00:00, 121.39it/s]</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>              precision    recall  f1-score   support

         부정적       0.83      0.85      0.84       533
         긍정적       0.85      0.83      0.84       533

    accuracy                           0.84      1066
   macro avg       0.84      0.84      0.84      1066
weighted avg       0.84      0.84      0.84      1066
</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
</div>
</section>
</section>
<section id="텍스트-클러스터링과-토픽-클러스터링" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="텍스트-클러스터링과-토픽-클러스터링"><span class="header-section-number">2.2</span> 텍스트 클러스터링과 토픽 클러스터링</h2>
<p>텍스트 클러스터링과 토픽 모델링은 문서 컬렉션을 분석하는 두 가지 주요 접근 방식입니다. 텍스트 클러스터링은 유사한 문서들을 그룹화하여 컬렉션을 여러 클러스터로 나누는 것을 목표로 합니다. 일반적으로 각 문서는 하나의 클러스터에만 속하게 됩니다. 반면 토픽 모델링은 문서 컬렉션에 내재된 추상적인 ’토픽’들을 발견하는 것을 목표로 합니다.</p>
<section id="bertopic-모듈식-토픽-모델링-프레임워크" class="level3" data-number="2.2.1">
<h3 data-number="2.2.1" class="anchored" data-anchor-id="bertopic-모듈식-토픽-모델링-프레임워크"><span class="header-section-number">2.2.1</span> BERTopic: 모듈식 토픽 모델링 프레임워크</h3>
<p>BERTopic은 최신 자연어 처리 기술을 활용한 강력한 토픽 모델링 프레임워크입니다. BERTopic은 전통적인 토픽 모델링 기법인 LDA에 비해 더 정교한 결과를 제공할 수 있으며, 특히 짧은 텍스트나 특정 도메인의 텍스트에 대해 우수한 성능을 보입니다. 학술 연구, 소셜 미디어 분석, 고객 피드백 분석 등 다양한 분야에서 활용될 수 있으며, 대규모 문서 컬렉션에서 의미 있는 인사이트를 추출하는 데 유용합니다.</p>
<div id="fd0596bb-ba17-4a6c-88e4-66511a5005ac" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb9-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb9-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> umap</span>
<span id="cb9-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb9-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> hdbscan <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> HDBSCAN</span>
<span id="cb9-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformer</span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># huggingface에서 데이터 로드</span></span>
<span id="cb9-9">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"effectiveML/ArXiv-10"</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>]</span>
<span id="cb9-10"></span>
<span id="cb9-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 메타데이터 추출</span></span>
<span id="cb9-12">abstracts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abstract"</span>]</span>
<span id="cb9-13">titles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>]</span>
<span id="cb9-14"></span>
<span id="cb9-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1단계</span></span>
<span id="cb9-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 초록에 대한 임베딩 생성</span></span>
<span id="cb9-17">embedding_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformer(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thenlper/gte-small"</span>)</span>
<span id="cb9-18">embeddings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> embedding_model.encode(abstracts, show_progress_bar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb9-19"></span>
<span id="cb9-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2단계</span></span>
<span id="cb9-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 384차원의 입력 임베딩을 50차원으로 축소</span></span>
<span id="cb9-22">umap_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umap.UMAP(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, min_dist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb9-23">reduced_embeddings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umap_model.fit_transform(embeddings)</span>
<span id="cb9-24"></span>
<span id="cb9-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3단계</span></span>
<span id="cb9-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델을 학습하고 클러스터 추출</span></span>
<span id="cb9-27">hdbscan_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HDBSCAN(</span>
<span id="cb9-28">    min_cluster_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"euclidean"</span>, cluster_selection_method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eom"</span></span>
<span id="cb9-29">).fit(reduced_embeddings)</span>
<span id="cb9-30">clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hdbscan_model.labels_</span>
<span id="cb9-31"></span>
<span id="cb9-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화를 위한 준비: 384차원 임베딩을 2차원으로 축소</span></span>
<span id="cb9-33">reduced_embeddings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umap.UMAP(</span>
<span id="cb9-34">    n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, min_dist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb9-35">).fit_transform(embeddings)</span>
<span id="cb9-36"></span>
<span id="cb9-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터프레임 생성</span></span>
<span id="cb9-38">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(reduced_embeddings, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>])</span>
<span id="cb9-39">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> titles</span>
<span id="cb9-40">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cluster"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(c) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> clusters]</span>
<span id="cb9-41"></span>
<span id="cb9-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이상치와 비이상치(클러스터) 선택</span></span>
<span id="cb9-43">clusters_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.loc[df.cluster <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-1"</span>, :]</span>
<span id="cb9-44">outliers_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.loc[df.cluster <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-1"</span>, :]</span>
<span id="cb9-45"></span>
<span id="cb9-46"></span>
<span id="cb9-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 플랏 크기 지정</span></span>
<span id="cb9-48">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb9-49">plt.scatter(</span>
<span id="cb9-50">    outliers_df.x,</span>
<span id="cb9-51">    outliers_df.y,</span>
<span id="cb9-52">    alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb9-53">    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb9-54">    c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>,</span>
<span id="cb9-55">)</span>
<span id="cb9-56">plt.scatter(</span>
<span id="cb9-57">    clusters_df.x,</span>
<span id="cb9-58">    clusters_df.y,</span>
<span id="cb9-59">    c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>clusters_df.cluster.astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>),</span>
<span id="cb9-60">    alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>,</span>
<span id="cb9-61">    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb9-62">    cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viridis_r"</span>,</span>
<span id="cb9-63">)</span>
<span id="cb9-64">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb9-65">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"8aa485e3e76f4041a1670e36d388227a","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_HansOnLLM_files/figure-html/cell-7-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM_files/figure-html/cell-7-output-2.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<div id="99c52e97-c17f-4986-8832-e712a8dde976" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> copy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> deepcopy</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb10-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> bertopic <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BERTopic</span>
<span id="cb10-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> bertopic.representation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> TextGeneration</span>
<span id="cb10-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline</span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># BERTopic 모델 훈련</span></span>
<span id="cb10-9">topic_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BERTopic(</span>
<span id="cb10-10">    embedding_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>embedding_model,</span>
<span id="cb10-11">    umap_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>umap_model,</span>
<span id="cb10-12">    hdbscan_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hdbscan_model,</span>
<span id="cb10-13">    verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb10-14">).fit(abstracts, embeddings)</span>
<span id="cb10-15"></span>
<span id="cb10-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원본 표현 저장</span></span>
<span id="cb10-17">original_topics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> deepcopy(topic_model.topic_representations_)</span>
<span id="cb10-18"></span>
<span id="cb10-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Flan-T5를 사용한 토픽 표현 업데이트</span></span>
<span id="cb10-20">generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text2text-generation"</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"google/flan-t5-small"</span>)</span>
<span id="cb10-21"></span>
<span id="cb10-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 프롬프트 정의</span></span>
<span id="cb10-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""I have a topic that contains the following documents:</span></span>
<span id="cb10-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[DOCUMENTS]</span></span>
<span id="cb10-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">The topic is described by the following keywords: '[KEYWORDS]'.</span></span>
<span id="cb10-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Based on the documents and keywords, what is this topic about?"""</span></span>
<span id="cb10-27"></span>
<span id="cb10-28">representation_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TextGeneration(</span>
<span id="cb10-29">    generator, prompt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prompt, doc_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whitespace"</span></span>
<span id="cb10-30">)</span>
<span id="cb10-31">topic_model.update_topics(abstracts, representation_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>representation_model)</span>
<span id="cb10-32"></span>
<span id="cb10-33"></span>
<span id="cb10-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토픽 차이 표시 함수</span></span>
<span id="cb10-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> topic_differences(model, original_topics, nr_topics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>):</span>
<span id="cb10-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""두 모델 간의 토픽 표현 차이를 보여줍니다"""</span></span>
<span id="cb10-37">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Topic"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Updated"</span>])</span>
<span id="cb10-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> topic <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(nr_topics):</span>
<span id="cb10-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델별로 토픽당 상위 5개 단어 추출</span></span>
<span id="cb10-40">        og_words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" | "</span>.join(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>original_topics[topic]))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb10-41">        new_words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>.join(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>model.get_topic(topic)))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb10-42">        df.loc[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [topic, og_words, new_words]</span>
<span id="cb10-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df</span>
<span id="cb10-44"></span>
<span id="cb10-45"></span>
<span id="cb10-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토픽 차이 출력</span></span>
<span id="cb10-47"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(topic_differences(topic_model, original_topics))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>2025-01-21 12:04:12,339 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm
2025-01-21 12:05:33,792 - BERTopic - Dimensionality - Completed ✓
2025-01-21 12:05:33,799 - BERTopic - Cluster - Start clustering the reduced embeddings
2025-01-21 12:05:37,721 - BERTopic - Cluster - Completed ✓
2025-01-21 12:05:37,728 - BERTopic - Representation - Extracting topics from clusters using representation models.
2025-01-21 12:05:41,069 - BERTopic - Representation - Completed ✓
100%|████████████████████████████| 205/205 [00:03&lt;00:00, 54.17it/s]</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>   Topic                                           Original  \
0      0                 mathbb | prove | mathcal | we | if   
1      1                      flow | fluid | the | of | and   
2      2  channel | wireless | communication | mimo | pr...   
3      3  quantum | entanglement | states | bell | measu...   
4      4  solar | plasma | magnetic | coronal | reconnec...   

                    Updated  
0                 Maths      
1              dynamics      
2            Networking      
3  Quantum entanglement      
4          Solar-energy      </code></pre>
</div>
</div>
<div id="a7548dcf-4f7a-46a2-84d4-5268d94714c8" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> topic_model.visualize_document_datamap(</span>
<span id="cb13-2">    titles,</span>
<span id="cb13-3">    title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb13-4">    topics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)),</span>
<span id="cb13-5">    reduced_embeddings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>reduced_embeddings,</span>
<span id="cb13-6">    width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 7인치에 해당하는 픽셀 수 (100 픽셀/인치 기준)</span></span>
<span id="cb13-7">    height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 7인치에 해당하는 픽셀 수</span></span>
<span id="cb13-8">    label_font_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 크기 축소</span></span>
<span id="cb13-9">    label_wrap_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 레이블 줄바꿈 너비 축소</span></span>
<span id="cb13-10">    use_medoids<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb13-11">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_HansOnLLM_files/figure-html/cell-9-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM_files/figure-html/cell-9-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="프롬프트-엔지니어링" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="프롬프트-엔지니어링"><span class="header-section-number">2.3</span> 프롬프트 엔지니어링</h2>
<p>생성형 사전 학습 트랜스포머(GPT) 모델은 사용자가 제시한 프롬프트에 대응하여 텍스트를 생성하는 놀라운 능력을 갖추고 있습니다. 프롬프트 엔지니어링을 통해 이러한 프롬프트를 효과적으로 설계함으로써 생성되는 텍스트의 품질을 크게 향상시킬 수 있습니다.</p>
<p>이번에는 이러한 생성형 모델에 대해 더 자세히 살펴보고, 프롬프트 엔지니어링의 세계로 깊이 들어가 보겠습니다. 또한 생성형 모델을 이용한 추론, 검증, 그리고 모델 출력의 평가 방법까지 다루어 볼 것입니다.</p>
<p>프롬프트 엔지니어링은 단순히 질문을 던지는 것을 넘어서, 모델이 원하는 방식으로 응답하도록 유도하는 기술입니다. 이는 모델의 성능을 최적화하고, 특정 작업에 맞춤화된 결과를 얻는 데 핵심적인 역할을 합니다.</p>
<div id="45c9e1ee-edb4-458b-8044-f55b091b5843" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb14-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb14-3">    AutoModelForCausalLM,</span>
<span id="cb14-4">    AutoTokenizer,</span>
<span id="cb14-5">    logging,</span>
<span id="cb14-6">    pipeline,</span>
<span id="cb14-7">)</span>
<span id="cb14-8"></span>
<span id="cb14-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용할 모델 이름 지정</span></span>
<span id="cb14-10">model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"microsoft/Phi-3.5-mini-instruct"</span></span>
<span id="cb14-11"></span>
<span id="cb14-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 로드 및 설정</span></span>
<span id="cb14-13">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForCausalLM.from_pretrained(</span>
<span id="cb14-14">    model_name,</span>
<span id="cb14-15">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPU 사용</span></span>
<span id="cb14-16">    torch_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float16,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 16비트 부동소수점 사용</span></span>
<span id="cb14-17">    trust_remote_code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb14-18">)</span>
<span id="cb14-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저 로드</span></span>
<span id="cb14-20">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_name)</span>
<span id="cb14-21"></span>
<span id="cb14-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 생성 파이프라인 설정</span></span>
<span id="cb14-23">pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(</span>
<span id="cb14-24">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-generation"</span>,</span>
<span id="cb14-25">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 지정</span></span>
<span id="cb14-26">    tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저 지정</span></span>
<span id="cb14-27">    return_full_text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전체 텍스트 반환 안 함</span></span>
<span id="cb14-28">    max_new_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최대 새 토큰 수</span></span>
<span id="cb14-29">    do_sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 샘플링 사용 안 함</span></span>
<span id="cb14-30">)</span>
<span id="cb14-31"></span>
<span id="cb14-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 프롬프트 설정</span></span>
<span id="cb14-33">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb14-34">    {</span>
<span id="cb14-35">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb14-36">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"직장동료에게 보내는 이메일의 짧은 인사말 3개만 적어줘."</span>,</span>
<span id="cb14-37">    }</span>
<span id="cb14-38">]</span>
<span id="cb14-39"></span>
<span id="cb14-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출력 생성</span></span>
<span id="cb14-41">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(messages)</span>
<span id="cb14-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 생성된 텍스트 출력</span></span>
<span id="cb14-43"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>`flash-attention` package not found, consider installing for better performance: No module named 'flash_attn'.
Current `flash-attention` does not support `window_size`. Either upgrade or use `attn_implementation='eager'`.</code></pre>
</div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"0f8ef81a8c3a4e7d87938c67a78e69d9","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>You are not running the flash-attention implementation, expect numerical differences.</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code> 제목: 환영 인사드리기

안녕 친구,

안녕하세요! 이 이메일을 보내드리고 직장에 합류하게 되어 기쁩니다. 팀에서 함께 일하고 함께 성장하기를 기대합니다. 행운을 빌어요!

감사합니다,
[당신의 이름]</code></pre>
</div>
</div>
<section id="모델-출력-제어" class="level3" data-number="2.3.1">
<h3 data-number="2.3.1" class="anchored" data-anchor-id="모델-출력-제어"><span class="header-section-number">2.3.1</span> 모델 출력 제어</h3>
<p>모델 매개변수를 조정하여 원하는 종류의 출력을 제어할 수 있습니다. <strong>temperature</strong>와 <strong>top_p</strong> 매개변수는 출력의 무작위성을 제어합니다.</p>
<section id="temperature온도" class="level4" data-number="2.3.1.1">
<h4 data-number="2.3.1.1" class="anchored" data-anchor-id="temperature온도"><span class="header-section-number">2.3.1.1</span> Temperature(온도)</h4>
<p>Temperature는 생성된 텍스트의 무작위성 또는 창의성을 제어합니다. 이는 확률이 낮은 토큰을 선택할 가능성을 정의합니다. 기본 아이디어는 temperature가 0이면 항상 가장 가능성이 높은 단어를 선택하기 때문에 매번 동일한 응답을 생성한다는 것입니다.</p>
</section>
<section id="top_p" class="level4" data-number="2.3.1.2">
<h4 data-number="2.3.1.2" class="anchored" data-anchor-id="top_p"><span class="header-section-number">2.3.1.2</span> top_p</h4>
<p>top_p(핵 샘플링이라고도 함)는 LLM이 고려할 수 있는 토큰의 부분집합(핵)을 제어하는 샘플링 기법입니다. 누적 확률에 도달할 때까지 토큰을 고려합니다. top_p를 0.1로 설정하면 해당 값에 도달할 때까지 토큰을 고려합니다.</p>
<div id="670cdb65-796e-4639-a03b-878698da4168" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using a high temperature</span></span>
<span id="cb18-2">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(messages, do_sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb18-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 제목: 안녕하세요, [동료 이름]

안녕하세요! 저를 잘 기억해주시고, 전문적인 지원과 협력을 이어오시길 바랍니다.

감사드립니다!

[당신의 이름]</code></pre>
</div>
</div>
<div id="fb563e73-d63c-4ef9-bdd5-dd204642a5b5" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using a high top_p</span></span>
<span id="cb20-2">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(messages, do_sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb20-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 제목: 인사 릴렉센

---

1. 빠른 칭호와 행운을 바쳐:
   안녕하세요 [동료 이름],

   이 메시지를 전해드리며, 우리를 부러워하게 만드는 발신인 이 글을 통해 전하고자 합니다. 이 역할에서 네가 저녁부터 아침까지 우수하게 일하고 있다는 증거로 자리매김하는 것을 자랑스럽게 여깁니다.

2. 긍정적인 기여에 감사:
   네가 간략한 지원도 및 공유된 실력에 영향을 미친 프로젝트와 빈틈없는 팀플 작물에 큰 마스터피스를 제공해주셨습니다. 이 회사를 하나의 개인으로부터 더 강력하고 협력적인 집단으로 시간이 지나면서 지속적인 성장을 목격하고 있습니다.

3. 앞으로의 연결:
   이 인사의 마당에 더 나</code></pre>
</div>
</div>
</section>
</section>
<section id="고급-프롬프트-엔지니어링" class="level3" data-number="2.3.2">
<h3 data-number="2.3.2" class="anchored" data-anchor-id="고급-프롬프트-엔지니어링"><span class="header-section-number">2.3.2</span> 고급 프롬프트 엔지니어링</h3>
<p>좋은 프롬프트를 만드는 것은 간단해 보일 수 있습니다. 구체적인 질문을 하고, 정확하게 표현하며, 몇 가지 예시를 추가하면 끝난 것 같죠! 하지만 프롬프트 작성은 매우 빠르게 복잡해질 수 있으며, 그 결과 대규모 언어 모델(LLM)을 활용하는 데 있어 종종 과소평가되는 요소입니다. 여기서는 프롬프트를 구축하기 위한 여러 가지 고급 기법을 살펴보겠습니다.</p>
</section>
<section id="복잡한-프롬프트" class="level3" data-number="2.3.3">
<h3 data-number="2.3.3" class="anchored" data-anchor-id="복잡한-프롬프트"><span class="header-section-number">2.3.3</span> 복잡한 프롬프트</h3>
<p>이 복잡한 프롬프트는 프롬프트 작성의 모듈식 특성을 보여줍니다. 우리는 자유롭게 구성 요소를 추가하거나 제거할 수 있고 출력에 미치는 영향을 판단할 수 있습니다.</p>
<div id="e5ec1a0b-d299-4bdd-b63c-88b1855dacf9" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 프롬프트 구성 요소</span></span>
<span id="cb22-2">persona <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"당신은 인공지능과 기계학습 분야의 전문가입니다. 복잡한 기술 문서를 쉽게 이해할 수 있는 요약으로 만드는 데 탁월합니다.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-3">instruction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"제공된 기술 문서의 핵심 내용을 요약해주세요.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-4">context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"요약은 개발자들이 문서의 가장 중요한 정보를 빠르게 파악할 수 있도록 핵심 포인트를 추출해야 합니다.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-5">data_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"주요 개념과 기술을 설명하는 글머리 기호 요약을 만드세요. 그 다음 주요 내용을 간결하게 요약하는 단락을 작성하세요.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-6">audience <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"이 요약은 최신 AI 개발 동향을 빠르게 파악해야 하는 바쁜 개발자들을 위한 것입니다.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-7">tone <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"전문적이고 명확한 톤을 사용해야 합니다.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-8"></span>
<span id="cb22-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 아래 내용을 원하는 문장으로 변경했습니다.</span></span>
<span id="cb22-10">text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">머신러닝 모델의 성능을 향상시키는 방법 중 하나는 앙상블 학습입니다. 앙상블 학습은 여러 개의 모델을 조합하여 더 나은 예측 결과를 얻는 방법입니다.</span></span>
<span id="cb22-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">주요 앙상블 기법으로는 배깅(Bagging), 부스팅(Boosting), 스태킹(Stacking)이 있습니다.</span></span>
<span id="cb22-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">배깅은 동일한 알고리즘을 사용하지만 서로 다른 학습 데이터 부분집합으로 여러 모델을 학습시키는 방법입니다.</span></span>
<span id="cb22-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">부스팅은 이전 모델의 오류를 보완하는 방향으로 순차적으로 모델을 학습시키는 방법입니다.</span></span>
<span id="cb22-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">스태킹은 여러 모델의 예측 결과를 새로운 모델의 입력으로 사용하여 최종 예측을 수행하는 방법입니다.</span></span>
<span id="cb22-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">이러한 앙상블 기법들은 단일 모델보다 일반적으로 더 높은 성능과 안정성을 제공합니다.</span></span>
<span id="cb22-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-18"></span>
<span id="cb22-19">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"요약할 텍스트: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-20"></span>
<span id="cb22-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전체 프롬프트 - 생성된 출력에 미치는 영향을 보기 위해 부분을 제거하거나 추가할 수 있습니다</span></span>
<span id="cb22-22">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> persona <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> instruction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> data_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> audience <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tone <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> data</span>
<span id="cb22-23"></span>
<span id="cb22-24">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: query}]</span>
<span id="cb22-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tokenizer.apply_chat_template(messages, tokenize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>))</span>
<span id="cb22-26"></span>
<span id="cb22-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출력 생성</span></span>
<span id="cb22-28">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(messages)</span>
<span id="cb22-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;|user|&gt;
당신은 인공지능과 기계학습 분야의 전문가입니다. 복잡한 기술 문서를 쉽게 이해할 수 있는 요약으로 만드는 데 탁월합니다.
제공된 기술 문서의 핵심 내용을 요약해주세요.
요약은 개발자들이 문서의 가장 중요한 정보를 빠르게 파악할 수 있도록 핵심 포인트를 추출해야 합니다.
주요 개념과 기술을 설명하는 글머리 기호 요약을 만드세요. 그 다음 주요 내용을 간결하게 요약하는 단락을 작성하세요.
이 요약은 최신 AI 개발 동향을 빠르게 파악해야 하는 바쁜 개발자들을 위한 것입니다.
전문적이고 명확한 톤을 사용해야 합니다.
요약할 텍스트: 
머신러닝 모델의 성능을 향상시키는 방법 중 하나는 앙상블 학습입니다. 앙상블 학습은 여러 개의 모델을 조합하여 더 나은 예측 결과를 얻는 방법입니다.
주요 앙상블 기법으로는 배깅(Bagging), 부스팅(Boosting), 스태킹(Stacking)이 있습니다.
배깅은 동일한 알고리즘을 사용하지만 서로 다른 학습 데이터 부분집합으로 여러 모델을 학습시키는 방법입니다.
부스팅은 이전 모델의 오류를 보완하는 방향으로 순차적으로 모델을 학습시키는 방법입니다.
스태킹은 여러 모델의 예측 결과를 새로운 모델의 입력으로 사용하여 최종 예측을 수행하는 방법입니다.
이러한 앙상블 기법들은 단일 모델보다 일반적으로 더 높은 성능과 안정성을 제공합니다.
&lt;|end|&gt;
&lt;|endoftext|&gt;
 **요약: 앙상블 학습을 통한 머신러닝 성능 향상**

*글머리기호 요약:*
- 앙상블 학습: 여러 모델의 조합
- 주요 기법: 배깅, 부스팅, 스태킹
- 성능 향상: 일반적으로 더 높고 안정적

*요약 단락:*
앙상블 학습은 머신러닝 모델의 성능을 향상시키기 위해 여러 개의 모델을 조합하는 기술입니다. 주요 앙상블 기법에는 배깅, 부스팅, 스태킹이 포함됩니다.

배깅은 동일한 알고리즘을 사용하면서 서로 다른 학습 데이터 부분집합으로 여러 모델을 학습시키는 방법입니다. 이 방법은 모델의 불필요한 동질성을 줄이고 오류를 완화하여 더 안정적인 예측을 제공합니다.

부스팅은 이전 모</code></pre>
</div>
</div>
</section>
<section id="문맥-내-학습-예시-제공" class="level3" data-number="2.3.4">
<h3 data-number="2.3.4" class="anchored" data-anchor-id="문맥-내-학습-예시-제공"><span class="header-section-number">2.3.4</span> 문맥 내 학습: 예시 제공</h3>
<p>우리는 LLM(대규모 언어 모델)에 우리가 정확히 달성하고자 하는 것의 예시를 제공할 수 있습니다. 이는 종종 문맥 내 학습이라고 불리며, 모델에 정확한 예시를 제공하는 방식입니다.</p>
<div id="9b3b3bf6-1bc6-4596-abb2-f2e71167e906" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 만들어낸 단어를 문장에서 사용하는 단일 예시 활용</span></span>
<span id="cb24-2">one_shot_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb24-3">    {</span>
<span id="cb24-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb24-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"'퀴블녹스'는 자유자재로 크기를 바꿀 수 있는 마법 생물입니다. '퀴블녹스'라는 단어를 사용한 문장의 예시는 다음과 같습니다:"</span>,</span>
<span id="cb24-6">    },</span>
<span id="cb24-7">    {</span>
<span id="cb24-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"assistant"</span>,</span>
<span id="cb24-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"여행을 갈 때 내 애완 퀴블녹스는 쥐만큼 작아져서 주머니에 쉽게 넣고 다닐 수 있어요."</span>,</span>
<span id="cb24-10">    },</span>
<span id="cb24-11">    {</span>
<span id="cb24-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb24-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"'실드치다'는 어처구니 없는 상황이나 인물의 입장을 방어하는 것을 의미합니다. '실드치다'라는 단어를 사용한 문장의 예시는 다음과 같습니다:"</span>,</span>
<span id="cb24-14">    },</span>
<span id="cb24-15">]</span>
<span id="cb24-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tokenizer.apply_chat_template(one_shot_prompt, tokenize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>))</span>
<span id="cb24-17"></span>
<span id="cb24-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출력 생성</span></span>
<span id="cb24-19">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(one_shot_prompt)</span>
<span id="cb24-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;|user|&gt;
'퀴블녹스'는 자유자재로 크기를 바꿀 수 있는 마법 생물입니다. '퀴블녹스'라는 단어를 사용한 문장의 예시는 다음과 같습니다:&lt;|end|&gt;
&lt;|assistant|&gt;
여행을 갈 때 내 애완 퀴블녹스는 쥐만큼 작아져서 주머니에 쉽게 넣고 다닐 수 있어요.&lt;|end|&gt;
&lt;|user|&gt;
'줌블하다'는 비정통적이지만 효과적인 방식으로 문제를 해결하는 것을 의미합니다. '줌블하다'라는 단어를 사용한 문장의 예시는 다음과 같습니다:&lt;|end|&gt;
&lt;|endoftext|&gt;
 올해의 과제를 처리하는 데 어려움을 겪으며, 우리는 줌블하게 새로운 프로세스를 도입하여 효율성을 높이고 성공적으로 마무리했습니다.</code></pre>
</div>
</div>
</section>
<section id="chain-prompting-문제를-나누어-해결하기" class="level3" data-number="2.3.5">
<h3 data-number="2.3.5" class="anchored" data-anchor-id="chain-prompting-문제를-나누어-해결하기"><span class="header-section-number">2.3.5</span> Chain Prompting: 문제를 나누어 해결하기</h3>
<p>문제를 하나의 프롬프트 내에서 해결하는 대신, 여러 프롬프트 사이에서 나누어 해결할 수 있습니다. 본질적으로 이 방법은 한 프롬프트의 출력을 다음 프롬프트의 입력으로 사용하여 문제를 해결하는 연속적인 상호작용 체인을 만드는 것입니다. Chain Prompting은 특히 다단계 추론, 복잡한 분석, 또는 여러 도메인의 지식을 결합해야 하는 작업에서 효과적입니다.</p>
<div id="cbb696bc-ee32-4971-ac48-1359235664e8" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 스마트홈 기기의 이름과 슬로건 생성</span></span>
<span id="cb26-2">product_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"스마트홈 기기의 이름과 슬로건을 만들어주세요."</span>}]</span>
<span id="cb26-3">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(product_prompt)</span>
<span id="cb26-4">product_description <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>]</span>
<span id="cb26-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(product_description)</span>
<span id="cb26-6"></span>
<span id="cb26-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 생성된 제품 이름과 슬로건을 바탕으로 짧은 판매 문구 생성</span></span>
<span id="cb26-8">sales_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb26-9">    {</span>
<span id="cb26-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb26-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"다음 제품에 대한 매우 짧은 판매 문구를 생성해주세요: '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>product_description<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'"</span>,</span>
<span id="cb26-12">    }</span>
<span id="cb26-13">]</span>
<span id="cb26-14">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(sales_prompt)</span>
<span id="cb26-15">sales_pitch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>]</span>
<span id="cb26-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(sales_pitch)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 이름: "SmartHaven"

슬로건: "SmartHaven - 디지털 편안함, 현실 속 편안한 집."

SmartHaven는 스마트홈 기기의 편안함과 효율성을 실현하는 최첨단 기기로, 집의 모든 영역에서 디지털 혁신을 제공합니다. 이 기기는 생활의 질을 향상시키고, 집의 안전성을 강화하며, 사용자의 생활을 효율적이고 편안하게 만듭니다. SmartHaven의 디지털 편안함과 현실 속 편안한 집을 상징하는 슬로건은 이러한 기능을 강조하고, 소비자들이 스마트홈의 풍부한 가치를 느낄 수 있도록 합니다.
 "SmartHaven: 현실 속 편안한 집, 디지털 편안함을 누릴 순간."</code></pre>
</div>
</div>
</section>
<section id="생성형-모델을-이용한-추론" class="level3" data-number="2.3.6">
<h3 data-number="2.3.6" class="anchored" data-anchor-id="생성형-모델을-이용한-추론"><span class="header-section-number">2.3.6</span> 생성형 모델을 이용한 추론</h3>
<p>추론은 인간 지능의 핵심 요소이며 종종 추론과 유사해 보이는 LLM의 창발적 행동과 비교됩니다. 우리가 “유사해 보이는”이라고 강조하는 이유는 이 글을 쓰는 시점에서 이러한 모델들은 일반적으로 학습 데이터의 암기와 패턴 매칭을 통해 이러한 행동을 보여주는 것으로 여겨지기 때문입니다.</p>
</section>
<section id="chain-of-thought-답변-전에-생각하기" class="level3" data-number="2.3.7">
<h3 data-number="2.3.7" class="anchored" data-anchor-id="chain-of-thought-답변-전에-생각하기"><span class="header-section-number">2.3.7</span> Chain-of-Thought: 답변 전에 생각하기</h3>
<p>Chain-of-Thought(사고 연쇄)는 생성형 모델이 질문에 직접 답변하지 않고 먼저 “생각”하도록 하는 것을 목표로 합니다.Chain-of-Thought 방식은 특히 수학 문제 풀이, 논리 퍼즐, 복잡한 의사 결정 과정 등에서 효과적으로 사용될 수 있으며, 모델의 추론 능력을 향상시키는 데 도움이 됩니다.</p>
<div id="8087489e-d0ed-4fe7-b40c-f9bf529a1d50" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 명시적인 추론 없이 답변하기</span></span>
<span id="cb28-2">standard_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb28-3">    {</span>
<span id="cb28-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb28-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"민수는 색연필 12자루를 가지고 있었습니다. 새 색연필 세트를 받았는데, 그 세트에는 8자루가 들어있었습니다. 그런데 3자루를 동생에게 주었습니다. 민수는 지금 몇 자루의 색연필을 가지고 있나요?"</span>,</span>
<span id="cb28-6">    },</span>
<span id="cb28-7">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"assistant"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17"</span>},</span>
<span id="cb28-8">    {</span>
<span id="cb28-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb28-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"학교 도서관에 책이 300권 있었습니다. 새로운 책 50권을 구입했고, 학생들이 25권을 빌려갔습니다. 지금 도서관에 있는 책은 몇 권인가요?"</span>,</span>
<span id="cb28-11">    },</span>
<span id="cb28-12">]</span>
<span id="cb28-13"></span>
<span id="cb28-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 생성 모델 실행</span></span>
<span id="cb28-15">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(standard_prompt)</span>
<span id="cb28-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 325권

이 문제를 해결하기 위해서는 다음 단계를 따릅니다:

1. 도서관에는 초기에 300권의 책이 있었습니다.
2. 새로운 책 50권을 도서관에 추가했습니다. 이를 기존의 총 권수에 더합니다: 300 + 50 = 350권.
3. 그런 다음, 학생들이 25권을 빌려갔습니다. 이를 현재의 총 권수에서 빼야 합니다: 350 - 25 = 325권.

따라서, 도서관에는 현재 325권의 책이 남아 있습니다.</code></pre>
</div>
</div>
<div id="7bed2f0a-caa3-425f-b8fc-2902d7992898" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사고 과정을 포함한 답변</span></span>
<span id="cb30-2">cot_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb30-3">    {</span>
<span id="cb30-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb30-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"민수는 색연필 12자루를 가지고 있었습니다. 새 색연필 세트를 2개 받았는데, 각 세트에는 5자루가 들어있었습니다. 민수는 지금 몇 자루의 색연필을 가지고 있나요?"</span>,</span>
<span id="cb30-6">    },</span>
<span id="cb30-7">    {</span>
<span id="cb30-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"assistant"</span>,</span>
<span id="cb30-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"민수는 처음에 12자루의 색연필을 가지고 있었습니다. 2개의 새 세트에 각각 5자루씩 들어있으므로 10자루를 추가로 받았습니다. 12 + 10 = 22. 따라서 답은 22자루입니다."</span>,</span>
<span id="cb30-10">    },</span>
<span id="cb30-11">    {</span>
<span id="cb30-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb30-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"학교 도서관에 책이 45권 있었습니다. 15권을 학생들에게 대출해주고 새로운 책 20권을 구입했습니다. 지금 도서관에 있는 책은 몇 권인가요?"</span>,</span>
<span id="cb30-14">    },</span>
<span id="cb30-15">]</span>
<span id="cb30-16"></span>
<span id="cb30-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출력 생성</span></span>
<span id="cb30-18">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(cot_prompt)</span>
<span id="cb30-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 도서관에서는 처음에 45권의 책이 있었습니다. 15권을 학생들에게 대출했으므로 45 - 15 = 30권이 남았습니다. 그런 다음 20권의 새로운 책을 구입했으므로 30 + 20 = 50권의 책이 지금 도서관에 있습니다. 따라서 답은 50권입니다.</code></pre>
</div>
</div>
</section>
<section id="제로샷-chain-of-thought" class="level3" data-number="2.3.8">
<h3 data-number="2.3.8" class="anchored" data-anchor-id="제로샷-chain-of-thought"><span class="header-section-number">2.3.8</span> 제로샷 Chain-of-Thought</h3>
<p>모델에게 예시를 제공하는 대신에 우리는 단순히 생성형 모델에게 추론 과정을 제공하도록 요청할 수 있습니다(제로샷 chain-of-thought). 이를 위해 효과적인 다양한 형태가 있지만 흔하고 효과적인 방법 중 하나는 “단계별로 생각해 봅시다”라는 문구를 사용하는 것입니다. 이 방법은 특히 다양한 유형의 문제에 대해 빠르게 추론 과정을 얻고자 할 때 유용하며, 모델의 일반화된 추론 능력을 테스트하는 데에도 효과적입니다.</p>
<div id="3f3a6562-d55c-4601-addd-74caad83a9a0" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zero-shot Chain-of-Thought</span></span>
<span id="cb32-2">zeroshot_cot_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb32-3">    {</span>
<span id="cb32-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb32-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"도서관에 책이 50권 있었습니다. 15권을 대출해주고 새로 20권을 구입했습니다. 지금 도서관에 있는 책은 몇 권인가요? 단계별로 생각해봅시다."</span>,</span>
<span id="cb32-6">    }</span>
<span id="cb32-7">]</span>
<span id="cb32-8"></span>
<span id="cb32-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출력 생성</span></span>
<span id="cb32-10">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(zeroshot_cot_prompt)</span>
<span id="cb32-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 이 문제를 해결하기 위해 다음 단계를 따르겠습니다:

1. 도서관에서 시작하는 초기 책 수: 50권
2. 대출된 책 수: 15권
3. 구입한 새로운 책 수: 20권

이제 이 값을 사용하여 현재 도서관에 있는 책 수를 계산해봅시다:

1. 시작하는 초기 책 수에서 대출된 책 수를 빼줍니다: 50 - 15 = 35권
2. 이 결과에 구입한 새로운 책 수를 더합니다: 35 + 20 = 55권

따라서, 현재 도서관에는 55권의 책이 있습니다.</code></pre>
</div>
</div>
</section>
<section id="tree-of-thought-중간-단계-탐색하기" class="level3" data-number="2.3.9">
<h3 data-number="2.3.9" class="anchored" data-anchor-id="tree-of-thought-중간-단계-탐색하기"><span class="header-section-number">2.3.9</span> Tree-of-Thought: 중간 단계 탐색하기</h3>
<p>Chain-of-Thought와 자기 일관성(self-consistency)의 개념은 더 복잡한 추론을 가능하게 하기 위한 것입니다. 여러 “생각”들을 샘플링하고 이를 더 신중하게 만듦으로써 생성형 모델의 출력을 개선합니다.</p>
<div id="ceaf803c-1983-419e-a635-4a90273bef4f" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zero-shot Tree-of-Thought</span></span>
<span id="cb34-2">zeroshot_tot_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb34-3">    {</span>
<span id="cb34-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb34-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"세 명의 다른 전문가들이 이 질문에 답하고 있다고 상상해보세요. 모든 전문가는 자신의 생각의 1단계를 적은 다음 그룹과 공유합니다. 그런 다음 모든 전문가는 다음 단계로 넘어갑니다. 만약 어느 전문가라도 자신이 틀렸다는 것을 깨닫게 되면 그 즉시 토론에서 빠집니다. 질문은 '학교 도서관에 책이 80권 있었습니다. 30권을 학생들에게 대출해주고 새로운 책 25권을 구입했습니다. 지금 도서관에 있는 책은 몇 권인가요?' 입니다. 결과에 대해 반드시 토론해주세요."</span>,</span>
<span id="cb34-6">    }</span>
<span id="cb34-7">]</span>
<span id="cb34-8"></span>
<span id="cb34-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출력 생성</span></span>
<span id="cb34-10">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(zeroshot_tot_prompt)</span>
<span id="cb34-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 1단계: 초기 책 수를 기억하기
80권의 책이 도서관에서 시작합니다.

2단계: 학생들에게 대출된 책 수를 계산하기
30권의 책이 학생들에게 대출됩니다.

3단계: 구입한 새로운 책 수를 계산하기
25권의 새로운 책이 도서관에 추가됩니다.

4단계: 현재 책 수를 계산하기
1단계에서 시작한 80권에서 2단계의 30권을 빼고, 그리고 3단계의 25권을 더합니다.

80 - 30 = 50
50 + 25 = 75

토론:
도서관에는 80권의 책이 시작되었습니다. 그 다음, 30권의 책이 학생들에게 대출되었습니다. 이로 인해 도서관에는 50권의 책이 남았습니다. 그 다음, 25권의 새로운 책이 도서관에 추가되었습니다. 따</code></pre>
</div>
</div>
</section>
</section>
<section id="의미론적-검색-및-검색-증강-생성" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="의미론적-검색-및-검색-증강-생성"><span class="header-section-number">2.4</span> 의미론적 검색 및 검색 증강 생성</h2>
<section id="밀집-검색-dense-retrieval" class="level3" data-number="2.4.1">
<h3 data-number="2.4.1" class="anchored" data-anchor-id="밀집-검색-dense-retrieval"><span class="header-section-number">2.4.1</span> 밀집 검색 (Dense Retrieval)</h3>
<p>밀집 검색은 검색 쿼리가 관련 결과와 가까울 것이라는 특성에 의존합니다.</p>
<section id="밀집-검색-주의사항" class="level4" data-number="2.4.1.1">
<h4 data-number="2.4.1.1" class="anchored" data-anchor-id="밀집-검색-주의사항"><span class="header-section-number">2.4.1.1</span> 밀집 검색 주의사항</h4>
<ul>
<li>거짓 양성: 의미적으로 유사하지만 실제로 관련이 없는 결과를 반환할 수 있습니다.</li>
<li>답변 부재: 코퍼스에 답변이 없는 경우에도 가장 가까운 결과를 반환합니다.</li>
<li>컨텍스트 손실: 단어의 정확한 일치보다는 의미적 유사성에 중점을 두기 때문에 특정 키워드나 구문을 놓칠 수 있습니다.</li>
<li>계산 비용: 대규모 데이터셋에서는 계산 비용이 높을 수 있습니다.</li>
<li>도메인 특화의 어려움: 특정 도메인의 전문 용어나 개념을 정확히 포착하기 어려울 수 있습니다.</li>
</ul>
<div id="37c83c91-0769-49bf-8622-067ac4f54643" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb36-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb36-3">    DPRContextEncoder,</span>
<span id="cb36-4">    DPRContextEncoderTokenizer,</span>
<span id="cb36-5">    DPRQuestionEncoder,</span>
<span id="cb36-6">    DPRQuestionEncoderTokenizer,</span>
<span id="cb36-7">)</span>
<span id="cb36-8"></span>
<span id="cb36-9">question_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/dpr-question_encoder-single-nq-base"</span></span>
<span id="cb36-10">context_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/dpr-ctx_encoder-single-nq-base"</span></span>
<span id="cb36-11"></span>
<span id="cb36-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 인코더와 토크나이저 초기화</span></span>
<span id="cb36-13">question_encoder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DPRQuestionEncoder.from_pretrained(question_model)</span>
<span id="cb36-14">question_tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DPRQuestionEncoderTokenizer.from_pretrained(question_model)</span>
<span id="cb36-15">context_encoder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DPRContextEncoder.from_pretrained(context_model)</span>
<span id="cb36-16">context_tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DPRContextEncoderTokenizer.from_pretrained(context_model)</span>
<span id="cb36-17"></span>
<span id="cb36-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 질문 인코딩</span></span>
<span id="cb36-19">question <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"듄의 작가는 누구인가요?"</span></span>
<span id="cb36-20">question_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> question_tokenizer(question, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)</span>
<span id="cb36-21">question_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> question_encoder(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>question_input).pooler_output</span>
<span id="cb36-22"></span>
<span id="cb36-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 컨텍스트 인코딩</span></span>
<span id="cb36-24">context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"듄은 1965년에 미국 작가 프랭크 허버트가 쓴 공상과학 소설입니다."</span></span>
<span id="cb36-25">context_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> context_tokenizer(context, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)</span>
<span id="cb36-26">context_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> context_encoder(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>context_input).pooler_output</span>
<span id="cb36-27"></span>
<span id="cb36-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 유사도 계산</span></span>
<span id="cb36-29">similarity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.matmul(question_embedding, context_embedding.transpose(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb36-30"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"유사도 점수: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>similarity<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>item()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>유사도 점수: 75.5189</code></pre>
</div>
</div>
</section>
</section>
<section id="재순위화-예시" class="level3" data-number="2.4.2">
<h3 data-number="2.4.2" class="anchored" data-anchor-id="재순위화-예시"><span class="header-section-number">2.4.2</span> 재순위화 예시</h3>
<p>재순위화 시스템(예: monoBERT)은 사용자의 검색어와 후보 결과들을 분석하여 각 문서가 해당 검색어와 얼마나 관련이 있는지 점수를 매깁니다. 이렇게 산출된 관련성 점수를 바탕으로 사전에 선별된 결과들의 순서를 재배열합니다. 이 과정을 통해 검색어에 대한 결과의 순위가 개선되어 더욱 정확하고 관련성 높은 정보를 상위에 표시할 수 있게 됩니다.</p>
<p>재순위화 시스템의 주요 특징은 다음과 같습니다:</p>
<ol type="1">
<li><p><strong>정교한 관련성 평가</strong>: 단순한 키워드 매칭을 넘어 문맥과 의미를 고려한 심층적인 관련성 평가를 수행합니다.</p></li>
<li><p><strong>맞춤형 순위 조정</strong>: 사용자의 검색 의도를 더 정확히 반영하여 결과의 순위를 조정합니다.</p></li>
<li><p><strong>검색 품질 향상</strong>: 사용자에게 더 관련성 높고 유용한 정보를 우선적으로 제공함으로써 전반적인 검색 경험을 개선합니다.</p></li>
<li><p><strong>다양한 요소 고려</strong>: 문서의 내용, 구조, 메타데이터 등 다양한 요소를 종합적으로 분석하여 순위를 결정합니다.</p></li>
</ol>
<div id="d00362ee-9825-468f-a103-1c099b0d487b" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb38-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoModelForSequenceClassification, AutoTokenizer</span>
<span id="cb38-3"></span>
<span id="cb38-4">model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cross-encoder/ms-marco-MiniLM-L-6-v2"</span></span>
<span id="cb38-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 재순위화 모델 로드</span></span>
<span id="cb38-6">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_name)</span>
<span id="cb38-7">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForSequenceClassification.from_pretrained(model_name)</span>
<span id="cb38-8"></span>
<span id="cb38-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예시 쿼리와 검색된 문단들</span></span>
<span id="cb38-10">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"프랑스의 수도는 어디인가요?"</span></span>
<span id="cb38-11">passages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb38-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"파리는 프랑스의 수도이자 가장 인구가 많은 도시입니다."</span>,</span>
<span id="cb38-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"런던은 영국과 잉글랜드의 수도입니다."</span>,</span>
<span id="cb38-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"프랑스는 서유럽에 위치한 국가입니다."</span>,</span>
<span id="cb38-15">]</span>
<span id="cb38-16"></span>
<span id="cb38-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 문단 재순위화</span></span>
<span id="cb38-18">pairs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[query, passage] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> passage <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> passages]</span>
<span id="cb38-19">inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokenizer(pairs, padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, truncation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)</span>
<span id="cb38-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb38-21">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>inputs).logits.squeeze(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb38-22"></span>
<span id="cb38-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 점수에 따라 문단 정렬</span></span>
<span id="cb38-24">reranked_passages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [p <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _, p <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(scores, passages), reverse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)]</span>
<span id="cb38-25"></span>
<span id="cb38-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"재순위화된 문단:"</span>)</span>
<span id="cb38-27"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, passage <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(reranked_passages, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb38-28">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>passage<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>재순위화된 문단:
1. 파리는 프랑스의 수도이자 가장 인구가 많은 도시입니다.
2. 런던은 영국과 잉글랜드의 수도입니다.
3. 프랑스는 서유럽에 위치한 국가입니다.</code></pre>
</div>
</div>
</section>
<section id="rag검색-증강-생성" class="level3" data-number="2.4.3">
<h3 data-number="2.4.3" class="anchored" data-anchor-id="rag검색-증강-생성"><span class="header-section-number">2.4.3</span> RAG(검색 증강 생성)</h3>
<p>RAG는 검색 시스템의 파이프라인 끝단에 생성형 대규모 언어 모델(LLM)을 배치하는 혁신적인 접근 방식입니다. 이 방법을 통해 시스템은 검색된 문서를 바탕으로 답변을 생성하면서 동시에 출처를 인용할 수 있습니다. RAG의 주요 특징과 장점은 다음과 같습니다:</p>
<ol type="1">
<li><p><strong>정보의 정확성과 최신성</strong>: 실시간으로 검색된 최신 정보를 바탕으로 답변을 생성하므로, 항상 최신의 정확한 정보를 제공할 수 있습니다.</p></li>
<li><p><strong>근거 기반 응답</strong>: 생성된 답변의 각 부분에 대해 출처를 제시함으로써, 사용자는 정보의 신뢰성을 직접 확인할 수 있습니다.</p></li>
<li><p><strong>유연한 지식 확장</strong>: 모델의 재학습 없이도 새로운 정보를 즉시 활용할 수 있어, 지식 기반을 지속적으로 확장할 수 있습니다.</p></li>
<li><p><strong>맥락 이해 능력 향상</strong>: 검색된 문서들의 맥락을 종합적으로 이해하여 더 깊이 있고 관련성 높은 답변을 생성합니다.</p></li>
<li><p><strong>투명성 제고</strong>: 정보의 출처를 명확히 제시함으로써 AI 시스템의 의사결정 과정을 더 투명하게 만듭니다.</p></li>
</ol>
<div id="6ed63a14-a595-4d5e-ac66-fa62c45f197e" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb40-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb40-3">    AutoModel,</span>
<span id="cb40-4">    AutoTokenizer,</span>
<span id="cb40-5">    RagRetriever,</span>
<span id="cb40-6">    RagSequenceForGeneration,</span>
<span id="cb40-7">)</span>
<span id="cb40-8"></span>
<span id="cb40-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사전 훈련된 모델 로드</span></span>
<span id="cb40-10">question_encoder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModel.from_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/dpr-question_encoder-single-nq-base"</span>)</span>
<span id="cb40-11">question_tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/dpr-question_encoder-single-nq-base"</span>)</span>
<span id="cb40-12">generator_tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/bart-large"</span>)</span>
<span id="cb40-13"></span>
<span id="cb40-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># RAG 컴포넌트 초기화</span></span>
<span id="cb40-15">retriever <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RagRetriever.from_pretrained(</span>
<span id="cb40-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/rag-sequence-nq"</span>, index_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"exact"</span>, use_dummy_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb40-17">)</span>
<span id="cb40-18">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RagSequenceForGeneration.from_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/rag-sequence-nq"</span>, retriever<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>retriever)</span>
<span id="cb40-19"></span>
<span id="cb40-20"></span>
<span id="cb40-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_answer(query):</span>
<span id="cb40-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 쿼리 인코딩</span></span>
<span id="cb40-23">    input_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> question_tokenizer(query, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>]</span>
<span id="cb40-24">    question_hidden_states <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> question_encoder(input_ids)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb40-25"></span>
<span id="cb40-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 관련 문서 검색</span></span>
<span id="cb40-27">    retriever_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> retriever(input_ids, question_hidden_states, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)</span>
<span id="cb40-28"></span>
<span id="cb40-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 답변 생성</span></span>
<span id="cb40-30">    input_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> retriever_output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>]</span>
<span id="cb40-31">    attention_mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> retriever_output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"attention_mask"</span>]</span>
<span id="cb40-32">    output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(input_ids<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_ids, attention_mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>attention_mask)</span>
<span id="cb40-33"></span>
<span id="cb40-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 생성된 답변 디코딩 및 반환</span></span>
<span id="cb40-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> generator_tokenizer.decode(output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], skip_special_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb40-36"></span>
<span id="cb40-37"></span>
<span id="cb40-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용 예시</span></span>
<span id="cb40-39">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"프랑스의 수도는 어디인가요?"</span></span>
<span id="cb40-40">answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_answer(query)</span>
<span id="cb40-41"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"질문: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb40-42"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"답변: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>answer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</div>
</section>
</section>
<section id="멀티모달-llm" class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="멀티모달-llm"><span class="header-section-number">2.5</span> 멀티모달 LLM</h2>
<p>대규모 언어 모델(LLM)에서는 멀티모달 입력을 받아들이고 이를 바탕으로 추론하는 능력은 이전에는 접근하기 어려웠던 새로운 가능성을 열어줄 수 있습니다. 여기에서는 멀티모달 기능을 갖춘 여러 LLM을 살펴보고 실제 사용 사례로 어떤 의미를 갖는지 알아볼 것입니다.</p>
<section id="clip텍스트와-이미지-연결" class="level3" data-number="2.5.1">
<h3 data-number="2.5.1" class="anchored" data-anchor-id="clip텍스트와-이미지-연결"><span class="header-section-number">2.5.1</span> CLIP(텍스트와 이미지 연결)</h3>
<p>CLIP은 이미지와 텍스트 모두의 임베딩을 계산할 수 있는 임베딩 모델입니다. CLIP은 컴퓨터 비전과 자연어 처리의 경계를 허물고 두 영역을 통합하는 강력한 도구로 자리잡고 있습니다. 이를 통해 AI 시스템은 인간의 의사소통 방식에 더 가까워지고 더욱 자연스럽고 직관적인 상호작용이 가능해집니다. CLIP의 주요 특징은 다음과 같습니다:</p>
<ol type="1">
<li><strong>통합된 표현 공간</strong>: 이미지와 텍스트를 동일한 벡터 공간에 표현하여 직접적인 비교가 가능합니다.</li>
<li><strong>크로스모달 학습</strong>: 이미지와 텍스트 사이의 관계를 학습하여 더 풍부한 이해를 가능하게 합니다.</li>
<li><strong>유연한 응용</strong>: 이미지 검색, 이미지 캡셔닝, 시각적 질의응답 등 다양한 작업에 활용될 수 있습니다.</li>
<li><strong>제로샷 학습 능력</strong>: 특정 작업에 대한 추가 학습 없이도 새로운 개념을 인식할 수 있습니다.</li>
</ol>
<div id="99779707-b686-4c95-8097-a873a54b9772" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> urllib.request <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urlopen</span>
<span id="cb41-2"></span>
<span id="cb41-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb41-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb41-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb41-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb41-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> CLIPModel, CLIPProcessor, CLIPTokenizerFast</span>
<span id="cb41-8"></span>
<span id="cb41-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 불러오기</span></span>
<span id="cb41-10">image_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/HandsOnLLM/Hands-On-Large-Language-Models/main/chapter09/images/puppy.png"</span></span>
<span id="cb41-11">image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(urlopen(image_url)).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RGB"</span>)</span>
<span id="cb41-12">caption <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A ppuppy playing in the snow"</span></span>
<span id="cb41-13">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openai/clip-vit-base-patch32"</span></span>
<span id="cb41-14"></span>
<span id="cb41-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 전처리를 위한 토크나이저 로드</span></span>
<span id="cb41-16">clip_tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CLIPTokenizerFast.from_pretrained(model_id)</span>
<span id="cb41-17"></span>
<span id="cb41-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 전처리를 위한 프로세서 로드</span></span>
<span id="cb41-19">clip_processor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CLIPProcessor.from_pretrained(model_id)</span>
<span id="cb41-20"></span>
<span id="cb41-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 및 이미지 임베딩 생성을 위한 주 모델</span></span>
<span id="cb41-22">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CLIPModel.from_pretrained(model_id)</span>
<span id="cb41-23"></span>
<span id="cb41-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 입력 토큰화</span></span>
<span id="cb41-25">inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clip_tokenizer(caption, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)</span>
<span id="cb41-26"></span>
<span id="cb41-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 임베딩 생성</span></span>
<span id="cb41-28">text_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.get_text_features(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>inputs)</span>
<span id="cb41-29"></span>
<span id="cb41-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 전처리</span></span>
<span id="cb41-31">processed_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clip_processor(text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, images<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>image, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pixel_values"</span>]</span>
<span id="cb41-32"></span>
<span id="cb41-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 임베딩 생성</span></span>
<span id="cb41-34">image_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.get_image_features(processed_image)</span>
<span id="cb41-35"></span>
<span id="cb41-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화를 위한 이미지 준비</span></span>
<span id="cb41-37">processed_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> processed_image.squeeze(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb41-38">processed_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> processed_img.permute(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>torch.arange(processed_img.ndim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb41-39">processed_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.einsum(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ijk-&gt;jik"</span>, processed_img.numpy())</span>
<span id="cb41-40"></span>
<span id="cb41-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원본 이미지와 처리된 이미지 시각화</span></span>
<span id="cb41-42">fig, (ax1, ax2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb41-43">ax1.imshow(image)</span>
<span id="cb41-44">ax1.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original Image"</span>)</span>
<span id="cb41-45">ax1.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb41-46">ax2.imshow(processed_img)</span>
<span id="cb41-47">ax2.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Processed Image"</span>)</span>
<span id="cb41-48">ax2.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb41-49">plt.show()</span>
<span id="cb41-50"></span>
<span id="cb41-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 임베딩 정규화</span></span>
<span id="cb41-52">text_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> text_embedding.norm(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, keepdim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb41-53">image_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> image_embedding.norm(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, keepdim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb41-54"></span>
<span id="cb41-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 유사도 계산</span></span>
<span id="cb41-56">text_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text_embedding.detach().cpu().numpy()</span>
<span id="cb41-57">image_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image_embedding.detach().cpu().numpy()</span>
<span id="cb41-58">score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span> image_embedding.T</span>
<span id="cb41-59"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"유사도 점수: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>score<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>item()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-1.7922626..2.145897].</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_HansOnLLM_files/figure-html/cell-27-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM_files/figure-html/cell-27-output-2.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>유사도 점수: 0.3006</code></pre>
</div>
</div>
</section>
<section id="blip-2양식-간-격차-해소" class="level3" data-number="2.5.2">
<h3 data-number="2.5.2" class="anchored" data-anchor-id="blip-2양식-간-격차-해소"><span class="header-section-number">2.5.2</span> BLIP-2(양식 간 격차 해소)</h3>
<p>처음부터 멀티모달 언어 모델을 만드는 것은 엄청난 컴퓨팅 파워와 데이터를 필요로 합니다. 이러한 모델을 만들려면 수십억 개의 이미지, 텍스트, 그리고 이미지-텍스트 쌍을 사용해야 합니다. 이는 쉽게 실현 가능한 일이 아닙니다. BLIP-2는 이러한 어려움을 해결하기 위해 새로운 접근 방식을 취합니다. 처음부터 아키텍처를 구축하는 대신, 사전 학습된 이미지 인코더와 사전 학습된 LLM을 연결하는 ’쿼리 트랜스포머(Q-Former)’라는 다리를 구축하여 시각-언어 간의 격차를 해소합니다. 이 방식의 주요 장점은 다음과 같습니다:</p>
<ol type="1">
<li><strong>효율적인 학습</strong>: BLIP-2는 이미지 인코더와 LLM을 처음부터 학습할 필요 없이 연결 다리만 학습하면 됩니다.</li>
<li><strong>기존 기술 활용</strong>: 이미 존재하는 기술과 모델을 최대한 활용하여 효율성을 높입니다.</li>
<li><strong>유연성</strong>: 다양한 사전 학습 모델을 조합하여 사용할 수 있어, 특정 작업에 최적화된 구성을 만들 수 있습니다.</li>
<li><strong>성능 향상</strong>: 각 분야에서 최고의 성능을 보이는 모델들을 결합함으로써 전반적인 성능을 크게 향상시킬 수 있습니다.</li>
<li><strong>자원 절약</strong>: 거대한 데이터셋과 컴퓨팅 자원이 필요한 전체 모델 학습을 피할 수 있어 시간과 비용을 절약합니다.</li>
</ol>
<div id="bde289aa-d173-4b78-ba76-ce78ac68a2eb" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> urllib.request <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urlopen</span>
<span id="cb44-2"></span>
<span id="cb44-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb44-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb44-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb44-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb44-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MinMaxScaler</span>
<span id="cb44-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoModelForVisualQuestionAnswering, AutoProcessor</span>
<span id="cb44-9"></span>
<span id="cb44-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 프로세서와 주 모델 로드</span></span>
<span id="cb44-11">blip_processor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoProcessor.from_pretrained(</span>
<span id="cb44-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Salesforce/blip2-opt-2.7b"</span>,</span>
<span id="cb44-13">)</span>
<span id="cb44-14">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForVisualQuestionAnswering.from_pretrained(</span>
<span id="cb44-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Salesforce/blip2-opt-2.7b"</span>, torch_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float16</span>
<span id="cb44-16">)</span>
<span id="cb44-17"></span>
<span id="cb44-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 추론 속도 향상을 위해 모델을 GPU로 이동</span></span>
<span id="cb44-19">device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> torch.cuda.is_available() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cpu"</span></span>
<span id="cb44-20">model.to(device)</span>
<span id="cb44-21"></span>
<span id="cb44-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 슈퍼카 이미지 로드</span></span>
<span id="cb44-23">car_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/HandsOnLLM/Hands-On-Large-Language-Models/main/chapter09/images/car.png"</span></span>
<span id="cb44-24">image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(urlopen(car_path)).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RGB"</span>)</span>
<span id="cb44-25"></span>
<span id="cb44-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 전처리</span></span>
<span id="cb44-27">inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor(image, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>).to(device, torch.float16)</span>
<span id="cb44-28">inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pixel_values"</span>].shape</span>
<span id="cb44-29"></span>
<span id="cb44-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># numpy로 변환하고 (1, 3, 224, 224)에서 (224, 224, 3) 형태로 변경</span></span>
<span id="cb44-31">image_inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pixel_values"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].detach().cpu().numpy()</span>
<span id="cb44-32">image_inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.einsum(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ijk-&gt;kji"</span>, image_inputs)</span>
<span id="cb44-33">image_inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.einsum(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ijk-&gt;jik"</span>, image_inputs)</span>
<span id="cb44-34"></span>
<span id="cb44-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># RGB 값을 나타내기 위해 이미지 입력을 0-255로 스케일링</span></span>
<span id="cb44-36">scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MinMaxScaler(feature_range<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>))</span>
<span id="cb44-37">image_inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.fit_transform(image_inputs.reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, image_inputs.shape[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])).reshape(</span>
<span id="cb44-38">    image_inputs.shape</span>
<span id="cb44-39">)</span>
<span id="cb44-40">image_inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(image_inputs, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.uint8)</span>
<span id="cb44-41"></span>
<span id="cb44-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># numpy 배열을 Image로 변환</span></span>
<span id="cb44-43">Image.fromarray(image_inputs)</span>
<span id="cb44-44"></span>
<span id="cb44-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 전처리</span></span>
<span id="cb44-46">text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Her vocalization was remarkably melodic"</span></span>
<span id="cb44-47">token_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor(image, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>text, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)</span>
<span id="cb44-48">token_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> token_ids.to(device, torch.float16)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb44-49"></span>
<span id="cb44-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 입력 ID를 다시 토큰으로 변환</span></span>
<span id="cb44-51">tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor.tokenizer.convert_ids_to_tokens(token_ids)</span>
<span id="cb44-52"></span>
<span id="cb44-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 공백 토큰을 밑줄로 대체</span></span>
<span id="cb44-54">tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [token.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ġ"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tokens]</span>
<span id="cb44-55"></span>
<span id="cb44-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화</span></span>
<span id="cb44-57">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb44-58"></span>
<span id="cb44-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 표시</span></span>
<span id="cb44-60">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb44-61">plt.imshow(Image.fromarray(image_inputs))</span>
<span id="cb44-62">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Processed Image"</span>)</span>
<span id="cb44-63">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb44-64"></span>
<span id="cb44-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트와 토큰 표시</span></span>
<span id="cb44-66">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb44-67">plt.text(</span>
<span id="cb44-68">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb44-69">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb44-70">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Original Text: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb44-71">    horizontalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb44-72">    fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb44-73">    wrap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb44-74">)</span>
<span id="cb44-75">plt.text(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.65</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tokens:"</span>, horizontalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb44-76">plt.text(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>.join(tokens), horizontalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, wrap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb44-77">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb44-78"></span>
<span id="cb44-79">plt.tight_layout()</span>
<span id="cb44-80">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"a25bfc74cfed4c89b2c3579fc125a259","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_HansOnLLM_files/figure-html/cell-28-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM_files/figure-html/cell-28-output-2.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<section id="사용-사례-1-이미지-캡셔닝" class="level4" data-number="2.5.2.1">
<h4 data-number="2.5.2.1" class="anchored" data-anchor-id="사용-사례-1-이미지-캡셔닝"><span class="header-section-number">2.5.2.1</span> 사용 사례 1: 이미지 캡셔닝</h4>
<p>이미지 캡셔닝은 주어진 이미지의 내용을 설명하는 텍스트를 자동으로 생성하는 작업입니다.</p>
<div id="a25f15e8-2a8d-4ad4-91cb-098e3543ca84" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 로드</span></span>
<span id="cb45-2">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://upload.wikimedia.org/wikipedia/commons/7/70/Rorschach_blot_01.jpg"</span></span>
<span id="cb45-3">image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(urlopen(url)).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RGB"</span>)</span>
<span id="cb45-4"></span>
<span id="cb45-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 캡션 생성</span></span>
<span id="cb45-6">inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor(image, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>).to(device, torch.float16)</span>
<span id="cb45-7">generated_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>inputs, max_new_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb45-8">generated_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor.batch_decode(generated_ids, skip_special_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb45-9">generated_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generated_text[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].strip()</span>
<span id="cb45-10"></span>
<span id="cb45-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지와 생성된 텍스트 시각화</span></span>
<span id="cb45-12">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb45-13">plt.imshow(image)</span>
<span id="cb45-14">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb45-15">plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Generated text: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>generated_text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb45-16">plt.tight_layout()</span>
<span id="cb45-17">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_HansOnLLM_files/figure-html/cell-29-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-5"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM_files/figure-html/cell-29-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="사용-사례-2-시각적-질의응답" class="level4" data-number="2.5.2.2">
<h4 data-number="2.5.2.2" class="anchored" data-anchor-id="사용-사례-2-시각적-질의응답"><span class="header-section-number">2.5.2.2</span> 사용 사례 2: 시각적 질의응답</h4>
<p>시각적 질의응답은 이미지와 관련된 질문에 대해 AI가 답변을 제공하는 기술입니다.</p>
<div id="351719c7-29be-4494-928f-2783627a8890" class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 로드</span></span>
<span id="cb46-2">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://upload.wikimedia.org/wikipedia/commons/7/70/Rorschach_blot_01.jpg"</span></span>
<span id="cb46-3">image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(urlopen(url)).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RGB"</span>)</span>
<span id="cb46-4"></span>
<span id="cb46-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각적 질문 답변</span></span>
<span id="cb46-6">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Question: Write down what you see in this picture. Answer:"</span></span>
<span id="cb46-7"></span>
<span id="cb46-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지와 프롬프트 처리</span></span>
<span id="cb46-9">inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor(image, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prompt, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>).to(device, torch.float16)</span>
<span id="cb46-10"></span>
<span id="cb46-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 생성</span></span>
<span id="cb46-12">generated_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>inputs, max_new_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb46-13">generated_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor.batch_decode(generated_ids, skip_special_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb46-14">generated_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generated_text[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].strip()</span>
<span id="cb46-15"></span>
<span id="cb46-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지와 생성된 텍스트 시각화</span></span>
<span id="cb46-17">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb46-18">plt.imshow(image)</span>
<span id="cb46-19">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb46-20">plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>generated_text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, wrap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb46-21">plt.tight_layout()</span>
<span id="cb46-22">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_HansOnLLM_files/figure-html/cell-30-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-6"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM_files/figure-html/cell-30-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>이러한 다중 모달 텍스트 생성 모델의 핵심 아이디어는 입력 이미지의 시각적 특징을 LLM이 사용할 수 있는 텍스트 임베딩으로 투영하는 것입니다. 이 모델을 이미지 캡셔닝과 다중 모달 채팅 기반 프롬프팅에 사용하는 방법을 보았는데, 여기서는 두 가지 양식을 결합하여 응답을 생성합니다.</p>
</section>
</section>
</section>
</section>
<section id="언어-모델-훈련-및-미세-조정" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 언어 모델 훈련 및 미세 조정</h1>
<section id="텍스트-임베딩-모델-생성" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="텍스트-임베딩-모델-생성"><span class="header-section-number">3.1</span> 텍스트 임베딩 모델 생성</h2>
<p>텍스트 임베딩 모델은 많은 강력한 자연어 처리 애플리케이션의 기초를 이룹니다. 이들은 텍스트 생성 모델과 같은 이미 인상적인 기술들을 더욱 강화하는 기반을 마련합니다. 임베딩 모델을 생성하는 방법은 여러 가지가 있지만, 일반적으로 우리는 대조 학습을 주목합니다. 이는 많은 임베딩 모델의 중요한 측면인데, 이 과정을 통해 모델이 의미론적 표현을 효율적으로 학습할 수 있기 때문입니다.</p>
<section id="대조-생성generating-contrastive-예제" class="level3" data-number="3.1.1">
<h3 data-number="3.1.1" class="anchored" data-anchor-id="대조-생성generating-contrastive-예제"><span class="header-section-number">3.1.1</span> 대조 생성(Generating Contrastive) 예제</h3>
<div id="a8697927-06bb-485b-90b4-f51329ede4a4" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb47-2"></span>
<span id="cb47-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dataset, load_dataset</span>
<span id="cb47-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformer, losses</span>
<span id="cb47-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.evaluation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EmbeddingSimilarityEvaluator</span>
<span id="cb47-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.trainer <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformerTrainer</span>
<span id="cb47-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.training_args <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformerTrainingArguments</span>
<span id="cb47-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb47-9"></span>
<span id="cb47-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GLUE에서 MNLI 데이터셋 로드</span></span>
<span id="cb47-11">mnli <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mnli"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>).select(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50_000</span>))</span>
<span id="cb47-12">mnli <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mnli.remove_columns(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"idx"</span>)</span>
<span id="cb47-13">mnli <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mnli.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb47-14"></span>
<span id="cb47-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 전처리</span></span>
<span id="cb47-16">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anchor"</span>: [], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>: [], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative"</span>: []}</span>
<span id="cb47-17">soft_negatives <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mnli[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hypothesis"</span>]</span>
<span id="cb47-18">random.shuffle(soft_negatives)</span>
<span id="cb47-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row, soft_negative <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tqdm(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(mnli, soft_negatives)):</span>
<span id="cb47-20">    train_dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anchor"</span>].append(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"premise"</span>])</span>
<span id="cb47-21">    train_dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>].append(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hypothesis"</span>])</span>
<span id="cb47-22">    train_dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative"</span>].append(soft_negative)</span>
<span id="cb47-23">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dataset.from_dict(train_dataset)</span>
<span id="cb47-24"></span>
<span id="cb47-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델</span></span>
<span id="cb47-26">embedding_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformer(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bert-base-uncased"</span>)</span>
<span id="cb47-27"></span>
<span id="cb47-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 손실 함수 정의. 소프트맥스 손실에서는 레이블 수를 명시적으로 설정해야 함.</span></span>
<span id="cb47-29">train_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> losses.MultipleNegativesRankingLoss(model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>embedding_model)</span>
<span id="cb47-30"></span>
<span id="cb47-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 평가 함수 및 stsb를 위한 임베딩 유사도 평가기 생성</span></span>
<span id="cb47-32">val_sts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stsb"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation"</span>)</span>
<span id="cb47-33">evaluator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EmbeddingSimilarityEvaluator(</span>
<span id="cb47-34">    sentences1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence1"</span>],</span>
<span id="cb47-35">    sentences2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence2"</span>],</span>
<span id="cb47-36">    scores<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> score <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>]],</span>
<span id="cb47-37">    main_similarity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>,</span>
<span id="cb47-38">)</span>
<span id="cb47-39"></span>
<span id="cb47-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 인자 정의</span></span>
<span id="cb47-41">args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformerTrainingArguments(</span>
<span id="cb47-42">    output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mnrloss_embedding_model"</span>,</span>
<span id="cb47-43">    num_train_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb47-44">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,</span>
<span id="cb47-45">    per_device_eval_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,</span>
<span id="cb47-46">    warmup_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb47-47">    fp16<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb47-48">    eval_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb47-49">    logging_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb47-50">)</span>
<span id="cb47-51"></span>
<span id="cb47-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 임베딩 모델 훈련</span></span>
<span id="cb47-53">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformerTrainer(</span>
<span id="cb47-54">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>embedding_model,</span>
<span id="cb47-55">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args,</span>
<span id="cb47-56">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_dataset,</span>
<span id="cb47-57">    loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_loss,</span>
<span id="cb47-58">    evaluator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>evaluator,</span>
<span id="cb47-59">)</span>
<span id="cb47-60">trainer.train()</span>
<span id="cb47-61"></span>
<span id="cb47-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련된 모델 평가</span></span>
<span id="cb47-63">evaluator(embedding_model)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>16875it [00:00, 42644.51it/s]
No sentence-transformers model found with name bert-base-uncased. Creating a new one with mean pooling.</code></pre>
</div>
<div class="cell-output cell-output-display">

    <div>
      
      <progress value="528" max="528" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [528/528 00:32, Epoch 1/1]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>100</td>
<td>0.346900</td>
</tr>
<tr class="even">
<td>200</td>
<td>0.107100</td>
</tr>
<tr class="odd">
<td>300</td>
<td>0.083700</td>
</tr>
<tr class="even">
<td>400</td>
<td>0.068100</td>
</tr>
<tr class="odd">
<td>500</td>
<td>0.072500</td>
</tr>
</tbody>
</table>
<p>
</p></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"89f595417aa44ce5b88220d312bf2161","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>{'pearson_cosine': np.float64(0.8058287434682441),
 'spearman_cosine': np.float64(0.8093139517546301)}</code></pre>
</div>
</div>
</section>
<section id="임베딩-모델의-미세-조정" class="level3" data-number="3.1.2">
<h3 data-number="3.1.2" class="anchored" data-anchor-id="임베딩-모델의-미세-조정"><span class="header-section-number">3.1.2</span> 임베딩 모델의 미세 조정</h3>
<section id="지도-학습-기반-미세-조정-supervised-fine-tuning-sft" class="level4" data-number="3.1.2.1">
<h4 data-number="3.1.2.1" class="anchored" data-anchor-id="지도-학습-기반-미세-조정-supervised-fine-tuning-sft"><span class="header-section-number">3.1.2.1</span> 지도 학습 기반 미세 조정 (Supervised Fine-Tuning, SFT)</h4>
<p>지도 학습 기반 미세 조정(SFT)은 사전 훈련된 임베딩 모델을 특정 작업이나 도메인에 맞게 조정하는 프로세스입니다. 이 방법은 레이블이 지정된 데이터셋을 사용하여 모델의 성능을 향상시키고 특정 용도에 더 적합하게 만듭니다.</p>
<div id="58ccae0b-854e-463d-b0ee-683ea5a085ac" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb50-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformer, losses</span>
<span id="cb50-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.evaluation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EmbeddingSimilarityEvaluator</span>
<span id="cb50-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.trainer <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformerTrainer</span>
<span id="cb50-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.training_args <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformerTrainingArguments</span>
<span id="cb50-6"></span>
<span id="cb50-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GLUE에서 MNLI 데이터셋 로드</span></span>
<span id="cb50-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 0 = 함의, 1 = 중립, 2 = 모순</span></span>
<span id="cb50-9">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mnli"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>).select(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25_000</span>))</span>
<span id="cb50-10">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_dataset.remove_columns(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"idx"</span>)</span>
<span id="cb50-11"></span>
<span id="cb50-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># stsb를 위한 임베딩 유사도 평가기 생성</span></span>
<span id="cb50-13">val_sts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stsb"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation"</span>)</span>
<span id="cb50-14">evaluator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EmbeddingSimilarityEvaluator(</span>
<span id="cb50-15">    sentences1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence1"</span>],</span>
<span id="cb50-16">    sentences2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence2"</span>],</span>
<span id="cb50-17">    scores<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> score <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>]],</span>
<span id="cb50-18">    main_similarity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>,</span>
<span id="cb50-19">)</span>
<span id="cb50-20"></span>
<span id="cb50-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 정의</span></span>
<span id="cb50-22">embedding_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformer(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence-transformers/all-MiniLM-L6-v2"</span>)</span>
<span id="cb50-23"></span>
<span id="cb50-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 손실 함수</span></span>
<span id="cb50-25">train_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> losses.MultipleNegativesRankingLoss(model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>embedding_model)</span>
<span id="cb50-26"></span>
<span id="cb50-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 인자 정의</span></span>
<span id="cb50-28">args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformerTrainingArguments(</span>
<span id="cb50-29">    output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"finetuned_embedding_model"</span>,</span>
<span id="cb50-30">    num_train_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb50-31">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,</span>
<span id="cb50-32">    per_device_eval_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,</span>
<span id="cb50-33">    warmup_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb50-34">    fp16<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb50-35">    eval_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb50-36">    logging_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb50-37">)</span>
<span id="cb50-38"></span>
<span id="cb50-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 훈련</span></span>
<span id="cb50-40">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformerTrainer(</span>
<span id="cb50-41">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>embedding_model,</span>
<span id="cb50-42">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args,</span>
<span id="cb50-43">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_dataset,</span>
<span id="cb50-44">    loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_loss,</span>
<span id="cb50-45">    evaluator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>evaluator,</span>
<span id="cb50-46">)</span>
<span id="cb50-47">trainer.train()</span>
<span id="cb50-48"></span>
<span id="cb50-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련된 모델 평가</span></span>
<span id="cb50-50">evaluator(embedding_model)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Column 'hypothesis' is at index 1, whereas a column with this name is usually expected at index 0. Note that the column order can be important for some losses, e.g. MultipleNegativesRankingLoss will always consider the first column as the anchor and the second as the positive, regardless of the dataset column names. Consider renaming the columns to match the expected order, e.g.:
dataset = dataset.select_columns(['hypothesis', 'entailment', 'contradiction'])</code></pre>
</div>
<div class="cell-output cell-output-display">

    <div>
      
      <progress value="782" max="782" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [782/782 00:20, Epoch 1/1]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>100</td>
<td>0.127500</td>
</tr>
<tr class="even">
<td>200</td>
<td>0.126100</td>
</tr>
<tr class="odd">
<td>300</td>
<td>0.108700</td>
</tr>
<tr class="even">
<td>400</td>
<td>0.117500</td>
</tr>
<tr class="odd">
<td>500</td>
<td>0.115400</td>
</tr>
<tr class="even">
<td>600</td>
<td>0.105800</td>
</tr>
<tr class="odd">
<td>700</td>
<td>0.106100</td>
</tr>
</tbody>
</table>
<p>
</p></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"6c25295376e34b8a947275510261363d","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>{'pearson_cosine': np.float64(0.850360102427649),
 'spearman_cosine': np.float64(0.8505789375274108)}</code></pre>
</div>
</div>
</section>
</section>
<section id="비지도-학습" class="level3" data-number="3.1.3">
<h3 data-number="3.1.3" class="anchored" data-anchor-id="비지도-학습"><span class="header-section-number">3.1.3</span> 비지도 학습</h3>
<p>현실 세계의 데이터셋에는 우리가 사용할 수 있는 좋은 레이블 세트가 함께 제공되지 않습니다. 대신 미리 정해진 레이블 없이 모델을 훈련시키는 기법을 찾아야 합니다. 이것을 비지도 학습이라 부릅니다. 여기에는 여러 가지 방식이 존재합니다.</p>
<section id="트랜스포머-기반-순차적-디노이징-오토인코더" class="level4" data-number="3.1.3.1">
<h4 data-number="3.1.3.1" class="anchored" data-anchor-id="트랜스포머-기반-순차적-디노이징-오토인코더"><span class="header-section-number">3.1.3.1</span> 트랜스포머 기반 순차적 디노이징 오토인코더</h4>
<p>TSDAE는 비지도 학습으로 임베딩 모델을 만드는 매우 우아한 접근 방식입니다. 이 방법은 우리가 전혀 레이블이 지정된 데이터를 가지고 있지 않다고 가정하며, 인위적으로 레이블을 만들 필요가 없습니다.</p>
<div id="7f90a3ab-331f-4c5e-86a9-a9ec0a090959" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> nltk</span>
<span id="cb53-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dataset, load_dataset</span>
<span id="cb53-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformer, losses, models</span>
<span id="cb53-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DenoisingAutoEncoderDataset</span>
<span id="cb53-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.evaluation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EmbeddingSimilarityEvaluator</span>
<span id="cb53-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.trainer <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformerTrainer</span>
<span id="cb53-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.training_args <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformerTrainingArguments</span>
<span id="cb53-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb53-9"></span>
<span id="cb53-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 추가 토크나이저 다운로드</span></span>
<span id="cb53-11">nltk.download(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"punkt"</span>)</span>
<span id="cb53-12">nltk.download(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"punkt_tab"</span>)</span>
<span id="cb53-13"></span>
<span id="cb53-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 문장의 평면 리스트 생성</span></span>
<span id="cb53-15">mnli <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mnli"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>).select(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25_000</span>))</span>
<span id="cb53-16">flat_sentences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mnli[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"premise"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> mnli[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hypothesis"</span>]</span>
<span id="cb53-17"></span>
<span id="cb53-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 입력 데이터에 노이즈 추가</span></span>
<span id="cb53-19">damaged_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DenoisingAutoEncoderDataset(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(flat_sentences)))</span>
<span id="cb53-20"></span>
<span id="cb53-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋 생성</span></span>
<span id="cb53-22">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"damaged_sentence"</span>: [], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"original_sentence"</span>: []}</span>
<span id="cb53-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> data <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tqdm(damaged_data):</span>
<span id="cb53-24">    train_dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"damaged_sentence"</span>].append(data.texts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb53-25">    train_dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"original_sentence"</span>].append(data.texts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb53-26">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dataset.from_dict(train_dataset)</span>
<span id="cb53-27"></span>
<span id="cb53-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># stsb를 위한 임베딩 유사도 평가기 생성</span></span>
<span id="cb53-29">val_sts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stsb"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation"</span>)</span>
<span id="cb53-30">evaluator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EmbeddingSimilarityEvaluator(</span>
<span id="cb53-31">    sentences1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence1"</span>],</span>
<span id="cb53-32">    sentences2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence2"</span>],</span>
<span id="cb53-33">    scores<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> score <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>]],</span>
<span id="cb53-34">    main_similarity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>,</span>
<span id="cb53-35">)</span>
<span id="cb53-36"></span>
<span id="cb53-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 임베딩 모델 생성</span></span>
<span id="cb53-38">word_embedding_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> models.Transformer(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bert-base-uncased"</span>)</span>
<span id="cb53-39">pooling_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> models.Pooling(word_embedding_model.get_word_embedding_dimension(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cls"</span>)</span>
<span id="cb53-40">embedding_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformer(modules<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[word_embedding_model, pooling_model])</span>
<span id="cb53-41"></span>
<span id="cb53-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 디노이징 오토인코더 손실 사용</span></span>
<span id="cb53-43">train_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> losses.DenoisingAutoEncoderLoss(embedding_model, tie_encoder_decoder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb53-44">train_loss.decoder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_loss.decoder.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>)</span>
<span id="cb53-45"></span>
<span id="cb53-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 인자 정의</span></span>
<span id="cb53-47">args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformerTrainingArguments(</span>
<span id="cb53-48">    output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tsdae_embedding_model"</span>,</span>
<span id="cb53-49">    num_train_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb53-50">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,</span>
<span id="cb53-51">    per_device_eval_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,</span>
<span id="cb53-52">    warmup_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb53-53">    fp16<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb53-54">    eval_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb53-55">    logging_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb53-56">    disable_tqdm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb53-57">)</span>
<span id="cb53-58"></span>
<span id="cb53-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 훈련</span></span>
<span id="cb53-60">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformerTrainer(</span>
<span id="cb53-61">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>embedding_model,</span>
<span id="cb53-62">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args,</span>
<span id="cb53-63">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_dataset,</span>
<span id="cb53-64">    loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_loss,</span>
<span id="cb53-65">    evaluator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>evaluator,</span>
<span id="cb53-66">)</span>
<span id="cb53-67"></span>
<span id="cb53-68">trainer.train()</span>
<span id="cb53-69"></span>
<span id="cb53-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련된 모델 평가</span></span>
<span id="cb53-71">evaluator(embedding_model)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>[nltk_data] Downloading package punkt to /home/fkt/nltk_data...
[nltk_data]   Package punkt is already up-to-date!
[nltk_data] Downloading package punkt_tab to /home/fkt/nltk_data...
[nltk_data]   Package punkt_tab is already up-to-date!
100%|█████████████████████| 48353/48353 [00:03&lt;00:00, 15391.05it/s]</code></pre>
</div>
<div class="cell-output cell-output-display">

    <div>
      
      <progress value="3023" max="3023" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [3023/3023 02:42, Epoch 1/1]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1000</td>
<td>4.637300</td>
</tr>
<tr class="even">
<td>2000</td>
<td>3.883400</td>
</tr>
<tr class="odd">
<td>3000</td>
<td>3.647900</td>
</tr>
</tbody>
</table>
<p>
</p></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"ceec1d3857784c0aac1eb569554d70d8","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>{'pearson_cosine': np.float64(0.7401165281596465),
 'spearman_cosine': np.float64(0.7469963144425136)}</code></pre>
</div>
</div>
<div id="bfce2153-8521-48ed-9bf7-31de741185e0" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># VRAM clean up</span></span>
<span id="cb56-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gc</span>
<span id="cb56-3"></span>
<span id="cb56-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb56-5"></span>
<span id="cb56-6">gc.collect()</span>
<span id="cb56-7">torch.cuda.empty_cache()</span></code></pre></div>
</div>
</section>
</section>
</section>
<section id="분류를-위한-표현-모델-미세-조정" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="분류를-위한-표현-모델-미세-조정"><span class="header-section-number">3.2</span> 분류를 위한 표현 모델 미세 조정</h2>
<p>BERT 모델을 미세 조정하는 여러 방법과 응용 사례를 살펴보겠습니다.</p>
<section id="지도-학습-분류" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="지도-학습-분류"><span class="header-section-number">3.2.1</span> 지도 학습 분류</h3>
<p>사전 학습된 BERT 모델 미세 조정하기위해 앞서 사용했던 것과 동일한 Rotten Tomatoes 데이터셋을 활용하겠습니다. 영어 위키피디아와 미출판 도서들로 구성된 대규모 데이터셋으로 사전 학습된 “bert-base-cased” 모델을 사용할 것입니다.</p>
<div id="51dbc779-00a9-4369-a2c6-88ced843db8d" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb57-2"></span>
<span id="cb57-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> evaluate</span>
<span id="cb57-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb57-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb57-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb57-7">    AutoModelForSequenceClassification,</span>
<span id="cb57-8">    AutoTokenizer,</span>
<span id="cb57-9">    DataCollatorWithPadding,</span>
<span id="cb57-10">    Trainer,</span>
<span id="cb57-11">    TrainingArguments,</span>
<span id="cb57-12">    logging,</span>
<span id="cb57-13">)</span>
<span id="cb57-14"></span>
<span id="cb57-15">logging.set_verbosity_error()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 경고 메시지가 표시되지 않고 오류 메시지만 표시</span></span>
<span id="cb57-16">warnings.filterwarnings(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ignore"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 경고 메시지 끄기</span></span>
<span id="cb57-17"></span>
<span id="cb57-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 준비 및 분할</span></span>
<span id="cb57-19">tomatoes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rotten_tomatoes"</span>)</span>
<span id="cb57-20">train_data, test_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tomatoes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>], tomatoes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>]</span>
<span id="cb57-21"></span>
<span id="cb57-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 및 토크나이저 로드</span></span>
<span id="cb57-23">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bert-base-cased"</span></span>
<span id="cb57-24">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForSequenceClassification.from_pretrained(model_id, num_labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb57-25">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_id)</span>
<span id="cb57-26"></span>
<span id="cb57-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 배치 내 가장 긴 시퀀스에 맞춰 패딩</span></span>
<span id="cb57-28">data_collator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataCollatorWithPadding(tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer)</span>
<span id="cb57-29"></span>
<span id="cb57-30"></span>
<span id="cb57-31"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> preprocess_function(examples):</span>
<span id="cb57-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""입력 데이터 토큰화"""</span></span>
<span id="cb57-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> tokenizer(examples[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>], truncation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb57-34"></span>
<span id="cb57-35"></span>
<span id="cb57-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습/테스트 데이터 토큰화</span></span>
<span id="cb57-37">tokenized_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_data.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(preprocess_function, batched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb57-38">tokenized_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_data.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(preprocess_function, batched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb57-39"></span>
<span id="cb57-40"></span>
<span id="cb57-41"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> compute_metrics(eval_pred):</span>
<span id="cb57-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Calculate F1 score"""</span></span>
<span id="cb57-43">    logits, labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> eval_pred</span>
<span id="cb57-44">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax(logits, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb57-45">    load_f1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> evaluate.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f1"</span>)</span>
<span id="cb57-46">    f1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_f1.compute(predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predictions, references<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>labels)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f1"</span>]</span>
<span id="cb57-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f1"</span>: f1}</span>
<span id="cb57-48"></span>
<span id="cb57-49"></span>
<span id="cb57-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 매개변수 튜닝을 위한 학습 인자</span></span>
<span id="cb57-51">training_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TrainingArguments(</span>
<span id="cb57-52">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model"</span>,</span>
<span id="cb57-53">    learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2e-5</span>,</span>
<span id="cb57-54">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,</span>
<span id="cb57-55">    per_device_eval_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,</span>
<span id="cb57-56">    num_train_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb57-57">    weight_decay<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>,</span>
<span id="cb57-58">    save_strategy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"epoch"</span>,</span>
<span id="cb57-59">    report_to<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb57-60">    disable_tqdm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb57-61">)</span>
<span id="cb57-62"></span>
<span id="cb57-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습 과정을 실행하는 Trainer</span></span>
<span id="cb57-64">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Trainer(</span>
<span id="cb57-65">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb57-66">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>training_args,</span>
<span id="cb57-67">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenized_train,</span>
<span id="cb57-68">    eval_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenized_test,</span>
<span id="cb57-69">    processing_class<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer,</span>
<span id="cb57-70">    data_collator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data_collator,</span>
<span id="cb57-71">    compute_metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>compute_metrics,</span>
<span id="cb57-72">)</span>
<span id="cb57-73"></span>
<span id="cb57-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 학습</span></span>
<span id="cb57-75">trainer.train()</span>
<span id="cb57-76"></span>
<span id="cb57-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 평가</span></span>
<span id="cb57-78">trainer.evaluate()</span></code></pre></div>
<div class="cell-output cell-output-display">

    <div>
      
      <progress value="5340" max="5340" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [5340/5340 02:46, Epoch 10/10]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>500</td>
<td>0.418000</td>
</tr>
<tr class="even">
<td>1000</td>
<td>0.234400</td>
</tr>
<tr class="odd">
<td>1500</td>
<td>0.137900</td>
</tr>
<tr class="even">
<td>2000</td>
<td>0.072600</td>
</tr>
<tr class="odd">
<td>2500</td>
<td>0.038000</td>
</tr>
<tr class="even">
<td>3000</td>
<td>0.032400</td>
</tr>
<tr class="odd">
<td>3500</td>
<td>0.023500</td>
</tr>
<tr class="even">
<td>4000</td>
<td>0.007000</td>
</tr>
<tr class="odd">
<td>4500</td>
<td>0.010100</td>
</tr>
<tr class="even">
<td>5000</td>
<td>0.004100</td>
</tr>
</tbody>
</table>
<p>
</p></div>
<div class="cell-output cell-output-display">

    <div>
      
      <progress value="67" max="67" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [67/67 00:00]
    </div>
    
</div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>{'eval_loss': 1.279144048690796,
 'eval_f1': 0.8457899716177862,
 'eval_runtime': 1.4511,
 'eval_samples_per_second': 734.612,
 'eval_steps_per_second': 46.172,
 'epoch': 10.0}</code></pre>
</div>
</div>
</section>
<section id="적은-샷few-shot-분류" class="level3" data-number="3.2.2">
<h3 data-number="3.2.2" class="anchored" data-anchor-id="적은-샷few-shot-분류"><span class="header-section-number">3.2.2</span> 적은 샷(Few shot) 분류</h3>
<p>적은 샷 분류는 지도 학습 분류의 한 기법으로, 소수의 레이블된 예시만을 바탕으로 분류기가 목표 레이블을 학습하는 방법입니다. 이 기법은 분류 작업이 필요하지만 충분한 레이블된 데이터를 즉시 사용할 수 없을 때 유용합니다. 다시 말해, 이 방법을 통해 각 클래스당 소수의 고품질 데이터 포인트만 레이블링하여 모델을 훈련시킬 수 있습니다.</p>
<section id="setfit-적은-훈련-예시로-효율적인-미세-조정" class="level4" data-number="3.2.2.1">
<h4 data-number="3.2.2.1" class="anchored" data-anchor-id="setfit-적은-훈련-예시로-효율적인-미세-조정"><span class="header-section-number">3.2.2.1</span> SetFit: 적은 훈련 예시로 효율적인 미세 조정</h4>
<p>적은 샷 텍스트 분류를 수행하기 위해 SetFit이라는 효율적인 프레임워크를 사용합니다. 이는 문장 트랜스포머의 구조를 기반으로 하여 훈련 중 업데이트되는 고품질 텍스트 표현을 생성합니다. SetFit은 다음 세 단계로 구성됩니다: 1. 훈련 데이터 샘플링: 클래스 내부와 외부 선택을 기반으로 긍정적(유사한) 및 부정적(다른) 문장 쌍을 생성합니다. 2. 임베딩 미세 조정: 이전에 생성된 훈련 데이터를 바탕으로 사전 학습된 임베딩 모델을 미세 조정합니다. 3. 분류기 훈련: 임베딩 모델 위에 분류 헤드를 만들고 이전에 생성된 훈련 데이터를 사용하여 훈련시킵니다.</p>
</section>
<section id="적은-샷-분류를-위한-미세-조정" class="level4" data-number="3.2.2.2">
<h4 data-number="3.2.2.2" class="anchored" data-anchor-id="적은-샷-분류를-위한-미세-조정"><span class="header-section-number">3.2.2.2</span> 적은 샷 분류를 위한 미세 조정</h4>
<p>이전에는 약 8,500개의 영화 리뷰를 포함한 데이터셋으로 훈련했습니다. 하지만 이번에는 적은 샷 설정이므로 각 클래스당 16개의 예시만 샘플링할 것입니다. 두 개의 클래스가 있으므로 이전에 사용했던 8,500개의 영화 리뷰와 비교해 단 32개의 문서로만 훈련하게 됩니다.</p>
<div id="819c8131-c059-4781-a6ee-342e40e83fa9" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> setfit <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SetFitModel, sample_dataset</span>
<span id="cb59-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> setfit <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Trainer <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> SetFitTrainer</span>
<span id="cb59-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> setfit <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> TrainingArguments <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> SetFitTrainingArguments</span>
<span id="cb59-4"></span>
<span id="cb59-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 클래스당 16개의 예시를 샘플링하여 few-shot 설정을 시뮬레이션합니다</span></span>
<span id="cb59-6">sampled_train_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_dataset(tomatoes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>], num_samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb59-7"></span>
<span id="cb59-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사전 훈련된 SentenceTransformer 모델을 로드합니다</span></span>
<span id="cb59-9">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SetFitModel.from_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence-transformers/all-mpnet-base-v2"</span>)</span>
<span id="cb59-10"></span>
<span id="cb59-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 인자를 정의합니다</span></span>
<span id="cb59-12">args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SetFitTrainingArguments(</span>
<span id="cb59-13">    num_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 대조 학습에 사용할 에폭 수</span></span>
<span id="cb59-14">    num_iterations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 생성할 텍스트 쌍의 수</span></span>
<span id="cb59-15">)</span>
<span id="cb59-16">args.eval_strategy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> args.evaluation_strategy</span>
<span id="cb59-17"></span>
<span id="cb59-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 트레이너를 생성합니다</span></span>
<span id="cb59-19">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SetFitTrainer(</span>
<span id="cb59-20">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb59-21">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args,</span>
<span id="cb59-22">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sampled_train_data,</span>
<span id="cb59-23">    eval_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_data,</span>
<span id="cb59-24">    metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f1"</span>,</span>
<span id="cb59-25">)</span>
<span id="cb59-26"></span>
<span id="cb59-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 루프</span></span>
<span id="cb59-28">trainer.train()</span>
<span id="cb59-29"></span>
<span id="cb59-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 테스트 데이터로 모델을 평가합니다</span></span>
<span id="cb59-31">trainer.evaluate()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>model_head.pkl not found on HuggingFace Hub, initialising classification head with random weights. You should TRAIN this model on a downstream task to use it for predictions and inference.</code></pre>
</div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"24b020d35aee4bc3b68fad0a662517ab","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>***** Running training *****
  Num unique pairs = 1280
  Batch size = 16
  Num epochs = 3</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>{'embedding_loss': 0.3226, 'grad_norm': 1.9545438289642334, 'learning_rate': 8.333333333333333e-07, 'epoch': 0.0125}
{'embedding_loss': 0.1147, 'grad_norm': 0.20879538357257843, 'learning_rate': 1.7592592592592595e-05, 'epoch': 0.625}
{'embedding_loss': 0.0009, 'grad_norm': 0.026085715740919113, 'learning_rate': 1.2962962962962964e-05, 'epoch': 1.25}
{'embedding_loss': 0.0004, 'grad_norm': 0.016781330108642578, 'learning_rate': 8.333333333333334e-06, 'epoch': 1.875}
{'embedding_loss': 0.0003, 'grad_norm': 0.011119991540908813, 'learning_rate': 3.7037037037037037e-06, 'epoch': 2.5}</code></pre>
</div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"3734eb3a74714de8861ac0808da45d83","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>***** Running evaluation *****</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>{'train_runtime': 13.0872, 'train_samples_per_second': 293.417, 'train_steps_per_second': 18.339, 'train_loss': 0.025163489832387618, 'epoch': 3.0}</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>{'f1': 0.8462273161413563}</code></pre>
</div>
</div>
<p>32개의 레이블된 문서만으로 약 0.85의 F1 점수를 얻었습니다. 원본 데이터의 아주 작은 부분집합으로만 모델을 훈련시켰다는 점을 고려하면 이는 매우 인상적인 결과입니다! SetFit은 적은 샷 분류 작업을 수행할 수 있을 뿐만 아니라 레이블이 전혀 없는 경우인 제로샷 분류에도 대응할 수 있습니다.</p>
</section>
</section>
</section>
<section id="생성-모델-미세-조정" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="생성-모델-미세-조정"><span class="header-section-number">3.3</span> 생성 모델 미세 조정</h2>
<section id="지도-학습-미세-조정-sft" class="level3" data-number="3.3.1">
<h3 data-number="3.3.1" class="anchored" data-anchor-id="지도-학습-미세-조정-sft"><span class="header-section-number">3.3.1</span> 지도 학습 미세 조정 (SFT)</h3>
<section id="전체-미세-조정" class="level4" data-number="3.3.1.1">
<h4 data-number="3.3.1.1" class="anchored" data-anchor-id="전체-미세-조정"><span class="header-section-number">3.3.1.1</span> 전체 미세 조정</h4>
<p>가장 일반적인 미세 조정 과정은 전체 미세 조정입니다. LLM을 사전 학습하는 것과 마찬가지로, 이 과정은 목표로 하는 지도 학습 미세 조정(SFT) 작업에 맞춰 모델의 모든 매개변수를 업데이트하는 것을 포함합니다.</p>
</section>
<section id="매개변수-효율적-미세-조정-peft" class="level4" data-number="3.3.1.2">
<h4 data-number="3.3.1.2" class="anchored" data-anchor-id="매개변수-효율적-미세-조정-peft"><span class="header-section-number">3.3.1.2</span> 매개변수 효율적 미세 조정 (PEFT)</h4>
<p>모델의 모든 매개변수를 업데이트하는 것은 성능을 크게 향상시킬 수 있는 잠재력이 있지만 몇 가지 단점이 있습니다. 훈련 비용이 많이 들고, 훈련 시간이 길며, 상당한 저장 공간이 필요합니다. 이러한 문제를 해결하기 위해, 더 높은 계산 효율성으로 사전 학습된 모델을 미세 조정하는 데 중점을 둔 매개변수 효율적 미세 조정(PEFT) 대안에 관심이 모아지고 있습니다.</p>
<section id="어댑터" class="level5" data-number="3.3.1.2.1">
<h5 data-number="3.3.1.2.1" class="anchored" data-anchor-id="어댑터"><span class="header-section-number">3.3.1.2.1</span> 어댑터</h5>
<p>어댑터는 많은 PEFT 기반 기술의 핵심 구성 요소입니다. 이 방법은 트랜스포머 내부에 추가적인 모듈식 구성 요소를 제안하며, 이를 미세 조정하여 모델의 모든 가중치를 미세 조정할 필요 없이 특정 작업에 대한 모델의 성능을 향상시킬 수 있습니다. 이는 많은 시간과 계산 자원을 절약합니다.</p>
</section>
<section id="저순위-적응-lora" class="level5" data-number="3.3.1.2.2">
<h5 data-number="3.3.1.2.2" class="anchored" data-anchor-id="저순위-적응-lora"><span class="header-section-number">3.3.1.2.2</span> 저순위 적응 (LoRA)</h5>
<p>어댑터의 대안으로, 저순위 적응(LoRA)이 소개되었으며 현재 PEFT를 위한 널리 사용되고 효과적인 기술입니다. LoRA는 (어댑터와 마찬가지로) 작은 수의 매개변수만 업데이트하면 되는 기술입니다.</p>
<blockquote class="blockquote">
<p>더 효율적인 훈련을 위한 모델 압축: LoRA를 더욱 효율적으로 만들기 위해 원래 가중치를 더 작은 행렬로 투영하기 전에 모델의 원래 가중치의 메모리 요구 사항을 줄일 수 있습니다. LLM의 가중치는 float64나 float32와 같은 비트 수로 표현될 수 있는 주어진 정밀도를 가진 숫자 값입니다.</p>
</blockquote>
<div id="3058b119-6fe5-4b8b-a352-935ea7bf3d8e" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb66-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb66-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb66-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> peft <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LoraConfig, get_peft_model, prepare_model_for_kbit_training</span>
<span id="cb66-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb66-5">    AutoModelForCausalLM,</span>
<span id="cb66-6">    AutoTokenizer,</span>
<span id="cb66-7">    BitsAndBytesConfig,</span>
<span id="cb66-8">    TrainingArguments,</span>
<span id="cb66-9">)</span>
<span id="cb66-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> trl <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SFTTrainer</span>
<span id="cb66-11"></span>
<span id="cb66-12">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model"</span></span>
<span id="cb66-13"></span>
<span id="cb66-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TinyLlama의 채팅 템플릿을 사용하기 위해 토크나이저 로드</span></span>
<span id="cb66-15">template_tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TinyLlama/TinyLlama-1.1B-Chat-v1.0"</span>)</span>
<span id="cb66-16"></span>
<span id="cb66-17"></span>
<span id="cb66-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> format_prompt(example):</span>
<span id="cb66-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""TinyLLama가 사용하는 &lt;|user|&gt; 템플릿을 사용하여 프롬프트 포맷"""</span></span>
<span id="cb66-20"></span>
<span id="cb66-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 답변 포맷</span></span>
<span id="cb66-22">    chat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>]</span>
<span id="cb66-23">    prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> template_tokenizer.apply_chat_template(chat, tokenize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb66-24"></span>
<span id="cb66-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>: prompt}</span>
<span id="cb66-26"></span>
<span id="cb66-27"></span>
<span id="cb66-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TinyLLama가 사용하는 템플릿을 사용하여 데이터 로드 및 포맷</span></span>
<span id="cb66-29">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb66-30">    load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HuggingFaceH4/ultrachat_200k"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_sft"</span>)</span>
<span id="cb66-31">    .shuffle(seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb66-32">    .select(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3_000</span>))</span>
<span id="cb66-33">)</span>
<span id="cb66-34">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(format_prompt)</span>
<span id="cb66-35"></span>
<span id="cb66-36">model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TinyLlama/TinyLlama-1.1B-intermediate-step-1431k-3T"</span></span>
<span id="cb66-37"></span>
<span id="cb66-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4비트 양자화 설정 - QLoRA의 Q</span></span>
<span id="cb66-39">bnb_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BitsAndBytesConfig(</span>
<span id="cb66-40">    load_in_4bit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4비트 정밀도 모델 로딩 사용</span></span>
<span id="cb66-41">    bnb_4bit_quant_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nf4"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 양자화 유형</span></span>
<span id="cb66-42">    bnb_4bit_compute_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float16"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 계산 데이터 타입</span></span>
<span id="cb66-43">    bnb_4bit_use_double_quant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 중첩 양자화 적용</span></span>
<span id="cb66-44">)</span>
<span id="cb66-45"></span>
<span id="cb66-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPU에서 훈련할 모델 로드</span></span>
<span id="cb66-47">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForCausalLM.from_pretrained(</span>
<span id="cb66-48">    model_name,</span>
<span id="cb66-49">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb66-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 일반 SFT의 경우 이 부분 제외</span></span>
<span id="cb66-51">    quantization_config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bnb_config,</span>
<span id="cb66-52">)</span>
<span id="cb66-53">model.config.use_cache <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb66-54">model.config.pretraining_tp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb66-55"></span>
<span id="cb66-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LLaMA 토크나이저 로드</span></span>
<span id="cb66-57">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_name, trust_remote_code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb66-58">tokenizer.pad_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;PAD&gt;"</span></span>
<span id="cb66-59">tokenizer.padding_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span></span>
<span id="cb66-60">tokenizer.chat_template <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> template_tokenizer.chat_template</span>
<span id="cb66-61"></span>
<span id="cb66-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA 설정 준비</span></span>
<span id="cb66-63">peft_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoraConfig(</span>
<span id="cb66-64">    lora_alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA 스케일링</span></span>
<span id="cb66-65">    lora_dropout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA 레이어의 드롭아웃</span></span>
<span id="cb66-66">    r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 랭크</span></span>
<span id="cb66-67">    bias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb66-68">    task_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CAUSAL_LM"</span>,</span>
<span id="cb66-69">    target_modules<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 대상 레이어</span></span>
<span id="cb66-70">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"k_proj"</span>,</span>
<span id="cb66-71">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gate_proj"</span>,</span>
<span id="cb66-72">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v_proj"</span>,</span>
<span id="cb66-73">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up_proj"</span>,</span>
<span id="cb66-74">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q_proj"</span>,</span>
<span id="cb66-75">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o_proj"</span>,</span>
<span id="cb66-76">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"down_proj"</span>,</span>
<span id="cb66-77">    ],</span>
<span id="cb66-78">)</span>
<span id="cb66-79"></span>
<span id="cb66-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련을 위한 모델 준비</span></span>
<span id="cb66-81">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare_model_for_kbit_training(model)</span>
<span id="cb66-82">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_peft_model(model, peft_config)</span>
<span id="cb66-83"></span>
<span id="cb66-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 인자</span></span>
<span id="cb66-85">training_arguments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TrainingArguments(</span>
<span id="cb66-86">    output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>output_dir,</span>
<span id="cb66-87">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb66-88">    gradient_accumulation_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb66-89">    optim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"paged_adamw_32bit"</span>,</span>
<span id="cb66-90">    learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2e-4</span>,</span>
<span id="cb66-91">    lr_scheduler_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>,</span>
<span id="cb66-92">    num_train_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb66-93">    logging_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb66-94">    fp16<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb66-95">    gradient_checkpointing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb66-96">    disable_tqdm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb66-97">)</span>
<span id="cb66-98"></span>
<span id="cb66-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 지도 미세조정 매개변수 설정</span></span>
<span id="cb66-100">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SFTTrainer(</span>
<span id="cb66-101">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb66-102">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset,</span>
<span id="cb66-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dataset_text_field="text",</span></span>
<span id="cb66-104">    tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer,</span>
<span id="cb66-105">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>training_arguments,</span>
<span id="cb66-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># max_seq_length=512,</span></span>
<span id="cb66-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 일반 SFT의 경우 이 부분 제외</span></span>
<span id="cb66-108">    peft_config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>peft_config,</span>
<span id="cb66-109">)</span>
<span id="cb66-110"></span>
<span id="cb66-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 훈련</span></span>
<span id="cb66-112">trainer.train()</span>
<span id="cb66-113"></span>
<span id="cb66-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># QLoRA 가중치 저장</span></span>
<span id="cb66-115">trainer.model.save_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model/TinyLlama-1.1B-qlora"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">

    <div>
      
      <progress value="375" max="375" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [375/375 06:35, Epoch 1/1]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>100</td>
<td>5.425600</td>
</tr>
<tr class="even">
<td>200</td>
<td>5.160700</td>
</tr>
<tr class="odd">
<td>300</td>
<td>5.117600</td>
</tr>
</tbody>
</table>
<p>
</p></div>
</div>
<div id="9f5b495b-71c9-4227-a1d9-eb80933cdf94" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb67-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> peft <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoPeftModelForCausalLM</span>
<span id="cb67-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline</span>
<span id="cb67-3"></span>
<span id="cb67-4">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoPeftModelForCausalLM.from_pretrained(</span>
<span id="cb67-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model/TinyLlama-1.1B-qlora"</span>,</span>
<span id="cb67-6">    low_cpu_mem_usage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb67-7">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb67-8">)</span>
<span id="cb67-9"></span>
<span id="cb67-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA와 기본 모델 병합</span></span>
<span id="cb67-11">merged_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.merge_and_unload()</span>
<span id="cb67-12"></span>
<span id="cb67-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 미리 정의된 프롬프트 템플릿 사용</span></span>
<span id="cb67-14">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""&lt;|user|&gt;</span></span>
<span id="cb67-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">독감 예방 접종이 필요한 이유에 대해 간단히 설명해줘.&lt;/s&gt;</span></span>
<span id="cb67-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;|assistant|&gt;</span></span>
<span id="cb67-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb67-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 튜닝된 모델 실행</span></span>
<span id="cb67-19">pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(task<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-generation"</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>merged_model, tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer)</span>
<span id="cb67-20">pipe(prompt)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>'&lt;|user|&gt;\n독감 예방 접종이 필요한 이유에 대해 간단히 설명해줘.&lt;/s&gt;\n&lt;|assistant|&gt;\nThe reason for preventive treatment is to prevent the spread of the disease and to reduce the risk of complications. This is especially important for people with underlying health conditions, such as diabetes or high blood pressure, who are at higher risk of developing complications.'</code></pre>
</div>
</div>
</section>
</section>
</section>
<section id="생성-모델-평가" class="level3" data-number="3.3.2">
<h3 data-number="3.3.2" class="anchored" data-anchor-id="생성-모델-평가"><span class="header-section-number">3.3.2</span> 생성 모델 평가</h3>
<p>생성 모델을 평가하는 것은 상당한 도전 과제입니다.</p>
<section id="단어-수준-지표" class="level4" data-number="3.3.2.1">
<h4 data-number="3.3.2.1" class="anchored" data-anchor-id="단어-수준-지표"><span class="header-section-number">3.3.2.1</span> 단어 수준 지표</h4>
<p>생성 모델을 비교하는 데 흔히 사용되는 지표 범주 중 하나는 단어 수준 평가입니다. 이러한 전통적인 기법들은 참조 데이터셋과 생성된 토큰을 토큰(집합) 수준에서 비교합니다. 일반적인 단어 수준 지표로는 혼란도(perplexity), ROUGE, BLEU, BERTScore 등이 있습니다.</p>
</section>
<section id="벤치마크" class="level4" data-number="3.3.2.2">
<h4 data-number="3.3.2.2" class="anchored" data-anchor-id="벤치마크"><span class="header-section-number">3.3.2.2</span> 벤치마크</h4>
<p>언어 생성 및 이해 작업에 대한 생성 모델을 평가하는 일반적인 방법은 MMLU, GLUE, TruthfulQA, GSM8k, HellaSwag와 같은 잘 알려진 공개 벤치마크를 사용하는 것입니다.</p>
</section>
<section id="리더보드" class="level4" data-number="3.3.2.3">
<h4 data-number="3.3.2.3" class="anchored" data-anchor-id="리더보드"><span class="header-section-number">3.3.2.3</span> 리더보드</h4>
<p>다양한 벤치마크가 존재하기 때문에 어떤 벤치마크가 자신의 모델에 가장 적합한지 선택하기 어려울 수 있습니다. 모델이 공개될 때마다 여러 벤치마크에서 평가되어 전반적인 성능을 보여주는 경우가 많습니다.</p>
<p>이에 따라 여러 벤치마크를 포함하는 리더보드가 개발되었습니다. 일반적인 리더보드로는 Open LLM Leaderboard가 있으며, 현재 HellaSwag, MMLU, TruthfulQA, GSM8k 등 6개의 벤치마크를 포함하고 있습니다.</p>
</section>
</section>
<section id="선호도-튜닝-ppodpo" class="level3" data-number="3.3.3">
<h3 data-number="3.3.3" class="anchored" data-anchor-id="선호도-튜닝-ppodpo"><span class="header-section-number">3.3.3</span> 선호도 튜닝 (PPO/DPO)</h3>
<p>모델이 지시를 따를 수 있게 되었더라도, 다양한 상황에서 우리가 기대하는 대로 행동하도록 최종 훈련 단계를 통해 더욱 개선할 수 있습니다. 예를 들어, “LLM이란 무엇인가요?”라는 질문에 대해 “대규모 언어 모델입니다”라는 간단한 답변보다는 LLM의 내부 구조를 자세히 설명하는 답변을 선호할 수 있습니다. 그렇다면 어떻게 하나의 답변을 다른 답변보다 선호하는 우리의 (인간의) 선호도를 LLM의 출력과 일치시킬 수 있을까요?</p>
<div id="35944231-bb54-4782-8eb3-d92e83987e4d" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb69-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb69-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> peft <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb69-3">    AutoPeftModelForCausalLM,</span>
<span id="cb69-4">    LoraConfig,</span>
<span id="cb69-5">    get_peft_model,</span>
<span id="cb69-6">    prepare_model_for_kbit_training,</span>
<span id="cb69-7">)</span>
<span id="cb69-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoTokenizer, BitsAndBytesConfig, logging</span>
<span id="cb69-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> trl <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DPOConfig, DPOTrainer</span>
<span id="cb69-10"></span>
<span id="cb69-11"></span>
<span id="cb69-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 전처리</span></span>
<span id="cb69-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> format_prompt(example):</span>
<span id="cb69-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""TinyLLama가 사용하는 &lt;|user|&gt; 템플릿을 사용하여 프롬프트 포맷"""</span></span>
<span id="cb69-15">    system <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;|system|&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb69-16">    prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;|user|&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;|assistant|&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb69-17">    chosen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chosen"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb69-18">    rejected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rejected"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb69-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {</span>
<span id="cb69-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prompt"</span>: system <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> prompt,</span>
<span id="cb69-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chosen"</span>: chosen,</span>
<span id="cb69-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rejected"</span>: rejected,</span>
<span id="cb69-23">    }</span>
<span id="cb69-24"></span>
<span id="cb69-25"></span>
<span id="cb69-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋에 포맷 적용 및 비교적 짧은 답변 선택</span></span>
<span id="cb69-27">dpo_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"argilla/distilabel-intel-orca-dpo-pairs"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>)</span>
<span id="cb69-28">dpo_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dpo_dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb69-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> r: r[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"status"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tie"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> r[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chosen_score"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> r[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in_gsm8k_train"</span>]</span>
<span id="cb69-30">)</span>
<span id="cb69-31">dpo_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dpo_dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(format_prompt, remove_columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dpo_dataset.column_names)</span>
<span id="cb69-32"></span>
<span id="cb69-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 양자화</span></span>
<span id="cb69-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4비트 양자화 설정 - QLoRA의 Q</span></span>
<span id="cb69-35">bnb_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BitsAndBytesConfig(</span>
<span id="cb69-36">    load_in_4bit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4비트 정밀도 모델 로딩 사용</span></span>
<span id="cb69-37">    bnb_4bit_quant_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nf4"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 양자화 타입</span></span>
<span id="cb69-38">    bnb_4bit_compute_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float16"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 계산 데이터 타입</span></span>
<span id="cb69-39">    bnb_4bit_use_double_quant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 중첩 양자화 적용</span></span>
<span id="cb69-40">)</span>
<span id="cb69-41"></span>
<span id="cb69-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA와 기본 모델 병합</span></span>
<span id="cb69-43">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoPeftModelForCausalLM.from_pretrained(</span>
<span id="cb69-44">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model/TinyLlama-1.1B-qlora"</span>,</span>
<span id="cb69-45">    low_cpu_mem_usage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb69-46">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb69-47">    quantization_config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bnb_config,</span>
<span id="cb69-48">)</span>
<span id="cb69-49">merged_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.merge_and_unload()</span>
<span id="cb69-50"></span>
<span id="cb69-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LLaMA 토크나이저 로드</span></span>
<span id="cb69-52">model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TinyLlama/TinyLlama-1.1B-intermediate-step-1431k-3T"</span></span>
<span id="cb69-53">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_name, trust_remote_code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb69-54">tokenizer.pad_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;PAD&gt;"</span></span>
<span id="cb69-55">tokenizer.padding_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span></span>
<span id="cb69-56"></span>
<span id="cb69-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA 설정 준비</span></span>
<span id="cb69-58">peft_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoraConfig(</span>
<span id="cb69-59">    lora_alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA 스케일링</span></span>
<span id="cb69-60">    lora_dropout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA 레이어의 드롭아웃</span></span>
<span id="cb69-61">    r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 랭크</span></span>
<span id="cb69-62">    bias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb69-63">    task_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CAUSAL_LM"</span>,</span>
<span id="cb69-64">    target_modules<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb69-65">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 대상 레이어</span></span>
<span id="cb69-66">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"k_proj"</span>,</span>
<span id="cb69-67">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gate_proj"</span>,</span>
<span id="cb69-68">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v_proj"</span>,</span>
<span id="cb69-69">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up_proj"</span>,</span>
<span id="cb69-70">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q_proj"</span>,</span>
<span id="cb69-71">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o_proj"</span>,</span>
<span id="cb69-72">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"down_proj"</span>,</span>
<span id="cb69-73">    ],</span>
<span id="cb69-74">)</span>
<span id="cb69-75"></span>
<span id="cb69-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련을 위한 모델 준비</span></span>
<span id="cb69-77">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare_model_for_kbit_training(model)</span>
<span id="cb69-78">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_peft_model(model, peft_config)</span>
<span id="cb69-79"></span>
<span id="cb69-80">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model"</span></span>
<span id="cb69-81"></span>
<span id="cb69-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 인자</span></span>
<span id="cb69-83">training_arguments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DPOConfig(</span>
<span id="cb69-84">    output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>output_dir,</span>
<span id="cb69-85">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb69-86">    gradient_accumulation_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb69-87">    optim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"paged_adamw_32bit"</span>,</span>
<span id="cb69-88">    learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-5</span>,</span>
<span id="cb69-89">    lr_scheduler_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>,</span>
<span id="cb69-90">    max_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>,</span>
<span id="cb69-91">    logging_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb69-92">    fp16<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb69-93">    gradient_checkpointing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb69-94">    warmup_ratio<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb69-95">    beta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># beta 값을 여기에 추가</span></span>
<span id="cb69-96">    max_prompt_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>,</span>
<span id="cb69-97">    max_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>,</span>
<span id="cb69-98">    disable_tqdm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb69-99">)</span>
<span id="cb69-100"></span>
<span id="cb69-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DPO 트레이너 생성</span></span>
<span id="cb69-102">dpo_trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DPOTrainer(</span>
<span id="cb69-103">    model,</span>
<span id="cb69-104">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>training_arguments,</span>
<span id="cb69-105">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dpo_dataset,</span>
<span id="cb69-106">    processing_class<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tokenizer 대신 processing_class 사용</span></span>
<span id="cb69-107">    peft_config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>peft_config,</span>
<span id="cb69-108">)</span>
<span id="cb69-109"></span>
<span id="cb69-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DPO로 모델 미세조정</span></span>
<span id="cb69-111">dpo_trainer.train()</span>
<span id="cb69-112"></span>
<span id="cb69-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 어댑터 저장</span></span>
<span id="cb69-114">dpo_trainer.model.save_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model/TinyLlama-1.1B-dpo-qlora"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">

    <div>
      
      <progress value="500" max="500" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [500/500 10:36, Epoch 0/1]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>100</td>
<td>0.593300</td>
</tr>
<tr class="even">
<td>200</td>
<td>0.485700</td>
</tr>
<tr class="odd">
<td>300</td>
<td>0.520400</td>
</tr>
<tr class="even">
<td>400</td>
<td>0.476500</td>
</tr>
<tr class="odd">
<td>500</td>
<td>0.489200</td>
</tr>
</tbody>
</table>
<p>
</p></div>
</div>
<div id="82150d4a-2f63-4556-9c53-08c22de77930" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb70-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> peft <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PeftModel</span>
<span id="cb70-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline</span>
<span id="cb70-3"></span>
<span id="cb70-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA와 기본 모델 병합</span></span>
<span id="cb70-5">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoPeftModelForCausalLM.from_pretrained(</span>
<span id="cb70-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model/TinyLlama-1.1B-qlora"</span>,</span>
<span id="cb70-7">    low_cpu_mem_usage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb70-8">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb70-9">)</span>
<span id="cb70-10">sft_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.merge_and_unload()</span>
<span id="cb70-11"></span>
<span id="cb70-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DPO LoRA와 SFT 모델 병합</span></span>
<span id="cb70-13">dpo_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PeftModel.from_pretrained(</span>
<span id="cb70-14">    sft_model,</span>
<span id="cb70-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model/TinyLlama-1.1B-dpo-qlora"</span>,</span>
<span id="cb70-16">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb70-17">)</span>
<span id="cb70-18">dpo_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dpo_model.merge_and_unload()</span>
<span id="cb70-19"></span>
<span id="cb70-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 정의된 프롬프트 템플릿 사용</span></span>
<span id="cb70-21">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""&lt;|user|&gt;</span></span>
<span id="cb70-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">독감 예방 접종의 중요성에 대해 설명해.&lt;/s&gt;</span></span>
<span id="cb70-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;|assistant|&gt;</span></span>
<span id="cb70-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb70-25"></span>
<span id="cb70-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 튜닝된 모델 실행</span></span>
<span id="cb70-27">pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(task<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-generation"</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dpo_model, tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer)</span>
<span id="cb70-28">pipe(prompt)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>'&lt;|user|&gt;\n독감 예방 접종의 중요성에 대해 설명해.&lt;/s&gt;\n&lt;|assistant|&gt;\nThe importance of preventive treatment in the prevention of chronic diseases has been recognized for centuries. Chronic diseases such as heart disease, stroke, diabetes, and cancer are the leading causes of death worldwide. Preventive treatment is essential to reduce the risk of developing these diseases and improve the quality of life for patients.\n\nPreventive treatment involves a combination of lifestyle changes, medications, and medical interventions. These interventions aim to reduce the risk of developing chronic diseases by modifying the lifestyle of the patient, such as smoking cessation, physical activity, and dietary modification.\n\nPreventive treatment is often recommended for patients with high risk of developing chronic diseases, such as those with a family history of heart disease, diabetes, or cancer. Patients with these risk factors should be screened regularly for early detection of the disease and receive preventive treatment as soon as possible.\n\nIn addition to preventive treatment, patients with chronic diseases should be monitored regularly to detect any changes in their condition and to ensure that they receive the appropriate treatment. This monitoring can help to identify early signs of disease progression and to prevent complications.\n\nIn conclusion, preventive treatment is essential to reduce the risk of developing chronic diseases and improve the quality of life for patients. By following a healthy lifestyle, making lifestyle changes, and receiving preventive treatment, patients can reduce their risk of developing chronic diseases and improve their overall health.'</code></pre>
</div>
</div>
<p>우리가 살펴본 미세 조정 과정은 두 단계로 이루어집니다. 첫 번째 단계에서는 사전 학습된 LLM에 지시 데이터를 사용하여 지도 학습 미세 조정을 수행했으며, 이를 흔히 지시 튜닝이라고 합니다. 이 결과로 채팅과 유사한 행동을 하고 지시를 정확히 따를 수 있는 모델이 만들어졌습니다.</p>
<p>두 번째 단계에서는 정렬 데이터, 즉 어떤 유형의 답변이 다른 답변보다 선호되는지를 나타내는 데이터로 모델을 더욱 개선했습니다. 선호도 튜닝이라고 불리는 이 과정은 이전에 지시 튜닝된 모델에 인간의 선호도를 주입합니다.</p>
<p>SFT+DPO의 조합을 통한 미세 조절은 훌륭한 방법이지만 두 번의 훈련 루프를 수행하고 두 과정에서 매개변수를 조정해야기 때문에 많은 계산 비용이 발생합니다. 이런 점을 극복하기 위해 새로운 방법들이 나오고 있는데 그 중에 주목할 만한 것은 Odds Ratio Preference Optimization(ORPO)으로 SFT와 DPO를 단일 훈련 과정으로 결합한 것입니다. 이 방법은 두 개의 별도 훈련 루프를 제거해 훈련 과정을 단순화하면서도 QLoRA의 사용을 가능하게 합니다.</p>
</section>
</section>
</section>
<section id="마치며" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 마치며</h1>
<p>이 글을 통해 우리는 LLM이 어떻게 분류, 생성, 언어 표현을 포함한 특정 작업에 사용할 수 있는지, 그리고 사전 학습된 LLM을 미세 조정하는 다양한 방법을 살펴봤습니다. 이런 기술을 익힘으로써 여러분들은 LLM을 활용해 혁신적인 솔루션을 만들 수 있을 것입니다. 마무리하면서 LLM에 대한 우리의 탐구는 아직 시작에 불과하다는 점을 강조하고 싶습니다. 앞으로 더 많은 흥미로운 발전이 있을 것이며 여러분이 이 분야의 진보를 계속 주시하기를 권장합니다.</p>
</section>
<section id="참고-자료" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 참고 자료</h1>
<ul>
<li><a href="https://github.com/HandsOnLLM/Hands-On-Large-Language-Models">Hands on large language model repo</a></li>
<li><a href="https://github.com/rasbt/LLMs-from-scratch">LLM rfrom scratch</a></li>
<li><a href="https://github.com/philschmid/deep-learning-pytorch-huggingface">Deep learning with pytorch</a></li>
</ul>


</section>

 ]]></description>
  <category>LLM</category>
  <category>Machine Learning</category>
  <category>Python</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM.html</guid>
  <pubDate>Sun, 26 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>타이핑으로 소비되는 칼로리</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/typecount.html</link>
  <description><![CDATA[ 




<p>문득 타이핑이 얼마나 많은 칼로리를 소모하는지 궁금해졌습니다. 하루 종일 키보드를 두드리면 꽤 많은 운동이 되지 않을까 하는 생각이 들었고 찾아보니 이미 계산해본 사람이 있었습니다.[^1] 이 글은 사실상 원저자의 글을 번역하고 추가로 코드 작성을 한 것입니다. 타이핑으로 소모되는 칼로리를 알아보기 위해 다음과 같은 단계로 계산해 보았습니다.</p>
<ol type="1">
<li>1분 타이핑에 소모되는 칼로리 계산</li>
<li>하루 동안의 타이핑 횟수 측정</li>
<li>하루 총 소모 칼로리 계산</li>
</ol>
<blockquote class="blockquote">
<p>이 글은 비전문적임으로 재미로만 읽어 주시면 좋겠습니다.</p>
</blockquote>
<section id="분-타이핑-칼로리-소모량-계산" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 1분 타이핑 칼로리 소모량 계산</h1>
<p>타이핑 횟수를 측정하기 위해 아래와 같이 파이썬으로 간단한 GUI 프로그램을 만들었습니다. 혹시 나중에 개선할 지도 몰라서 <a href="https://github.com/partrita/typecount">깃헙저장소</a>에 올려두었습니다.</p>
<section id="파이썬-코드" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="파이썬-코드"><span class="header-section-number">1.1</span> 파이썬 코드</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tkinter <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tk</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pynput.keyboard <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Listener</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> csv</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> date</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> TypingCounter:</span>
<span id="cb1-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, master):</span>
<span id="cb1-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.master <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> master</span>
<span id="cb1-10">        master.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Typing Counter v0.2.0"</span>)</span>
<span id="cb1-11">        master.geometry(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"200x200+100+100"</span>)</span>
<span id="cb1-12"></span>
<span id="cb1-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.is_counting <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.csv_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"typing_count.csv"</span></span>
<span id="cb1-16"></span>
<span id="cb1-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tk.Label(master, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count: 0"</span>)</span>
<span id="cb1-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.label.pack(pady<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.start_button <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tk.Button(master, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Start"</span>, command<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.start_counting)</span>
<span id="cb1-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.start_button.pack()</span>
<span id="cb1-22"></span>
<span id="cb1-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stop_button <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tk.Button(master, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stop"</span>, command<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stop_counting, state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tk.DISABLED)</span>
<span id="cb1-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stop_button.pack()</span>
<span id="cb1-25"></span>
<span id="cb1-26">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.save_button <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tk.Button(master, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Save"</span>, command<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.save_count)</span>
<span id="cb1-27">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.save_button.pack()</span>
<span id="cb1-28"></span>
<span id="cb1-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.quit_button <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tk.Button(master, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quit"</span>, command<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>master.quit)</span>
<span id="cb1-30">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.quit_button.pack()</span>
<span id="cb1-31"></span>
<span id="cb1-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.listener <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb1-33"></span>
<span id="cb1-34">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> start_counting(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-35">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.is_counting <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-36">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.start_button.config(state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tk.DISABLED)</span>
<span id="cb1-37">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stop_button.config(state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tk.NORMAL)</span>
<span id="cb1-38">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.listener <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Listener(on_press<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.on_press)</span>
<span id="cb1-39">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.listener.start()</span>
<span id="cb1-40"></span>
<span id="cb1-41">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> stop_counting(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-42">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.is_counting <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-43">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.start_button.config(state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tk.NORMAL)</span>
<span id="cb1-44">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stop_button.config(state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tk.DISABLED)</span>
<span id="cb1-45">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.listener:</span>
<span id="cb1-46">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.listener.stop()</span>
<span id="cb1-47"></span>
<span id="cb1-48">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_press(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, key):</span>
<span id="cb1-49">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.is_counting:</span>
<span id="cb1-50">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-51">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.label.config(text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Count: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-52"></span>
<span id="cb1-53">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> save_count(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-54">        today <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> date.today().isoformat()</span>
<span id="cb1-55">        data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [today, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.count]</span>
<span id="cb1-56">        </span>
<span id="cb1-57">        file_exists <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.isfile(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.csv_file)</span>
<span id="cb1-58">        </span>
<span id="cb1-59">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.csv_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>, newline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-60">            writer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> csv.writer(f)</span>
<span id="cb1-61">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> file_exists:</span>
<span id="cb1-62">                writer.writerow([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>])</span>
<span id="cb1-63">            writer.writerow(data)</span>
<span id="cb1-64">        </span>
<span id="cb1-65">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Data saved: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-66"></span>
<span id="cb1-67">root <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tk.Tk()</span>
<span id="cb1-68">app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TypingCounter(root)</span>
<span id="cb1-69">root.mainloop()</span></code></pre></div>
<p>이 코드는 다음과 같은 기능을 제공합니다:</p>
<ol type="1">
<li>시작 버튼: 타이핑 카운트를 시작합니다.</li>
<li>종료 버튼: 타이핑 카운트를 중지합니다.</li>
<li>저장 버튼: 현재 날짜와 타이핑 횟수를 CSV 파일에 저장합니다.</li>
<li>종료 버튼: 프로그램을 종료합니다.</li>
</ol>
<p>CSV 파일 (‘typing_count.csv’)은 스크립트가 있는 폴더에 생성되며, 이미 파일이 존재하면 새로운 데이터를 추가합니다. 파일이 없으면 새로 생성하고 헤더를 추가합니다.이 프로그램은 사용자가 시작 버튼을 누를 때부터 타이핑 횟수를 세기 시작하고, 종료 버튼을 누르면 카운팅을 중지합니다. 저장 버튼을 누르면 현재 날짜와 카운트를 CSV 파일에 저장합니다.</p>
</section>
<section id="심박수-기반의-칼로리-소모량-측정-공식" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="심박수-기반의-칼로리-소모량-측정-공식"><span class="header-section-number">1.2</span> 심박수 기반의 칼로리 소모량 측정 공식</h2>
<p>타이핑 중 소모되는 칼로리를 측정하기 위해 심박수를 기준으로 삼았습니다. 일반적으로 사용되는 공식은 다음과 같습니다:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B%EC%86%8C%EB%AA%A8%20%EC%B9%BC%EB%A1%9C%EB%A6%AC%20(kcal/min)%7D%20=%20%5Cfrac%7B%5Ctext%7B%EC%8B%AC%EB%B0%95%EC%88%98%20(bpm)%7D%20%5Ctimes%20%5Ctext%7B%EC%B2%B4%EC%A4%91%20(kg)%7D%20%5Ctimes%200.6309%7D%7B1000%7D%0A"></p>
<ul>
<li><strong>A:</strong> 안정시 심박수에서 소모된 칼로리</li>
<li><strong>B:</strong> 타이핑 중 심박수에 의해 소모되는 칼로리</li>
</ul>
</section>
<section id="apple-watch로-심박수-측정" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="apple-watch로-심박수-측정"><span class="header-section-number">1.3</span> Apple Watch로 심박수 측정</h2>
<ul>
<li>안정시 심박수: <strong>88 bpm</strong></li>
<li>타이핑 중 심박수: <strong>97 bpm</strong></li>
</ul>
</section>
<section id="분-타이핑으로-소모된-칼로리-계산" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="분-타이핑으로-소모된-칼로리-계산"><span class="header-section-number">1.4</span> 1분 타이핑으로 소모된 칼로리 계산</h2>
<p>체중은 65kg으로 가정합니다.</p>
<ul>
<li><p>A: 안정시 심박수에서 소모된 칼로리 <img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B%EC%86%8C%EB%AA%A8%20%EC%B9%BC%EB%A1%9C%EB%A6%AC%7D%20=%20%5Cfrac%7B88%20%5Ctimes%2065%20%5Ctimes%200.6309%7D%7B1000%7D%20%5Capprox%203.6087%20%5Ctext%7B%20Kcal%7D%0A"></p></li>
<li><p>B: 타이핑 중 소모된 칼로리 <img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B%EC%86%8C%EB%AA%A8%20%EC%B9%BC%EB%A1%9C%EB%A6%AC%7D%20=%20%5Cfrac%7B97%20%5Ctimes%2065%20%5Ctimes%200.6309%7D%7B1000%7D%20%5Capprox%203.9778%20%5Ctext%7B%20Kcal%7D%0A"></p></li>
<li><p>AB: 약 1분 동안의 차이는 <img src="https://latex.codecogs.com/png.latex?%0A3.9778%20-%203.6087%20%5Capprox%200.3691%20%5Ctext%7B%20Kcal%7D%0A"></p></li>
<li><p>한 번의 타이핑으로 소모되는 칼로리는 <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B0.3691%7D%7B222%7D%20%5Capprox%200.0016%20%5Ctext%7B%20Kcal%7D%0A"></p></li>
</ul>
<p>결과적으로 한 번의 타이핑으로 약 <strong>0.0016 Kcal</strong>를 소비하는 것으로 나타났습니다.</p>
</section>
</section>
<section id="하루-평균-얼마나-타이핑-하는지-측정" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 하루 평균 얼마나 타이핑 하는지 측정</h1>
<p>앞서 만든 프로그램으로 연말 기간동안 하루의 타이핑량을 측정해서 CSV 파일로 저장했습니다. 아래는 그 결과를 불러와서 시각화하는 코드입니다.</p>
<div id="cell-3" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb2-4"></span>
<span id="cb2-5">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../typing_count.csv"</span>)</span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 날짜 열을 datetime 형식으로 변환</span></span>
<span id="cb2-7">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.to_datetime(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>])</span>
<span id="cb2-8">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Date</th>
<th data-quarto-table-cell-role="th">Count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2024-12-12</td>
<td>14246</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2024-12-13</td>
<td>19144</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2024-12-14</td>
<td>18096</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2024-12-15</td>
<td>24999</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2024-12-16</td>
<td>23141</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<section id="평균-타이핑-시각화" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="평균-타이핑-시각화"><span class="header-section-number">2.1</span> 평균 타이핑 시각화</h2>
<div id="cell-5" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전체 평균값 계산</span></span>
<span id="cb3-2">overall_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>].mean()</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 서브플롯 생성 (비율 조정)</span></span>
<span id="cb3-5">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb3-6">gs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_gridspec(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4:1 비율로 그리드 설정</span></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 첫 번째 플롯: 선 그래프 (4칸 차지)</span></span>
<span id="cb3-9">ax1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(gs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb3-10">ax1.plot(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>], df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>], marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>)</span>
<span id="cb3-11">ax1.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-12">ax1.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-13">ax1.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb3-14">ax1.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb3-15">ax1.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb3-16">fig.autofmt_xdate()</span>
<span id="cb3-17">ax1.set_ylim(bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, count <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>]):</span>
<span id="cb3-19">    ax1.annotate(</span>
<span id="cb3-20">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(count),</span>
<span id="cb3-21">        (df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>][i], count),</span>
<span id="cb3-22">        textcoords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"offset points"</span>,</span>
<span id="cb3-23">        xytext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>),</span>
<span id="cb3-24">        ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb3-25">    )</span>
<span id="cb3-26"></span>
<span id="cb3-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 두 번째 플롯: 스웜 플롯 (1칸 차지)</span></span>
<span id="cb3-28">ax2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(gs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb3-29">sns.swarmplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"All Dates"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df), y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax2)</span>
<span id="cb3-30">ax2.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-31">ax2.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-32">ax2.axhline(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>overall_mean, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Mean: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>overall_mean<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-33">ax2.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-34">ax2.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb3-35">ax2.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb3-36"></span>
<span id="cb3-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 레이아웃 조정 및 출력</span></span>
<span id="cb3-38">plt.tight_layout()</span>
<span id="cb3-39">plt.show()</span>
<span id="cb3-40"></span>
<span id="cb3-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 평균값 출력</span></span>
<span id="cb3-42"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Overall Mean: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>overall_mean<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="typecount_files/figure-html/cell-3-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/typecount_files/figure-html/cell-3-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Overall Mean: 18511.13</code></pre>
</div>
</div>
<p>위 결과를 통해 하루에 타이핑으로 소비되는 총 칼로리를 계산 할 수 있습니다.</p>
</section>
</section>
<section id="하루-타이핑-총-소모-칼로리-계산" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 하루 타이핑 총 소모 칼로리 계산</h1>
<p>하루 평균 타이핑 횟수가 <strong>18,511회</strong> 임으로</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B%EC%9D%BC%EC%9D%BC%20%EC%B9%BC%EB%A1%9C%EB%A6%AC%20%EC%86%8C%EB%B9%84%EB%9F%89%7D%20=%2018,511%20%5Ctimes%200.0016%20%5Capprox%2029.6176%20%5Ctext%7B%20Kcal%7D%0A"></p>
<p>타이핑으로 하루 동안 소모되는 칼로리는 약 <strong>29.6 Kcal</strong>입니다.</p>
<section id="결론" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="결론"><span class="header-section-number">3.1</span> 결론</h2>
<p>29.6 Kcal는 제 예상보다는 높은 수치지만 초콜릿 한 조각에 해당하는 열량이라고 합니다. 만약 운동으로 이 정도의 칼로리를 소모하려면 걷기 10분 정도가 필요하다고 합니다. 역시 앉아서 타이핑만 하지 말고 좀 걸어야 겠습니다.</p>
</section>
</section>
<section id="reference" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Reference</h1>
<p>[^1] : https://qiita.com/mercy-333/items/cf2e0f0b040926184004</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>Visualization</category>
  <category>Health</category>
  <category>Fitness</category>
  <category>Productivity</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/typecount.html</guid>
  <pubDate>Wed, 22 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Calplot: 파이썬으로 만드는 멋진 캘린더 히트맵</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/Python_calplot.html</link>
  <description><![CDATA[ 




<p><a href="https://github.com/tomkwok/calplot">calplot</a>은 파이썬에서 시계열 데이터를 시각적으로 표현할 수 있는 라이브러리입니다. 이 라이브러리를 사용하면 GitHub의 기여도 그래프와 유사한 캘린더 형태의 히트맵을 쉽게 만들 수 있습니다. 이번 포스팅에서는 <a href="https://meteostat.net">Meteostat</a> 라이브러리를 사용하여 날씨 데이터를 가져오고 캘린더 형태로 시각화하는 방법을 소개합니다. 라이브러리를 통해 연도별 데이터를 직관적으로 표현합니다. 특히, 평균 기온과 일교차를 시각화하는 과정을 다룹니다.</p>
<section id="사용한-기술-및-라이브러리" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 사용한 기술 및 라이브러리</h1>
<ul>
<li>Meteostat: 기상 데이터를 편리하게 가져오는 라이브러리로, 특정 지역의 기상 관측소 데이터를 활용합니다.</li>
<li>Calplot: 캘린더 형식으로 데이터를 시각화할 수 있는 강력한 도구입니다.</li>
</ul>
</section>
<section id="초기-설정" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 초기 설정</h1>
<p>필요한 상수와 폰트를 설정해야 합니다. 서울 날씨를 가져오기 위해서는 GPS 좌표를 상수로 제공해야 하고 한글 폰트를 설정해 그래프에서 한글이 깨지지 않도록 합니다. 날씨 데이터는 2020년부터 2024년까지 4년치를 불러오도록 하겠습니다.</p>
<section id="초기-설정-1" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="초기-설정-1"><span class="header-section-number">2.1</span> 초기 설정</h2>
<p>먼저, 필요한 상수와 한글 폰트를 설정합니다. 서울의 GPS 좌표를 기반으로 데이터를 가져오며, 한글 폰트를 설정해 그래프에서 한글이 깨지지 않도록 합니다.</p>
<div id="8a8ba9e4-83e7-4a58-81f1-37da6d9128b6" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> calplot</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> meteostat <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Daily, Point, Stations</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Constants</span></span>
<span id="cb1-9">NAME: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"서울"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 지역 이름</span></span>
<span id="cb1-10">GPS: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">37.5667</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">126.9667</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPS 좌표</span></span>
<span id="cb1-11">START: datetime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조회 시작</span></span>
<span id="cb1-12">END: datetime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2024</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">31</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조회 끝</span></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 한글 폰트 설정</span></span>
<span id="cb1-15">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font.family"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pretendard Variable"</span></span>
<span id="cb1-16">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"axes.unicode_minus"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
</div>
</section>
</section>
<section id="기상-관측소-데이터와서-편집하기" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 기상 관측소 데이터와서 편집하기</h1>
<p><a href="https://github.com/meteostat/meteostat-python">Meteostat</a> 라이브러리를 사용하여 서울 근처 기상 관측소 데이터를 선택합니다. 날씨 데이터를 가져온 뒤에는 일교차(최고 기온(tmax)과 최저 기온(tmin)의 차이), 눈/비 여부(강수량(prcp) 또는 적설량(snow)이 있는 경우 1, 없는 경우 NaN)에 대한 데이터를 열을 추가해줍니다.</p>
<div id="3e6bab5c-d759-471f-a462-b15367967d76" class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">stations: Stations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Stations()</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get nearby weather stations based on latitude and longitude</span></span>
<span id="cb2-4">nearby_stations: Stations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stations.nearby(GPS[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], GPS[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPS 튜플 언패킹</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fetch the first station's data</span></span>
<span id="cb2-7">station_data: pd.DataFrame <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nearby_stations.fetch(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print station information</span></span>
<span id="cb2-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"선택된 관측소: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>station_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>values[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the coordinates of the selected station</span></span>
<span id="cb2-13">location: Point <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Point(station_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latitude"</span>].values[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], station_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"longitude"</span>].values[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fetch weather data</span></span>
<span id="cb2-16">weather_data: pd.DataFrame <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Daily(location, start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>START, end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>END).fetch()</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 일교차 계산</span></span>
<span id="cb2-19">weather_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"diurnal_range"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> weather_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmax"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> weather_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmin"</span>]</span>
<span id="cb2-20"></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 눈이나 비가 온 날은 1로, 오지 않은 날은 NaN으로 표기하는 새로운 열 추가</span></span>
<span id="cb2-22">weather_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rain_or_snow"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> weather_data.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(</span>
<span id="cb2-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> row: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prcp"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"snow"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nan"</span>), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-24">)</span>
<span id="cb2-25"></span>
<span id="cb2-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the last few rows of the data</span></span>
<span id="cb2-27">weather_data.tail()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>선택된 관측소: Seoul</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="32">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">tavg</th>
<th data-quarto-table-cell-role="th">tmin</th>
<th data-quarto-table-cell-role="th">tmax</th>
<th data-quarto-table-cell-role="th">prcp</th>
<th data-quarto-table-cell-role="th">snow</th>
<th data-quarto-table-cell-role="th">wdir</th>
<th data-quarto-table-cell-role="th">wspd</th>
<th data-quarto-table-cell-role="th">wpgt</th>
<th data-quarto-table-cell-role="th">pres</th>
<th data-quarto-table-cell-role="th">tsun</th>
<th data-quarto-table-cell-role="th">diurnal_range</th>
<th data-quarto-table-cell-role="th">rain_or_snow</th>
</tr>
<tr class="even">
<th data-quarto-table-cell-role="th">time</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">2024-12-27</td>
<td>-2.6</td>
<td>-5.5</td>
<td>-0.7</td>
<td>0.0</td>
<td>NaN</td>
<td>283.0</td>
<td>8.7</td>
<td>NaN</td>
<td>1026.6</td>
<td>NaN</td>
<td>4.8</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2024-12-28</td>
<td>-2.1</td>
<td>-6.7</td>
<td>-1.4</td>
<td>0.0</td>
<td>NaN</td>
<td>284.0</td>
<td>8.2</td>
<td>NaN</td>
<td>1024.3</td>
<td>NaN</td>
<td>5.3</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2024-12-29</td>
<td>2.6</td>
<td>-4.2</td>
<td>4.1</td>
<td>0.0</td>
<td>NaN</td>
<td>70.0</td>
<td>5.1</td>
<td>NaN</td>
<td>1024.9</td>
<td>NaN</td>
<td>8.3</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2024-12-30</td>
<td>4.8</td>
<td>1.9</td>
<td>9.3</td>
<td>0.2</td>
<td>NaN</td>
<td>351.0</td>
<td>8.6</td>
<td>NaN</td>
<td>1018.7</td>
<td>NaN</td>
<td>7.4</td>
<td>1.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2024-12-31</td>
<td>0.1</td>
<td>-1.4</td>
<td>4.4</td>
<td>0.0</td>
<td>NaN</td>
<td>281.0</td>
<td>9.9</td>
<td>NaN</td>
<td>1020.6</td>
<td>NaN</td>
<td>5.8</td>
<td>NaN</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="시각화-하기" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 시각화 하기</h1>
<section id="평균-기온-캘린더-플롯" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="평균-기온-캘린더-플롯"><span class="header-section-number">4.1</span> 평균 기온 캘린더 플롯</h2>
<p>calplot을 사용해 연도별 평균 기온을 캘린더 형태로 시각화합니다. 색상 맵은 coolwarm으로 설정해 표현합니다.</p>
<div id="061c73c4" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 시각화</span></span>
<span id="cb4-2">calplot.calplot(</span>
<span id="cb4-3">    weather_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tavg"</span>],</span>
<span id="cb4-4">    cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"coolwarm"</span>,</span>
<span id="cb4-5">    yearascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb4-6">    yearlabel_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>},</span>
<span id="cb4-7">    suptitle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>NAME<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> 평균 기온"</span>,</span>
<span id="cb4-8">    suptitle_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>},</span>
<span id="cb4-9">)</span>
<span id="cb4-10">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="Python_calplot_files/figure-html/cell-4-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/Python_calplot_files/figure-html/cell-4-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>위 시각화 결과를 보면 2021년 1월달의 평균 기온이 유난히 낮았다는 것과 2024년 12월의 평균기온이 상당히 높다는 것을 알 수 있습니다. 그리고 여름이 계속 더워지고 있다는 추세가 보이는 것 같습니다.</p>
</section>
<section id="일교차-캘린더-플롯" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="일교차-캘린더-플롯"><span class="header-section-number">4.2</span> 일교차 캘린더 플롯</h2>
<p>일반적으로 일교차는 봄과 가을이 심하다고 알고있는데 실제로 그런지 확인해보겠습니다. 일교차 데이터를 캘린더 플롯으로 표현하고 색상 맵은 YlGn으로 설정해 녹색 계열로 변화를 나타냅니다.</p>
<div id="e17a18d3" class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 시각화</span></span>
<span id="cb5-2">calplot.calplot(</span>
<span id="cb5-3">    weather_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"diurnal_range"</span>],</span>
<span id="cb5-4">    cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YlGn"</span>,</span>
<span id="cb5-5">    yearascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb5-6">    yearlabel_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>},</span>
<span id="cb5-7">    suptitle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>NAME<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> 일교차"</span>,</span>
<span id="cb5-8">    suptitle_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>},</span>
<span id="cb5-9">)</span>
<span id="cb5-10">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="Python_calplot_files/figure-html/cell-5-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://tomorrow-lab.github.io/posts/ipynb/Python_calplot_files/figure-html/cell-5-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>일교차는 더운 기간(7-9월) 제외하고는 패턴을 찾기 힘들어 보입니다. 그리고 가을 보다 봄(3-4월)이 확실히 일교차가 심한 것을 알 수 있네요.</p>
</section>
</section>
<section id="마치며" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 마치며</h1>
<p>이 글에서는 calplot을 활용해 서울의 날씨 데이터를 효과적으로 시각화하는 방법을 보여줬습니다. calplot은 날씨 데이터 이외에도 건강 및 피트니스 데이터, 생산성 및 업무 관리 데이터, 환경 모니터링 데이터등의 시계열 데이터를 효과적으로 시각해서 데이터의 패턴과 추세를 직관적으로 파악하는 데 큰 도움을 줍니다. 그러면 데이터 분석과 의사 결정에 큰 도움이 될 것입니다. 여러분의 분야에서도 calplot을 활용해 새로운 통찰을 발견해보세요.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>Visualization</category>
  <category>Calplot</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/Python_calplot.html</guid>
  <pubDate>Sat, 18 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>코딩테스트 입문</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Codingtest_beginer.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Codingtest_beginer.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Codingtest_beginer.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>코딩테스트 입문 테스트의 출처는 https://school.programmers.co.kr 입니다.</p>
<section id="day1-사칙연산" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Day1 사칙연산</h1>
<section id="두-수의-합" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="두-수의-합"><span class="header-section-number">1.1</span> 두 수의 합</h2>
<p>정수&nbsp;<code>num1</code> 과&nbsp;<code>num2</code> 가 주어질 때,&nbsp;<code>num1</code> 과&nbsp;<code>num2</code> 의 합을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬" class="level3" data-number="1.1.1">
<h3 data-number="1.1.1" class="anchored" data-anchor-id="파이썬"><span class="header-section-number">1.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb1-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num2</span></code></pre></div>
</section>
<section id="러스트" class="level3" data-number="1.1.2">
<h3 data-number="1.1.2" class="anchored" data-anchor-id="러스트"><span class="header-section-number">1.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-2">    num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num2</span>
<span id="cb2-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The sum of {} and {} is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="두-수의-차" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="두-수의-차"><span class="header-section-number">1.2</span> 두 수의 차</h2>
<p>정수&nbsp;<code>num1</code> 과&nbsp;<code>num2</code> 가 주어질 때,&nbsp;<code>num1</code> 에서&nbsp;<code>num2</code> 를 뺀 값을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-1" class="level3" data-number="1.2.1">
<h3 data-number="1.2.1" class="anchored" data-anchor-id="파이썬-1"><span class="header-section-number">1.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb3-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> num2</span></code></pre></div>
</section>
<section id="러스트-1" class="level3" data-number="1.2.2">
<h3 data-number="1.2.2" class="anchored" data-anchor-id="러스트-1"><span class="header-section-number">1.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-2">    num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> num2</span>
<span id="cb4-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result of {} - {} is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="두-수의-곱" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="두-수의-곱"><span class="header-section-number">1.3</span> 두 수의 곱</h2>
<p>정수&nbsp;<code>num1</code>,&nbsp;<code>num2</code> 가 매개변수 주어집니다.&nbsp;<code>num1</code> 과&nbsp;<code>num2</code> 를 곱한 값을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-2" class="level3" data-number="1.3.1">
<h3 data-number="1.3.1" class="anchored" data-anchor-id="파이썬-2"><span class="header-section-number">1.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb5-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> num2</span></code></pre></div>
</section>
<section id="러스트-2" class="level3" data-number="1.3.2">
<h3 data-number="1.3.2" class="anchored" data-anchor-id="러스트-2"><span class="header-section-number">1.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-2">    num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> num2</span>
<span id="cb6-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result of {} * {} is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="몫-구하기" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="몫-구하기"><span class="header-section-number">1.4</span> 몫 구하기</h2>
<p>정수&nbsp;<code>num1</code>,&nbsp;<code>num2</code> 가 매개변수로 주어질 때,&nbsp;<code>num1</code> 을&nbsp;<code>num2</code> 로 나눈 몫을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-3" class="level3" data-number="1.4.1">
<h3 data-number="1.4.1" class="anchored" data-anchor-id="파이썬-3"><span class="header-section-number">1.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> , num2:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb7-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> num2</span></code></pre></div>
</section>
<section id="러스트-3" class="level3" data-number="1.4.2">
<h3 data-number="1.4.2" class="anchored" data-anchor-id="러스트-3"><span class="header-section-number">1.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-2">    num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> num2</span>
<span id="cb8-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-8"></span>
<span id="cb8-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ensure num2 is not zero to avoid division by zero error</span></span>
<span id="cb8-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-12">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result of {} // {} is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-14">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error: Division by zero is not allowed."</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day2-사칙연산-조건문-배열" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Day2 사칙연산, 조건문, 배열</h1>
<section id="두-수의-나눗셈" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="두-수의-나눗셈"><span class="header-section-number">2.1</span> 두 수의 나눗셈</h2>
<p>정수 num1 과 num2 가 매개변수로 주어질 때, num1 을 num2 로 나눈 값에 1,000 을 곱한 후 정수 부분을 return 하도록 soltuion 함수를 완성해주세요.</p>
<section id="파이썬-4" class="level3" data-number="2.1.1">
<h3 data-number="2.1.1" class="anchored" data-anchor-id="파이썬-4"><span class="header-section-number">2.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1L <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb9-2">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb9-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(answer)</span></code></pre></div>
</section>
<section id="러스트-4" class="level3" data-number="2.1.2">
<h3 data-number="2.1.2" class="anchored" data-anchor-id="러스트-4"><span class="header-section-number">2.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> num2 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-3">    answer <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb10-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Using f64 for floating-point division</span></span>
<span id="cb10-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-9"></span>
<span id="cb10-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-12">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result of ({} / {}) * 1000 is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-14">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error: Division by zero is not allowed."</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="숫자-비교하기" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="숫자-비교하기"><span class="header-section-number">2.2</span> 숫자 비교하기</h2>
<p>정수 num1 과 num2 가 매개변수로 주어집니다. 두 수가 같으면 1 다르면 -1 을 retrun 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-5" class="level3" data-number="2.2.1">
<h3 data-number="2.2.1" class="anchored" data-anchor-id="파이썬-5"><span class="header-section-number">2.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb11-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> num2:</span>
<span id="cb11-3">        answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb11-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span>
<span id="cb11-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb11-6">        answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb11-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-5" class="level3" data-number="2.2.2">
<h3 data-number="2.2.2" class="anchored" data-anchor-id="러스트-5"><span class="header-section-number">2.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-8"></span>
<span id="cb12-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-12"></span>
<span id="cb12-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result of comparing {} and {} is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="분수의-덧셈" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="분수의-덧셈"><span class="header-section-number">2.3</span> 분수의 덧셈</h2>
<p>첫 번째 분수의 분자와 분모를 뜻하는 numer1, denom1, 두 번째 분수의 분자와 분모를 뜻하는 numer2, denom2 가 매개변수로 주어집니다. 두 분수를 더한 값을 기약 분수로 나타냈을 때 분자와 분모를 순서대로 담은 배열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-6" class="level3" data-number="2.3.1">
<h3 data-number="2.3.1" class="anchored" data-anchor-id="파이썬-6"><span class="header-section-number">2.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gcd(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb13-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b:</span>
<span id="cb13-5">        a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> b</span>
<span id="cb13-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a</span>
<span id="cb13-7"></span>
<span id="cb13-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numer1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, denom1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, numer2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, denom2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb13-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fraction addition</span></span>
<span id="cb13-10">    numer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numer1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> denom2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> numer2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> denom1</span>
<span id="cb13-11">    denom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> denom1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> denom2</span>
<span id="cb13-12"></span>
<span id="cb13-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reduce to simplest form</span></span>
<span id="cb13-14">    divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gcd(numer, denom)</span>
<span id="cb13-15">    numer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> divisor</span>
<span id="cb13-16">    denom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> divisor</span>
<span id="cb13-17"></span>
<span id="cb13-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [numer, denom]</span></code></pre></div>
</section>
<section id="러스트-6" class="level3" data-number="2.3.2">
<h3 data-number="2.3.2" class="anchored" data-anchor-id="러스트-6"><span class="header-section-number">2.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb14-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> gcd(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-6">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-7">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-9">    a</span>
<span id="cb14-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-11"></span>
<span id="cb14-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numer1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> denom1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> numer2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> denom2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fraction addition</span></span>
<span id="cb14-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numer1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> denom2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> numer2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> denom1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> denom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> denom1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> denom2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-16"></span>
<span id="cb14-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Reduce to simplest form</span></span>
<span id="cb14-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gcd(numer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> denom)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> reduced_numer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> divisor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> reduced_denom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> denom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> divisor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-21"></span>
<span id="cb14-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[reduced_numer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> reduced_denom]</span>
<span id="cb14-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-24"></span>
<span id="cb14-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numer1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// First numerator</span></span>
<span id="cb14-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> denom1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// First denominator</span></span>
<span id="cb14-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numer2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Second numerator</span></span>
<span id="cb14-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> denom2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Second denominator</span></span>
<span id="cb14-30"></span>
<span id="cb14-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(numer1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> denom1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> numer2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> denom2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-32">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result of adding fractions is {}/{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-33"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-두-배-만들기" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="배열-두-배-만들기"><span class="header-section-number">2.4</span> 배열 두 배 만들기</h2>
<p>정수 배열 numbers 가 매개변수로 주어집니다. numbers 의 각 원소에 두배한 원소를 가진 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-7" class="level3" data-number="2.4.1">
<h3 data-number="2.4.1" class="anchored" data-anchor-id="파이썬-7"><span class="header-section-number">2.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb15-2"></span>
<span id="cb15-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb15-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numbers]</span></code></pre></div>
</section>
<section id="러스트-7" class="level3" data-number="2.4.2">
<h3 data-number="2.4.2" class="anchored" data-anchor-id="러스트-7"><span class="header-section-number">2.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb16-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-2">    numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb16-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-4"></span>
<span id="cb16-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb16-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> doubled_numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-8"></span>
<span id="cb16-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doubled numbers: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> doubled_numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day3-사칙연산-배열-수학" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Day3 사칙연산, 배열, 수학</h1>
<section id="나머지-구하기" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="나머지-구하기"><span class="header-section-number">3.1</span> 나머지 구하기</h2>
<p>정수 num1, num2 가 매개변수로 주어질 때, num1 를 num2 로 나눈 나머지를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-8" class="level3" data-number="3.1.1">
<h3 data-number="3.1.1" class="anchored" data-anchor-id="파이썬-8"><span class="header-section-number">3.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb17-2">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> num2</span>
<span id="cb17-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-8" class="level3" data-number="3.1.2">
<h3 data-number="3.1.2" class="anchored" data-anchor-id="러스트-8"><span class="header-section-number">3.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-3">    answer</span>
<span id="cb18-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-5"></span>
<span id="cb18-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb18-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb18-9"></span>
<span id="cb18-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The remainder of {} % {} is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="중앙값-구하기" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="중앙값-구하기"><span class="header-section-number">3.2</span> 중앙값 구하기</h2>
<p>중앙값은 어떤 주어진 값들을 크기의 순서대로 정렬했을 때 가장 중앙에 위치하는 값을 의미합니다. 예를 들어 1, 2, 7, 10, 11 의 중앙값은 7 입니다. 정수 배열 array 가 매개변수로 주어질 때, 중앙값을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-9" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="파이썬-9"><span class="header-section-number">3.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb19-2"></span>
<span id="cb19-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb19-4">    sorted_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(array)</span>
<span id="cb19-5">    middle_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(array) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb19-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> sorted_array[middle_index]</span></code></pre></div>
</section>
<section id="러스트-9" class="level3" data-number="3.2.2">
<h3 data-number="3.2.2" class="anchored" data-anchor-id="러스트-9"><span class="header-section-number">3.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb20-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> sorted_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clone the input array to sort it</span></span>
<span id="cb20-3">    sorted_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort the array</span></span>
<span id="cb20-4"></span>
<span id="cb20-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> middle_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sorted_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the middle index</span></span>
<span id="cb20-6">    sorted_array[middle_index] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Return the middle element</span></span>
<span id="cb20-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-8"></span>
<span id="cb20-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb20-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> median <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(array)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-12"></span>
<span id="cb20-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The median is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> median)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="최빈값-구하기" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="최빈값-구하기"><span class="header-section-number">3.3</span> 최빈값 구하기</h2>
<p>최빈값은 주어진 값 중에서 가장 자주 나오는 값을 의미합니다. 정수 배열 array 가 매개변수로 주어질 때, 최빈값을 return 하도록 solution 함수를 완성해보세요. 최빈값이 여러 개면 -1 을 return 합니다.</p>
<section id="파이썬-10" class="level3" data-number="3.3.1">
<h3 data-number="3.3.1" class="anchored" data-anchor-id="파이썬-10"><span class="header-section-number">3.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb21-2"></span>
<span id="cb21-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb21-4">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb21-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> array:</span>
<span id="cb21-6">        count[num] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count.get(num, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb21-7"></span>
<span id="cb21-8">    max_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(count.values())</span>
<span id="cb21-9">    mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [num <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num, freq <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> count.items() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> freq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> max_count]</span>
<span id="cb21-10"></span>
<span id="cb21-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> mode[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(mode) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-10" class="level3" data-number="3.3.2">
<h3 data-number="3.3.2" class="anchored" data-anchor-id="러스트-10"><span class="header-section-number">3.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb22-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-2"></span>
<span id="cb22-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashMap::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-5"></span>
<span id="cb22-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count the frequency of each number</span></span>
<span id="cb22-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>entry(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>or_insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-10"></span>
<span id="cb22-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find the maximum frequency</span></span>
<span id="cb22-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>values()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap_or(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-13"></span>
<span id="cb22-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Collect numbers that have the maximum frequency</span></span>
<span id="cb22-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb22-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>freq)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> freq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> max_count)</span>
<span id="cb22-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num)</span>
<span id="cb22-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-19"></span>
<span id="cb22-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Return the mode or -1 if there is no unique mode</span></span>
<span id="cb22-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-22">        mode[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb22-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-24">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb22-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-27"></span>
<span id="cb22-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb22-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(array)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-31"></span>
<span id="cb22-32">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The mode is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-33"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="짝수는-싫어요" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="짝수는-싫어요"><span class="header-section-number">3.4</span> 짝수는 싫어요</h2>
<p>정수 n 이 매개변수로 주어질 때, n 이하의 홀수가 오름차순으로 담긴 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-11" class="level3" data-number="3.4.1">
<h3 data-number="3.4.1" class="anchored" data-anchor-id="파이썬-11"><span class="header-section-number">3.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb23-2"></span>
<span id="cb23-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb23-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]</span></code></pre></div>
</section>
<section id="러스트-11" class="level3" data-number="3.4.2">
<h3 data-number="3.4.2" class="anchored" data-anchor-id="러스트-11"><span class="header-section-number">3.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb24-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-2">    (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate odd numbers from 1 to n</span></span>
<span id="cb24-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-4"></span>
<span id="cb24-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb24-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> odd_numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-8"></span>
<span id="cb24-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Odd numbers from 1 to {}: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> odd_numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day4-수학-배열" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Day4 수학, 배열</h1>
<section id="피자-나눠-먹기-1" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="피자-나눠-먹기-1"><span class="header-section-number">4.1</span> 피자 나눠 먹기 (1)</h2>
<p>머쓱이네 피자가게는 피자를 일곱 조각으로 잘라 줍니다. 피자를 나눠먹을 사람의 수&nbsp;n 이 주어질 때, 모든 사람이 피자를 한 조각 이상 먹기 위해 필요한 피자의 수를 return 하는 solution 함수를 완성해보세요.</p>
<section id="파이썬-12" class="level3" data-number="4.1.1">
<h3 data-number="4.1.1" class="anchored" data-anchor-id="파이썬-12"><span class="header-section-number">4.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb25-2">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb25-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-12" class="level3" data-number="4.1.2">
<h3 data-number="4.1.2" class="anchored" data-anchor-id="러스트-12"><span class="header-section-number">4.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb26-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-2">    (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb26-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb26-4"></span>
<span id="cb26-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb26-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="피자-나눠-먹기-2" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="피자-나눠-먹기-2"><span class="header-section-number">4.2</span> 피자 나눠 먹기 (2)</h2>
<p>머쓱이네 피자가게는 피자를 여섯 조각으로 잘라 줍니다. 피자를 나눠먹을 사람의 수&nbsp;n 이 매개변수로 주어질 때,&nbsp;n 명이 주문한 피자를 남기지 않고 모두 같은 수의 피자 조각을 먹어야 한다면 최소 몇 판을 시켜야 하는지를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-13" class="level3" data-number="4.2.1">
<h3 data-number="4.2.1" class="anchored" data-anchor-id="파이썬-13"><span class="header-section-number">4.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb27-2"></span>
<span id="cb27-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb27-4">    slices_per_pizza <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb27-5">    lcm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>slices_per_pizza) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> math.gcd(n, slices_per_pizza)</span>
<span id="cb27-6">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lcm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> slices_per_pizza</span>
<span id="cb27-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-13" class="level3" data-number="4.2.2">
<h3 data-number="4.2.2" class="anchored" data-anchor-id="러스트-13"><span class="header-section-number">4.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb28-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">num::integer::</span>lcm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-2"></span>
<span id="cb28-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> slices_per_pizza <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> lcm_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lcm(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> slices_per_pizza)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-6">    lcm_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> slices_per_pizza</span>
<span id="cb28-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb28-8"></span>
<span id="cb28-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb28-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="피자-나눠-먹기-3" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="피자-나눠-먹기-3"><span class="header-section-number">4.3</span> 피자 나눠 먹기 (3)</h2>
<p>머쓱이네 피자가게는 피자를 두 조각에서 열 조각까지 원하는 조각 수로 잘라줍니다. 피자 조각 수&nbsp;<code>slice</code> 와 피자를 먹는 사람의 수&nbsp;<code>n</code> 이 매개변수로 주어질 때,&nbsp;<code>n</code> 명의 사람이 최소 한 조각 이상 피자를 먹으려면 최소 몇 판의 피자를 시켜야 하는지를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-14" class="level3" data-number="4.3.1">
<h3 data-number="4.3.1" class="anchored" data-anchor-id="파이썬-14"><span class="header-section-number">4.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">slice</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb29-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 피자 판 수는 n을 slice로 나누고 올림한 값</span></span>
<span id="cb29-3">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">slice</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">slice</span></span>
<span id="cb29-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-14" class="level3" data-number="4.3.2">
<h3 data-number="4.3.2" class="anchored" data-anchor-id="러스트-14"><span class="header-section-number">4.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb30-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(slice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-2">    (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> slice <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> slice</span>
<span id="cb30-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb30-4"></span>
<span id="cb30-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb30-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열의-평균값" class="level2" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="배열의-평균값"><span class="header-section-number">4.4</span> 배열의 평균값</h2>
<p>정수 배열&nbsp;<code>numbers</code> 가 매개변수로 주어집니다.&nbsp;<code>numbers</code> 의 원소의 평균값을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-15" class="level3" data-number="4.4.1">
<h3 data-number="4.4.1" class="anchored" data-anchor-id="파이썬-15"><span class="header-section-number">4.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb31-2"></span>
<span id="cb31-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb31-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># numbers의 합계를 구하고, 이를 numbers의 길이로 나누어 평균을 구합니다.</span></span>
<span id="cb31-5">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(numbers) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(numbers)</span>
<span id="cb31-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-15" class="level3" data-number="4.4.2">
<h3 data-number="4.4.2" class="anchored" data-anchor-id="러스트-15"><span class="header-section-number">4.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb32-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-4">    sum <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> count</span>
<span id="cb32-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-6"></span>
<span id="cb32-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb32-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day5-수학-배열" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Day5 수학, 배열</h1>
<section id="옷가게-할인-받기" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="옷가게-할인-받기"><span class="header-section-number">5.1</span> 옷가게 할인 받기</h2>
<p>머쓱이네 옷가게는 10 만 원 이상 사면 5%, 30 만 원 이상 사면 10%, 50 만 원 이상 사면 20% 를 할인해줍니다. 구매한 옷의 가격&nbsp;<code>price</code> 가 주어질 때, 지불해야 할 금액을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-16" class="level3" data-number="5.1.1">
<h3 data-number="5.1.1" class="anchored" data-anchor-id="파이썬-16"><span class="header-section-number">5.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(price: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb33-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500000</span>:</span>
<span id="cb33-3">        price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span></span>
<span id="cb33-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300000</span>:</span>
<span id="cb33-5">        price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span></span>
<span id="cb33-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span>:</span>
<span id="cb33-7">        price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span></span>
<span id="cb33-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(price)</span></code></pre></div>
</section>
<section id="러스트-16" class="level3" data-number="5.1.2">
<h3 data-number="5.1.2" class="anchored" data-anchor-id="러스트-16"><span class="header-section-number">5.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb34-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(price<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> discounted_price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500000</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-3">        (price <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb34-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300000</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-5">        (price <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb34-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-7">        (price <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb34-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-9">        price</span>
<span id="cb34-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb34-11"></span>
<span id="cb34-12">    discounted_price</span>
<span id="cb34-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-14"></span>
<span id="cb34-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb34-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-18">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="아이스-아메리카노" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="아이스-아메리카노"><span class="header-section-number">5.2</span> 아이스 아메리카노</h2>
<p>머쓱이는 추운 날에도 아이스 아메리카노만 마십니다. 아이스 아메리카노는 한잔에 5,500 원입니다. 머쓱이가 가지고 있는 돈&nbsp;<code>money</code> 가 매개변수로 주어질 때, 머쓱이가 최대로 마실 수 있는 아메리카노의 잔 수와 남는 돈을 순서대로 담은 배열을 return&nbsp;하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-17" class="level3" data-number="5.2.1">
<h3 data-number="5.2.1" class="anchored" data-anchor-id="파이썬-17"><span class="header-section-number">5.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb35-2"></span>
<span id="cb35-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(money: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb35-4">    price_per_americano: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5500</span></span>
<span id="cb35-5">    number_of_americanos: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> money <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> price_per_americano</span>
<span id="cb35-6">    remaining_money: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> money <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> price_per_americano</span>
<span id="cb35-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [number_of_americanos, remaining_money]</span></code></pre></div>
</section>
<section id="러스트-17" class="level3" data-number="5.2.2">
<h3 data-number="5.2.2" class="anchored" data-anchor-id="러스트-17"><span class="header-section-number">5.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb36-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(money<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> price_per_americano<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> number_of_americanos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> money <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> price_per_americano<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> remaining_money<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> money <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> price_per_americano<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[number_of_americanos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> remaining_money]</span>
<span id="cb36-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-7"></span>
<span id="cb36-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb36-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="나이-출력" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="나이-출력"><span class="header-section-number">5.3</span> 나이 출력</h2>
<p>머쓱이는 선생님이 몇 년도에 태어났는지 궁금해졌습니다. 2022 년 기준 선생님의 나이&nbsp;<code>age</code> 가 주어질 때, 선생님의 출생 연도를 return 하는 solution 함수를 완성해주세요</p>
<section id="파이썬-18" class="level3" data-number="5.3.1">
<h3 data-number="5.3.1" class="anchored" data-anchor-id="파이썬-18"><span class="header-section-number">5.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(age: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb37-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-18" class="level3" data-number="5.3.2">
<h3 data-number="5.3.2" class="anchored" data-anchor-id="러스트-18"><span class="header-section-number">5.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb38-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(age<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-2">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb38-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-4"></span>
<span id="cb38-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb38-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-뒤집기" class="level2" data-number="5.4">
<h2 data-number="5.4" class="anchored" data-anchor-id="배열-뒤집기"><span class="header-section-number">5.4</span> 배열 뒤집기</h2>
<p>정수가 들어 있는 배열&nbsp;<code>num_list</code> 가 매개변수로 주어집니다.&nbsp;<code>num_list</code> 의 원소의 순서를 거꾸로 뒤집은 배열을 return 하도록 solution 함수를 완성해주세요</p>
<section id="파이썬-19" class="level3" data-number="5.4.1">
<h3 data-number="5.4.1" class="anchored" data-anchor-id="파이썬-19"><span class="header-section-number">5.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb39-2"></span>
<span id="cb39-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb39-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb39-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-19" class="level3" data-number="5.4.2">
<h3 data-number="5.4.2" class="anchored" data-anchor-id="러스트-19"><span class="header-section-number">5.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb40-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-2">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>rev()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb40-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-4"></span>
<span id="cb40-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb40-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day6-문자열-반복문-출력-배열-조건문" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Day6 문자열, 반복문, 출력, 배열, 조건문</h1>
<section id="문자열-뒤집기" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="문자열-뒤집기"><span class="header-section-number">6.1</span> 문자열 뒤집기</h2>
<p>문자열&nbsp;<code>my_string</code> 이 매개변수로 주어집니다.&nbsp;<code>my_string</code> 을 거꾸로 뒤집은 문자열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-20" class="level3" data-number="6.1.1">
<h3 data-number="6.1.1" class="anchored" data-anchor-id="파이썬-20"><span class="header-section-number">6.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb41-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</section>
<section id="러스트-20" class="level3" data-number="6.1.2">
<h3 data-number="6.1.2" class="anchored" data-anchor-id="러스트-20"><span class="header-section-number">6.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb42-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>rev()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb42-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="직각삼각형-출력하기" class="level2" data-number="6.2">
<h2 data-number="6.2" class="anchored" data-anchor-id="직각삼각형-출력하기"><span class="header-section-number">6.2</span> 직각삼각형 출력하기</h2>
<p><code>*</code> 의 높이와 너비를 1 이라고 했을 때, <code>*</code> 을 이용해 직각 이등변 삼각형을 그리려고합니다. 정수 n 이 주어지면 높이와 너비가 n 인 직각 이등변 삼각형을 출력하도록 코드를 작성해보세요.</p>
<section id="파이썬-21" class="level3" data-number="6.2.1">
<h3 data-number="6.2.1" class="anchored" data-anchor-id="파이썬-21"><span class="header-section-number">6.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>())</span>
<span id="cb43-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span></code></pre></div>
</section>
<section id="러스트-21" class="level3" data-number="6.2.2">
<h3 data-number="6.2.2" class="anchored" data-anchor-id="러스트-21"><span class="header-section-number">6.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb44-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::io::</span>stdin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-2"></span>
<span id="cb44-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb44-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-5"></span>
<span id="cb44-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Read input from the user</span></span>
<span id="cb44-7">    stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to read line"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-8"></span>
<span id="cb44-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Parse input to an integer</span></span>
<span id="cb44-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Please enter a valid number"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-11"></span>
<span id="cb44-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate and print the star pattern</span></span>
<span id="cb44-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb44-14">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>repeat(i))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb44-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="짝수-홀수-개수" class="level2" data-number="6.3">
<h2 data-number="6.3" class="anchored" data-anchor-id="짝수-홀수-개수"><span class="header-section-number">6.3</span> 짝수 홀수 개수</h2>
<p>정수가 담긴 리스트&nbsp;<code>num_list</code> 가 주어질 때,&nbsp;<code>num_list</code> 의 원소 중 짝수와 홀수의 개수를 담은 배열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-22" class="level3" data-number="6.3.1">
<h3 data-number="6.3.1" class="anchored" data-anchor-id="파이썬-22"><span class="header-section-number">6.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb45-2"></span>
<span id="cb45-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb45-4">    even_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_list <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb45-5">    odd_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(num_list) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> even_count</span>
<span id="cb45-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [even_count, odd_count]</span></code></pre></div>
</section>
<section id="러스트-22" class="level3" data-number="6.3.2">
<h3 data-number="6.3.2" class="anchored" data-anchor-id="러스트-22"><span class="header-section-number">6.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb46-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb46-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> even_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> odd_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> even_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-4">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[even_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> odd_count]</span>
<span id="cb46-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자-반복-출력하기" class="level2" data-number="6.4">
<h2 data-number="6.4" class="anchored" data-anchor-id="문자-반복-출력하기"><span class="header-section-number">6.4</span> 문자 반복 출력하기</h2>
<p>문자열&nbsp;<code>my_string</code> 과 정수&nbsp;<code>n</code> 이 매개변수로 주어질 때,&nbsp;<code>my_string</code> 에 들어있는 각 문자를&nbsp;<code>n</code> 만큼 반복한 문자열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-23" class="level3" data-number="6.4.1">
<h3 data-number="6.4.1" class="anchored" data-anchor-id="파이썬-23"><span class="header-section-number">6.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb47-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string])</span></code></pre></div>
</section>
<section id="러스트-23" class="level3" data-number="6.4.2">
<h3 data-number="6.4.2" class="anchored" data-anchor-id="러스트-23"><span class="header-section-number">6.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb48-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>repeat(n))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb48-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day7-문자열-조건문-수학-반복문" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Day7 문자열, 조건문, 수학, 반복문</h1>
<section id="특정-문자-제거하기" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="특정-문자-제거하기"><span class="header-section-number">7.1</span> 특정 문자 제거하기</h2>
<p>문자열&nbsp;<code>my_string</code> 과 문자&nbsp;<code>letter</code> 이 매개변수로 주어집니다.&nbsp;<code>my_string</code> 에서&nbsp;<code>letter</code> 를 제거한 문자열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-24" class="level3" data-number="7.1.1">
<h3 data-number="7.1.1" class="anchored" data-anchor-id="파이썬-24"><span class="header-section-number">7.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, letter: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb49-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string.replace(letter, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
</section>
<section id="러스트-24" class="level3" data-number="7.1.2">
<h3 data-number="7.1.2" class="anchored" data-anchor-id="러스트-24"><span class="header-section-number">7.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb50-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> letter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb50-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>replace(letter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb50-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb50-4"></span>
<span id="cb50-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb50-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, World!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-7">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// "Hell, Wrld!" 출력</span></span>
<span id="cb50-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="각도기" class="level2" data-number="7.2">
<h2 data-number="7.2" class="anchored" data-anchor-id="각도기"><span class="header-section-number">7.2</span> 각도기</h2>
<p>각에서 0 도 초과 90 도 미만은 예각, 90 도는 직각, 90 도 초과 180 도 미만은 둔각 180 도는 평각으로 분류합니다. 각&nbsp;<code>angle</code> 이 매개변수로 주어질 때 예각일 때 1, 직각일 때 2, 둔각일 때 3, 평각일 때 4 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-25" class="level3" data-number="7.2.1">
<h3 data-number="7.2.1" class="anchored" data-anchor-id="파이썬-25"><span class="header-section-number">7.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(angle: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb51-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>:</span>
<span id="cb51-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 직각</span></span>
<span id="cb51-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>:</span>
<span id="cb51-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 평각</span></span>
<span id="cb51-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>:</span>
<span id="cb51-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예각</span></span>
<span id="cb51-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>:</span>
<span id="cb51-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 둔각</span></span></code></pre></div>
</section>
<section id="러스트-25" class="level3" data-number="7.2.2">
<h3 data-number="7.2.2" class="anchored" data-anchor-id="러스트-25"><span class="header-section-number">7.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb52-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(angle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-3">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb52-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb52-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> angle) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> (angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-7">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb52-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> angle) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> (angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-9">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb52-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-11">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb52-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb52-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb52-14"></span>
<span id="cb52-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 2 출력</span></span>
<span id="cb52-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 4 출력</span></span>
<span id="cb52-18">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 1 출력</span></span>
<span id="cb52-19">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 3 출력</span></span>
<span id="cb52-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="양꼬치" class="level2" data-number="7.3">
<h2 data-number="7.3" class="anchored" data-anchor-id="양꼬치"><span class="header-section-number">7.3</span> 양꼬치</h2>
<p>머쓱이네 양꼬치 가게는 10 인분을 먹으면 음료수 하나를 서비스로 줍니다. 양꼬치는 1 인분에 12,000 원, 음료수는 2,000 원입니다. 정수&nbsp;<code>n</code> 과&nbsp;<code>k</code> 가 매개변수로 주어졌을 때, 양꼬치&nbsp;<code>n</code> 인분과 음료수&nbsp;<code>k</code> 개를 먹었다면 총얼마를 지불해야 하는지 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-26" class="level3" data-number="7.3.1">
<h3 data-number="7.3.1" class="anchored" data-anchor-id="파이썬-26"><span class="header-section-number">7.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, k:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb53-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 양꼬치 가격 계산</span></span>
<span id="cb53-3">    cost_of_kebabs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12000</span></span>
<span id="cb53-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 음료수 가격 계산</span></span>
<span id="cb53-5">    cost_of_drinks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span></span>
<span id="cb53-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 총 지불 금액 계산</span></span>
<span id="cb53-7">    total_cost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cost_of_kebabs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cost_of_drinks</span>
<span id="cb53-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total_cost</span></code></pre></div>
</section>
<section id="러스트-26" class="level3" data-number="7.3.2">
<h3 data-number="7.3.2" class="anchored" data-anchor-id="러스트-26"><span class="header-section-number">7.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb54-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 양꼬치 가격 계산</span></span>
<span id="cb54-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> cost_of_kebabs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 음료수 가격 계산</span></span>
<span id="cb54-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> cost_of_drinks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 총 지불 금액 계산</span></span>
<span id="cb54-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> total_cost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cost_of_kebabs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cost_of_drinks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-8">    total_cost</span>
<span id="cb54-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-10"></span>
<span id="cb54-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"총 지불 금액: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="짝수의-합" class="level2" data-number="7.4">
<h2 data-number="7.4" class="anchored" data-anchor-id="짝수의-합"><span class="header-section-number">7.4</span> 짝수의 합</h2>
<p>정수&nbsp;<code>n</code> 이 주어질 때,&nbsp;<code>n</code> 이하의 짝수를 모두 더한 값을 return 하도록 solution 함수를 작성해주세요.</p>
<section id="파이썬-27" class="level3" data-number="7.4.1">
<h3 data-number="7.4.1" class="anchored" data-anchor-id="파이썬-27"><span class="header-section-number">7.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb55-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 짝수의 합을 저장할 변수</span></span>
<span id="cb55-3">    total_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb55-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2부터 n까지 짝수만 더함</span></span>
<span id="cb55-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>):</span>
<span id="cb55-6">        total_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> i</span>
<span id="cb55-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total_sum</span></code></pre></div>
</section>
<section id="러스트-27" class="level3" data-number="7.4.2">
<h3 data-number="7.4.2" class="anchored" data-anchor-id="러스트-27"><span class="header-section-number">7.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb56-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 짝수의 합을 저장할 변수</span></span>
<span id="cb56-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> total_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 2부터 n까지 짝수만 더함</span></span>
<span id="cb56-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-6">        total_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb56-8">    total_sum</span>
<span id="cb56-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb56-10"></span>
<span id="cb56-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1부터 10까지 짝수의 합: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day8-배열-구현-수학" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> Day8 배열, 구현, 수학</h1>
<section id="배열-자르기" class="level2" data-number="8.1">
<h2 data-number="8.1" class="anchored" data-anchor-id="배열-자르기"><span class="header-section-number">8.1</span> 배열 자르기</h2>
<p>정수 배열&nbsp;<code>numbers</code> 와 정수&nbsp;<code>num1</code>,&nbsp;<code>num2</code> 가 매개변수로 주어질 때,&nbsp;<code>numbers</code> 의&nbsp;<code>num1</code> 번 째 인덱스부터&nbsp;<code>num2</code> 번째 인덱스까지 자른 정수 배열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-28" class="level3" data-number="8.1.1">
<h3 data-number="8.1.1" class="anchored" data-anchor-id="파이썬-28"><span class="header-section-number">8.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb57-2"></span>
<span id="cb57-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb57-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트 슬라이싱을 사용하여 num1번째 인덱스부터 num2번째 인덱스까지 추출</span></span>
<span id="cb57-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> numbers[num1:num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</section>
<section id="러스트-28" class="level3" data-number="8.1.2">
<h3 data-number="8.1.2" class="anchored" data-anchor-id="러스트-28"><span class="header-section-number">8.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb58-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// num1 인덱스부터 num2+1 인덱스까지의 요소들을 새 벡터로 복사</span></span>
<span id="cb58-3">    numbers[num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>num2]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()</span>
<span id="cb58-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-5"></span>
<span id="cb58-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 출력: [2, 3, 4]</span></span>
<span id="cb58-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="외계행성의-나이" class="level2" data-number="8.2">
<h2 data-number="8.2" class="anchored" data-anchor-id="외계행성의-나이"><span class="header-section-number">8.2</span> 외계행성의 나이</h2>
<p>우주여행을 하던 머쓱이는 엔진 고장으로 PROGRAMMERS-962 행성에 불시착하게 됐습니다. 입국심사에서 나이를 말해야 하는데, PROGRAMMERS-962 행성에서는 나이를 알파벳으로 말하고 있습니다. a 는 0, b 는 1, c 는 2, …, j 는 9 입니다. 예를 들어 23 살은 cd, 51 살은 fb 로 표현합니다. 나이&nbsp;<code>age</code> 가 매개변수로 주어질 때 PROGRAMMER-962 식 나이를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-29" class="level3" data-number="8.2.1">
<h3 data-number="8.2.1" class="anchored" data-anchor-id="파이썬-29"><span class="header-section-number">8.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(age: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb59-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 숫자를 알파벳으로 매핑하는 딕셔너리 생성</span></span>
<span id="cb59-3">    age_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(i): <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">97</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)}</span>
<span id="cb59-4"></span>
<span id="cb59-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># age를 문자열로 변환하고 각 숫자를 해당하는 알파벳으로 변환</span></span>
<span id="cb59-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(age_map[digit] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> digit <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(age))</span></code></pre></div>
</section>
<section id="러스트-29" class="level3" data-number="8.2.2">
<h3 data-number="8.2.2" class="anchored" data-anchor-id="러스트-29"><span class="header-section-number">8.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb60-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(age<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 숫자를 알파벳으로 매핑하는 배열 생성</span></span>
<span id="cb60-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> age_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'f'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'g'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'h'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'i'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'j'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-4"></span>
<span id="cb60-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// age를 문자열로 변환하고 각 숫자를 해당하는 알파벳으로 변환</span></span>
<span id="cb60-6">    age<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb60-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb60-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> age_map[c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_digit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>])</span>
<span id="cb60-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb60-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-11"></span>
<span id="cb60-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 출력: "cd"</span></span>
<span id="cb60-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="진료-순서-정하기" class="level2" data-number="8.3">
<h2 data-number="8.3" class="anchored" data-anchor-id="진료-순서-정하기"><span class="header-section-number">8.3</span> 진료 순서 정하기</h2>
<p>외과의사 머쓱이는 응급실에 온 환자의 응급도를 기준으로 진료 순서를 정하려고 합니다. 정수 배열&nbsp;<code>emergency</code> 가 매개변수로 주어질 때 응급도가 높은 순서대로 진료 순서를 정한 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-30" class="level3" data-number="8.3.1">
<h3 data-number="8.3.1" class="anchored" data-anchor-id="파이썬-30"><span class="header-section-number">8.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb61-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb61-2"></span>
<span id="cb61-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(emergency: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb61-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 응급도와 인덱스를 함께 저장한 리스트 생성</span></span>
<span id="cb61-5">    sorted_emergency <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>([(e, i) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, e <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(emergency)], reverse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb61-6"></span>
<span id="cb61-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 리스트 초기화</span></span>
<span id="cb61-8">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(emergency)</span>
<span id="cb61-9"></span>
<span id="cb61-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 정렬된 리스트를 순회하며 순서 할당</span></span>
<span id="cb61-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> rank, (_, index) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(sorted_emergency, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb61-12">        result[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank</span>
<span id="cb61-13"></span>
<span id="cb61-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-30" class="level3" data-number="8.3.2">
<h3 data-number="8.3.2" class="anchored" data-anchor-id="러스트-30"><span class="header-section-number">8.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb62-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(emergency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb62-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 응급도와 인덱스를 함께 저장한 벡터 생성</span></span>
<span id="cb62-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> sorted_emergency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> emergency</span>
<span id="cb62-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb62-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate()</span>
<span id="cb62-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>e)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i))</span>
<span id="cb62-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-8"></span>
<span id="cb62-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 응급도를 기준으로 내림차순 정렬</span></span>
<span id="cb62-10">    sorted_emergency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_by(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cmp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>a))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-11"></span>
<span id="cb62-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 결과 벡터 초기화</span></span>
<span id="cb62-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> emergency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-14"></span>
<span id="cb62-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 정렬된 벡터를 순회하며 순서 할당</span></span>
<span id="cb62-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (rank<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> index)) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sorted_emergency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb62-17">        result[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb62-19"></span>
<span id="cb62-20">    result</span>
<span id="cb62-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb62-22"></span>
<span id="cb62-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb62-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> emergency <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">76</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(emergency)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-26">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 출력: [3, 1, 2]</span></span>
<span id="cb62-27"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="순서쌍의-개수" class="level2" data-number="8.4">
<h2 data-number="8.4" class="anchored" data-anchor-id="순서쌍의-개수"><span class="header-section-number">8.4</span> 순서쌍의 개수</h2>
<p>순서쌍이란 두 개의 숫자를 순서를 정하여 짝지어 나타낸 쌍으로 (a, b) 로 표기합니다. 자연수&nbsp;<code>n</code> 이 매개변수로 주어질 때 두 숫자의 곱이&nbsp;<code>n</code> 인 자연수 순서쌍의 개수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-31" class="level3" data-number="8.4.1">
<h3 data-number="8.4.1" class="anchored" data-anchor-id="파이썬-31"><span class="header-section-number">8.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb63-2">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb63-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb63-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb63-5">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (i, n//i)</span></span>
<span id="cb63-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> i:</span>
<span id="cb63-7">                count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (n//i, i) if i and n//i are different</span></span>
<span id="cb63-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count</span></code></pre></div>
</section>
<section id="러스트-31" class="level3" data-number="8.4.2">
<h3 data-number="8.4.2" class="anchored" data-anchor-id="러스트-31"><span class="header-section-number">8.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb64-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sqrt_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sqrt() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-4"></span>
<span id="cb64-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>sqrt_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-7">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (i, n/i)</span></span>
<span id="cb64-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-9">                count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (n/i, i) if i and n/i are different</span></span>
<span id="cb64-10">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb64-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb64-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb64-13"></span>
<span id="cb64-14">    count</span>
<span id="cb64-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb64-16"></span>
<span id="cb64-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of factors of {}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 출력: Number of factors of 20: 6</span></span>
<span id="cb64-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day9-수학-문자열-해시-완전탐색-조건문" class="level1" data-number="9">
<h1 data-number="9"><span class="header-section-number">9</span> Day9 수학, 문자열, 해시, 완전탐색, 조건문</h1>
<section id="개미-군단" class="level2" data-number="9.1">
<h2 data-number="9.1" class="anchored" data-anchor-id="개미-군단"><span class="header-section-number">9.1</span> 개미 군단</h2>
<p>개미 군단이 사냥을 나가려고 합니다. 개미군단은 사냥감의 체력에 딱 맞는 병력을 데리고 나가려고 합니다. 장군개미는 5 의 공격력을, 병정개미는 3 의 공격력을 일개미는 1 의 공격력을 가지고 있습니다. 예를 들어 체력 23 의 여치를 사냥하려고 할 때, 일개미 23 마리를 데리고 가도 되지만, 장군개미 네 마리와 병정개미 한 마리를 데리고 간다면 더 적은 병력으로 사냥할 수 있습니다. 사냥감의 체력&nbsp;<code>hp</code> 가 매개변수로 주어질 때, 사냥감의 체력에 딱 맞게 최소한의 병력을 구성하려면 몇 마리의 개미가 필요한지를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-32" class="level3" data-number="9.1.1">
<h3 data-number="9.1.1" class="anchored" data-anchor-id="파이썬-32"><span class="header-section-number">9.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(hp: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb65-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 장군개미의 수를 계산</span></span>
<span id="cb65-3">    general_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb65-4">    hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb65-5"></span>
<span id="cb65-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 병정개미의 수를 계산</span></span>
<span id="cb65-7">    soldier_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb65-8">    hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb65-9"></span>
<span id="cb65-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 일개미의 수를 계산</span></span>
<span id="cb65-11">    worker_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb65-12"></span>
<span id="cb65-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 총 개미 수 반환</span></span>
<span id="cb65-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> general_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> soldier_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> worker_ants</span></code></pre></div>
</section>
<section id="러스트-32" class="level3" data-number="9.1.2">
<h3 data-number="9.1.2" class="anchored" data-anchor-id="러스트-32"><span class="header-section-number">9.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb66-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> hp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb66-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 장군개미의 수를 계산</span></span>
<span id="cb66-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> general_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-4">    hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-5"></span>
<span id="cb66-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 병정개미의 수를 계산</span></span>
<span id="cb66-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> soldier_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-8">    hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-9"></span>
<span id="cb66-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 일개미의 수를 계산</span></span>
<span id="cb66-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> worker_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-12"></span>
<span id="cb66-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 총 개미 수 반환</span></span>
<span id="cb66-14">    general_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> soldier_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> worker_ants</span>
<span id="cb66-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb66-16"></span>
<span id="cb66-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb66-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(hp)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total number of ants needed for {} HP: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> hp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 출력: Total number of ants needed for 23 HP: 5</span></span>
<span id="cb66-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="모스부호-1" class="level2" data-number="9.2">
<h2 data-number="9.2" class="anchored" data-anchor-id="모스부호-1"><span class="header-section-number">9.2</span> 모스부호 (1)</h2>
<p>머쓱이는 친구에게 모스부호를 이용한 편지를 받았습니다. 그냥은 읽을 수 없어 이를 해독하는 프로그램을 만들려고 합니다. 문자열&nbsp;<code>letter</code> 가 매개변수로 주어질 때,&nbsp;<code>letter</code> 를 영어 소문자로 바꾼 문자열을 return 하도록 solution 함수를 완성해보세요. 모스부호는 다음과 같습니다.</p>
<section id="파이썬-33" class="level3" data-number="9.2.1">
<h3 data-number="9.2.1" class="anchored" data-anchor-id="파이썬-33"><span class="header-section-number">9.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb67-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(letter: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb67-2">    morse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb67-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-...'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-.-.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-..'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'..-.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'f'</span>,</span>
<span id="cb67-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'g'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'....'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'h'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'..'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'i'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.---'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'j'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-.-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'k'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.-..'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>,</span>
<span id="cb67-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'m'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'---'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.--.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'p'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--.-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'q'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.-.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>,</span>
<span id="cb67-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'...'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'t'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'..-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'u'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'...-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'v'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.--'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-..-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>,</span>
<span id="cb67-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-.--'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--..'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'z'</span></span>
<span id="cb67-8">    }</span>
<span id="cb67-9"></span>
<span id="cb67-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 공백을 기준으로 모스 부호를 분리</span></span>
<span id="cb67-11">    morse_codes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> letter.split()</span>
<span id="cb67-12"></span>
<span id="cb67-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 모스 부호를 해당하는 알파벳으로 변환</span></span>
<span id="cb67-14">    decoded <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [morse[code] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> code <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> morse_codes]</span>
<span id="cb67-15"></span>
<span id="cb67-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환된 알파벳들을 하나의 문자열로 결합</span></span>
<span id="cb67-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(decoded)</span></code></pre></div>
</section>
<section id="러스트-33" class="level3" data-number="9.2.2">
<h3 data-number="9.2.2" class="anchored" data-anchor-id="러스트-33"><span class="header-section-number">9.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb68-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-2"></span>
<span id="cb68-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(letter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> morse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb68-5">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-..."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-.-."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-.."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"..-."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'f'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-6">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'g'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"...."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'h'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'i'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".---"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'j'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-.-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'k'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".-.."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-7">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'m'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"---"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".--."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'p'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--.-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'q'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".-."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-8">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"..."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'t'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"..-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'u'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"...-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'v'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".--"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-..-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-9">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-.--"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--.."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'z'</span>)</span>
<span id="cb68-10">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-11"></span>
<span id="cb68-12">    letter</span>
<span id="cb68-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()</span>
<span id="cb68-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> morse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>get(code)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>copied())</span>
<span id="cb68-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb68-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb68-17"></span>
<span id="cb68-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 테스트 케이스들</span></span>
<span id="cb68-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb68-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".... . .-.. .-.. ---"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".-- --- .-. .-.. -..."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".-. ..- ... -"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-24">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-25"></span>
<span id="cb68-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-27">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(case)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-28">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test case {}: '{}' -&gt; '{}'"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb68-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="가위-바위-보" class="level2" data-number="9.3">
<h2 data-number="9.3" class="anchored" data-anchor-id="가위-바위-보"><span class="header-section-number">9.3</span> 가위 바위 보</h2>
<p>가위는 2 바위는 0 보는 5 로 표현합니다. 가위 바위 보를 내는 순서대로 나타낸 문자열&nbsp;<code>rsp</code> 가 매개변수로 주어질 때, rsp 에 저장된 가위 바위 보를 모두 이기는 경우를 순서대로 나타낸 문자열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-34" class="level3" data-number="9.3.1">
<h3 data-number="9.3.1" class="anchored" data-anchor-id="파이썬-34"><span class="header-section-number">9.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb69-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(rsp: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb69-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 가위(2)는 바위(0)에게 지고, 바위(0)는 보(5)에게 지고, 보(5)는 가위(2)에게 집니다.</span></span>
<span id="cb69-3">    win_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2'</span>}</span>
<span id="cb69-4"></span>
<span id="cb69-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 문자에 대해 이기는 경우를 매핑하여 새로운 문자열 생성</span></span>
<span id="cb69-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(win_map[char] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> rsp)</span></code></pre></div>
</section>
<section id="러스트-34" class="level3" data-number="9.3.2">
<h3 data-number="9.3.2" class="anchored" data-anchor-id="러스트-34"><span class="header-section-number">9.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb70-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-2"></span>
<span id="cb70-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(rsp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb70-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 가위(2)는 바위(0)에게 지고, 바위(0)는 보(5)에게 지고, 보(5)는 가위(2)에게 집니다.</span></span>
<span id="cb70-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> win_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb70-6">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'2'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb70-7">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb70-8">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'2'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb70-9">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-10"></span>
<span id="cb70-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 각 문자에 대해 이기는 경우를 매핑하여 새로운 문자열 생성</span></span>
<span id="cb70-12">    rsp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb70-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> win_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>get(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>c))</span>
<span id="cb70-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb70-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb70-16"></span>
<span id="cb70-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb70-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 테스트 케이스</span></span>
<span id="cb70-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"205"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-20"></span>
<span id="cb70-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb70-22">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(case)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-23">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test case {}: '{}' -&gt; '{}'"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-24">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb70-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="구슬을-나누는-경우의-수" class="level2" data-number="9.4">
<h2 data-number="9.4" class="anchored" data-anchor-id="구슬을-나누는-경우의-수"><span class="header-section-number">9.4</span> 구슬을 나누는 경우의 수</h2>
<p>머쓱이는 구슬을 친구들에게 나누어주려고 합니다. 구슬은 모두 다르게 생겼습니다. 머쓱이가 갖고 있는 구슬의 개수&nbsp;<code>balls</code> 와 친구들에게 나누어 줄 구슬 개수&nbsp;<code>share</code> 이 매개변수로 주어질 때,&nbsp;<code>balls</code> 개의 구슬 중&nbsp;<code>share</code> 개의 구슬을 고르는 가능한 모든 경우의 수를 return 하는 solution 함수를 완성해주세요.</p>
<section id="파이썬-35" class="level3" data-number="9.4.1">
<h3 data-number="9.4.1" class="anchored" data-anchor-id="파이썬-35"><span class="header-section-number">9.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb71-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Union</span>
<span id="cb71-2"></span>
<span id="cb71-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(balls: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, share: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]:</span>
<span id="cb71-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 분자 계산</span></span>
<span id="cb71-5">    numerator: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb71-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(balls, balls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> share, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb71-7">        numerator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> i</span>
<span id="cb71-8"></span>
<span id="cb71-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 분모 계산</span></span>
<span id="cb71-10">    denominator: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb71-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, share <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb71-12">        denominator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> i</span>
<span id="cb71-13"></span>
<span id="cb71-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 반환</span></span>
<span id="cb71-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> numerator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> denominator</span></code></pre></div>
</section>
<section id="러스트-35" class="level3" data-number="9.4.2">
<h3 data-number="9.4.2" class="anchored" data-anchor-id="러스트-35"><span class="header-section-number">9.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb72-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(balls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> share<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 분자 계산</span></span>
<span id="cb72-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> numerator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (balls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> share <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>balls)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>rev() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-5">        numerator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb72-7"></span>
<span id="cb72-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 분모 계산</span></span>
<span id="cb72-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> denominator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>share <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-11">        denominator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb72-13"></span>
<span id="cb72-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 결과 반환</span></span>
<span id="cb72-15">    numerator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> denominator</span>
<span id="cb72-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb72-17"></span>
<span id="cb72-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 테스트</span></span>
<span id="cb72-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-21"></span>
<span id="cb72-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (balls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> share) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-23">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>balls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>share)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-24">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Balls: {}, Share: {} -&gt; Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> balls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> share<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb72-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-10-조건문-배열-수학-시뮬레이션" class="level1" data-number="10">
<h1 data-number="10"><span class="header-section-number">10</span> Day 10 조건문, 배열, 수학, 시뮬레이션</h1>
<section id="점의-위치-구하기" class="level2" data-number="10.1">
<h2 data-number="10.1" class="anchored" data-anchor-id="점의-위치-구하기"><span class="header-section-number">10.1</span> 점의 위치 구하기</h2>
<p>사분면은 한 평면을 x 축과 y 축을 기준으로 나눈 네 부분입니다. 사분면은 아래와 같이 1 부터 4 까지 번호를매깁니다. - x 좌표와 y 좌표가 모두 양수이면 제 1 사분면에 속합니다. - x 좌표가 음수, y 좌표가 양수이면 제 2 사분면에 속합니다. - x 좌표와 y 좌표가 모두 음수이면 제 3 사분면에 속합니다. - x 좌표가 양수, y 좌표가 음수이면 제 4 사분면에 속합니다.</p>
<p>x 좌표 (x, y) 를 차례대로 담은 정수 배열&nbsp;<code>dot</code> 이 매개변수로 주어집니다. 좌표&nbsp;<code>dot</code> 이 사분면 중 어디에 속하는지 1, 2, 3, 4 중 하나를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-36" class="level3" data-number="10.1.1">
<h3 data-number="10.1.1" class="anchored" data-anchor-id="파이썬-36"><span class="header-section-number">10.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb73-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb73-2"></span>
<span id="cb73-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(dot: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb73-4">    x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dot</span>
<span id="cb73-5"></span>
<span id="cb73-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb73-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb73-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb73-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb73-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb73-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb73-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb73-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span></code></pre></div>
</section>
<section id="러스트-36" class="level3" data-number="10.1.2">
<h3 data-number="10.1.2" class="anchored" data-anchor-id="러스트-36"><span class="header-section-number">10.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb74-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(dot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (dot[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> dot[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-3"></span>
<span id="cb74-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb74-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-7">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb74-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-9">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb74-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-11">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb74-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb74-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb74-14"></span>
<span id="cb74-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> dot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dot))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="차원으로-만들기" class="level2" data-number="10.2">
<h2 data-number="10.2" class="anchored" data-anchor-id="차원으로-만들기"><span class="header-section-number">10.2</span> 2 차원으로 만들기</h2>
<p>정수 배열&nbsp;<code>num_list</code> 와 정수&nbsp;<code>n</code> 이 매개변수로 주어집니다.&nbsp;<code>num_list</code> 를 다음 설명과 같이 2 차원 배열로 바꿔 return 하도록 solution 함수를 완성해주세요.</p>
<p><code>num_list</code> 가 [1, 2, 3, 4, 5, 6, 7, 8] 로 길이가 8 이고&nbsp;<code>n</code> 이 2 이므로&nbsp;<code>num_list</code> 를 2 * 4 배열로 다음과 같이 변경합니다. 2 차원으로 바꿀 때에는 num_list 의 원소들을 앞에서부터 n 개씩 나눠 2 차원 배열로 변경합니다.</p>
<section id="파이썬-37" class="level3" data-number="10.2.1">
<h3 data-number="10.2.1" class="anchored" data-anchor-id="파이썬-37"><span class="header-section-number">10.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb75-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb75-2"></span>
<span id="cb75-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]:</span>
<span id="cb75-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num_list[i:i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>n] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(num_list), n)]</span></code></pre></div>
</section>
<section id="러스트-37" class="level3" data-number="10.2.2">
<h3 data-number="10.2.2" class="anchored" data-anchor-id="러스트-37"><span class="header-section-number">10.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb76-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb76-2">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chunks(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>chunk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> chunk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb76-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb76-4"></span>
<span id="cb76-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb76-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>```</span>
<span id="cb76-11"></span>
<span id="cb76-12">## 공 던지기</span>
<span id="cb76-13"></span>
<span id="cb76-14">머쓱이는 친구들과 동그랗게 서서 공 던지기 게임을 하고 있습니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span> 공은 1번부터 던지며 오른쪽으로 한 명을 건너뛰고 그다음 사람에게만 던질 수 있습니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span> 친구들의 번호가 들어있는 정수 배열&nbsp;`numbers`와 정수&nbsp;`K`가 주어질 때<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>&nbsp;`k`번째로 공을 던지는 사람의 번호는 무엇인지 <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> 하도록 solution 함수를 완성해보세요<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb76-15">### 파이썬</span>
<span id="cb76-16">```python</span>
<span id="cb76-17">from typing import List</span>
<span id="cb76-18"></span>
<span id="cb76-19">def solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> List[int]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> int) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> int<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb76-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> numbers[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> len(numbers)]</span></code></pre></div>
</section>
<section id="러스트-38" class="level3" data-number="10.2.3">
<h3 data-number="10.2.3" class="anchored" data-anchor-id="러스트-38"><span class="header-section-number">10.2.3</span> 러스트</h3>
<div class="sourceCode" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb77-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb77-2">    numbers[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()]</span>
<span id="cb77-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb77-4"></span>
<span id="cb77-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb77-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb77-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb77-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb77-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb77-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-회전시키기" class="level2" data-number="10.3">
<h2 data-number="10.3" class="anchored" data-anchor-id="배열-회전시키기"><span class="header-section-number">10.3</span> 배열 회전시키기</h2>
<p>정수가 담긴 배열&nbsp;<code>numbers</code> 와 문자열&nbsp;<code>direction</code> 가 매개변수로 주어집니다. 배열&nbsp;<code>numbers</code> 의 원소를&nbsp;<code>direction</code> 방향으로 한 칸씩 회전시킨 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-38" class="level3" data-number="10.3.1">
<h3 data-number="10.3.1" class="anchored" data-anchor-id="파이썬-38"><span class="header-section-number">10.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb78-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Literal</span>
<span id="cb78-2"></span>
<span id="cb78-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], direction: Literal[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb78-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> direction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>:</span>
<span id="cb78-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [numbers[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> numbers[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb78-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># direction == "left"</span></span>
<span id="cb78-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]]</span></code></pre></div>
</section>
<section id="러스트-39" class="level3" data-number="10.3.2">
<h3 data-number="10.3.2" class="anchored" data-anchor-id="러스트-39"><span class="header-section-number">10.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb79" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb79-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">#[</span>derive<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PartialEq</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb79-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">enum</span> Direction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-3">    Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb79-4">    Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb79-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb79-6"></span>
<span id="cb79-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> direction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Direction) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>with_capacity(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-9"></span>
<span id="cb79-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> direction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-11">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Direction::</span>Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-12">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Some</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>last) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>last() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-13">                result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(last)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-14">                result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend_from_slice(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-15">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb79-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb79-17">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Direction::</span>Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-18">            result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend_from_slice(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-19">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Some</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>first) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>first() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-20">                result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(first)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-21">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb79-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb79-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb79-24"></span>
<span id="cb79-25">    result</span>
<span id="cb79-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb79-27"></span>
<span id="cb79-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> right_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Direction::</span>Right)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> left_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Direction::</span>Left)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-32"></span>
<span id="cb79-33">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Right rotation: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> right_result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-34">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Left rotation: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> left_result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day11-수학-반복문" class="level1" data-number="11">
<h1 data-number="11"><span class="header-section-number">11</span> Day11 수학, 반복문</h1>
<p>머쓱이는 직육면체 모양의 상자를 하나 가지고 있는데 이 상자에 정육면체 모양의 주사위를 최대한 많이 채우고 싶습니다. 상자의 가로, 세로, 높이가 저장되어있는 배열&nbsp;<code>box</code> 와 주사위 모서리의 길이 정수&nbsp;<code>n</code> 이 매개변수로 주어졌을 때, 상자에 들어갈 수 있는 주사위의 최대 개수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-39" class="level3" data-number="11.0.1">
<h3 data-number="11.0.1" class="anchored" data-anchor-id="파이썬-39"><span class="header-section-number">11.0.1</span> 파이썬</h3>
<div class="sourceCode" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb80-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb80-2"></span>
<span id="cb80-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(box: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb80-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (box[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (box[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (box[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> n)</span></code></pre></div>
</section>
<section id="러스트-40" class="level3" data-number="11.0.2">
<h3 data-number="11.0.2" class="anchored" data-anchor-id="러스트-40"><span class="header-section-number">11.0.2</span> 러스트</h3>
<div class="sourceCode" id="cb81" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb81-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(box_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb81-2">    (box_dims[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (box_dims[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (box_dims[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n)</span>
<span id="cb81-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb81-4"></span>
<span id="cb81-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb81-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> box_dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb81-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb81-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>box_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb81-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb81-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="합성수-찾기" class="level2" data-number="11.1">
<h2 data-number="11.1" class="anchored" data-anchor-id="합성수-찾기"><span class="header-section-number">11.1</span> 합성수 찾기</h2>
<p>약수의 개수가 세 개 이상인 수를 합성수라고 합니다. 자연수&nbsp;<code>n</code> 이 매개변수로 주어질 때&nbsp;<code>n</code> 이하의 합성수의 개수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-40" class="level3" data-number="11.1.1">
<h3 data-number="11.1.1" class="anchored" data-anchor-id="파이썬-40"><span class="header-section-number">11.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb82" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb82-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb82-2">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb82-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4부터 n까지 순회</span></span>
<span id="cb82-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_composite(num):</span>
<span id="cb82-5">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb82-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count</span>
<span id="cb82-7"></span>
<span id="cb82-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> is_composite(num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb82-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb82-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb82-11">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb82-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
</section>
<section id="러스트-41" class="level3" data-number="11.1.2">
<h3 data-number="11.1.2" class="anchored" data-anchor-id="러스트-41"><span class="header-section-number">11.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb83" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb83-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb83-2">    (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> is_composite(num))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span></span>
<span id="cb83-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb83-4"></span>
<span id="cb83-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> is_composite(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb83-6">    (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>((num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sqrt() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>any(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb83-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb83-8"></span>
<span id="cb83-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb83-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb83-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb83-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of composite numbers up to {}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb83-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="최댓값-만들기-1" class="level2" data-number="11.2">
<h2 data-number="11.2" class="anchored" data-anchor-id="최댓값-만들기-1"><span class="header-section-number">11.2</span> 최댓값 만들기 (1)</h2>
<p>정수 배열&nbsp;<code>numbers</code> 가 매개변수로 주어집니다.&nbsp;<code>numbers</code> 의 원소 중 두 개를 곱해 만들 수 있는 최댓값을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-41" class="level3" data-number="11.2.1">
<h3 data-number="11.2.1" class="anchored" data-anchor-id="파이썬-41"><span class="header-section-number">11.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb84" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb84-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb84-2"></span>
<span id="cb84-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb84-4">    numbers.sort(reverse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트를 내림차순으로 정렬</span></span>
<span id="cb84-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 가장 큰 두 수를 곱함</span></span></code></pre></div>
</section>
<section id="러스트-42" class="level3" data-number="11.2.2">
<h3 data-number="11.2.2" class="anchored" data-anchor-id="러스트-42"><span class="header-section-number">11.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb85" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb85-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb85-2">    numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_unstable_by(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cmp(a))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort in descending order</span></span>
<span id="cb85-3">    numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Multiply the two largest numbers</span></span>
<span id="cb85-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb85-5"></span>
<span id="cb85-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb85-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb85-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb85-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb85-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="팩토리얼" class="level2" data-number="11.3">
<h2 data-number="11.3" class="anchored" data-anchor-id="팩토리얼"><span class="header-section-number">11.3</span> 팩토리얼</h2>
<p><code>i</code> 팩토리얼 <img src="https://latex.codecogs.com/png.latex?i!"> 은 1 부터 i 까지 정수의 곱을 의미합니다. 예를들어 <img src="https://latex.codecogs.com/png.latex?5!%20=%205%20*%204%20*%203%20*%202%20*%201%20=%20120"> 입니다. 정수 n 이 주어질 때 <img src="https://latex.codecogs.com/png.latex?i!%20%E2%89%A4%20n"> 조건을 만족하는 가장 큰 정수 i 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-42" class="level3" data-number="11.3.1">
<h3 data-number="11.3.1" class="anchored" data-anchor-id="파이썬-42"><span class="header-section-number">11.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb86" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb86-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb86-2">    factorial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb86-3">    i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb86-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> factorial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> n:</span>
<span id="cb86-5">        i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb86-6">        factorial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> i</span>
<span id="cb86-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-43" class="level3" data-number="11.3.2">
<h3 data-number="11.3.2" class="anchored" data-anchor-id="러스트-43"><span class="header-section-number">11.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb87" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb87-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb87-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> factorial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> factorial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb87-5">        i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-6">        factorial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb87-8">    i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb87-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb87-10"></span>
<span id="cb87-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb87-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3628800</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day12-문자열-정렬-사칙연산-수학" class="level1" data-number="12">
<h1 data-number="12"><span class="header-section-number">12</span> Day12 문자열, 정렬, 사칙연산, 수학</h1>
<section id="모음-제거" class="level2" data-number="12.1">
<h2 data-number="12.1" class="anchored" data-anchor-id="모음-제거"><span class="header-section-number">12.1</span> 모음 제거</h2>
<p>영어에선 a, e, i, o, u 다섯 가지 알파벳을 모음으로 분류합니다. 문자열&nbsp;<code>my_string</code> 이 매개변수로 주어질 때 모음을 제거한 문자열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-43" class="level3" data-number="12.1.1">
<h3 data-number="12.1.1" class="anchored" data-anchor-id="파이썬-43"><span class="header-section-number">12.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb88" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb88-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb88-2">    vowels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'aeiou'</span></span>
<span id="cb88-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(char <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> vowels)</span></code></pre></div>
</section>
<section id="러스트-44" class="level3" data-number="12.1.2">
<h3 data-number="12.1.2" class="anchored" data-anchor-id="러스트-44"><span class="header-section-number">12.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb89" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb89-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb89-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> vowels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aeiou"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-3">    my_string</span>
<span id="cb89-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb89-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>vowels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>c))</span>
<span id="cb89-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb89-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb89-8"></span>
<span id="cb89-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb89-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello world"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output: "hll wrld"</span></span>
<span id="cb89-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-정렬하기-1" class="level2" data-number="12.2">
<h2 data-number="12.2" class="anchored" data-anchor-id="문자열-정렬하기-1"><span class="header-section-number">12.2</span> 문자열 정렬하기 (1)</h2>
<p>문자열&nbsp;<code>my_string</code> 이 매개변수로 주어질 때,&nbsp;<code>my_string</code>&nbsp;안에 있는 숫자만 골라 오름차순 정렬한 리스트를&nbsp;return 하도록 solution 함수를 작성해보세요.</p>
<section id="파이썬-44" class="level3" data-number="12.2.1">
<h3 data-number="12.2.1" class="anchored" data-anchor-id="파이썬-44"><span class="header-section-number">12.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb90" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb90-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb90-2"></span>
<span id="cb90-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb90-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>([<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(char) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char.isdigit()])</span></code></pre></div>
</section>
<section id="러스트-45" class="level3" data-number="12.2.2">
<h3 data-number="12.2.2" class="anchored" data-anchor-id="러스트-45"><span class="header-section-number">12.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb91" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb91-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb91-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> digits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string</span>
<span id="cb91-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb91-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_digit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>))</span>
<span id="cb91-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-6"></span>
<span id="cb91-7">    digits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-8">    digits</span>
<span id="cb91-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb91-10"></span>
<span id="cb91-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb91-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a1b2c3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output: [1, 2, 3]</span></span>
<span id="cb91-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="숨어있는-숫자의-덧셈-1" class="level2" data-number="12.3">
<h2 data-number="12.3" class="anchored" data-anchor-id="숨어있는-숫자의-덧셈-1"><span class="header-section-number">12.3</span> 숨어있는 숫자의 덧셈 (1)</h2>
<p>문자열&nbsp;<code>my_string</code> 이 매개변수로 주어집니다.&nbsp;<code>my_string</code> 안의 모든 자연수들의 합을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-45" class="level3" data-number="12.3.1">
<h3 data-number="12.3.1" class="anchored" data-anchor-id="파이썬-45"><span class="header-section-number">12.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb92" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb92-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb92-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(char) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char.isdigit())</span></code></pre></div>
</section>
<section id="러스트-46" class="level3" data-number="12.3.2">
<h3 data-number="12.3.2" class="anchored" data-anchor-id="러스트-46"><span class="header-section-number">12.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb93" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb93-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb93-2">    my_string</span>
<span id="cb93-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb93-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_digit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Convert characters to digits</span></span>
<span id="cb93-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sum the digits</span></span>
<span id="cb93-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb93-7"></span>
<span id="cb93-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb93-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a1b2c3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output: 6</span></span>
<span id="cb93-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="소인수분해" class="level2" data-number="12.4">
<h2 data-number="12.4" class="anchored" data-anchor-id="소인수분해"><span class="header-section-number">12.4</span> 소인수분해</h2>
<p>소인수분해란 어떤 수를 소수들의 곱으로 표현하는 것입니다. 예를 들어 12 를 소인수 분해하면 2 * 2 * 3 으로 나타낼 수 있습니다. 따라서 12 의 소인수는 2 와 3 입니다. 자연수&nbsp;<code>n</code> 이 매개변수로 주어질 때&nbsp;<code>n</code> 의 소인수를 오름차순으로 담은 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-46" class="level3" data-number="12.4.1">
<h3 data-number="12.4.1" class="anchored" data-anchor-id="파이썬-46"><span class="header-section-number">12.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb94" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb94-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb94-2"></span>
<span id="cb94-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb94-4">    factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb94-5">    divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb94-6"></span>
<span id="cb94-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> n:</span>
<span id="cb94-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb94-9">            factors.append(divisor)</span>
<span id="cb94-10">            n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> divisor</span>
<span id="cb94-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb94-12">            divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb94-13"></span>
<span id="cb94-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb94-15">        factors.append(n)</span>
<span id="cb94-16"></span>
<span id="cb94-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(factors))</span></code></pre></div>
</section>
<section id="러스트-47" class="level3" data-number="12.4.2">
<h3 data-number="12.4.2" class="anchored" data-anchor-id="러스트-47"><span class="header-section-number">12.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb95" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb95-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb95-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mutable copy of n</span></span>
<span id="cb95-5"></span>
<span id="cb95-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb95-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb95-8">            factors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(divisor)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-9">            num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> divisor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Use the mutable copy</span></span>
<span id="cb95-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb95-11">            divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb95-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb95-14"></span>
<span id="cb95-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb95-16">        factors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb95-18"></span>
<span id="cb95-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Use a HashSet to remove duplicates, then collect and sort</span></span>
<span id="cb95-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> unique_factors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> factors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-21">    unique_factors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-22">    unique_factors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dedup()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove duplicates</span></span>
<span id="cb95-23"></span>
<span id="cb95-24">    unique_factors</span>
<span id="cb95-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb95-26"></span>
<span id="cb95-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb95-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-30">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output: [2, 7]</span></span>
<span id="cb95-31"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day13-문자열-배열-사칙연산-수학-조건문" class="level1" data-number="13">
<h1 data-number="13"><span class="header-section-number">13</span> Day13 문자열, 배열, 사칙연산, 수학, 조건문</h1>
<section id="컨트롤-제트" class="level2" data-number="13.1">
<h2 data-number="13.1" class="anchored" data-anchor-id="컨트롤-제트"><span class="header-section-number">13.1</span> 컨트롤 제트</h2>
<p>숫자와 “Z”가 공백으로 구분되어 담긴 문자열이 주어집니다. 문자열에 있는 숫자를 차례대로 더하려고 합니다. 이 때 “Z”가 나오면 바로 전에 더했던 숫자를 뺀다는 뜻입니다. 숫자와 “Z”로 이루어진 문자열&nbsp;<code>s</code> 가 주어질 때, 머쓱이가 구한 값을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-47" class="level3" data-number="13.1.1">
<h3 data-number="13.1.1" class="anchored" data-anchor-id="파이썬-47"><span class="header-section-number">13.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb96" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb96-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb96-2">    stack: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb96-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s.split():</span>
<span id="cb96-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> item <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Z'</span>:</span>
<span id="cb96-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> stack:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 스택이 비어있지 않은 경우에만 pop</span></span>
<span id="cb96-6">                stack.pop()</span>
<span id="cb96-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb96-8">            stack.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(item))</span>
<span id="cb96-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(stack)</span></code></pre></div>
</section>
<section id="러스트-48" class="level3" data-number="13.1.2">
<h3 data-number="13.1.2" class="anchored" data-anchor-id="러스트-48"><span class="header-section-number">13.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb97" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb97-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> stack<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb97-3"></span>
<span id="cb97-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> item <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>stack<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-7">                stack<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pop()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb97-8">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb97-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-10">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Ok</span>(num) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> item<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-11">                stack<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb97-12">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb97-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb97-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb97-15"></span>
<span id="cb97-16">    stack<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb97-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb97-18"></span>
<span id="cb97-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1 2 3 Z 4 5"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb97-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb97-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output: Result: 12</span></span>
<span id="cb97-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-원소의-길이" class="level2" data-number="13.2">
<h2 data-number="13.2" class="anchored" data-anchor-id="배열-원소의-길이"><span class="header-section-number">13.2</span> 배열 원소의 길이</h2>
<p>문자열 배열&nbsp;<code>strlist</code> 가 매개변수로 주어집니다.&nbsp;<code>strlist</code>&nbsp;각 원소의 길이를 담은 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-48" class="level3" data-number="13.2.1">
<h3 data-number="13.2.1" class="anchored" data-anchor-id="파이썬-48"><span class="header-section-number">13.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb98" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb98-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb98-2"></span>
<span id="cb98-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(strlist:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> ) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb98-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(s) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> strlist]</span></code></pre></div>
</section>
<section id="러스트-49" class="level3" data-number="13.2.2">
<h3 data-number="13.2.2" class="anchored" data-anchor-id="러스트-49"><span class="header-section-number">13.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb99" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb99-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(strlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-2">    strlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb99-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb99-4"></span>
<span id="cb99-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb99-7">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"We"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-8">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"are"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-9">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"the"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"world!"</span>)</span>
<span id="cb99-11">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="중복된-문자-제거" class="level2" data-number="13.3">
<h2 data-number="13.3" class="anchored" data-anchor-id="중복된-문자-제거"><span class="header-section-number">13.3</span> 중복된 문자 제거</h2>
<p>문자열 <code>my_string</code> 이 매개변수로 주어집니다. <code>my_string</code> 에서 중복된 문자를 제거하고 하나의 문자만 남긴 문자열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-49" class="level3" data-number="13.3.1">
<h3 data-number="13.3.1" class="anchored" data-anchor-id="파이썬-49"><span class="header-section-number">13.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb100" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb100-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb100-2">    seen: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb100-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(ch <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ch <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> (ch <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> seen <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> seen.add(ch)))</span></code></pre></div>
</section>
<section id="러스트-50" class="level3" data-number="13.3.2">
<h3 data-number="13.3.2" class="anchored" data-anchor-id="러스트-50"><span class="header-section-number">13.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb101" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb101-1"> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-2"></span>
<span id="cb101-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb101-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> seen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashSet::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-5">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb101-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> seen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>insert(ch))</span>
<span id="cb101-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb101-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb101-9"></span>
<span id="cb101-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb101-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"people"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="삼각형의-완성조건-1" class="level2" data-number="13.4">
<h2 data-number="13.4" class="anchored" data-anchor-id="삼각형의-완성조건-1"><span class="header-section-number">13.4</span> 삼각형의 완성조건 (1)</h2>
<p>선분 세 개로 삼각형을 만들기 위해서는 다음과 같은 조건을 만족해야 합니다. - 가장 긴 변의 길이는 다른 두 변의 길이의 합보다 작아야 합니다. 삼각형의 세 변의 길이가 담긴 배열 <code>sides</code> 이 매개변수로 주어집니다. 세 변으로 삼각형을 만들 수 있다면 1, 만들 수 없다면 2 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-50" class="level3" data-number="13.4.1">
<h3 data-number="13.4.1" class="anchored" data-anchor-id="파이썬-50"><span class="header-section-number">13.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb102" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb102-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb102-2"></span>
<span id="cb102-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(sides: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb102-4">    sides.sort()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 배열을 오름차순으로 정렬</span></span>
<span id="cb102-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sides[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sides[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> sides[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</section>
<section id="러스트-51" class="level3" data-number="13.4.2">
<h3 data-number="13.4.2" class="anchored" data-anchor-id="러스트-51"><span class="header-section-number">13.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb103" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb103-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb103-2">    sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 배열을 오름차순으로 정렬</span></span>
<span id="cb103-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sides[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sides[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> sides[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb103-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb103-5"></span>
<span id="cb103-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb103-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb103-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb103-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb103-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day14" class="level1" data-number="14">
<h1 data-number="14"><span class="header-section-number">14</span> Day14</h1>
<section id="가까운-수" class="level2" data-number="14.1">
<h2 data-number="14.1" class="anchored" data-anchor-id="가까운-수"><span class="header-section-number">14.1</span> 가까운 수</h2>
<p>정수 배열 array 와 정수 n 이 매개변수로 주어질 때, array 에 들어있는 정수 중 n 과 가장 가까운 수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-51" class="level3" data-number="14.1.1">
<h3 data-number="14.1.1" class="anchored" data-anchor-id="파이썬-51"><span class="header-section-number">14.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb104" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb104-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb104-2"></span>
<span id="cb104-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb104-4">    array.sort()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort the array in ascending order</span></span>
<span id="cb104-5">    closest: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize closest number with the first element</span></span>
<span id="cb104-6">    min_diff: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> array[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize minimum difference</span></span>
<span id="cb104-7"></span>
<span id="cb104-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> array:</span>
<span id="cb104-9">        diff: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> num)</span>
<span id="cb104-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> min_diff:</span>
<span id="cb104-11">            min_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diff</span>
<span id="cb104-12">            closest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num</span>
<span id="cb104-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> min_diff <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> closest:</span>
<span id="cb104-14">            closest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num</span>
<span id="cb104-15"></span>
<span id="cb104-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> closest</span></code></pre></div>
</section>
<section id="러스트-52" class="level3" data-number="14.1.2">
<h3 data-number="14.1.2" class="anchored" data-anchor-id="러스트-52"><span class="header-section-number">14.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb105" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb105-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb105-2">    array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_unstable()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort the array in ascending order</span></span>
<span id="cb105-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> closest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize closest number with the first element</span></span>
<span id="cb105-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> min_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> array[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>abs()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize minimum difference</span></span>
<span id="cb105-5"></span>
<span id="cb105-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb105-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>abs()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> min_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb105-9">            min_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diff<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-10">            closest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> min_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> closest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb105-12">            closest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb105-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb105-15"></span>
<span id="cb105-16">    closest</span>
<span id="cb105-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb105-18"></span>
<span id="cb105-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb105-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-23">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Closest number: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="게임" class="level2" data-number="14.2">
<h2 data-number="14.2" class="anchored" data-anchor-id="게임"><span class="header-section-number">14.2</span> 369 게임</h2>
<p>머쓱이는 친구들과 369 게임을 하고 있습니다. 369 게임은 1 부터 숫자를 하나씩 대며 3, 6, 9 가 들어가는 숫자는 숫자 대신 3, 6, 9 의 개수만큼 박수를 치는 게임입니다. 머쓱이가 말해야하는 숫자 order 가 매개변수로 주어질 때, 머쓱이가 쳐야할 박수 횟수를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-52" class="level3" data-number="14.2.1">
<h3 data-number="14.2.1" class="anchored" data-anchor-id="파이썬-52"><span class="header-section-number">14.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb106" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb106-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(order: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb106-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(order).count(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(order).count(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'6'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(order).count(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span>)</span></code></pre></div>
</section>
<section id="러스트-53" class="level3" data-number="14.2.2">
<h3 data-number="14.2.2" class="anchored" data-anchor-id="러스트-53"><span class="header-section-number">14.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb107" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb107-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb107-2">    order</span>
<span id="cb107-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb107-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb107-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'3'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'6'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span>)</span>
<span id="cb107-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span></span>
<span id="cb107-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb107-8"></span>
<span id="cb107-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb107-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">29423</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb107-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(order)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb107-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of 3, 6, 9 occurrences: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb107-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="암호해독" class="level2" data-number="14.3">
<h2 data-number="14.3" class="anchored" data-anchor-id="암호해독"><span class="header-section-number">14.3</span> 암호해독</h2>
<p>군 전략가 머쓱이는 전쟁 중 적군이 다음과 같은 암호 체계를 사용한다는 것을 알아냈습니다.</p>
<ul>
<li>암호화된 문자열 cipher 를 주고받습니다.</li>
<li>그 문자열에서 code 의 배수 번째 글자만 진짜 암호입니다.</li>
</ul>
<p>문자열 cipher 와 정수 code 가 매개변수로 주어질 때 해독된 암호 문자열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-53" class="level3" data-number="14.3.1">
<h3 data-number="14.3.1" class="anchored" data-anchor-id="파이썬-53"><span class="header-section-number">14.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb108" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb108-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(cipher: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, code: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb108-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> cipher[code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>::code]</span></code></pre></div>
</section>
<section id="러스트-54" class="level3" data-number="14.3.2">
<h3 data-number="14.3.2" class="anchored" data-anchor-id="러스트-54"><span class="header-section-number">14.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb109" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb109-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(cipher<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb109-2">    cipher<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb109-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>skip(code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb109-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(code)</span>
<span id="cb109-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb109-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb109-7"></span>
<span id="cb109-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb109-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> cipher <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dfjardstddetckdaccccdegk"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb109-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb109-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(cipher<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> code)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb109-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Decoded message: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb109-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="대문자와-소문자" class="level2" data-number="14.4">
<h2 data-number="14.4" class="anchored" data-anchor-id="대문자와-소문자"><span class="header-section-number">14.4</span> 대문자와 소문자</h2>
<p>문자열 <code>my_string</code> 이 매개변수로 주어질 때, 대문자는 소문자로 소문자는 대문자로 변환한 문자열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-54" class="level3" data-number="14.4.1">
<h3 data-number="14.4.1" class="anchored" data-anchor-id="파이썬-54"><span class="header-section-number">14.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb110" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb110-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb110-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string.swapcase()</span></code></pre></div>
</section>
<section id="러스트-55" class="level3" data-number="14.4.2">
<h3 data-number="14.4.2" class="anchored" data-anchor-id="러스트-55"><span class="header-section-number">14.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb111" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb111-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb111-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb111-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_uppercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb111-4">            c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_lowercase()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>next()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()</span>
<span id="cb111-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_lowercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb111-6">            c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_uppercase()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>next()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()</span>
<span id="cb111-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb111-8">            c</span>
<span id="cb111-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb111-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb111-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb111-12"></span>
<span id="cb111-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb111-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb111-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb111-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Swapped case: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb111-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day15-문자열-해시-배열-수하" class="level1" data-number="15">
<h1 data-number="15"><span class="header-section-number">15</span> Day15 문자열, 해시, 배열, 수하</h1>
<section id="영어가-싫어요" class="level2" data-number="15.1">
<h2 data-number="15.1" class="anchored" data-anchor-id="영어가-싫어요"><span class="header-section-number">15.1</span> 영어가 싫어요</h2>
<p>영어가 싫은 머쓱이는 영어로 표기되어있는 숫자를 수로 바꾸려고 합니다. 문자열 numbers 가 매개변수로 주어질 때, numbers 를 정수로 바꿔 return 하도록 solution 함수를 완성해 주세요.</p>
<section id="파이썬-55" class="level3" data-number="15.1.1">
<h3 data-number="15.1.1" class="anchored" data-anchor-id="파이썬-55"><span class="header-section-number">15.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb112" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb112-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb112-2">    num_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb112-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'zero'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'one'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'two'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'three'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'four'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'4'</span>,</span>
<span id="cb112-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'five'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'six'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'6'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'seven'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'7'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'eight'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'8'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nine'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span></span>
<span id="cb112-5">    }</span>
<span id="cb112-6"></span>
<span id="cb112-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> word, digit <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_dict.items():</span>
<span id="cb112-8">        numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers.replace(word, digit)</span>
<span id="cb112-9"></span>
<span id="cb112-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(numbers)</span></code></pre></div>
</section>
<section id="러스트-56" class="level3" data-number="15.1.2">
<h3 data-number="15.1.2" class="anchored" data-anchor-id="러스트-56"><span class="header-section-number">15.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb113" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb113-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb113-2"></span>
<span id="cb113-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb113-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_dict<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb113-5">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zero"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"one"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"two"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"three"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"four"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb113-6">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"five"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"six"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seven"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eight"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nine"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>)</span>
<span id="cb113-7">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb113-8"></span>
<span id="cb113-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb113-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (word<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> digit) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_dict<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb113-11">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>replace(word<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> digit)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb113-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb113-13"></span>
<span id="cb113-14">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()</span>
<span id="cb113-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb113-16"></span>
<span id="cb113-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb113-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"onetwothree"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb113-19">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This will print: 123</span></span>
<span id="cb113-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="인덱스-바꾸기" class="level2" data-number="15.2">
<h2 data-number="15.2" class="anchored" data-anchor-id="인덱스-바꾸기"><span class="header-section-number">15.2</span> 인덱스 바꾸기</h2>
<p>문자열 my_string 과 정수 num1, num2 가 매개변수로 주어질 때, my_string 에서 인덱스 num1 과 인덱스 num2 에 해당하는 문자를 바꾼 문자열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-56" class="level3" data-number="15.2.1">
<h3 data-number="15.2.1" class="anchored" data-anchor-id="파이썬-56"><span class="header-section-number">15.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb114" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb114-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, num1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb114-2">    string_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(my_string)</span>
<span id="cb114-3">    string_list[num1], string_list[num2] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> string_list[num2], string_list[num1]</span>
<span id="cb114-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(string_list)</span></code></pre></div>
</section>
<section id="러스트-57" class="level3" data-number="15.2.2">
<h3 data-number="15.2.2" class="anchored" data-anchor-id="러스트-57"><span class="header-section-number">15.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb115" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb115-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb115-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb115-3">    chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>swap(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb115-4">    chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb115-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb115-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb115-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb115-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This will print: "hlelo"</span></span>
<span id="cb115-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="한-번만-등장한-문자" class="level2" data-number="15.3">
<h2 data-number="15.3" class="anchored" data-anchor-id="한-번만-등장한-문자"><span class="header-section-number">15.3</span> 한 번만 등장한 문자</h2>
<p>문자열 s 가 매개변수로 주어집니다. s 에서 한 번만 등장하는 문자를 사전 순으로 정렬한 문자열을 return 하도록 solution 함수를 완성해보세요. 한 번만 등장하는 문자가 없을 경우 빈 문자열을 return 합니다.</p>
<section id="파이썬-57" class="level3" data-number="15.3.1">
<h3 data-number="15.3.1" class="anchored" data-anchor-id="파이썬-57"><span class="header-section-number">15.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb116" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb116-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Counter</span>
<span id="cb116-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb116-3"></span>
<span id="cb116-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb116-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Count the occurrences of each character</span></span>
<span id="cb116-6">    char_counts: Counter[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Counter(s)</span>
<span id="cb116-7"></span>
<span id="cb116-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter characters that appear only once and sort them</span></span>
<span id="cb116-9">    unique_chars: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>([char <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char, count <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> char_counts.items() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb116-10"></span>
<span id="cb116-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Join the characters into a string</span></span>
<span id="cb116-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(unique_chars)</span></code></pre></div>
</section>
<section id="러스트-58" class="level3" data-number="15.3.2">
<h3 data-number="15.3.2" class="anchored" data-anchor-id="러스트-58"><span class="header-section-number">15.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb117" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb117-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-2"></span>
<span id="cb117-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb117-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count the occurrences of each character</span></span>
<span id="cb117-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> char_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashMap::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb117-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>char_counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>entry(c)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>or_insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb117-9"></span>
<span id="cb117-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Filter characters that appear only once and sort them</span></span>
<span id="cb117-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> unique_chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> char_counts</span>
<span id="cb117-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()</span>
<span id="cb117-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> count)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb117-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>)</span>
<span id="cb117-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-16"></span>
<span id="cb117-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort the unique characters</span></span>
<span id="cb117-18">    unique_chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_unstable()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-19"></span>
<span id="cb117-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Join the characters into a string</span></span>
<span id="cb117-21">    unique_chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb117-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb117-23"></span>
<span id="cb117-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb117-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcabcabc"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-26">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This will print: ""</span></span>
<span id="cb117-27"></span>
<span id="cb117-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcabcabcd"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-29">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This will print: "d"</span></span>
<span id="cb117-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="악수-구하기" class="level2" data-number="15.4">
<h2 data-number="15.4" class="anchored" data-anchor-id="악수-구하기"><span class="header-section-number">15.4</span> 악수 구하기</h2>
<p>정수 n 이 매개변수로 주어질 때, n 의 약수를 오름차순으로 담은 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-58" class="level3" data-number="15.4.1">
<h3 data-number="15.4.1" class="anchored" data-anchor-id="파이썬-58"><span class="header-section-number">15.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb118" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb118-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb118-2"></span>
<span id="cb118-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb118-4">    divisors: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb118-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb118-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb118-7">            divisors.append(i)</span>
<span id="cb118-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> i:</span>
<span id="cb118-9">                divisors.append(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> i)</span>
<span id="cb118-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(divisors)</span></code></pre></div>
</section>
<section id="러스트-59" class="level3" data-number="15.4.2">
<h3 data-number="15.4.2" class="anchored" data-anchor-id="러스트-59"><span class="header-section-number">15.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb119" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb119-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb119-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> divisors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb119-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sqrt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sqrt() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb119-4"></span>
<span id="cb119-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>sqrt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb119-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb119-7">            divisors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(i)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb119-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb119-9">                divisors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> i)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb119-10">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb119-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb119-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb119-13"></span>
<span id="cb119-14">    divisors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_unstable()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb119-15">    divisors</span>
<span id="cb119-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb119-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb119-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb119-19">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This will print: [1, 2, 3, 4, 6, 12]</span></span>
<span id="cb119-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day16-문자열-수학-배열-조건문" class="level1" data-number="16">
<h1 data-number="16"><span class="header-section-number">16</span> Day16 문자열, 수학, 배열, 조건문</h1>
<section id="편지" class="level2" data-number="16.1">
<h2 data-number="16.1" class="anchored" data-anchor-id="편지"><span class="header-section-number">16.1</span> 편지</h2>
<p>머쓱이는 할머니께 생신 축하 편지를 쓰려고 합니다. 할머니가 보시기 편하도록 글자 한 자 한 자를 가로 2cm 크기로 적으려고 하며, 편지를 가로로만 적을 때, 축하 문구 message 를 적기 위해 필요한 편지지의 최소 가로길이를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-59" class="level3" data-number="16.1.1">
<h3 data-number="16.1.1" class="anchored" data-anchor-id="파이썬-59"><span class="header-section-number">16.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb120" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb120-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(message: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb120-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(message) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</section>
<section id="러스트-60" class="level3" data-number="16.1.2">
<h3 data-number="16.1.2" class="anchored" data-anchor-id="러스트-60"><span class="header-section-number">16.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb121" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb121-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(message<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb121-2">    (message<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb121-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb121-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb121-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb121-6">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>solution(result))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb121-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="가장-큰-수-찾기" class="level2" data-number="16.2">
<h2 data-number="16.2" class="anchored" data-anchor-id="가장-큰-수-찾기"><span class="header-section-number">16.2</span> 가장 큰 수 찾기</h2>
<p>정수 배열 array 가 매개변수로 주어질 때, 가장 큰 수와 그 수의 인덱스를 담은 배열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-60" class="level3" data-number="16.2.1">
<h3 data-number="16.2.1" class="anchored" data-anchor-id="파이썬-60"><span class="header-section-number">16.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb122" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb122-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Union</span>
<span id="cb122-2"></span>
<span id="cb122-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]]:</span>
<span id="cb122-4">    max_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(array)</span>
<span id="cb122-5">    max_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array.index(max_value)</span>
<span id="cb122-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [max_value, max_index]</span></code></pre></div>
</section>
<section id="러스트-61" class="level3" data-number="16.2.2">
<h3 data-number="16.2.2" class="anchored" data-anchor-id="러스트-61"><span class="header-section-number">16.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb123" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb123-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> (<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb123-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb123-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>position(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> max_value)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb123-4">    (max_value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> max_index)</span>
<span id="cb123-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb123-6"></span>
<span id="cb123-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb123-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Test case</span></span>
<span id="cb123-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb123-10"></span>
<span id="cb123-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Call the solution function</span></span>
<span id="cb123-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (max_value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> max_index) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>array)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb123-13"></span>
<span id="cb123-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Print the results</span></span>
<span id="cb123-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Maximum value: {}, Index: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> max_value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> max_index)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb123-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-계산하기" class="level2" data-number="16.3">
<h2 data-number="16.3" class="anchored" data-anchor-id="문자열-계산하기"><span class="header-section-number">16.3</span> 문자열 계산하기</h2>
<p>my_string 은 <img src="https://latex.codecogs.com/png.latex?3%20+%205"> 처럼 문자열로 된 수식입니다. 문자열 my_string 이 매개변수로 주어질 때, 수식을 계산한 값을 return 하는 solution 함수를 완성해주세요.</p>
<section id="파이썬-61" class="level3" data-number="16.3.1">
<h3 data-number="16.3.1" class="anchored" data-anchor-id="파이썬-61"><span class="header-section-number">16.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb124" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb124-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb124-2">    elements <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string.split()</span>
<span id="cb124-3">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(elements[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb124-4"></span>
<span id="cb124-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(elements), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>):</span>
<span id="cb124-6">        operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> elements[i]</span>
<span id="cb124-7">        number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(elements[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb124-8"></span>
<span id="cb124-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'+'</span>:</span>
<span id="cb124-10">            result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> number</span>
<span id="cb124-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>:</span>
<span id="cb124-12">            result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> number</span>
<span id="cb124-13"></span>
<span id="cb124-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-62" class="level3" data-number="16.3.2">
<h3 data-number="16.3.2" class="anchored" data-anchor-id="러스트-62"><span class="header-section-number">16.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb125" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb125-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb125-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> elements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> elements[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-4"></span>
<span id="cb125-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>elements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb125-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> elements[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> elements[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-8"></span>
<span id="cb125-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb125-10">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"+"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb125-11">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb125-12">            _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">panic!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unsupported operator: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> operator)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb125-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb125-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb125-15"></span>
<span id="cb125-16">    result</span>
<span id="cb125-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb125-18"></span>
<span id="cb125-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb125-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Test case</span></span>
<span id="cb125-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3 + 5 - 2 + 8"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-22"></span>
<span id="cb125-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Call the solution function</span></span>
<span id="cb125-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-25"></span>
<span id="cb125-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Print the result</span></span>
<span id="cb125-27">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-28"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열의-유사도" class="level2" data-number="16.4">
<h2 data-number="16.4" class="anchored" data-anchor-id="배열의-유사도"><span class="header-section-number">16.4</span> 배열의 유사도</h2>
<p>두 배열이 얼마나 유사한지 확인해보려고 합니다. 문자열 배열 s1 과 s2 가 주어질 때 같은 원소의 개수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-62" class="level3" data-number="16.4.1">
<h3 data-number="16.4.1" class="anchored" data-anchor-id="파이썬-62"><span class="header-section-number">16.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb126" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb126-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb126-2"></span>
<span id="cb126-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(s1: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], s2: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb126-4">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb126-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s1:</span>
<span id="cb126-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s2:</span>
<span id="cb126-7">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb126-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count</span></code></pre></div>
</section>
<section id="러스트-63" class="level3" data-number="16.4.2">
<h3 data-number="16.4.2" class="anchored" data-anchor-id="러스트-63"><span class="header-section-number">16.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb127" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb127-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(s1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb127-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb127-3"></span>
<span id="cb127-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb127-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> s2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>item) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb127-6">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb127-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb127-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb127-9"></span>
<span id="cb127-10">    count</span>
<span id="cb127-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb127-12"></span>
<span id="cb127-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb127-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Test case</span></span>
<span id="cb127-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> s1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apple"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cherry"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb127-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> s2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kiwi"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apple"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grape"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb127-17"></span>
<span id="cb127-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Call the solution function</span></span>
<span id="cb127-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>s1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>s2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb127-20"></span>
<span id="cb127-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Print the result</span></span>
<span id="cb127-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count of common elements: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb127-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day17-문자열-수학-조건문-배열-사칙연산" class="level1" data-number="17">
<h1 data-number="17"><span class="header-section-number">17</span> Day17 문자열, 수학, 조건문, 배열, 사칙연산</h1>
<section id="숫자-찾기" class="level2" data-number="17.1">
<h2 data-number="17.1" class="anchored" data-anchor-id="숫자-찾기"><span class="header-section-number">17.1</span> 숫자 찾기</h2>
<p>정수 num 과 k 가 매개변수로 주어질 때, num 을 이루는 숫자 중에 k 가 있으면 num 의 그 숫자가 있는 자리 수를 return 하고 없으면 <img src="https://latex.codecogs.com/png.latex?-1"> 을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-63" class="level3" data-number="17.1.1">
<h3 data-number="17.1.1" class="anchored" data-anchor-id="파이썬-63"><span class="header-section-number">17.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb128" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb128-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb128-2">    num_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(num)</span>
<span id="cb128-3">    k_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(k)</span>
<span id="cb128-4">    index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_str.find(k_str)</span>
<span id="cb128-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb128-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb128-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb128-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-64" class="level3" data-number="17.1.2">
<h3 data-number="17.1.2" class="anchored" data-anchor-id="러스트-64"><span class="header-section-number">17.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb129" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb129-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb129-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb129-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb129-4"></span>
<span id="cb129-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> num_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>find(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>k_str) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb129-6">        <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Some</span>(index) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> (index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb129-7">        <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">None</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb129-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb129-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb129-10"></span>
<span id="cb129-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb129-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb129-13">        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb129-14">        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb129-15">        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5678</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb129-16">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb129-17"></span>
<span id="cb129-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb129-19">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb129-20">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number: {}, Search Digit: {}, Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb129-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb129-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="n-의-배수-고르기" class="level2" data-number="17.2">
<h2 data-number="17.2" class="anchored" data-anchor-id="n-의-배수-고르기"><span class="header-section-number">17.2</span> n 의 배수 고르기</h2>
<p>정수 n 과 정수 배열 numlist 가 매개변수로 주어질 때, numlist 에서 n 의 배수가 아닌 수들을 제거한 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-64" class="level3" data-number="17.2.1">
<h3 data-number="17.2.1" class="anchored" data-anchor-id="파이썬-64"><span class="header-section-number">17.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb130" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb130-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, numlist: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb130-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numlist <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</section>
<section id="러스트-65" class="level3" data-number="17.2.2">
<h3 data-number="17.2.2" class="anchored" data-anchor-id="러스트-65"><span class="header-section-number">17.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb131" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb131-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> numlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb131-2">    numlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb131-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb131-4"></span>
<span id="cb131-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb131-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb131-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numlist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb131-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numlist)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb131-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb131-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="자릿수-더하기" class="level2" data-number="17.3">
<h2 data-number="17.3" class="anchored" data-anchor-id="자릿수-더하기"><span class="header-section-number">17.3</span> 자릿수 더하기</h2>
<p>정수 n 이 매개변수로 주어질 때 n 의 각 자리 숫자의 합을 return 하도록 solution 함수를 완성해주세요</p>
<section id="파이썬-65" class="level3" data-number="17.3.1">
<h3 data-number="17.3.1" class="anchored" data-anchor-id="파이썬-65"><span class="header-section-number">17.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb132" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb132-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb132-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(digit) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> digit <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(n))</span></code></pre></div>
</section>
<section id="러스트-66" class="level3" data-number="17.3.2">
<h3 data-number="17.3.2" class="anchored" data-anchor-id="러스트-66"><span class="header-section-number">17.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb133" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb133-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-2">    n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb133-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb133-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>digit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> digit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_digit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)</span>
<span id="cb133-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb133-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb133-7"></span>
<span id="cb133-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12345</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="ox-퀴즈" class="level2" data-number="17.4">
<h2 data-number="17.4" class="anchored" data-anchor-id="ox-퀴즈"><span class="header-section-number">17.4</span> OX 퀴즈</h2>
<p>덧셈, 뺄셈 수식들이 <img src="https://latex.codecogs.com/png.latex?X%20%5B%EC%97%B0%EC%82%B0%EC%9E%90%5D%20Y%20=%20Z"> 형태로 들어있는 문자열 배열 quiz 가 매개변수로 주어집니다. 수식이 옳다면 “O”를 틀리다면 “X”를 순서대로 담은 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-66" class="level3" data-number="17.4.1">
<h3 data-number="17.4.1" class="anchored" data-anchor-id="파이썬-66"><span class="header-section-number">17.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb134" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb134-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(quiz: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb134-2">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb134-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> equation <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> quiz:</span>
<span id="cb134-4">        left, right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> equation.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span>)</span>
<span id="cb134-5">        left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> left.strip()</span>
<span id="cb134-6">        right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> right.strip()</span>
<span id="cb134-7"></span>
<span id="cb134-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>(left) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(right):</span>
<span id="cb134-9">            result.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>)</span>
<span id="cb134-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb134-11">            result.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>)</span>
<span id="cb134-12"></span>
<span id="cb134-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-67" class="level3" data-number="17.4.2">
<h3 data-number="17.4.2" class="anchored" data-anchor-id="러스트-67"><span class="header-section-number">17.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb135" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb135-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(quiz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-2">    quiz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>equation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> equation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-6"></span>
<span id="cb135-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> left_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> evaluate_expression(left)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> right_result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-9"></span>
<span id="cb135-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> left_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> right_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-11">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb135-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-13">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb135-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb135-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-17"></span>
<span id="cb135-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> evaluate_expression(expr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokens[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-21"></span>
<span id="cb135-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-23">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokens[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-24">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> operand <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokens[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-25"></span>
<span id="cb135-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-27">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"+"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> operand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-28">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> operand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-29">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> operand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-30">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> operand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-31">            _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">panic!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unknown operator"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-32">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-33">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-34"></span>
<span id="cb135-35">    result</span>
<span id="cb135-36"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-37"></span>
<span id="cb135-38"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-39">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> quiz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb135-40">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3 + 4 = 7"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-41">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5 * 6 = 30"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-42">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"19 - 6 = 13"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-43">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-44"></span>
<span id="cb135-45">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(quiz)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-46">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-47"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day18-문자열-수학-조건문-정렬" class="level1" data-number="18">
<h1 data-number="18"><span class="header-section-number">18</span> Day18 문자열, 수학, 조건문, 정렬</h1>
<section id="문자열안에-문자열" class="level2" data-number="18.1">
<h2 data-number="18.1" class="anchored" data-anchor-id="문자열안에-문자열"><span class="header-section-number">18.1</span> 문자열안에 문자열</h2>
<p>문자열 str1, str2 가 매개변수로 주어집니다. str1 안에 str2 가 있다면 1 을 없다면 2 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-67" class="level3" data-number="18.1.1">
<h3 data-number="18.1.1" class="anchored" data-anchor-id="파이썬-67"><span class="header-section-number">18.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb136" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb136-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(str1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, str2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb136-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> str2 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> str1 <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</section>
<section id="러스트-68" class="level3" data-number="18.1.2">
<h3 data-number="18.1.2" class="anchored" data-anchor-id="러스트-68"><span class="header-section-number">18.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb137" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb137-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(str2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-3">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb137-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb137-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-8"></span>
<span id="cb137-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, world!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb137-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"world"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb137-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb137-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output: 1</span></span>
<span id="cb137-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="제곱수-판별하기" class="level2" data-number="18.2">
<h2 data-number="18.2" class="anchored" data-anchor-id="제곱수-판별하기"><span class="header-section-number">18.2</span> 제곱수 판별하기</h2>
<p>어떤 자연수를 제곱했을 때 나오는 정수를 제곱수라고 합니다. 정수 n 이 매개변수로 주어질 때, n 이 제곱수라면 1 을 아니라면 2 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-68" class="level3" data-number="18.2.1">
<h3 data-number="18.2.1" class="anchored" data-anchor-id="파이썬-68"><span class="header-section-number">18.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb138" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb138-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb138-2"></span>
<span id="cb138-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb138-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> math.isqrt(n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> n <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</section>
<section id="러스트-69" class="level3" data-number="18.2.2">
<h3 data-number="18.2.2" class="anchored" data-anchor-id="러스트-69"><span class="header-section-number">18.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb139" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb139-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i64</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb139-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sqrt()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>powi(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb139-3">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb139-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb139-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb139-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb139-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb139-8"></span>
<span id="cb139-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb139-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb139-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(test_cases))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb139-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="세균증식" class="level2" data-number="18.3">
<h2 data-number="18.3" class="anchored" data-anchor-id="세균증식"><span class="header-section-number">18.3</span> 세균증식</h2>
<p>어떤 세균은 1 시간에 두배만큼 증식한다고 합니다. 처음 세균의 마리수 n 과 경과한 시간 t 가 매개변수로 주어질 때 t 시간 후 세균의 수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-69" class="level3" data-number="18.3.1">
<h3 data-number="18.3.1" class="anchored" data-anchor-id="파이썬-69"><span class="header-section-number">18.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb140" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb140-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, t: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb140-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> t)</span></code></pre></div>
</section>
<section id="러스트-70" class="level3" data-number="18.3.2">
<h3 data-number="18.3.2" class="anchored" data-anchor-id="러스트-70"><span class="header-section-number">18.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb141" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb141-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb141-2">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2_i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pow(t <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span>))</span>
<span id="cb141-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb141-4"></span>
<span id="cb141-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb141-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-9"></span>
<span id="cb141-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result for n = {}, t = {}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-정렬하기-2" class="level2" data-number="18.4">
<h2 data-number="18.4" class="anchored" data-anchor-id="문자열-정렬하기-2"><span class="header-section-number">18.4</span> 문자열 정렬하기 (2)</h2>
<p>영어 대소문자로 이루어진 문자열 my_string 이 매개변수로 주어질 때, my_string 을 모두 소문자로 바꾸고 알파벳 순서대로 정렬한 문자열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-70" class="level3" data-number="18.4.1">
<h3 data-number="18.4.1" class="anchored" data-anchor-id="파이썬-70"><span class="header-section-number">18.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb142" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb142-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb142-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(my_string.lower()))</span></code></pre></div>
</section>
<section id="러스트-71" class="level3" data-number="18.4.2">
<h3 data-number="18.4.2" class="anchored" data-anchor-id="러스트-71"><span class="header-section-number">18.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb143" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb143-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_lowercase()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-3">    chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_unstable()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-4">    chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb143-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb143-6"></span>
<span id="cb143-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bcad"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day19-문자열-배열-조건문" class="level1" data-number="19">
<h1 data-number="19"><span class="header-section-number">19</span> Day19 문자열, 배열, 조건문</h1>
<section id="의-배수" class="level2" data-number="19.1">
<h2 data-number="19.1" class="anchored" data-anchor-id="의-배수"><span class="header-section-number">19.1</span> 7 의 배수</h2>
<p>머쓱이는 행운의 숫자 7 을 가장 좋아합니다. 정수 배열 array 가 매개변수로 주어질 때, 7 이 총 몇 개 있는지 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-71" class="level3" data-number="19.1.1">
<h3 data-number="19.1.1" class="anchored" data-anchor-id="파이썬-71"><span class="header-section-number">19.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb144" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb144-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb144-2"></span>
<span id="cb144-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb144-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(array).count(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>)</span></code></pre></div>
</section>
<section id="러스트-72" class="level3" data-number="19.1.2">
<h3 data-number="19.1.2" class="anchored" data-anchor-id="러스트-72"><span class="header-section-number">19.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb145" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb145-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-2">    array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb145-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())</span>
<span id="cb145-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">collect::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()</span>
<span id="cb145-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>matches(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'7'</span>)</span>
<span id="cb145-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count()</span>
<span id="cb145-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb145-8"></span>
<span id="cb145-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">77</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>example_array)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-12"></span>
<span id="cb145-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input array: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_array)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of '7's: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="잘라서-배열로-저장하기" class="level2" data-number="19.2">
<h2 data-number="19.2" class="anchored" data-anchor-id="잘라서-배열로-저장하기"><span class="header-section-number">19.2</span> 잘라서 배열로 저장하기</h2>
<p>문자열 <code>my_str</code> 과 n 이 매개변수로 주어질 때, <code>my_str</code> 을 길이 n 씩 잘라서 저장한 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-72" class="level3" data-number="19.2.1">
<h3 data-number="19.2.1" class="anchored" data-anchor-id="파이썬-72"><span class="header-section-number">19.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb146" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb146-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb146-2"></span>
<span id="cb146-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_str: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb146-4">    answer: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb146-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(my_str), n):</span>
<span id="cb146-6">        answer.append(my_str[i:i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>n])</span>
<span id="cb146-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-73" class="level3" data-number="19.2.2">
<h3 data-number="19.2.2" class="anchored" data-anchor-id="러스트-73"><span class="header-section-number">19.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb147" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb147-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb147-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>my_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb147-4">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(my_str[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::cmp::</span>min(i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> my_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb147-6">    answer</span>
<span id="cb147-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb147-8"></span>
<span id="cb147-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb147-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcdefghij"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="중복된-숫자-개수" class="level2" data-number="19.3">
<h2 data-number="19.3" class="anchored" data-anchor-id="중복된-숫자-개수"><span class="header-section-number">19.3</span> 중복된 숫자 개수</h2>
<p>정수가 담긴 배열 array 와 정수 n 이 매개변수로 주어질 때, array 에 n 이 몇 개 있는 지를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-73" class="level3" data-number="19.3.1">
<h3 data-number="19.3.1" class="anchored" data-anchor-id="파이썬-73"><span class="header-section-number">19.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb148" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb148-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb148-2"></span>
<span id="cb148-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb148-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> array.count(n)</span></code></pre></div>
</section>
<section id="러스트-74" class="level3" data-number="19.3.2">
<h3 data-number="19.3.2" class="anchored" data-anchor-id="러스트-74"><span class="header-section-number">19.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb149" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb149-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb149-2">    array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;&amp;</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count()</span>
<span id="cb149-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb149-4"></span>
<span id="cb149-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb149-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb149-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb149-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb149-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of occurrences of {} in {:?}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb149-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="머쓱이보다-키-큰-사람" class="level2" data-number="19.4">
<h2 data-number="19.4" class="anchored" data-anchor-id="머쓱이보다-키-큰-사람"><span class="header-section-number">19.4</span> 머쓱이보다 키 큰 사람</h2>
<p>머쓱이는 학교에서 키 순으로 줄을 설 때 몇 번째로 서야 하는지 궁금해졌습니다. 머쓱이네 반 친구들의 키가 담긴 정수 배열 array 와 머쓱이의 키 height 가 매개변수로 주어질 때, 머쓱이보다 키 큰 사람 수를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-74" class="level3" data-number="19.4.1">
<h3 data-number="19.4.1" class="anchored" data-anchor-id="파이썬-74"><span class="header-section-number">19.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb150" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb150-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb150-2"></span>
<span id="cb150-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], height: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb150-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> person <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> array <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> person <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> height)</span></code></pre></div>
</section>
<section id="러스트-75" class="level3" data-number="19.4.2">
<h3 data-number="19.4.2" class="anchored" data-anchor-id="러스트-75"><span class="header-section-number">19.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb151" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb151-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb151-2">    array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;&amp;</span>person<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> person <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count()</span>
<span id="cb151-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb151-4"></span>
<span id="cb151-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb151-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">170</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">165</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">175</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">190</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">160</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb151-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">170</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb151-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb151-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of people taller than {}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb151-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day20-수학-시뮬레이션-문자열-사칙연산" class="level1" data-number="20">
<h1 data-number="20"><span class="header-section-number">20</span> Day20 수학, 시뮬레이션, 문자열, 사칙연산</h1>
<section id="직사각형-넓이-구하기" class="level2" data-number="20.1">
<h2 data-number="20.1" class="anchored" data-anchor-id="직사각형-넓이-구하기"><span class="header-section-number">20.1</span> 직사각형 넓이 구하기</h2>
<p>2 차원 좌표 평면에 변이 축과 평행한 직사각형이 있습니다. 직사각형 네 꼭짓점의 좌표 <img src="https://latex.codecogs.com/png.latex?%5B%5Bx1,%20y1%5D,%20%5Bx2,%20y2%5D,%20%5Bx3,%20y3%5D,%20%5Bx4,%20y4%5D%5D"> 가 담겨있는 배열 dots 가 매개변수로 주어질 때, 직사각형의 넓이를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-75" class="level3" data-number="20.1.1">
<h3 data-number="20.1.1" class="anchored" data-anchor-id="파이썬-75"><span class="header-section-number">20.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb152" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb152-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Tuple</span>
<span id="cb152-2"></span>
<span id="cb152-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(dots: List[Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb152-4">    x_coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [dot[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dot <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> dots]</span>
<span id="cb152-5">    y_coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [dot[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dot <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> dots]</span>
<span id="cb152-6"></span>
<span id="cb152-7">    width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(x_coords) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(x_coords)</span>
<span id="cb152-8">    height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(y_coords) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(y_coords)</span>
<span id="cb152-9"></span>
<span id="cb152-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> height</span></code></pre></div>
</section>
<section id="러스트-76" class="level3" data-number="20.1.2">
<h3 data-number="20.1.2" class="anchored" data-anchor-id="러스트-76"><span class="header-section-number">20.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb153" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb153-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(dots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb153-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> x_coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> x)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> y_coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-4"></span>
<span id="cb153-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x_coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>min()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y_coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y_coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>min()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-7"></span>
<span id="cb153-8">    width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> height</span>
<span id="cb153-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb153-10"></span>
<span id="cb153-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb153-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> dots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Area: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="캐릭터의-좌표" class="level2" data-number="20.2">
<h2 data-number="20.2" class="anchored" data-anchor-id="캐릭터의-좌표"><span class="header-section-number">20.2</span> 캐릭터의 좌표</h2>
<p>머쓱이는 RPG 게임을 하고 있습니다. 게임에는 up, down, left, right 방향키가 있으며 각 키를 누르면 위, 아래, 왼쪽, 오른쪽으로 한 칸씩 이동합니다. 예를 들어 <code>[0,0]</code> 에서 up 을 누른다면 캐릭터의 좌표는 <code>[0, 1]</code>, down 을 누른다면 <code>[0, -1]</code>, left 를 누른다면 <code>[-1, 0]</code>, right 를 누른다면 <code>[1, 0]</code> 입니다. 머쓱이가 입력한 방향키의 배열 keyinput 와 맵의 크기 board 이 매개변수로 주어집니다. 캐릭터는 항상 <code>[0,0]</code> 에서 시작할 때 키 입력이 모두 끝난 뒤에 캐릭터의 좌표 <code>[x, y]</code> 를 return 하도록 solution 함수를 완성해주세요.</p>
<ul>
<li><code>[0, 0]</code> 은 board 의 정 중앙에 위치합니다. 예를 들어 board 의 가로 크기가 9 라면 캐릭터는 왼쪽으로 최대 <code>[-4, 0]</code> 까지 오른쪽으로 최대 <code>[4, 0]</code> 까지 이동할 수 있습니다.</li>
</ul>
<section id="파이썬-76" class="level3" data-number="20.2.1">
<h3 data-number="20.2.1" class="anchored" data-anchor-id="파이썬-76"><span class="header-section-number">20.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb154" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb154-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb154-2"></span>
<span id="cb154-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(keyinput: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], board: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb154-4">    x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb154-5">    max_x, max_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> board[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, board[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb154-6"></span>
<span id="cb154-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> keyinput:</span>
<span id="cb154-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>max_x:</span>
<span id="cb154-9">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb154-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_x:</span>
<span id="cb154-11">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb154-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_y:</span>
<span id="cb154-13">            y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb154-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"down"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>max_y:</span>
<span id="cb154-15">            y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb154-16"></span>
<span id="cb154-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [x, y]</span></code></pre></div>
</section>
<section id="러스트-77" class="level3" data-number="20.2.2">
<h3 data-number="20.2.2" class="anchored" data-anchor-id="러스트-77"><span class="header-section-number">20.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb155" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb155-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(keyinput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb155-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> board[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> board[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-6"></span>
<span id="cb155-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> keyinput <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb155-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>as_str() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb155-9">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>max_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-10">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-11">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-12">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"down"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>max_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-13">            _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span></span>
<span id="cb155-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb155-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb155-16"></span>
<span id="cb155-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y]</span>
<span id="cb155-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb155-19"></span>
<span id="cb155-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb155-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> keyinput <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb155-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-26">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> board <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>keyinput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>board)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-29">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Final position: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="최댓값-만들기-2" class="level2" data-number="20.3">
<h2 data-number="20.3" class="anchored" data-anchor-id="최댓값-만들기-2"><span class="header-section-number">20.3</span> 최댓값 만들기 (2)</h2>
<p>정수 배열 numbers 가 매개변수로 주어집니다. numbers 의 원소 중 두 개를 곱해 만들 수 있는 최댓값을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-77" class="level3" data-number="20.3.1">
<h3 data-number="20.3.1" class="anchored" data-anchor-id="파이썬-77"><span class="header-section-number">20.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb156" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb156-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb156-2"></span>
<span id="cb156-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb156-4">    numbers.sort()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트를 오름차순으로 정렬</span></span>
<span id="cb156-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], numbers[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> numbers[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span></code></pre></div>
</section>
<section id="러스트-78" class="level3" data-number="20.3.2">
<h3 data-number="20.3.2" class="anchored" data-anchor-id="러스트-78"><span class="header-section-number">20.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb157" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb157-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb157-2">    numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort the vector in ascending order</span></span>
<span id="cb157-3">    numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max(numbers[numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> numbers[numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb157-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb157-5"></span>
<span id="cb157-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb157-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb157-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb157-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb157-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="다항식-더하기" class="level2" data-number="20.4">
<h2 data-number="20.4" class="anchored" data-anchor-id="다항식-더하기"><span class="header-section-number">20.4</span> 다항식 더하기</h2>
<p>한 개 이상의 항의 합으로 이루어진 식을 다항식이라고 합니다. 다항식을 계산할 때는 동류항끼리 계산해 정리합니다. 덧셈으로 이루어진 다항식 polynomial 이 매개변수로 주어질 때, 동류항끼리 더한 결괏값을 문자열로 return 하도록 solution 함수를 완성해보세요. 같은 식이라면 가장 짧은 수식을 return 합니다.</p>
<section id="파이썬-78" class="level3" data-number="20.4.1">
<h3 data-number="20.4.1" class="anchored" data-anchor-id="파이썬-78"><span class="header-section-number">20.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb158" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb158-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(polynomial: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb158-2">    x_terms: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb158-3">    constant: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb158-4"></span>
<span id="cb158-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> term <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> polynomial.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' + '</span>):</span>
<span id="cb158-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> term:</span>
<span id="cb158-7">            coef: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> term.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span></span>
<span id="cb158-8">            x_terms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(coef)</span>
<span id="cb158-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb158-10">            constant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(term)</span>
<span id="cb158-11"></span>
<span id="cb158-12">    result: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb158-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x_terms:</span>
<span id="cb158-14">        result.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>x_terms <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x_terms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">x"</span>)</span>
<span id="cb158-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> constant:</span>
<span id="cb158-16">        result.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(constant))</span>
<span id="cb158-17"></span>
<span id="cb158-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' + '</span>.join(result) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span></span></code></pre></div>
</section>
<section id="러스트-79" class="level3" data-number="20.4.2">
<h3 data-number="20.4.2" class="anchored" data-anchor-id="러스트-79"><span class="header-section-number">20.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb159" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb159-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(polynomial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> x_terms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> constant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-4"></span>
<span id="cb159-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> term <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> polynomial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" + "</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> term<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-7">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> coef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> term<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>replace(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-8">            x_terms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> coef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap_or(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-10">            constant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> term<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb159-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb159-13"></span>
<span id="cb159-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x_terms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-16">        result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x_terms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-17">            <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}x"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> x_terms)</span>
<span id="cb159-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-19">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb159-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb159-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> constant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-23">        result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(constant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-24">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb159-25"></span>
<span id="cb159-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-27">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb159-28">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-29">        result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" + "</span>)</span>
<span id="cb159-30">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb159-31"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb159-32"></span>
<span id="cb159-33"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-34">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> polynomial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3x + 7 + x"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-35">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(polynomial)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-36">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-37"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-21-문자열-사칙연산-시뮬레이션-2-차원배열-수학-배열" class="level1" data-number="21">
<h1 data-number="21"><span class="header-section-number">21</span> Day 21 문자열, 사칙연산, 시뮬레이션, 2 차원배열, 수학, 배열</h1>
<section id="숨어있는-숫자의-덧셈-2" class="level2" data-number="21.1">
<h2 data-number="21.1" class="anchored" data-anchor-id="숨어있는-숫자의-덧셈-2"><span class="header-section-number">21.1</span> 숨어있는 숫자의 덧셈 (2)</h2>
<p>문자열 my_string 이 매개변수로 주어집니다. my_string 은 소문자, 대문자, 자연수로만 구성되어있습니다. my_string 안의 자연수들의 합을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-79" class="level3" data-number="21.1.1">
<h3 data-number="21.1.1" class="anchored" data-anchor-id="파이썬-79"><span class="header-section-number">21.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb160" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb160-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb160-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb160-3"></span>
<span id="cb160-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb160-5">    numbers: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.findall(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'\d+'</span>, my_string)</span>
<span id="cb160-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, numbers))</span></code></pre></div>
</section>
<section id="러스트-80" class="level3" data-number="21.1.2">
<h3 data-number="21.1.2" class="anchored" data-anchor-id="러스트-80"><span class="header-section-number">21.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb161" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb161-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">regex::</span>Regex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb161-2"></span>
<span id="cb161-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb161-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> re <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Regex::</span>new(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\d+"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb161-5">    re<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>find_iter(my_string)</span>
<span id="cb161-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>as_str()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>ok())</span>
<span id="cb161-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb161-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb161-9"></span>
<span id="cb161-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb161-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aAb1B2cC34oOp"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb161-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(test_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb161-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum of numbers in '{}': {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> test_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb161-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="안전지대" class="level2" data-number="21.2">
<h2 data-number="21.2" class="anchored" data-anchor-id="안전지대"><span class="header-section-number">21.2</span> 안전지대</h2>
<p>다음 처럼 지뢰가 있는 지역과 지뢰에 인접한 위, 아래, 좌, 우 대각선 칸을 모두 위험지역으로 분류합니다.</p>
<pre><code>X | X  |  X
X | O  |  X
X | X  |  X</code></pre>
<p>지뢰는 2 차원 배열 board 에 1 로 표시되어 있고 board 에는 지뢰가 매설 된 지역 1 과, 지뢰가 없는 지역 0 만 존재합니다. 지뢰가 매설된 지역의 지도 board 가 매개변수로 주어질 때, 안전한 지역의 칸 수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-80" class="level3" data-number="21.2.1">
<h3 data-number="21.2.1" class="anchored" data-anchor-id="파이썬-80"><span class="header-section-number">21.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb163" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb163-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Set, Tuple</span>
<span id="cb163-2"></span>
<span id="cb163-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(board: List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb163-4">    n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(board)</span>
<span id="cb163-5">    danger_zones: Set[Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb163-6"></span>
<span id="cb163-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> mark_danger_zone(i: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, j: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb163-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> di <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>):</span>
<span id="cb163-9">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dj <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>):</span>
<span id="cb163-10">                ni, nj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> di, j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dj</span>
<span id="cb163-11">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> ni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> nj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n:</span>
<span id="cb163-12">                    danger_zones.add((ni, nj))</span>
<span id="cb163-13"></span>
<span id="cb163-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(board):</span>
<span id="cb163-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j, cell <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(row):</span>
<span id="cb163-16">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> cell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb163-17">                mark_danger_zone(i, j)</span>
<span id="cb163-18"></span>
<span id="cb163-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(danger_zones)</span></code></pre></div>
</section>
<section id="러스트-81" class="level3" data-number="21.2.2">
<h3 data-number="21.2.2" class="anchored" data-anchor-id="러스트-81"><span class="header-section-number">21.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb164" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb164-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> danger_zones <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::HashSet::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-4"></span>
<span id="cb164-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> mark_danger_zone(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> danger_zones<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> di <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dj <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-8">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> ni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> di<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-9">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> nj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-10">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> ni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> nj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> nj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-11">                    danger_zones<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>insert((ni<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> nj))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-12">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-13">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-16"></span>
<span id="cb164-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> row) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>cell) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-19">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> cell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-20">                mark_danger_zone(i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> danger_zones)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-21">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-24"></span>
<span id="cb164-25">    (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> danger_zones<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb164-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-27"></span>
<span id="cb164-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> board <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb164-30">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-31">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-32">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-33">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-34">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb164-35">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-36"></span>
<span id="cb164-37">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Safe squares: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>board))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-38"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="삼각형의-완성조건-2" class="level2" data-number="21.3">
<h2 data-number="21.3" class="anchored" data-anchor-id="삼각형의-완성조건-2"><span class="header-section-number">21.3</span> 삼각형의 완성조건 (2)</h2>
<p>선분 세 개로 삼각형을 만들기 위해서는 다음과 같은 조건을 만족해야 합니다.</p>
<ul>
<li>가장 긴 변의 길이는 다른 두 변의 길이의 합보다 작아야 합니다.</li>
</ul>
<p>삼각형의 두 변의 길이가 담긴 배열 sides 이 매개변수로 주어집니다. 나머지 한 변이 될 수 있는 정수의 개수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-81" class="level3" data-number="21.3.1">
<h3 data-number="21.3.1" class="anchored" data-anchor-id="파이썬-81"><span class="header-section-number">21.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb165" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb165-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb165-2"></span>
<span id="cb165-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(sides: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb165-4">    max_side: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(sides)</span>
<span id="cb165-5">    min_side: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(sides)</span>
<span id="cb165-6"></span>
<span id="cb165-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Case 1: 주어진 두 변 중 긴 변이 가장 긴 경우</span></span>
<span id="cb165-8">    count1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> min_side)</span>
<span id="cb165-9"></span>
<span id="cb165-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Case 2: 새로운 변이 가장 긴 경우</span></span>
<span id="cb165-11">    count2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> min_side) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb165-12"></span>
<span id="cb165-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> count2</span></code></pre></div>
</section>
<section id="러스트-82" class="level3" data-number="21.3.2">
<h3 data-number="21.3.2" class="anchored" data-anchor-id="러스트-82"><span class="header-section-number">21.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb166" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb166-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb166-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> min_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>min()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-4"></span>
<span id="cb166-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Case 1: 주어진 두 변 중 긴 변이 가장 긴 경우</span></span>
<span id="cb166-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> count1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> min_side)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-7"></span>
<span id="cb166-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Case 2: 새로운 변이 가장 긴 경우</span></span>
<span id="cb166-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> count2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> min_side) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-10"></span>
<span id="cb166-11">    count1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> count2</span>
<span id="cb166-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb166-13"></span>
<span id="cb166-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb166-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>sides))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="외계어-사전" class="level2" data-number="21.4">
<h2 data-number="21.4" class="anchored" data-anchor-id="외계어-사전"><span class="header-section-number">21.4</span> 외계어 사전</h2>
<p>PROGRAMMERS-962 행성에 불시착한 우주비행사 머쓱이는 외계행성의 언어를 공부하려고 합니다. 알파벳이 담긴 배열 spell 과 외계어 사전 dic 이 매개변수로 주어집니다. spell 에 담긴 알파벳을 한번씩만 모두 사용한 단어가 dic 에 존재한다면 1, 존재하지 않는다면 2 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-82" class="level3" data-number="21.4.1">
<h3 data-number="21.4.1" class="anchored" data-anchor-id="파이썬-82"><span class="header-section-number">21.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb167" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb167-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Set</span>
<span id="cb167-2"></span>
<span id="cb167-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(spell: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], dic: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb167-4">    spell_set: Set[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(spell)</span>
<span id="cb167-5"></span>
<span id="cb167-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> dic:</span>
<span id="cb167-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(word) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> spell_set <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(word) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(spell):</span>
<span id="cb167-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb167-9"></span>
<span id="cb167-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</section>
<section id="러스트-83" class="level3" data-number="21.4.2">
<h3 data-number="21.4.2" class="anchored" data-anchor-id="러스트-83"><span class="header-section-number">21.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb168" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb168-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-2"></span>
<span id="cb168-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(spell<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> dic<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> spell_set<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> HashSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spell<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>flat_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-5"></span>
<span id="cb168-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> dic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> word_set<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> HashSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> word_set <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> spell_set <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> word<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> spell<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-9">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb168-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb168-12"></span>
<span id="cb168-13">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb168-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb168-15"></span>
<span id="cb168-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> spell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> dic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sod"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eocd"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"qixm"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"adio"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"soo"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-19"></span>
<span id="cb168-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>spell<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dic))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day22-dp-수학-조건문-배열" class="level1" data-number="22">
<h1 data-number="22"><span class="header-section-number">22</span> Day22 dp, 수학, 조건문, 배열</h1>
<section id="저주의-숫자-3" class="level2" data-number="22.1">
<h2 data-number="22.1" class="anchored" data-anchor-id="저주의-숫자-3"><span class="header-section-number">22.1</span> 저주의 숫자 3</h2>
<p>3x 마을 사람들은 3 을 저주의 숫자라고 생각하기 때문에 3 의 배수와 숫자 3 을 사용하지 않습니다. 3x 마을 사람들의 숫자는 다음과 같습니다.</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th style="text-align: right;">10 진법</th>
<th style="text-align: right;">3x 마을에서 쓰는 숫자</th>
<th>10 진법</th>
<th>3x 마을에서 쓰는 숫자</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
<td>6</td>
<td>8</td>
</tr>
<tr class="even">
<td style="text-align: right;">2</td>
<td style="text-align: right;">2</td>
<td>7</td>
<td>10</td>
</tr>
<tr class="odd">
<td style="text-align: right;">3</td>
<td style="text-align: right;">4</td>
<td>8</td>
<td>11</td>
</tr>
<tr class="even">
<td style="text-align: right;">4</td>
<td style="text-align: right;">5</td>
<td>9</td>
<td>14</td>
</tr>
<tr class="odd">
<td style="text-align: right;">5</td>
<td style="text-align: right;">7</td>
<td>10</td>
<td>16</td>
</tr>
</tbody>
</table>
<p>정수 n 이 매개변수로 주어질 때, n 을 3x 마을에서 사용하는 숫자로 바꿔 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-83" class="level3" data-number="22.1.1">
<h3 data-number="22.1.1" class="anchored" data-anchor-id="파이썬-83"><span class="header-section-number">22.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb169" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb169-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb169-2">    answer: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb169-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n):</span>
<span id="cb169-4">        answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb169-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(answer):</span>
<span id="cb169-6">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb169-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-84" class="level3" data-number="22.1.2">
<h3 data-number="22.1.2" class="anchored" data-anchor-id="러스트-84"><span class="header-section-number">22.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb170" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb170-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-4">        answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'3'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-6">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb170-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb170-9">    answer</span>
<span id="cb170-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb170-11"></span>
<span id="cb170-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solution({}) = {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="평행" class="level2" data-number="22.2">
<h2 data-number="22.2" class="anchored" data-anchor-id="평행"><span class="header-section-number">22.2</span> 평행</h2>
<p>점 네 개의 좌표를 담은 이차원 배열 dots 가 다음과 같이 매개변수로 주어집니다. <code>[[x1, y1], [x2, y2], [x3, y3], [x4, y4]]</code> 주어진 네 개의 점을 두 개씩 이었을 때, 두 직선이 평행이 되는 경우가 있으면 1 을 없으면 0 을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-84" class="level3" data-number="22.2.1">
<h3 data-number="22.2.1" class="anchored" data-anchor-id="파이썬-84"><span class="header-section-number">22.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb171" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb171-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Tuple</span>
<span id="cb171-2"></span>
<span id="cb171-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gradient(arr1: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], arr2: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>:</span>
<span id="cb171-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""두 점 간의 기울기를 계산하는 함수"""</span></span>
<span id="cb171-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기울기 = (y2 - y1) / (x2 - x1)</span></span>
<span id="cb171-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (arr2[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> arr1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (arr2[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> arr1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb171-7"></span>
<span id="cb171-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(dots: List[Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb171-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""주어진 네 개의 점이 이루는 두 직선이 평행한지 확인하는 함수"""</span></span>
<span id="cb171-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 첫 번째와 두 번째 점, 세 번째와 네 번째 점을 이은 직선의 기울기를 비교</span></span>
<span id="cb171-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> gradient(dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gradient(dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]):</span>
<span id="cb171-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb171-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 첫 번째와 세 번째 점, 두 번째와 네 번째 점을 이은 직선의 기울기를 비교</span></span>
<span id="cb171-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> gradient(dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gradient(dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]):</span>
<span id="cb171-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb171-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 첫 번째와 네 번째 점, 두 번째와 세 번째 점을 이은 직선의 기울기를 비교</span></span>
<span id="cb171-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> gradient(dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gradient(dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]):</span>
<span id="cb171-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb171-19"></span>
<span id="cb171-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 어떤 경우에도 평행하지 않은 경우 0 반환</span></span>
<span id="cb171-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-85" class="level3" data-number="22.2.2">
<h3 data-number="22.2.2" class="anchored" data-anchor-id="러스트-85"><span class="header-section-number">22.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb172" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb172-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">type</span> Point <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-2"></span>
<span id="cb172-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> gradient(arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>Point<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>Point) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-4">    (arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span></span>
<span id="cb172-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-6"></span>
<span id="cb172-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(dots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[Point]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> gradient(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gradient(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-9">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb172-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> gradient(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gradient(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-11">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb172-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> gradient(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gradient(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-13">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb172-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-15">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb172-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-18"></span>
<span id="cb172-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> dots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="겹치는-선분의-길이" class="level2" data-number="22.3">
<h2 data-number="22.3" class="anchored" data-anchor-id="겹치는-선분의-길이"><span class="header-section-number">22.3</span> 겹치는 선분의 길이</h2>
<p>선분 3 개가 평행하게 놓여 있습니다. 세 선분의 시작과 끝 좌표가 <code>[[start, end], [start, end], [start, end]]</code> 형태로 들어있는 2 차원 배열 lines 가 매개변수로 주어질 때, 두 개 이상의 선분이 겹치는 부분의 길이를 return 하도록 solution 함수를 완성해보세요.</p>
<p>lines 가 <code>[[0, 2], [-3, -1], [-2, 1]]</code> 일 때 선분이 두 개 이상 겹친 곳은 <code>[-2, -1], [0, 1]</code> 로 길이 2 만큼 겹쳐있습니다.</p>
<section id="파이썬-85" class="level3" data-number="22.3.1">
<h3 data-number="22.3.1" class="anchored" data-anchor-id="파이썬-85"><span class="header-section-number">22.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb173" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb173-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Tuple</span>
<span id="cb173-2"></span>
<span id="cb173-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(lines: List[Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb173-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 좌표에 대해 겹치는 선분의 수를 기록할 리스트 초기화</span></span>
<span id="cb173-5">    line_counts: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">201</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -100 to 100, total 201 positions</span></span>
<span id="cb173-6"></span>
<span id="cb173-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 선분에 대해 시작점부터 끝점까지 겹치는 선분의 수를 증가</span></span>
<span id="cb173-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> start, end <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lines:</span>
<span id="cb173-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>):  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Shift by 100 to handle negative indices</span></span>
<span id="cb173-10">            line_counts[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb173-11"></span>
<span id="cb173-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 겹치는 선분의 수가 2 이상인 구간의 길이를 계산</span></span>
<span id="cb173-13">    overlap_length: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> count <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> line_counts <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb173-14"></span>
<span id="cb173-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> overlap_length</span></code></pre></div>
</section>
<section id="러스트-86" class="level3" data-number="22.3.2">
<h3 data-number="22.3.2" class="anchored" data-anchor-id="러스트-86"><span class="header-section-number">22.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb174" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb174-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(lines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> line_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">201</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// -100 to 100, total 201 positions</span></span>
<span id="cb174-3"></span>
<span id="cb174-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> end) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-6">            line_counts[i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-9"></span>
<span id="cb174-10">    line_counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;&amp;</span>count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb174-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-12"></span>
<span id="cb174-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>lines)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Overlapping length: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="유한소수-판별하기" class="level2" data-number="22.4">
<h2 data-number="22.4" class="anchored" data-anchor-id="유한소수-판별하기"><span class="header-section-number">22.4</span> 유한소수 판별하기</h2>
<p>소수점 아래 숫자가 계속되지 않고 유한개인 소수를 유한소수라고 합니다. 분수를 소수로 고칠 때 유한소수로 나타낼 수 있는 분수인지 판별하려고 합니다. 유한소수가 되기 위한 분수의 조건은 다음과 같습니다.</p>
<ul>
<li>기약분수로 나타내었을 때, 분모의 소인수가 2 와 5 만 존재해야 합니다.</li>
</ul>
<p>두 정수 a 와 b 가 매개변수로 주어질 때, a/b 가 유한소수이면 1 을, 무한소수라면 2 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-86" class="level3" data-number="22.4.1">
<h3 data-number="22.4.1" class="anchored" data-anchor-id="파이썬-86"><span class="header-section-number">22.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb175" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb175-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gcd(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb175-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b:</span>
<span id="cb175-3">        a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> b</span>
<span id="cb175-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a</span>
<span id="cb175-5"></span>
<span id="cb175-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb175-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기약분수로 만들기</span></span>
<span id="cb175-8">    divisor: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gcd(a, b)</span>
<span id="cb175-9">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> divisor</span>
<span id="cb175-10"></span>
<span id="cb175-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 분모의 소인수 찾기</span></span>
<span id="cb175-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb175-13">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb175-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb175-15">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb175-16"></span>
<span id="cb175-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 분모가 1이면 유한소수, 아니면 무한소수</span></span>
<span id="cb175-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</section>
<section id="러스트-87" class="level3" data-number="22.4.2">
<h3 data-number="22.4.2" class="anchored" data-anchor-id="러스트-87"><span class="header-section-number">22.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb176" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb176-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> gcd(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-4">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-5">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-7">    a</span>
<span id="cb176-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-9"></span>
<span id="cb176-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Simplify the fraction</span></span>
<span id="cb176-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gcd(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-13">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> divisor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-14"></span>
<span id="cb176-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find prime factors of the denominator</span></span>
<span id="cb176-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-17">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-20">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-22"></span>
<span id="cb176-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If denominator is 1, it's a finite decimal, otherwise infinite</span></span>
<span id="cb176-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-26"></span>
<span id="cb176-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-31">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result for {}/{}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-32"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-23-배열-정렬-문자열" class="level1" data-number="23">
<h1 data-number="23"><span class="header-section-number">23</span> Day 23 배열, 정렬, 문자열</h1>
<section id="특이한-정렬" class="level2" data-number="23.1">
<h2 data-number="23.1" class="anchored" data-anchor-id="특이한-정렬"><span class="header-section-number">23.1</span> 특이한 정렬</h2>
<p>정수 n 을 기준으로 n 과 가까운 수부터 정렬하려고 합니다. 이때 n 으로부터의 거리가 같다면 더 큰 수를 앞에 오도록 배치합니다. 정수가 담긴 배열 numlist 와 정수 n 이 주어질 때 numlist 의 원소를 n 으로부터 가까운 순서대로 정렬한 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-87" class="level3" data-number="23.1.1">
<h3 data-number="23.1.1" class="anchored" data-anchor-id="파이썬-87"><span class="header-section-number">23.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb177" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb177-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb177-2"></span>
<span id="cb177-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numlist: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb177-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(numlist, key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n), <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>x))</span></code></pre></div>
</section>
<section id="러스트-88" class="level3" data-number="23.1.2">
<h3 data-number="23.1.2" class="anchored" data-anchor-id="러스트-88"><span class="header-section-number">23.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb178" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb178-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> numlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb178-2">    numlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_by(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb178-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> diff_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>abs()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> diff_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>abs()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-5">        diff_a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cmp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>diff_b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>then(b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cmp(a))</span>
<span id="cb178-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-7">    numlist</span>
<span id="cb178-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb178-9"></span>
<span id="cb178-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb178-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numlist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(numlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sorted list: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="등수-매기기" class="level2" data-number="23.2">
<h2 data-number="23.2" class="anchored" data-anchor-id="등수-매기기"><span class="header-section-number">23.2</span> 등수 매기기</h2>
<p>영어 점수와 수학 점수의 평균 점수를 기준으로 학생들의 등수를 매기려고 합니다. 영어 점수와 수학 점수를 담은 2 차원 정수 배열 score 가 주어질 때, 영어 점수와 수학 점수의 평균을 기준으로 매긴 등수를 담은 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-88" class="level3" data-number="23.2.1">
<h3 data-number="23.2.1" class="anchored" data-anchor-id="파이썬-88"><span class="header-section-number">23.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb179" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb179-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb179-2"></span>
<span id="cb179-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(score: List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb179-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 평균 점수 계산</span></span>
<span id="cb179-5">    averages: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(s) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> score]</span>
<span id="cb179-6"></span>
<span id="cb179-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 평균 점수를 기준으로 내림차순 정렬한 리스트 생성</span></span>
<span id="cb179-8">    sorted_averages: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(averages, reverse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb179-9"></span>
<span id="cb179-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 점수의 등수 계산</span></span>
<span id="cb179-11">    ranks: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [sorted_averages.index(avg) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> avg <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> averages]</span>
<span id="cb179-12"></span>
<span id="cb179-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ranks</span></code></pre></div>
</section>
<section id="러스트-89" class="level3" data-number="23.2.2">
<h3 data-number="23.2.2" class="anchored" data-anchor-id="러스트-89"><span class="header-section-number">23.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb180" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb180-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb180-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 평균 점수 계산</span></span>
<span id="cb180-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> averages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb180-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">sum::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>)</span>
<span id="cb180-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-6"></span>
<span id="cb180-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a sorted list of averages in descending order</span></span>
<span id="cb180-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> sorted_averages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> averages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-9">    sorted_averages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_by(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>partial_cmp(a)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-10"></span>
<span id="cb180-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate ranks for each score</span></span>
<span id="cb180-12">    averages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb180-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>avg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> sorted_averages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>position(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> avg)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb180-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb180-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb180-16"></span>
<span id="cb180-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb180-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>score)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ranks: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="옹알이-1" class="level2" data-number="23.3">
<h2 data-number="23.3" class="anchored" data-anchor-id="옹알이-1"><span class="header-section-number">23.3</span> 옹알이 (1)</h2>
<p>머쓱이는 태어난 지 6 개월 된 조카를 돌보고 있습니다. 조카는 아직 “aya”, “ye”, “woo”, “ma” 네 가지 발음을 최대 한 번씩 사용해 조합한 (이어 붙인) 발음밖에 하지 못합니다. 문자열 배열 babbling 이 매개변수로 주어질 때, 머쓱이의 조카가 발음할 수 있는 단어의 개수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-89" class="level3" data-number="23.3.1">
<h3 data-number="23.3.1" class="anchored" data-anchor-id="파이썬-89"><span class="header-section-number">23.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb181" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb181-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb181-2"></span>
<span id="cb181-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(babbling: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb181-4">    possible: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aya"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ye"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"woo"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ma"</span>]</span>
<span id="cb181-5">    count: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb181-6"></span>
<span id="cb181-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> babbling:</span>
<span id="cb181-8">        temp: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word</span>
<span id="cb181-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> sound <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> possible:</span>
<span id="cb181-10">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sound <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> temp:</span>
<span id="cb181-11">                temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp.replace(sound, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb181-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> temp.strip() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>:</span>
<span id="cb181-13">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb181-14"></span>
<span id="cb181-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count</span></code></pre></div>
</section>
<section id="러스트-90" class="level3" data-number="23.3.2">
<h3 data-number="23.3.2" class="anchored" data-anchor-id="러스트-90"><span class="header-section-number">23.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb182" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb182-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(babbling<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> possible <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aya"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ye"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"woo"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ma"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-4"></span>
<span id="cb182-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> babbling <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> sound <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>possible <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(sound) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-9">                temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>replacen(sound<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-10">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-13">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-16"></span>
<span id="cb182-17">    count</span>
<span id="cb182-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-19"></span>
<span id="cb182-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> babbling <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb182-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aya"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb182-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yee"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb182-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"u"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb182-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maa"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb182-26">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(babbling)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-28">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count of possible words: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-29"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="로그인-성공" class="level2" data-number="23.4">
<h2 data-number="23.4" class="anchored" data-anchor-id="로그인-성공"><span class="header-section-number">23.4</span> 로그인 성공?</h2>
<p>머쓱이는 프로그래머스에 로그인하려고 합니다. 머쓱이가 입력한 아이디와 패스워드가 담긴 배열 id_pw 와 회원들의 정보가 담긴 2 차원 배열 db 가 주어질 때, 다음과 같이 로그인 성공, 실패에 따른 메시지를 return 하도록 solution 함수를 완성해주세요.</p>
<ul>
<li>아이디와 비밀번호가 모두 일치하는 회원정보가 있으면 “login”을 return 합니다.</li>
<li>로그인이 실패했을 때 아이디가 일치하는 회원이 없다면 “fail”를, 아이디는 일치하지만 비밀번호가 일치하는 회원이 없다면 “wrong pw”를 return 합니다.</li>
</ul>
<section id="파이썬-90" class="level3" data-number="23.4.1">
<h3 data-number="23.4.1" class="anchored" data-anchor-id="파이썬-90"><span class="header-section-number">23.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb183" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb183-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Tuple</span>
<span id="cb183-2"></span>
<span id="cb183-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(id_pw: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], db: List[Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb183-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb183-5">    pw: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb183-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, pw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> id_pw</span>
<span id="cb183-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> db_id, db_pw <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> db:</span>
<span id="cb183-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> db_id:</span>
<span id="cb183-9">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> db_pw:</span>
<span id="cb183-10">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"login"</span></span>
<span id="cb183-11">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb183-12">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wrong pw"</span></span>
<span id="cb183-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fail"</span></span></code></pre></div>
</section>
<section id="러스트-91" class="level3" data-number="23.4.2">
<h3 data-number="23.4.2" class="anchored" data-anchor-id="러스트-91"><span class="header-section-number">23.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb184" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb184-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(id_pw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> (<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> db<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pw) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> id_pw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (db_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> db_pw) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> db <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> db_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> db_pw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-6">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"login"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-7">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-8">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wrong pw"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-9">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb184-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb184-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb184-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fail"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb184-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb184-14"></span>
<span id="cb184-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> id_pw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"programmer"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"111"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> db <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb184-18">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"programmer"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"111"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb184-19">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"coder"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"222"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb184-20">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(id_pw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> db)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day24-수학-시뮬레이션-문자열-조건문-반복문" class="level1" data-number="24">
<h1 data-number="24"><span class="header-section-number">24</span> Day24 수학, 시뮬레이션, 문자열, 조건문, 반복문</h1>
<section id="치킨-쿠폰" class="level2" data-number="24.1">
<h2 data-number="24.1" class="anchored" data-anchor-id="치킨-쿠폰"><span class="header-section-number">24.1</span> 치킨 쿠폰</h2>
<p>프로그래머스 치킨은 치킨을 시켜먹으면 한 마리당 쿠폰을 한 장 발급합니다. 쿠폰을 열 장 모으면 치킨을 한 마리 서비스로 받을 수 있고, 서비스 치킨에도 쿠폰이 발급됩니다. 시켜먹은 치킨의 수 chicken 이 매개변수로 주어질 때 받을 수 있는 최대 서비스 치킨의 수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-91" class="level3" data-number="24.1.1">
<h3 data-number="24.1.1" class="anchored" data-anchor-id="파이썬-91"><span class="header-section-number">24.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb185" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb185-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(chicken: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb185-2">    service_chicken: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb185-3">    coupons: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chicken</span>
<span id="cb185-4"></span>
<span id="cb185-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb185-6">        new_chicken: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb185-7">        service_chicken <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> new_chicken</span>
<span id="cb185-8">        coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> new_chicken</span>
<span id="cb185-9"></span>
<span id="cb185-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> service_chicken</span></code></pre></div>
</section>
<section id="러스트-92" class="level3" data-number="24.1.2">
<h3 data-number="24.1.2" class="anchored" data-anchor-id="러스트-92"><span class="header-section-number">24.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb186" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb186-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(chicken<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb186-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> service_chicken <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chicken<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-4"></span>
<span id="cb186-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb186-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> new_chicken <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-7">        service_chicken <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> new_chicken<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-8">        coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> new_chicken<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb186-10"></span>
<span id="cb186-11">    service_chicken</span>
<span id="cb186-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb186-13"></span>
<span id="cb186-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb186-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1081</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(test_input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input: {}, Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> test_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="이진수-더하기" class="level2" data-number="24.2">
<h2 data-number="24.2" class="anchored" data-anchor-id="이진수-더하기"><span class="header-section-number">24.2</span> 이진수 더하기</h2>
<p>이진수를 의미하는 두 개의 문자열 bin1 과 bin2 가 매개변수로 주어질 때, 두 이진수의 합을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-92" class="level3" data-number="24.2.1">
<h3 data-number="24.2.1" class="anchored" data-anchor-id="파이썬-92"><span class="header-section-number">24.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb187" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb187-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(bin1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, bin2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb187-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이진수 문자열을 10진수 정수로 변환</span></span>
<span id="cb187-3">    num1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(bin1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb187-4">    num2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(bin2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb187-5"></span>
<span id="cb187-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 두 수를 더함</span></span>
<span id="cb187-7">    sum_num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num2</span>
<span id="cb187-8"></span>
<span id="cb187-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과를 다시 이진수 문자열로 변환</span></span>
<span id="cb187-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bin</span>(sum_num)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span></code></pre></div>
</section>
<section id="러스트-93" class="level3" data-number="24.2.2">
<h3 data-number="24.2.2" class="anchored" data-anchor-id="러스트-93"><span class="header-section-number">24.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb188" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb188-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(bin1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb188-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 이진수 문자열을 10진수 정수로 변환</span></span>
<span id="cb188-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from_str_radix(bin1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from_str_radix(bin2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-5"></span>
<span id="cb188-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 두 수를 더함</span></span>
<span id="cb188-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sum_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-8"></span>
<span id="cb188-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 결과를 다시 이진수 문자열로 변환</span></span>
<span id="cb188-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:b}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> sum_num)</span>
<span id="cb188-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb188-12"></span>
<span id="cb188-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb188-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Test case</span></span>
<span id="cb188-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> bin1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1001"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> bin2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1111"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-17"></span>
<span id="cb188-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(bin1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-19"></span>
<span id="cb188-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binary 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binary 2: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum (binary): {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="a-로-b-만들기" class="level2" data-number="24.3">
<h2 data-number="24.3" class="anchored" data-anchor-id="a-로-b-만들기"><span class="header-section-number">24.3</span> A 로 B 만들기</h2>
<p>문자열 before 와 after 가 매개변수로 주어질 때, before 의 순서를 바꾸어 after 를 만들 수 있으면 1 을, 만들 수 없으면 0 을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-93" class="level3" data-number="24.3.1">
<h3 data-number="24.3.1" class="anchored" data-anchor-id="파이썬-93"><span class="header-section-number">24.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb189" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb189-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(before: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, after: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb189-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(before) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(after) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-94" class="level3" data-number="24.3.2">
<h3 data-number="24.3.2" class="anchored" data-anchor-id="러스트-94"><span class="header-section-number">24.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb190" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb190-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(bin1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb190-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 이진수 문자열을 10진수 정수로 변환</span></span>
<span id="cb190-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from_str_radix(bin1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from_str_radix(bin2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-5"></span>
<span id="cb190-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 두 수를 더함</span></span>
<span id="cb190-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sum_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-8"></span>
<span id="cb190-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 결과를 다시 이진수 문자열로 변환</span></span>
<span id="cb190-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:b}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> sum_num)</span>
<span id="cb190-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb190-12"></span>
<span id="cb190-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb190-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Test case</span></span>
<span id="cb190-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> bin1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1001"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> bin2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1111"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-17"></span>
<span id="cb190-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(bin1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-19"></span>
<span id="cb190-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binary 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binary 2: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum (binary): {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="k-의-개수" class="level2" data-number="24.4">
<h2 data-number="24.4" class="anchored" data-anchor-id="k-의-개수"><span class="header-section-number">24.4</span> k 의 개수</h2>
<p>1 부터 13 까지의 수에서, 1 은 1, 10, 11, 12, 13 이렇게 총 6 번 등장합니다. 정수 i, j, k 가 매개변수로 주어질 때, i 부터 j 까지 k 가 몇 번 등장하는지 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-94" class="level3" data-number="24.4.1">
<h3 data-number="24.4.1" class="anchored" data-anchor-id="파이썬-94"><span class="header-section-number">24.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb191" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb191-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(i: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, j: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb191-2">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb191-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(i, j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb191-4">        count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(num).count(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(k))</span>
<span id="cb191-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count</span></code></pre></div>
</section>
<section id="러스트-95" class="level3" data-number="24.4.2">
<h3 data-number="24.4.2" class="anchored" data-anchor-id="러스트-95"><span class="header-section-number">24.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb192" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb192-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb192-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb192-4">        count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>next()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb192-6">    count</span>
<span id="cb192-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb192-8"></span>
<span id="cb192-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb192-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Simple test</span></span>
<span id="cb192-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day25-시뮬레이션-조건문-수학" class="level1" data-number="25">
<h1 data-number="25"><span class="header-section-number">25</span> Day25 시뮬레이션, 조건문, 수학</h1>
<section id="문자열-밀기" class="level2" data-number="25.1">
<h2 data-number="25.1" class="anchored" data-anchor-id="문자열-밀기"><span class="header-section-number">25.1</span> 문자열 밀기</h2>
<p>문자열 “hello”에서 각 문자를 오른쪽으로 한 칸씩 밀고 마지막 문자는 맨 앞으로 이동시키면 “ohell”이 됩니다. 이것을 문자열을 민다고 정의한다면 문자열 A 와 B 가 매개변수로 주어질 때, A 를 밀어서 B 가 될 수 있다면 밀어야 하는 최소 횟수를 return 하고 밀어서 B 가 될 수 없으면 -1 을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-95" class="level3" data-number="25.1.1">
<h3 data-number="25.1.1" class="anchored" data-anchor-id="파이썬-95"><span class="header-section-number">25.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb193" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb193-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(A: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, B: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb193-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> B:</span>
<span id="cb193-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb193-4"></span>
<span id="cb193-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb193-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> A[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> A[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> B:</span>
<span id="cb193-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i</span>
<span id="cb193-8"></span>
<span id="cb193-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-96" class="level3" data-number="25.1.2">
<h3 data-number="25.1.2" class="anchored" data-anchor-id="러스트-96"><span class="header-section-number">25.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb194" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb194-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb194-5"></span>
<span id="cb194-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>a[a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>a[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb194-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb194-11"></span>
<span id="cb194-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb194-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb194-14"></span>
<span id="cb194-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ollo"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solution = {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="종이-자르기" class="level2" data-number="25.2">
<h2 data-number="25.2" class="anchored" data-anchor-id="종이-자르기"><span class="header-section-number">25.2</span> 종이 자르기</h2>
<p>머쓱이는 큰 종이를 1 x 1 크기로 자르려고 합니다. 예를 들어 2 x 2 크기의 종이를 1 x 1 크기로 자르려면 최소 가위질 세 번이 필요합니다.</p>
<section id="파이썬-96" class="level3" data-number="25.2.1">
<h3 data-number="25.2.1" class="anchored" data-anchor-id="파이썬-96"><span class="header-section-number">25.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb195" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb195-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(M: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, N: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb195-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> M <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> N <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> M <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> N <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-97" class="level3" data-number="25.2.2">
<h3 data-number="25.2.2" class="anchored" data-anchor-id="러스트-97"><span class="header-section-number">25.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb196" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb196-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-3">        m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb196-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb196-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb196-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb196-8"></span>
<span id="cb196-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb196-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solution = {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb196-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="연속된-수의-합" class="level2" data-number="25.3">
<h2 data-number="25.3" class="anchored" data-anchor-id="연속된-수의-합"><span class="header-section-number">25.3</span> 연속된 수의 합</h2>
<p>연속된 세 개의 정수를 더해 12 가 되는 경우는 3, 4, 5 입니다. 두 정수 num 과 total 이 주어집니다. 연속된 수 num 개를 더한 값이 total 이 될 때, 정수 배열을 오름차순으로 담아 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-97" class="level3" data-number="25.3.1">
<h3 data-number="25.3.1" class="anchored" data-anchor-id="파이썬-97"><span class="header-section-number">25.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb197" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb197-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb197-2"></span>
<span id="cb197-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, total: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb197-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연속된 수의 시작값 계산</span></span>
<span id="cb197-5">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(num))) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> num</span>
<span id="cb197-6"></span>
<span id="cb197-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시작값부터 num개의 연속된 수 리스트 생성</span></span>
<span id="cb197-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(start, start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num))</span></code></pre></div>
</section>
<section id="러스트-98" class="level3" data-number="25.3.2">
<h3 data-number="25.3.2" class="anchored" data-anchor-id="러스트-98"><span class="header-section-number">25.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb198" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb198-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb198-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">sum::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-3">    (start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb198-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb198-5"></span>
<span id="cb198-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb198-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> total)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solution({}, {}) = {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="다음에-올-숫자" class="level2" data-number="25.4">
<h2 data-number="25.4" class="anchored" data-anchor-id="다음에-올-숫자"><span class="header-section-number">25.4</span> 다음에 올 숫자</h2>
<p>등차수열 혹은 등비수열 common 이 매개변수로 주어질 때, 마지막 원소 다음으로 올 숫자를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-98" class="level3" data-number="25.4.1">
<h3 data-number="25.4.1" class="anchored" data-anchor-id="파이썬-98"><span class="header-section-number">25.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb199" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb199-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb199-2"></span>
<span id="cb199-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(common: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb199-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]:</span>
<span id="cb199-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 등차수열인 경우</span></span>
<span id="cb199-6">        diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb199-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> common[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> diff</span>
<span id="cb199-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb199-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 등비수열인 경우</span></span>
<span id="cb199-10">        ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb199-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(common[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ratio)</span></code></pre></div>
</section>
<section id="러스트-99" class="level3" data-number="25.4.2">
<h3 data-number="25.4.2" class="anchored" data-anchor-id="러스트-99"><span class="header-section-number">25.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb200" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb200-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(common<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Arithmetic sequence</span></span>
<span id="cb200-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-5">        common[common<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> diff</span>
<span id="cb200-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Geometric sequence</span></span>
<span id="cb200-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-9">        (common[common<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ratio)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>round() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb200-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb200-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb200-12"></span>
<span id="cb200-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(sequence)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Next number in the sequence: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="마치며" class="level1" data-number="26">
<h1 data-number="26"><span class="header-section-number">26</span> 마치며</h1>
<p>이 글에서 파이썬과 러스트 두 언어로 다양한 문제 해결 방법을 살펴보았습니다. 두 언어를 서로 비교하면서 각각의 특성과 장단점을 이해하는 데 도움이 되었을 것입니다. 중요한 것은 포기하지 않고 꾸준히 공부하는 자세입니다. 어려움을 극복하고 문제를 해결해 나가는 과정에서 실력이 향상될 것입니다. 코딩테스트는 개발자로서의 논리적 사고력과 문제 해결 능력을 키우는 좋은 기회라는 점을 잊지 마세요. 여러분의 노력이 반드시 결실을 맺기를 바랍니다!</p>


</section>

 ]]></description>
  <category>Coding test</category>
  <category>Python</category>
  <category>Rust</category>
  <category>Programming</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Codingtest_beginer.html</guid>
  <pubDate>Sat, 11 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>코딩테스트 기초</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Codingtest_training.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Codingtest_training.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Codingtest_training.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>코딩테스트 기초 테스트의 출처는 https://school.programmers.co.kr 입니다.</p>
<section id="day1-출력" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Day1 출력</h1>
<section id="문자열-출력하기" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="문자열-출력하기"><span class="header-section-number">1.1</span> 문자열 출력하기</h2>
<p>문자열&nbsp;<code>str</code> 이 주어질 때,&nbsp;<code>str</code> 을 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬" class="level3" data-number="1.1.1">
<h3 data-number="1.1.1" class="anchored" data-anchor-id="파이썬"><span class="header-section-number">1.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>()</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>)</span></code></pre></div>
</section>
<section id="러스트" class="level3" data-number="1.1.2">
<h3 data-number="1.1.2" class="anchored" data-anchor-id="러스트"><span class="header-section-number">1.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::</span>io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> s)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-6">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="a-와-b-출력하기" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="a-와-b-출력하기"><span class="header-section-number">1.2</span> a 와 b 출력하기</h2>
<p>정수&nbsp;<code>a</code> 와&nbsp;<code>b</code> 가 주어집니다. 각 수를 입력받아 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-1" class="level3" data-number="1.2.1">
<h3 data-number="1.2.1" class="anchored" data-anchor-id="파이썬-1"><span class="header-section-number">1.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>().strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>))</span>
<span id="cb3-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"a = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"b = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</section>
<section id="러스트-1" class="level3" data-number="1.2.2">
<h3 data-number="1.2.2" class="anchored" data-anchor-id="러스트-1"><span class="header-section-number">1.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::</span>io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to read line"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-6"></span>
<span id="cb4-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input</span>
<span id="cb4-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()</span>
<span id="cb4-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()</span>
<span id="cb4-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Parse error"</span>))</span>
<span id="cb4-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-12"></span>
<span id="cb4-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-15"></span>
<span id="cb4-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a = {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b = {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-반복해서-출력하기" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="문자열-반복해서-출력하기"><span class="header-section-number">1.3</span> 문자열 반복해서 출력하기</h2>
<p>문자열&nbsp;<code>str</code> 과 정수&nbsp;<code>n</code> 이 주어집니다. <code>str</code> 이&nbsp;<code>n</code> 번 반복된 문자열을 만들어 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-2" class="level3" data-number="1.3.1">
<h3 data-number="1.3.1" class="anchored" data-anchor-id="파이썬-2"><span class="header-section-number">1.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>().strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb5-2">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n)</span>
<span id="cb5-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n)</span></code></pre></div>
</section>
<section id="러스트-2" class="level3" data-number="1.3.2">
<h3 data-number="1.3.2" class="anchored" data-anchor-id="러스트-2"><span class="header-section-number">1.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::</span>io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to read line"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-6"></span>
<span id="cb6-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-8"></span>
<span id="cb6-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid input format"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-13"></span>
<span id="cb6-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str_part <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to parse number"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-16"></span>
<span id="cb6-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str_part<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>repeat(n))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="대소문자-바꿔서-출력하기" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="대소문자-바꿔서-출력하기"><span class="header-section-number">1.4</span> 대소문자 바꿔서 출력하기</h2>
<p>영어 알파벳으로 이루어진 문자열&nbsp;<code>str</code> 이 주어집니다. 각 알파벳을 대문자는 소문자로 소문자는 대문자로 변환해서 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-3" class="level3" data-number="1.4.1">
<h3 data-number="1.4.1" class="anchored" data-anchor-id="파이썬-3"><span class="header-section-number">1.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>()</span>
<span id="cb7-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.swapcase())</span></code></pre></div>
</section>
<section id="러스트-3" class="level3" data-number="1.4.2">
<h3 data-number="1.4.2" class="anchored" data-anchor-id="러스트-3"><span class="header-section-number">1.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::io::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">self</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">BufRead</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>lock()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-6"></span>
<span id="cb8-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> swapped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_uppercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-9">            c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_lowercase()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>next()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()</span>
<span id="cb8-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_lowercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-11">            c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_uppercase()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>next()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()</span>
<span id="cb8-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-13">            c</span>
<span id="cb8-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">collect::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-16"></span>
<span id="cb8-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">print!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> swapped)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="특수문자-출력하기" class="level2" data-number="1.5">
<h2 data-number="1.5" class="anchored" data-anchor-id="특수문자-출력하기"><span class="header-section-number">1.5</span> 특수문자 출력하기</h2>
<p><code>!@#$%^&amp;*(\'"&lt;&gt;?:;</code> 과 같이 출력하도록 코드를 작성해 주세요.</p>
<section id="파이썬-4" class="level3" data-number="1.5.1">
<h3 data-number="1.5.1" class="anchored" data-anchor-id="파이썬-4"><span class="header-section-number">1.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"!@#$%^&amp;*(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;&gt;?:;"</span>)</span></code></pre></div>
</section>
<section id="러스트-4" class="level3" data-number="1.5.2">
<h3 data-number="1.5.2" class="anchored" data-anchor-id="러스트-4"><span class="header-section-number">1.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-2">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"!@#$%^&amp;*(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;&gt;?:;"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day2-출력-연산" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Day2 출력, 연산</h1>
<section id="덧셈식-출력하기" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="덧셈식-출력하기"><span class="header-section-number">2.1</span> 덧셈식 출력하기</h2>
<p>두 정수&nbsp;<code>a</code>,&nbsp;<code>b</code> 가 주어질 때 계산식을 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-5" class="level3" data-number="2.1.1">
<h3 data-number="2.1.1" class="anchored" data-anchor-id="파이썬-5"><span class="header-section-number">2.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>().strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>))</span>
<span id="cb11-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> + </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</section>
<section id="러스트-5" class="level3" data-number="2.1.2">
<h3 data-number="2.1.2" class="anchored" data-anchor-id="러스트-5"><span class="header-section-number">2.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::</span>io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-2"></span>
<span id="cb12-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to read line"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-6"></span>
<span id="cb12-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input</span>
<span id="cb12-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()</span>
<span id="cb12-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()</span>
<span id="cb12-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Parse error"</span>))</span>
<span id="cb12-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-12"></span>
<span id="cb12-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-14">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid input: expected two numbers"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-17"></span>
<span id="cb12-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-20"></span>
<span id="cb12-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{} + {} = {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-붙여서-출력하기" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="문자열-붙여서-출력하기"><span class="header-section-number">2.2</span> 문자열 붙여서 출력하기</h2>
<p>두 개의 문자열&nbsp;<code>str1</code>,&nbsp;<code>str2</code> 가 공백으로 구분되어 입력으로 주어집니다. &nbsp;<code>str1</code> 과&nbsp;<code>str2</code> 을 이어서 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-6" class="level3" data-number="2.2.1">
<h3 data-number="2.2.1" class="anchored" data-anchor-id="파이썬-6"><span class="header-section-number">2.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">str1, str2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>().strip().split()</span>
<span id="cb13-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>str1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>str2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</section>
<section id="러스트-6" class="level3" data-number="2.2.2">
<h3 data-number="2.2.2" class="anchored" data-anchor-id="러스트-6"><span class="header-section-number">2.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb14-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::</span>io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to read line"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-6"></span>
<span id="cb14-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-8"></span>
<span id="cb14-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid input: expected two strings"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-13"></span>
<span id="cb14-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-16"></span>
<span id="cb14-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-돌리기" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="문자열-돌리기"><span class="header-section-number">2.3</span> 문자열 돌리기</h2>
<p>문자열&nbsp;<code>str</code> 이 주어집니다. 문자열을 시계방향으로 90 도 돌려서 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-7" class="level3" data-number="2.3.1">
<h3 data-number="2.3.1" class="anchored" data-anchor-id="파이썬-7"><span class="header-section-number">2.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>()</span>
<span id="cb15-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb15-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(i)</span></code></pre></div>
</section>
<section id="러스트-7" class="level3" data-number="2.3.2">
<h3 data-number="2.3.2" class="anchored" data-anchor-id="러스트-7"><span class="header-section-number">2.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb16-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::io::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">self</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">BufRead</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb16-2"></span>
<span id="cb16-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> stdin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stdin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>lock()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>lines()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>next()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-6"></span>
<span id="cb16-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-8">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="홀짝-구분하기" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="홀짝-구분하기"><span class="header-section-number">2.4</span> 홀짝 구분하기</h2>
<p>자연수&nbsp;<code>n</code> 이 입력으로 주어졌을 때 만약&nbsp;<code>n</code> 이 짝수이면 “<code>n</code>&nbsp;is even”을, 홀수이면 “<code>n</code>&nbsp;is odd”를 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-8" class="level3" data-number="2.4.1">
<h3 data-number="2.4.1" class="anchored" data-anchor-id="파이썬-8"><span class="header-section-number">2.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>())</span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb17-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> is even"</span>)</span>
<span id="cb17-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb17-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> is odd"</span>)</span></code></pre></div>
</section>
<section id="러스트-8" class="level3" data-number="2.4.2">
<h3 data-number="2.4.2" class="anchored" data-anchor-id="러스트-8"><span class="header-section-number">2.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::</span>io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-2"></span>
<span id="cb18-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to read line"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-6"></span>
<span id="cb18-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Please enter a valid integer"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-8"></span>
<span id="cb18-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{} is even"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-12">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{} is odd"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-겹쳐쓰기" class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="문자열-겹쳐쓰기"><span class="header-section-number">2.5</span> 문자열 겹쳐쓰기</h2>
<p>문자열&nbsp;<code>my_string</code>,&nbsp;<code>overwrite_string</code> 과 정수&nbsp;<code>s</code> 가 주어집니다. 문자열&nbsp;<code>my_string</code> 의 인덱스&nbsp;<code>s</code> 부터&nbsp;<code>overwrite_string</code> 의 길이만큼을 문자열&nbsp;<code>overwrite_string</code> 으로 바꾼 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-9" class="level3" data-number="2.5.1">
<h3 data-number="2.5.1" class="anchored" data-anchor-id="파이썬-9"><span class="header-section-number">2.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, overwrite_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb19-2">    prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string[:s]</span>
<span id="cb19-3">    middle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> overwrite_string</span>
<span id="cb19-4">    suffix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string[s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(overwrite_string):]</span>
<span id="cb19-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> middle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> suffix</span></code></pre></div>
</section>
<section id="러스트-9" class="level3" data-number="2.5.2">
<h3 data-number="2.5.2" class="anchored" data-anchor-id="러스트-9"><span class="header-section-number">2.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb20-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> overwrite_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>my_string[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>s]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> middle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> overwrite_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> suffix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>my_string[s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> overwrite_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-5"></span>
<span id="cb20-6">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}{}{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> prefix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> middle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> suffix)</span>
<span id="cb20-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-8"></span>
<span id="cb20-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb20-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day3-연산" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Day3 연산</h1>
<section id="문자열-섞기" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="문자열-섞기"><span class="header-section-number">3.1</span> 문자열 섞기</h2>
<p>길이가 같은 두 문자열&nbsp;<code>str1</code> 과&nbsp;<code>str2</code> 가 주어집니다. 두 문자열의 각 문자가 앞에서부터 서로 번갈아가면서 한 번씩 등장하는 문자열을 만들어 return 하는 solution 함수를 완성해 주세요</p>
<section id="파이썬-10" class="level3" data-number="3.1.1">
<h3 data-number="3.1.1" class="anchored" data-anchor-id="파이썬-10"><span class="header-section-number">3.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(str1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, str2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb21-2">    answer: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb21-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(str1)):</span>
<span id="cb21-4">        answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> str1[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> str2[i]</span>
<span id="cb21-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-10" class="level3" data-number="3.1.2">
<h3 data-number="3.1.2" class="anchored" data-anchor-id="러스트-10"><span class="header-section-number">3.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb22-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-3"></span>
<span id="cb22-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (c1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c2) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>zip(str2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-5">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(c1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-6">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(c2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-8"></span>
<span id="cb22-9">    answer</span>
<span id="cb22-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-11"></span>
<span id="cb22-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb22-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abc"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"def"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자-리스트를-문자열로-변환하기" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="문자-리스트를-문자열로-변환하기"><span class="header-section-number">3.2</span> 문자 리스트를 문자열로 변환하기</h2>
<p>문자들이 담겨있는 배열&nbsp;<code>arr</code> 가 주어집니다.&nbsp;<code>arr</code> 의 원소들을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-11" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="파이썬-11"><span class="header-section-number">3.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb23-2"></span>
<span id="cb23-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb23-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(arr)</span></code></pre></div>
</section>
<section id="러스트-11" class="level3" data-number="3.2.2">
<h3 data-number="3.2.2" class="anchored" data-anchor-id="러스트-11"><span class="header-section-number">3.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb24-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-2">    arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb24-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-4"></span>
<span id="cb24-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb24-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb24-8">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb24-9">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb24-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"World"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb24-11">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-곱하기" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="문자열-곱하기"><span class="header-section-number">3.3</span> 문자열 곱하기</h2>
<p>문자열&nbsp;<code>my_string</code> 과 정수&nbsp;<code>k</code> 가 주어질 때,&nbsp;<code>my_string</code> 을&nbsp;<code>k</code> 번 반복한 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-12" class="level3" data-number="3.3.1">
<h3 data-number="3.3.1" class="anchored" data-anchor-id="파이썬-12"><span class="header-section-number">3.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb25-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>k</span></code></pre></div>
</section>
<section id="러스트-12" class="level3" data-number="3.3.2">
<h3 data-number="3.3.2" class="anchored" data-anchor-id="러스트-12"><span class="header-section-number">3.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb26-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>repeat(k)</span>
<span id="cb26-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb26-4"></span>
<span id="cb26-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb26-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="더-크게-합치기" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="더-크게-합치기"><span class="header-section-number">3.4</span> 더 크게 합치기</h2>
<p>연산 <img src="https://latex.codecogs.com/png.latex?%E2%8A%95"> 는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다. <img src="https://latex.codecogs.com/png.latex?12%20%E2%8A%95%203%20=%20123">, <img src="https://latex.codecogs.com/png.latex?3%20%E2%8A%95%2012%20=%20312"> . 양의 정수&nbsp;a 와&nbsp;b 가 주어졌을 때,&nbsp;<img src="https://latex.codecogs.com/png.latex?a%E2%8A%95b"> 와&nbsp;<img src="https://latex.codecogs.com/png.latex?b%E2%8A%95a">&nbsp;중 더 큰 값을 return 하는 solution 함수를 완성해 주세요. 단,&nbsp;<img src="https://latex.codecogs.com/png.latex?a%E2%8A%95b"> 와&nbsp;<img src="https://latex.codecogs.com/png.latex?b%E2%8A%95a"> 가 같다면&nbsp;<img src="https://latex.codecogs.com/png.latex?a%E2%8A%95b"> 를 return 합니다.</p>
<section id="파이썬-13" class="level3" data-number="3.4.1">
<h3 data-number="3.4.1" class="anchored" data-anchor-id="파이썬-13"><span class="header-section-number">3.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb27-2">    ab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(a) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(b))</span>
<span id="cb27-3">    ba <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(b) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(a))</span>
<span id="cb27-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(ab, ba)</span></code></pre></div>
</section>
<section id="러스트-13" class="level3" data-number="3.4.2">
<h3 data-number="3.4.2" class="anchored" data-anchor-id="러스트-13"><span class="header-section-number">3.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb28-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> ab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> ba <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-4">    ab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max(ba)</span>
<span id="cb28-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb28-6"></span>
<span id="cb28-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb28-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="두-수의-연산값-비교하기" class="level2" data-number="3.5">
<h2 data-number="3.5" class="anchored" data-anchor-id="두-수의-연산값-비교하기"><span class="header-section-number">3.5</span> 두 수의 연산값 비교하기</h2>
<p>연산 <img src="https://latex.codecogs.com/png.latex?%E2%8A%95"> 는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다. <img src="https://latex.codecogs.com/png.latex?12%E2%8A%953=123">, <img src="https://latex.codecogs.com/png.latex?3%E2%8A%9512=312"> 양의 정수 a 와 b 가 주어졌을 때, <img src="https://latex.codecogs.com/png.latex?a%E2%8A%95b"> 와 <img src="https://latex.codecogs.com/png.latex?2*a*b"> 중 더 큰 값을 return 하는 solution 함수를 완성해 주세요. 단, <img src="https://latex.codecogs.com/png.latex?a%E2%8A%95b"> 와 <img src="https://latex.codecogs.com/png.latex?2*a*b"> 가 같으면 <img src="https://latex.codecogs.com/png.latex?a%E2%8A%95b"> 를 return 합니다.</p>
<section id="파이썬-14" class="level3" data-number="3.5.1">
<h3 data-number="3.5.1" class="anchored" data-anchor-id="파이썬-14"><span class="header-section-number">3.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb29-2">    concat_op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(a) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(b))</span>
<span id="cb29-3">    multiply_op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b</span>
<span id="cb29-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(concat_op, multiply_op)</span></code></pre></div>
</section>
<section id="러스트-14" class="level3" data-number="3.5.2">
<h3 data-number="3.5.2" class="anchored" data-anchor-id="러스트-14"><span class="header-section-number">3.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb30-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> concat_op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> multiply_op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-4">    concat_op<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max(multiply_op)</span>
<span id="cb30-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb30-6"></span>
<span id="cb30-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb30-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">91</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-4-연산-조건문" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Day 4 연산, 조건문</h1>
<section id="n-의-배수" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="n-의-배수"><span class="header-section-number">4.1</span> n 의 배수</h2>
<p>정수&nbsp;<code>num</code> 과&nbsp;<code>n</code> 이 매개 변수로 주어질 때,&nbsp;<code>num</code> 이&nbsp;<code>n</code> 의 배수이면 1 을 return&nbsp;<code>n</code> 의 배수가 아니라면 0 을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-15" class="level3" data-number="4.1.1">
<h3 data-number="4.1.1" class="anchored" data-anchor-id="파이썬-15"><span class="header-section-number">4.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb31-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb31-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb31-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb31-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-15" class="level3" data-number="4.1.2">
<h3 data-number="4.1.2" class="anchored" data-anchor-id="러스트-15"><span class="header-section-number">4.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb32-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-3">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb32-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb32-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-8"></span>
<span id="cb32-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result for num={} and n={}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="공배수" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="공배수"><span class="header-section-number">4.2</span> 공배수</h2>
<p>정수&nbsp;<code>number</code> 와&nbsp;<code>n</code>,&nbsp;<code>m</code> 이 주어집니다.&nbsp;<code>number</code> 가&nbsp;<code>n</code> 의 배수이면서&nbsp;<code>m</code> 의 배수이면 1 을 아니라면 0 을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-16" class="level3" data-number="4.2.1">
<h3 data-number="4.2.1" class="anchored" data-anchor-id="파이썬-16"><span class="header-section-number">4.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(number: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, m:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb33-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb33-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb33-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb33-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-16" class="level3" data-number="4.2.2">
<h3 data-number="4.2.2" class="anchored" data-anchor-id="러스트-16"><span class="header-section-number">4.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb34-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-3">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb34-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb34-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-8"></span>
<span id="cb34-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="홀짝에-따른-다른-값-반환하기" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="홀짝에-따른-다른-값-반환하기"><span class="header-section-number">4.3</span> 홀짝에 따른 다른 값 반환하기</h2>
<p>양의 정수&nbsp;<code>n</code> 이 매개변수로 주어질 때,&nbsp;<code>n</code> 이 홀수라면&nbsp;<code>n</code>&nbsp;이하의 홀수인 모든 양의 정수의 합을 return 하고&nbsp;<code>n</code> 이 짝수라면&nbsp;<code>n</code>&nbsp;이하의 짝수인 모든 양의 정수의 제곱의 합을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-17" class="level3" data-number="4.3.1">
<h3 data-number="4.3.1" class="anchored" data-anchor-id="파이썬-17"><span class="header-section-number">4.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb35-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># n이 홀수인 경우</span></span>
<span id="cb35-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb35-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># n이 짝수인 경우</span></span>
<span id="cb35-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
</section>
<section id="러스트-17" class="level3" data-number="4.3.2">
<h3 data-number="4.3.2" class="anchored" data-anchor-id="러스트-17"><span class="header-section-number">4.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb36-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If `n` is odd, sum all odd numbers from 1 to `n`</span></span>
<span id="cb36-4">        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb36-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If `n` is even, sum the squares of all even numbers from 2 to `n`</span></span>
<span id="cb36-7">        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> i)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb36-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-10"></span>
<span id="cb36-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example with an odd number</span></span>
<span id="cb36-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="조건-문자열" class="level2" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="조건-문자열"><span class="header-section-number">4.4</span> 조건 문자열</h2>
<p>문자열에 따라 다음과 같이 두 수의 크기를 비교하려고 합니다.</p>
<ul>
<li>두 수가&nbsp;<code>n</code> 과&nbsp;<code>m</code> 이라면
<ul>
<li>“&gt;”, “=” :&nbsp;<code>n</code>&nbsp;&gt;=&nbsp;<code>m</code></li>
<li>“&lt;”, “=” :&nbsp;<code>n</code>&nbsp;&lt;=&nbsp;<code>m</code></li>
<li>“&gt;”, “!” :&nbsp;<code>n</code>&nbsp;&gt;&nbsp;<code>m</code></li>
<li>“&lt;”, “!” :&nbsp;<code>n</code>&nbsp;&lt;&nbsp;<code>m</code></li>
</ul></li>
</ul>
<p>두 문자열&nbsp;<code>ineq</code> 와&nbsp;<code>eq</code> 가 주어집니다.&nbsp;<code>ineq</code> 는 “&lt;”와 “&gt;”중 하나고,&nbsp;<code>eq</code> 는 “=”와 “!”중 하나입니다. 그리고 두 정수&nbsp;<code>n</code> 과&nbsp;<code>m</code> 이 주어질 때,&nbsp;<code>n</code> 과&nbsp;<code>m</code> 이&nbsp;<code>ineq</code> 와&nbsp;<code>eq</code> 의 조건에 맞으면 1 을 아니면 0 을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-18" class="level3" data-number="4.4.1">
<h3 data-number="4.4.1" class="anchored" data-anchor-id="파이썬-18"><span class="header-section-number">4.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(ineq:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, eq:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, n:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, m:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb37-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ineq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> eq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span>:</span>
<span id="cb37-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> m <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb37-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> ineq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> eq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span>:</span>
<span id="cb37-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> m <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb37-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> ineq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> eq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"!"</span>:</span>
<span id="cb37-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> m <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb37-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> ineq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> eq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"!"</span>:</span>
<span id="cb37-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> m <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-18" class="level3" data-number="4.4.2">
<h3 data-number="4.4.2" class="anchored" data-anchor-id="러스트-18"><span class="header-section-number">4.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb38-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(ineq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> eq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> (ineq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> eq) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-3">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'&gt;'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb38-4">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb38-5">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'&gt;'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'!'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb38-6">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'!'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb38-7">        _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">panic!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid input combination"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb38-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-10"></span>
<span id="cb38-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'&gt;'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 2: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
</section>
<section id="flag-에-따라-다른-값-반환하기" class="level2" data-number="4.5">
<h2 data-number="4.5" class="anchored" data-anchor-id="flag-에-따라-다른-값-반환하기"><span class="header-section-number">4.5</span> flag 에 따라 다른 값 반환하기</h2>
<p>두 정수&nbsp;<code>a</code>,&nbsp;<code>b</code> 와 boolean 변수&nbsp;<code>flag</code> 가 매개변수로 주어질 때,&nbsp;<code>flag</code> 가 true 면&nbsp;<code>a</code>&nbsp;+&nbsp;<code>b</code> 를 false 면&nbsp;<code>a</code>&nbsp;-&nbsp;<code>b</code> 를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-19" class="level3" data-number="4.5.1">
<h3 data-number="4.5.1" class="anchored" data-anchor-id="파이썬-19"><span class="header-section-number">4.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, flag:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb39-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> flag <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b</span></code></pre></div>
</section>
<section id="러스트-19" class="level3" data-number="4.5.2">
<h3 data-number="4.5.2" class="anchored" data-anchor-id="러스트-19"><span class="header-section-number">4.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb40-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> flag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-3">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="cb40-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-5">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b</span>
<span id="cb40-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-8"></span>
<span id="cb40-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 2: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-5-조건문" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Day 5 조건문</h1>
<section id="코드-처리하기" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="코드-처리하기"><span class="header-section-number">5.1</span> 코드 처리하기</h2>
<p>문자열&nbsp;<code>code</code> 가 주어집니다. <code>code</code> 를 앞에서부터 읽으면서 만약 문자가 “1”이면&nbsp;<code>mode</code> 를 바꿉니다.&nbsp;<code>mode</code> 에 따라&nbsp;<code>code</code> 를 읽어가면서 문자열&nbsp;<code>ret</code> 을 만들어냅니다. <code>mode</code> 는 0 과 1 이 있으며,&nbsp;<code>idx</code> 를 0 부터&nbsp;<code>code의 길이 - 1</code>&nbsp;까지 1 씩 키워나가면서&nbsp;<code>code[idx]</code> 의 값에 따라 다음과 같이 행동합니다.</p>
<ul>
<li><code>mode</code> 가 0 일 때
<ul>
<li><code>code[idx]</code> 가 “1”이 아니면&nbsp;<code>idx</code> 가 짝수일 때만&nbsp;<code>ret</code> 의 맨 뒤에&nbsp;<code>code[idx]</code> 를 추가합니다.</li>
<li><code>code[idx]</code> 가 “1”이면&nbsp;<code>mode</code> 를 0 에서 1 로 바꿉니다.</li>
</ul></li>
<li><code>mode</code> 가 1 일 때
<ul>
<li><code>code[idx]</code> 가 “1”이 아니면&nbsp;<code>idx</code> 가 홀수일 때만&nbsp;<code>ret</code> 의 맨 뒤에&nbsp;<code>code[idx]</code> 를 추가합니다.</li>
<li><code>code[idx]</code> 가 “1”이면&nbsp;<code>mode</code> 를 1 에서 0 으로 바꿉니다.</li>
</ul></li>
</ul>
<p>문자열&nbsp;<code>code</code> 를 통해 만들어진 문자열&nbsp;<code>ret</code> 를 return 하는 solution 함수를 완성해 주세요.</p>
<p>단, 시작할 때&nbsp;<code>mode</code> 는 0 이며, return 하려는&nbsp;<code>ret</code> 가 만약 빈 문자열이라면 대신 “EMPTY”를 return 합니다.</p>
<section id="파이썬-20" class="level3" data-number="5.1.1">
<h3 data-number="5.1.1" class="anchored" data-anchor-id="파이썬-20"><span class="header-section-number">5.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(code: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb41-2">    ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb41-3">    mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시작할 때 mode는 0입니다.</span></span>
<span id="cb41-4"></span>
<span id="cb41-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> idx, char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(code):</span>
<span id="cb41-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span>:</span>
<span id="cb41-7">            mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mode  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mode를 전환합니다.</span></span>
<span id="cb41-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb41-9">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> (mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb41-10">                ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> char</span>
<span id="cb41-11"></span>
<span id="cb41-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>:</span>
<span id="cb41-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'EMPTY'</span></span>
<span id="cb41-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span></code></pre></div>
</section>
<section id="러스트-20" class="level3" data-number="5.1.2">
<h3 data-number="5.1.2" class="anchored" data-anchor-id="러스트-20"><span class="header-section-number">5.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb42-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb42-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start with mode 0</span></span>
<span id="cb42-4"></span>
<span id="cb42-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-7">            mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Toggle the mode</span></span>
<span id="cb42-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-9">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> (mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-10">                ret<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb42-11">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb42-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb42-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb42-14"></span>
<span id="cb42-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ret<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EMPTY"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb42-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-18">        ret</span>
<span id="cb42-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb42-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb42-21"></span>
<span id="cb42-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-23">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"012345"</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb42-24">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 2: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1101010"</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb42-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="등차수열의-특정한-항만-더하기" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="등차수열의-특정한-항만-더하기"><span class="header-section-number">5.2</span> 등차수열의 특정한 항만 더하기</h2>
<p>두 정수&nbsp;<code>a</code>,&nbsp;<code>d</code> 와 길이가 n 인 boolean 배열&nbsp;<code>included</code> 가 주어집니다. 첫째항이&nbsp;<code>a</code>, 공차가&nbsp;<code>d</code> 인 등차수열에서&nbsp;<code>included[i]</code> 가 i + 1 항을 의미할 때, 이 등차수열의 1 항부터 n 항까지&nbsp;<code>included</code> 가 true 인 항들만 더한 값을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-21" class="level3" data-number="5.2.1">
<h3 data-number="5.2.1" class="anchored" data-anchor-id="파이썬-21"><span class="header-section-number">5.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb43-2"></span>
<span id="cb43-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, d:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, included: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb43-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb43-5"></span>
<span id="cb43-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(included)):</span>
<span id="cb43-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> included[i]:</span>
<span id="cb43-8">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (i+1)번째 항 계산</span></span>
<span id="cb43-9">            term <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d</span>
<span id="cb43-10">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> term</span>
<span id="cb43-11"></span>
<span id="cb43-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-21" class="level3" data-number="5.2.2">
<h3 data-number="5.2.2" class="anchored" data-anchor-id="러스트-21"><span class="header-section-number">5.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb44-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> included<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb44-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-3"></span>
<span id="cb44-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>is_included) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> included<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb44-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_included <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb44-6">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the (i+1)th term</span></span>
<span id="cb44-7">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> term <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-8">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> term<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb44-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb44-11"></span>
<span id="cb44-12">    answer</span>
<span id="cb44-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb44-14"></span>
<span id="cb44-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb44-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-6-조건문-반복문" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Day 6 조건문, 반복문</h1>
<section id="마지막-두-원소" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="마지막-두-원소"><span class="header-section-number">6.1</span> 마지막 두 원소</h2>
<p>정수 리스트&nbsp;<code>num_list</code>가 주어질 때, 마지막 원소가 그전 원소보다 크면 마지막 원소에서 그전 원소를 뺀 값을 마지막 원소가 그전 원소보다 크지 않다면 마지막 원소를 두 배한 값을 추가하여 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-22" class="level3" data-number="6.1.1">
<h3 data-number="6.1.1" class="anchored" data-anchor-id="파이썬-22"><span class="header-section-number">6.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb45-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb45-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 마지막 원소와 그 전 원소 추출</span></span>
<span id="cb45-4">    last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb45-5">    second_last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb45-6"></span>
<span id="cb45-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 리스트를 복사하여 추가할 값 결정</span></span>
<span id="cb45-8">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list.copy()</span>
<span id="cb45-9"></span>
<span id="cb45-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> second_last:</span>
<span id="cb45-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 마지막 원소가 그 전 원소보다 크면 차를 추가</span></span>
<span id="cb45-12">        result.append(last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> second_last)</span>
<span id="cb45-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb45-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그렇지 않으면 마지막 원소의 두 배를 추가</span></span>
<span id="cb45-15">        result.append(last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb45-16"></span>
<span id="cb45-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-22" class="level3" data-number="6.1.2">
<h3 data-number="6.1.2" class="anchored" data-anchor-id="러스트-22"><span class="header-section-number">6.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"></code></pre></div>
</section>
</section>
<section id="수-조작하기-1" class="level2" data-number="6.2">
<h2 data-number="6.2" class="anchored" data-anchor-id="수-조작하기-1"><span class="header-section-number">6.2</span> 수 조작하기 1</h2>
<p>정수&nbsp;<code>n</code>과 문자열&nbsp;<code>control</code>이 주어집니다.&nbsp;<code>control</code>은 “w”, “a”, “s”, “d”의 4개의 문자로 이루어져 있으며,&nbsp;<code>control</code>의 앞에서부터 순서대로 문자에 따라&nbsp;<code>n</code>의 값을 바꿉니다.</p>
<ul>
<li>“w” :&nbsp;<code>n</code>이 1 커집니다.</li>
<li>“s” :&nbsp;<code>n</code>이 1 작아집니다.</li>
<li>“d” :&nbsp;<code>n</code>이 10 커집니다.</li>
<li>“a” :&nbsp;<code>n</code>이 10 작아집니다.</li>
</ul>
<p>위 규칙에 따라&nbsp;<code>n</code>을 바꿨을 때 가장 마지막에 나오는&nbsp;<code>n</code>의 값을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-23" class="level3" data-number="6.2.1">
<h3 data-number="6.2.1" class="anchored" data-anchor-id="파이썬-23"><span class="header-section-number">6.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, control:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb47-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># control 문자열을 순회하면서 n의 값을 조작합니다.</span></span>
<span id="cb47-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> control:</span>
<span id="cb47-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>:</span>
<span id="cb47-5">            n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb47-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span>:</span>
<span id="cb47-7">            n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb47-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span>:</span>
<span id="cb47-9">            n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb47-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>:</span>
<span id="cb47-11">            n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb47-12"></span>
<span id="cb47-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> n</span></code></pre></div>
</section>
<section id="러스트-23" class="level3" data-number="6.2.2">
<h3 data-number="6.2.2" class="anchored" data-anchor-id="러스트-23"><span class="header-section-number">6.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb48-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> control<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> control<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-4">            <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-5">            <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-6">            <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-7">            <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-8">            _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> ()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ignore any other characters</span></span>
<span id="cb48-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb48-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb48-11">    n</span>
<span id="cb48-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb48-13"></span>
<span id="cb48-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> initial_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> control_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wsdawsdassw"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(initial_n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> control_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-18">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="수-조작하기-2" class="level2" data-number="6.3">
<h2 data-number="6.3" class="anchored" data-anchor-id="수-조작하기-2"><span class="header-section-number">6.3</span> 수 조작하기 2</h2>
<p>정수 배열&nbsp;<code>numLog</code>가 주어집니다. 처음에&nbsp;<code>numLog[0]</code>에서 부터 시작해 “w”, “a”, “s”, “d”로 이루어진 문자열을 입력으로 받아 순서대로 다음과 같은 조작을 했다고 합시다.</p>
<ul>
<li>“w” : 수에 1을 더한다.</li>
<li>“s” : 수에 1을 뺀다.</li>
<li>“d” : 수에 10을 더한다.</li>
<li>“a” : 수에 10을 뺀다.</li>
</ul>
<p>그리고 매번 조작을 할 때마다 결괏값을 기록한 정수 배열이&nbsp;<code>numLog</code>입니다. 즉,&nbsp;<code>numLog[i]</code>는&nbsp;<code>numLog[0]</code>로부터 총&nbsp;<code>i</code>번의 조작을 가한 결과가 저장되어 있습니다.</p>
<p>주어진 정수 배열&nbsp;<code>numLog</code>에 대해 조작을 위해 입력받은 문자열을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-24" class="level3" data-number="6.3.1">
<h3 data-number="6.3.1" class="anchored" data-anchor-id="파이썬-24"><span class="header-section-number">6.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb49-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numLog:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb49-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조작 문자열을 저장할 변수</span></span>
<span id="cb49-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb49-5"></span>
<span id="cb49-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># numLog 배열의 길이</span></span>
<span id="cb49-7">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(numLog)</span>
<span id="cb49-8"></span>
<span id="cb49-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 인접 원소 간의 차이를 확인하고 조작 문자열 생성</span></span>
<span id="cb49-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n):</span>
<span id="cb49-11">        diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numLog[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> numLog[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb49-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb49-13">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span></span>
<span id="cb49-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb49-15">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span></span>
<span id="cb49-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb49-17">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span></span>
<span id="cb49-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb49-19">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span></span>
<span id="cb49-20"></span>
<span id="cb49-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-24" class="level3" data-number="6.3.2">
<h3 data-number="6.3.2" class="anchored" data-anchor-id="러스트-24"><span class="header-section-number">6.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb50-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_log<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb50-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-3"></span>
<span id="cb50-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>num_log<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb50-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_log[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> num_log[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb50-7">            <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb50-8">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb50-9">            <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb50-10">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb50-11">            _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> ()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ignore any other differences</span></span>
<span id="cb50-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb50-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb50-14"></span>
<span id="cb50-15">    answer</span>
<span id="cb50-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb50-17"></span>
<span id="cb50-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb50-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_log <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num_log)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num_log)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="수열-구간-쿼리-3" class="level2" data-number="6.4">
<h2 data-number="6.4" class="anchored" data-anchor-id="수열-구간-쿼리-3"><span class="header-section-number">6.4</span> 수열 구간 쿼리 3</h2>
<p>정수 배열&nbsp;<code>arr</code>와 2차원 정수 배열&nbsp;<code>queries</code>이 주어집니다.&nbsp;<code>queries</code>의 원소는 각각 하나의&nbsp;<code>query</code>를 나타내며,&nbsp;<code>[i, j]</code>&nbsp;꼴입니다.</p>
<p>각&nbsp;<code>query</code>마다 순서대로&nbsp;<code>arr[i]</code>의 값과&nbsp;<code>arr[j]</code>의 값을 서로 바꿉니다.</p>
<p>위 규칙에 따라&nbsp;<code>queries</code>를 처리한 이후의&nbsp;<code>arr</code>를 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-25" class="level3" data-number="6.4.1">
<h3 data-number="6.4.1" class="anchored" data-anchor-id="파이썬-25"><span class="header-section-number">6.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb51-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], queries:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb51-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 쿼리 처리</span></span>
<span id="cb51-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries:</span>
<span id="cb51-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 인덱스 i와 j의 값을 서로 교환</span></span>
<span id="cb51-6">        arr[i], arr[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr[j], arr[i]</span>
<span id="cb51-7"></span>
<span id="cb51-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> arr</span></code></pre></div>
</section>
<section id="러스트-25" class="level3" data-number="6.4.2">
<h3 data-number="6.4.2" class="anchored" data-anchor-id="러스트-25"><span class="header-section-number">6.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb52-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> queries<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> j) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-3">        arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>swap(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> j)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb52-5">    arr</span>
<span id="cb52-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb52-7"></span>
<span id="cb52-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-11"></span>
<span id="cb52-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>queries)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="수열-구간-쿼리2" class="level2" data-number="6.5">
<h2 data-number="6.5" class="anchored" data-anchor-id="수열-구간-쿼리2"><span class="header-section-number">6.5</span> 수열 구간 쿼리2</h2>
<p>정수 배열&nbsp;<code>arr</code>와 2차원 정수 배열&nbsp;<code>queries</code>이 주어집니다.&nbsp;<code>queries</code>의 원소는 각각 하나의&nbsp;<code>query</code>를 나타내며,&nbsp;<code>[s, e, k]</code>&nbsp;꼴입니다.</p>
<p>각&nbsp;<code>query</code>마다 순서대로&nbsp;<code>s</code>&nbsp;≤&nbsp;<code>i</code>&nbsp;≤&nbsp;<code>e</code>인 모든&nbsp;<code>i</code>에 대해&nbsp;<code>k</code>보다 크면서 가장 작은&nbsp;<code>arr[i]</code>를 찾습니다.</p>
<p>각 쿼리의 순서에 맞게 답을 저장한 배열을 반환하는 solution 함수를 완성해 주세요. 단, 특정 쿼리의 답이 존재하지 않으면 -1을 저장합니다. ### 파이썬</p>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb53-2"></span>
<span id="cb53-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], queries:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb53-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb53-5"></span>
<span id="cb53-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s, e, k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries:</span>
<span id="cb53-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 범위 내의 값을 추출</span></span>
<span id="cb53-8">        subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr[s:e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb53-9"></span>
<span id="cb53-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># k보다 큰 값을 필터링</span></span>
<span id="cb53-11">        filtered <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [num <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> subset <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> k]</span>
<span id="cb53-12"></span>
<span id="cb53-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> filtered:</span>
<span id="cb53-14">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 필터링된 값 중 가장 작은 값 선택</span></span>
<span id="cb53-15">            answer.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(filtered))</span>
<span id="cb53-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb53-17">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># k보다 큰 값이 없는 경우 -1</span></span>
<span id="cb53-18">            answer.append(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb53-19"></span>
<span id="cb53-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
<section id="러스트-26" class="level3" data-number="6.5.1">
<h3 data-number="6.5.1" class="anchored" data-anchor-id="러스트-26"><span class="header-section-number">6.5.1</span> 러스트</h3>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb54-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> queries<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-3"></span>
<span id="cb54-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr[s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>e]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-6"></span>
<span id="cb54-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> min_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb54-8">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> k)</span>
<span id="cb54-9">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>min()</span>
<span id="cb54-10">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>copied()</span>
<span id="cb54-11">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap_or(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-12"></span>
<span id="cb54-13">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(min_value)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-15"></span>
<span id="cb54-16">    answer</span>
<span id="cb54-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-18"></span>
<span id="cb54-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-22"></span>
<span id="cb54-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>queries)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-24">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-7-반복문" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Day 7 반복문</h1>
<section id="수열-구간-쿼리-4" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="수열-구간-쿼리-4"><span class="header-section-number">7.1</span> 수열 구간 쿼리 4</h2>
<p>정수 배열&nbsp;<code>arr</code>와 2차원 정수 배열&nbsp;<code>queries</code>이 주어집니다.&nbsp;<code>queries</code>의 원소는 각각 하나의&nbsp;<code>query</code>를 나타내며,&nbsp;<code>[s, e, k]</code>&nbsp;꼴입니다.</p>
<p>각&nbsp;<code>query</code>마다 순서대로&nbsp;<code>s</code>&nbsp;≤&nbsp;<code>i</code>&nbsp;≤&nbsp;<code>e</code>인 모든&nbsp;<code>i</code>에 대해&nbsp;<code>i</code>가&nbsp;<code>k</code>의 배수이면&nbsp;<code>arr[i]</code>에 1을 더합니다.</p>
<p>위 규칙에 따라&nbsp;<code>queries</code>를 처리한 이후의&nbsp;<code>arr</code>를 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-26" class="level3" data-number="7.1.1">
<h3 data-number="7.1.1" class="anchored" data-anchor-id="파이썬-26"><span class="header-section-number">7.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb55-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], queries:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb55-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s, e, k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries:</span>
<span id="cb55-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(s, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb55-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb55-6">                arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb55-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> arr</span></code></pre></div>
</section>
<section id="러스트-27" class="level3" data-number="7.1.2">
<h3 data-number="7.1.2" class="anchored" data-anchor-id="러스트-27"><span class="header-section-number">7.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb56-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> queries<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-5">                arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-6">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb56-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb56-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb56-9">    arr</span>
<span id="cb56-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb56-11"></span>
<span id="cb56-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-15"></span>
<span id="cb56-16">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>queries)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-8-조건문-문자열" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> Day 8 조건문, 문자열</h1>
<section id="간단한-논리-연산" class="level2" data-number="8.1">
<h2 data-number="8.1" class="anchored" data-anchor-id="간단한-논리-연산"><span class="header-section-number">8.1</span> 간단한 논리 연산</h2>
<p>boolean 변수&nbsp;<code>x1</code>,&nbsp;<code>x2</code>,&nbsp;<code>x3</code>,&nbsp;<code>x4</code>가 매개변수로 주어질 때, 다음의 <img src="https://latex.codecogs.com/png.latex?(x1%E2%88%A8x2)%E2%88%A7(x3%E2%88%A8x4)"> 식의 true/false를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-27" class="level3" data-number="8.1.1">
<h3 data-number="8.1.1" class="anchored" data-anchor-id="파이썬-27"><span class="header-section-number">8.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(x1:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>, x2:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>, x3:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>, x4:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb57-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (x1 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> x2) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> (x3 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> x4)</span></code></pre></div>
</section>
<section id="러스트-28" class="level3" data-number="8.1.2">
<h3 data-number="8.1.2" class="anchored" data-anchor-id="러스트-28"><span class="header-section-number">8.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb58-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(x1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> x2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> x3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> x4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-2">    (x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> x2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> (x3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> x4)</span>
<span id="cb58-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-4"></span>
<span id="cb58-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-7">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result is: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="주사위-게임" class="level2" data-number="8.2">
<h2 data-number="8.2" class="anchored" data-anchor-id="주사위-게임"><span class="header-section-number">8.2</span> 주사위 게임</h2>
<p>1부터 6까지 숫자가 적힌 주사위가 네 개 있습니다. 네 주사위를 굴렸을 때 나온 숫자에 따라 다음과 같은 점수를 얻습니다.</p>
<ul>
<li>네 주사위에서 나온 숫자가 모두 p로 같다면 1111 × p점을 얻습니다.</li>
<li>세 주사위에서 나온 숫자가 p로 같고 나머지 다른 주사위에서 나온 숫자가 q(p ≠ q)라면 (10 × p + q)2&nbsp;점을 얻습니다.</li>
<li>주사위가 두 개씩 같은 값이 나오고, 나온 숫자를 각각 p, q(p ≠ q)라고 한다면 (p + q) × |p - q|점을 얻습니다.</li>
<li>어느 두 주사위에서 나온 숫자가 p로 같고 나머지 두 주사위에서 나온 숫자가 각각 p와 다른 q, r(q ≠ r)이라면 q × r점을 얻습니다.</li>
<li>네 주사위에 적힌 숫자가 모두 다르다면 나온 숫자 중 가장 작은 숫자 만큼의 점수를 얻습니다.</li>
</ul>
<p>네 주사위를 굴렸을 때 나온 숫자가 정수 매개변수&nbsp;<code>a</code>,&nbsp;<code>b</code>,&nbsp;<code>c</code>,&nbsp;<code>d</code>로 주어질 때, 얻는 점수를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-28" class="level3" data-number="8.2.1">
<h3 data-number="8.2.1" class="anchored" data-anchor-id="파이썬-28"><span class="header-section-number">8.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Counter</span>
<span id="cb59-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb59-3"></span>
<span id="cb59-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, c: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, d: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb59-5">    counts: Counter[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Counter([a, b, c, d])</span>
<span id="cb59-6"></span>
<span id="cb59-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조건 1: 네 주사위의 숫자가 모두 같은 경우</span></span>
<span id="cb59-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(counts) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb59-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1111</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a</span>
<span id="cb59-10"></span>
<span id="cb59-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조건 2: 세 주사위의 숫자가 같고 나머지 한 주사위의 숫자가 다른 경우</span></span>
<span id="cb59-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(counts) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb59-13">        p, q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts.most_common()</span>
<span id="cb59-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> p[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (숫자, 빈도)</span></span>
<span id="cb59-15">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb59-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 두 쌍의 주사위가 같은 경우</span></span>
<span id="cb59-17">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (p[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(p[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> q[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb59-18"></span>
<span id="cb59-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조건 3: 두 주사위가 같은 숫자를 가질 경우, 나머지 두 주사위가 각각 다른 숫자일 경우</span></span>
<span id="cb59-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(counts) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb59-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> counts:</span>
<span id="cb59-22">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> counts[key] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb59-23">                remaining: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [k <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> counts <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> counts[k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb59-24">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> remaining[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> remaining[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb59-25"></span>
<span id="cb59-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조건 4: 모든 주사위의 숫자가 다를 경우</span></span>
<span id="cb59-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(counts) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:</span>
<span id="cb59-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(a, b, c, d)</span></code></pre></div>
</section>
<section id="러스트-29" class="level3" data-number="8.2.2">
<h3 data-number="8.2.2" class="anchored" data-anchor-id="러스트-29"><span class="header-section-number">8.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb60-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-2"></span>
<span id="cb60-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashMap::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>entry(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>or_insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-8"></span>
<span id="cb60-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Condition 1: All four dice have the same number</span></span>
<span id="cb60-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1111</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-13"></span>
<span id="cb60-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Condition 2: Three dice have the same number, and one is different</span></span>
<span id="cb60-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-16">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> pairs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-17">        pairs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_by(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cmp(a))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort by frequency in descending order</span></span>
<span id="cb60-18">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (p_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> p_count) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pairs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-19">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (q_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pairs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>p_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-21">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q_num) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q_num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-23">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (p_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q_num) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (p_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> q_num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>abs()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-24">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-26"></span>
<span id="cb60-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Condition 3: Two dice have the same number, and the other two are different</span></span>
<span id="cb60-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>value) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-31">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> remaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts</span>
<span id="cb60-32">                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb60-33">                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>v)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb60-34">                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> k)</span>
<span id="cb60-35">                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-36">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> remaining[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> remaining[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-37">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-38">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-39">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-40"></span>
<span id="cb60-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Condition 4: All four dice have different numbers</span></span>
<span id="cb60-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-43">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>min()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-44">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-45"></span>
<span id="cb60-46">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Default return value (shouldn't reach here)</span></span>
<span id="cb60-47"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-48"></span>
<span id="cb60-49"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-50">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-51">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result is: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-52"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="글자-이어-붙여-문자열-만들기" class="level2" data-number="8.3">
<h2 data-number="8.3" class="anchored" data-anchor-id="글자-이어-붙여-문자열-만들기"><span class="header-section-number">8.3</span> 글자 이어 붙여 문자열 만들기</h2>
<p>문자열&nbsp;<code>my_string</code>과 정수 배열&nbsp;<code>index_list</code>가 매개변수로 주어집니다.&nbsp;<code>my_string</code>의&nbsp;<code>index_list</code>의 원소들에 해당하는 인덱스의 글자들을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-29" class="level3" data-number="8.3.1">
<h3 data-number="8.3.1" class="anchored" data-anchor-id="파이썬-29"><span class="header-section-number">8.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb61-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb61-2"></span>
<span id="cb61-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, index_list:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb61-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(my_string[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> index_list)</span>
<span id="cb61-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-30" class="level3" data-number="8.3.2">
<h3 data-number="8.3.2" class="anchored" data-anchor-id="러스트-30"><span class="header-section-number">8.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb62-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> index_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb62-2">    index_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb62-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>nth(i))</span>
<span id="cb62-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb62-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb62-6"></span>
<span id="cb62-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb62-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcdef"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> index_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>index_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="로-나눈-나머지" class="level2" data-number="8.4">
<h2 data-number="8.4" class="anchored" data-anchor-id="로-나눈-나머지"><span class="header-section-number">8.4</span> 9로 나눈 나머지</h2>
<p>음이 아닌 정수를 9로 나눈 나머지는 그 정수의 각 자리 숫자의 합을 9로 나눈 나머지와 같은 것이 알려져 있습니다. 이 사실을 이용하여 음이 아닌 정수가&nbsp;<strong>문자열</strong>&nbsp;<code>number</code>로 주어질 때, 이 정수를 9로 나눈 나머지를 return 하는 solution 함수를 작성해주세요.</p>
<section id="파이썬-30" class="level3" data-number="8.4.1">
<h3 data-number="8.4.1" class="anchored" data-anchor-id="파이썬-30"><span class="header-section-number">8.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(number:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb63-2">    digit_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(digit) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> digit <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> number)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 자리 숫자의 합을 구합니다.</span></span>
<span id="cb63-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> digit_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그 합을 9로 나눈 나머지를 반환합니다.</span></span></code></pre></div>
</section>
<section id="러스트-31" class="level3" data-number="8.4.2">
<h3 data-number="8.4.2" class="anchored" data-anchor-id="러스트-31"><span class="header-section-number">8.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb64-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> digit_sum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> number</span>
<span id="cb64-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb64-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_digit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb64-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)</span>
<span id="cb64-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-7"></span>
<span id="cb64-8">    digit_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span></span>
<span id="cb64-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb64-10"></span>
<span id="cb64-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-여러-번-뒤집기" class="level2" data-number="8.5">
<h2 data-number="8.5" class="anchored" data-anchor-id="문자열-여러-번-뒤집기"><span class="header-section-number">8.5</span> 문자열 여러 번 뒤집기</h2>
<p>문자열&nbsp;<code>my_string</code>과 이차원 정수 배열&nbsp;<code>queries</code>가 매개변수로 주어집니다.&nbsp;<code>queries</code>의 원소는 [s, e] 형태로,&nbsp;<code>my_string</code>의 인덱스 s부터 인덱스 e까지를 뒤집으라는 의미입니다.&nbsp;<code>my_string</code>에&nbsp;<code>queries</code>의 명령을 순서대로 처리한 후의 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-31" class="level3" data-number="8.5.1">
<h3 data-number="8.5.1" class="anchored" data-anchor-id="파이썬-31"><span class="header-section-number">8.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb65-2"></span>
<span id="cb65-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, queries:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb65-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 문자열을 리스트로 변환하여 수정 가능하게 만듭니다.</span></span>
<span id="cb65-5">    s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(my_string)</span>
<span id="cb65-6"></span>
<span id="cb65-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 쿼리 처리</span></span>
<span id="cb65-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s_idx, e_idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries:</span>
<span id="cb65-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># s_idx부터 e_idx까지 부분 문자열을 뒤집습니다.</span></span>
<span id="cb65-10">        s[s_idx:e_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s[s_idx:e_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb65-11"></span>
<span id="cb65-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트를 문자열로 변환하여 반환합니다.</span></span>
<span id="cb65-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(s)</span></code></pre></div>
</section>
<section id="러스트-32" class="level3" data-number="8.5.2">
<h3 data-number="8.5.2" class="anchored" data-anchor-id="러스트-32"><span class="header-section-number">8.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb66-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> queries<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb66-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-3"></span>
<span id="cb66-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(s_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> e_idx) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb66-5">        s[s_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>e_idx]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>reverse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb66-7"></span>
<span id="cb66-8">    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb66-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb66-10"></span>
<span id="cb66-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb66-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rermgorpsam"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>queries)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-9-문자열" class="level1" data-number="9">
<h1 data-number="9"><span class="header-section-number">9</span> Day 9 문자열</h1>
<section id="배열-만들기-5" class="level2" data-number="9.1">
<h2 data-number="9.1" class="anchored" data-anchor-id="배열-만들기-5"><span class="header-section-number">9.1</span> 배열 만들기 5</h2>
<p>문자열 배열&nbsp;<code>intStrs</code>와 정수&nbsp;<code>k</code>,&nbsp;<code>s</code>,&nbsp;<code>l</code>가 주어집니다.&nbsp;<code>intStrs</code>의 원소는 숫자로 이루어져 있습니다.</p>
<p>배열&nbsp;<code>intStrs</code>의 각 원소마다&nbsp;<code>s</code>번 인덱스에서 시작하는 길이&nbsp;<code>l</code>짜리 부분 문자열을 잘라내 정수로 변환합니다. 이때 변환한 정수값이&nbsp;<code>k</code>보다 큰 값들을 담은 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-32" class="level3" data-number="9.1.1">
<h3 data-number="9.1.1" class="anchored" data-anchor-id="파이썬-32"><span class="header-section-number">9.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb67-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb67-2"></span>
<span id="cb67-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(intStrs: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, l: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb67-4">    answer: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb67-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> string <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> intStrs:</span>
<span id="cb67-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># s번 인덱스부터 l 길이만큼 부분 문자열을 잘라내고 정수로 변환</span></span>
<span id="cb67-7">        num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(string[s:s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>l])</span>
<span id="cb67-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환한 정수가 k보다 크면 answer 리스트에 추가</span></span>
<span id="cb67-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> k:</span>
<span id="cb67-10">            answer.append(num)</span>
<span id="cb67-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-33" class="level3" data-number="9.1.2">
<h3 data-number="9.1.2" class="anchored" data-anchor-id="러스트-33"><span class="header-section-number">9.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb68-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(int_strs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> string <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> int_strs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-4">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// s번 인덱스부터 l 길이만큼 부분 문자열을 잘라내고 정수로 변환</span></span>
<span id="cb68-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Ok</span>(num) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> string[s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>l]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-6">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 변환한 정수가 k보다 크면 answer 벡터에 추가</span></span>
<span id="cb68-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-8">                answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-9">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb68-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb68-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb68-12">    answer</span>
<span id="cb68-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb68-14"></span>
<span id="cb68-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> int_strs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb68-17">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12345"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-18">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"67890"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-19">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"54321"</span>)</span>
<span id="cb68-20">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">340</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-24"></span>
<span id="cb68-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(int_strs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> l)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-26">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-27"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="부분-문자열-이어-붙여-문자열-만들기" class="level2" data-number="9.2">
<h2 data-number="9.2" class="anchored" data-anchor-id="부분-문자열-이어-붙여-문자열-만들기"><span class="header-section-number">9.2</span> 부분 문자열 이어 붙여 문자열 만들기</h2>
<p>길이가 같은 문자열 배열&nbsp;<code>my_strings</code>와 이차원 정수 배열&nbsp;<code>parts</code>가 매개변수로 주어집니다.&nbsp;<code>parts[i]</code>는 [s, e] 형태로,&nbsp;<code>my_string[i]</code>의 인덱스 s부터 인덱스 e까지의 부분 문자열을 의미합니다. 각&nbsp;<code>my_strings</code>의 원소의&nbsp;<code>parts</code>에 해당하는 부분 문자열을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-33" class="level3" data-number="9.2.1">
<h3 data-number="9.2.1" class="anchored" data-anchor-id="파이썬-33"><span class="header-section-number">9.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb69-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Tuple</span>
<span id="cb69-2"></span>
<span id="cb69-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_strings: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], parts: List[Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb69-4">    answer: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb69-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(my_strings)):</span>
<span id="cb69-6">        s, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[i]</span>
<span id="cb69-7">        answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> my_strings[i][s:e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb69-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-34" class="level3" data-number="9.2.2">
<h3 data-number="9.2.2" class="anchored" data-anchor-id="러스트-34"><span class="header-section-number">9.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb70-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb70-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>my_strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb70-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> e) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-5">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push_str(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>my_strings[i][s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>e])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb70-7">    answer</span>
<span id="cb70-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb70-9"></span>
<span id="cb70-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb70-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_strings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb70-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"progressive"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb70-13">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hamburger"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb70-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hammer"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb70-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ahocorasick"</span>)</span>
<span id="cb70-16">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> parts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-18"></span>
<span id="cb70-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> parts)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-뒤의-n글자" class="level2" data-number="9.3">
<h2 data-number="9.3" class="anchored" data-anchor-id="문자열-뒤의-n글자"><span class="header-section-number">9.3</span> 문자열 뒤의 n글자</h2>
<p>문자열&nbsp;<code>my_string</code>과 정수&nbsp;<code>n</code>이 매개변수로 주어질 때,&nbsp;<code>my_string</code>의 뒤의&nbsp;<code>n</code>글자로 이루어진 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-34" class="level3" data-number="9.3.1">
<h3 data-number="9.3.1" class="anchored" data-anchor-id="파이썬-34"><span class="header-section-number">9.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb71-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb71-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n:]</span></code></pre></div>
</section>
<section id="러스트-35" class="level3" data-number="9.3.2">
<h3 data-number="9.3.2" class="anchored" data-anchor-id="러스트-35"><span class="header-section-number">9.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb72-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>rev()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>take(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>rev()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb72-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb72-4"></span>
<span id="cb72-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HelloWorld"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="접미사-배열" class="level2" data-number="9.4">
<h2 data-number="9.4" class="anchored" data-anchor-id="접미사-배열"><span class="header-section-number">9.4</span> 접미사 배열</h2>
<p>어떤 문자열에 대해서 접미사는 특정 인덱스부터 시작하는 문자열을 의미합니다. 예를 들어, “banana”의 모든 접미사는 “banana”, “anana”, “nana”, “ana”, “na”, “a”입니다. 문자열&nbsp;<code>my_string</code>이 매개변수로 주어질 때,&nbsp;<code>my_string</code>의 모든 접미사를 사전순으로 정렬한 문자열 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-35" class="level3" data-number="9.4.1">
<h3 data-number="9.4.1" class="anchored" data-anchor-id="파이썬-35"><span class="header-section-number">9.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb73-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb73-2"></span>
<span id="cb73-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb73-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모든 접미사 생성</span></span>
<span id="cb73-5">    suffixes: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [my_string[i:] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(my_string))]</span>
<span id="cb73-6"></span>
<span id="cb73-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 접미사들을 사전순으로 정렬</span></span>
<span id="cb73-8">    answer: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(suffixes)</span>
<span id="cb73-9"></span>
<span id="cb73-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-36" class="level3" data-number="9.4.2">
<h3 data-number="9.4.2" class="anchored" data-anchor-id="러스트-36"><span class="header-section-number">9.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb74-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> suffixes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-3"></span>
<span id="cb74-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 모든 접미사 생성</span></span>
<span id="cb74-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-6">        suffixes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(my_string[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb74-8"></span>
<span id="cb74-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 접미사들을 사전순으로 정렬</span></span>
<span id="cb74-10">    suffixes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-11"></span>
<span id="cb74-12">    suffixes</span>
<span id="cb74-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb74-14"></span>
<span id="cb74-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-18">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="접미사인지-확인하기" class="level2" data-number="9.5">
<h2 data-number="9.5" class="anchored" data-anchor-id="접미사인지-확인하기"><span class="header-section-number">9.5</span> 접미사인지 확인하기</h2>
<p>어떤 문자열에 대해서 접미사는 특정 인덱스부터 시작하는 문자열을 의미합니다. 예를 들어, “banana”의 모든 접미사는 “banana”, “anana”, “nana”, “ana”, “na”, “a”입니다. 문자열&nbsp;<code>my_string</code>과&nbsp;<code>is_suffix</code>가 주어질 때,&nbsp;<code>is_suffix</code>가&nbsp;<code>my_string</code>의 접미사라면 1을, 아니면 0을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-36" class="level3" data-number="9.5.1">
<h3 data-number="9.5.1" class="anchored" data-anchor-id="파이썬-36"><span class="header-section-number">9.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb75-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, is_suffix: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb75-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># my_string이 is_suffix로 끝나는지 확인</span></span>
<span id="cb75-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> my_string.endswith(is_suffix):</span>
<span id="cb75-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb75-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb75-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-37" class="level3" data-number="9.5.2">
<h3 data-number="9.5.2" class="anchored" data-anchor-id="러스트-37"><span class="header-section-number">9.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb76-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> is_suffix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb76-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// my_string이 is_suffix로 끝나는지 확인</span></span>
<span id="cb76-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>ends_with(is_suffix) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb76-4">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb76-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb76-6">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb76-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb76-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb76-9"></span>
<span id="cb76-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb76-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> is_suffix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> is_suffix)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-10-문자열" class="level1" data-number="10">
<h1 data-number="10"><span class="header-section-number">10</span> Day 10 문자열</h1>
<section id="문자열의-앞-n글자" class="level2" data-number="10.1">
<h2 data-number="10.1" class="anchored" data-anchor-id="문자열의-앞-n글자"><span class="header-section-number">10.1</span> 문자열의 앞 n글자</h2>
<p>문자열&nbsp;<code>my_string</code>과 정수&nbsp;<code>n</code>이 매개변수로 주어질 때,&nbsp;<code>my_string</code>의 앞의&nbsp;<code>n</code>글자로 이루어진 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-37" class="level3" data-number="10.1.1">
<h3 data-number="10.1.1" class="anchored" data-anchor-id="파이썬-37"><span class="header-section-number">10.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb77-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb77-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string[:n]</span></code></pre></div>
</section>
<section id="러스트-38" class="level3" data-number="10.1.2">
<h3 data-number="10.1.2" class="anchored" data-anchor-id="러스트-38"><span class="header-section-number">10.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb78-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb78-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>take(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb78-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb78-4"></span>
<span id="cb78-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb78-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HelloWorld"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb78-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb78-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb78-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb78-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="접두사인지-확인하기" class="level2" data-number="10.2">
<h2 data-number="10.2" class="anchored" data-anchor-id="접두사인지-확인하기"><span class="header-section-number">10.2</span> 접두사인지 확인하기</h2>
<p>어떤 문자열에 대해서 접두사는 특정 인덱스까지의 문자열을 의미합니다. 예를 들어, “banana”의 모든 접두사는 “b”, “ba”, “ban”, “bana”, “banan”, “banana”입니다. 문자열 my_string과 is_prefix가 주어질 때, is_prefix가 my_string의 접두사라면 1을, 아니면 0을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-38" class="level3" data-number="10.2.1">
<h3 data-number="10.2.1" class="anchored" data-anchor-id="파이썬-38"><span class="header-section-number">10.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb79" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb79-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, is_prefix:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb79-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(my_string.startswith(is_prefix))</span></code></pre></div>
</section>
<section id="러스트-39" class="level3" data-number="10.2.2">
<h3 data-number="10.2.2" class="anchored" data-anchor-id="러스트-39"><span class="header-section-number">10.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb80-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> is_prefix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb80-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>starts_with(is_prefix) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb80-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb80-4"></span>
<span id="cb80-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb80-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, world!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb80-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb80-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(test_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> test_prefix)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb80-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Is '{}' a prefix of '{}'? {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> test_prefix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> test_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb80-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-뒤집기" class="level2" data-number="10.3">
<h2 data-number="10.3" class="anchored" data-anchor-id="문자열-뒤집기"><span class="header-section-number">10.3</span> 문자열 뒤집기</h2>
<p>문자열 my_string과 정수 s, e가 매개변수로 주어질 때, my_string에서 인덱스 s부터 인덱스 e까지를 뒤집은 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-39" class="level3" data-number="10.3.1">
<h3 data-number="10.3.1" class="anchored" data-anchor-id="파이썬-39"><span class="header-section-number">10.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb81" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb81-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, s:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, e:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb81-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 문자열을 리스트로 변환</span></span>
<span id="cb81-3">    chars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(my_string)</span>
<span id="cb81-4"></span>
<span id="cb81-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># s부터 e까지의 부분을 뒤집기</span></span>
<span id="cb81-6">    chars[s:e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chars[s:e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb81-7"></span>
<span id="cb81-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트를 다시 문자열로 변환하여 반환</span></span>
<span id="cb81-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(chars)</span></code></pre></div>
</section>
<section id="러스트-40" class="level3" data-number="10.3.2">
<h3 data-number="10.3.2" class="anchored" data-anchor-id="러스트-40"><span class="header-section-number">10.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb82" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb82-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb82-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb82-3"></span>
<span id="cb82-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> slice <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> chars[s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>e]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb82-5">    slice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>reverse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb82-6"></span>
<span id="cb82-7">    chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb82-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb82-9"></span>
<span id="cb82-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb82-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcde"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb82-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb82-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="세로-읽기" class="level2" data-number="10.4">
<h2 data-number="10.4" class="anchored" data-anchor-id="세로-읽기"><span class="header-section-number">10.4</span> 세로 읽기</h2>
<p>문자열 my_string과 두 정수 m, c가 주어집니다. my_string을 한 줄에 m 글자씩 가로로 적었을 때 왼쪽부터 세로로 c번째 열에 적힌 글자들을 문자열로 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-40" class="level3" data-number="10.4.1">
<h3 data-number="10.4.1" class="anchored" data-anchor-id="파이썬-40"><span class="header-section-number">10.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb83" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb83-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, m: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, c: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb83-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과를 저장할 문자열 초기화</span></span>
<span id="cb83-3">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb83-4"></span>
<span id="cb83-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># c번째 열의 문자를 세로로 읽기</span></span>
<span id="cb83-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(my_string), m):</span>
<span id="cb83-7">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> my_string[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb83-8"></span>
<span id="cb83-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-41" class="level3" data-number="10.4.2">
<h3 data-number="10.4.2" class="anchored" data-anchor-id="러스트-41"><span class="header-section-number">10.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb84" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb84-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb84-2">    my_string</span>
<span id="cb84-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb84-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>skip(c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb84-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(m)</span>
<span id="cb84-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb84-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb84-8"></span>
<span id="cb84-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb84-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ihrhbakrfpndopljhygc"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="qr-code" class="level2" data-number="10.5">
<h2 data-number="10.5" class="anchored" data-anchor-id="qr-code"><span class="header-section-number">10.5</span> qr code</h2>
<p>두 정수 q, r과 문자열 code가 주어질 때, code의 각 인덱스를 q로 나누었을 때 나머지가 r인 위치의 문자를 앞에서부터 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-41" class="level3" data-number="10.5.1">
<h3 data-number="10.5.1" class="anchored" data-anchor-id="파이썬-41"><span class="header-section-number">10.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb85" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb85-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(q: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, r: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, code: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb85-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(code[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(code)) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> r)</span></code></pre></div>
</section>
<section id="러스트-42" class="level3" data-number="10.5.2">
<h3 data-number="10.5.2" class="anchored" data-anchor-id="러스트-42"><span class="header-section-number">10.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb86" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb86-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb86-2">    code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb86-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate()</span>
<span id="cb86-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> r)</span>
<span id="cb86-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c)</span>
<span id="cb86-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb86-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb86-8"></span>
<span id="cb86-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb86-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"qjnwezgrpirldywt"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb86-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb86-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-11-리스트-배열" class="level1" data-number="11">
<h1 data-number="11"><span class="header-section-number">11</span> Day 11 리스트 (배열)</h1>
<section id="문자-개수-세기" class="level2" data-number="11.1">
<h2 data-number="11.1" class="anchored" data-anchor-id="문자-개수-세기"><span class="header-section-number">11.1</span> 문자 개수 세기</h2>
<p>알파벳 대소문자로만 이루어진 문자열 my_string이 주어질 때, my_string에서 ’A’의 개수, my_string에서 ’B’의 개수,…, my_string에서 ’Z’의 개수, my_string에서 ’a’의 개수, my_string에서 ’b’의 개수,…, my_string에서 ’z’의 개수를 순서대로 담은 길이 52의 정수 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-42" class="level3" data-number="11.1.1">
<h3 data-number="11.1.1" class="anchored" data-anchor-id="파이썬-42"><span class="header-section-number">11.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb87" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb87-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb87-2"></span>
<span id="cb87-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb87-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 52개의 0으로 초기화된 리스트 생성</span></span>
<span id="cb87-5"></span>
<span id="cb87-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string:</span>
<span id="cb87-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char.isupper():</span>
<span id="cb87-8">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 대문자인 경우</span></span>
<span id="cb87-9">            index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(char) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span>)</span>
<span id="cb87-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> char.islower():</span>
<span id="cb87-11">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 소문자인 경우</span></span>
<span id="cb87-12">            index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(char) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span></span>
<span id="cb87-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb87-14">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 알파벳이 아닌 경우 (이 문제에서는 발생하지 않지만, 안전성을 위해 추가)</span></span>
<span id="cb87-15">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb87-16"></span>
<span id="cb87-17">        answer[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb87-18"></span>
<span id="cb87-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-43" class="level3" data-number="11.1.2">
<h3 data-number="11.1.2" class="anchored" data-anchor-id="러스트-43"><span class="header-section-number">11.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb88" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb88-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb88-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize a vector with 52 zeros</span></span>
<span id="cb88-3"></span>
<span id="cb88-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb88-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_ascii_uppercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb88-6">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// For uppercase letters</span></span>
<span id="cb88-7">            (<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">b'A'</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span></span>
<span id="cb88-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_ascii_lowercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb88-9">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// For lowercase letters</span></span>
<span id="cb88-10">            (<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">b'a'</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span></span>
<span id="cb88-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb88-12">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// For non-alphabetic characters (not expected in this problem, but added for safety)</span></span>
<span id="cb88-13">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb88-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb88-15"></span>
<span id="cb88-16">        answer[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb88-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb88-18"></span>
<span id="cb88-19">    answer</span>
<span id="cb88-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb88-21"></span>
<span id="cb88-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb88-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust is awesome!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb88-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(test_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb88-25">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result for '{}': {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> test_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb88-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-만들기-1" class="level2" data-number="11.2">
<h2 data-number="11.2" class="anchored" data-anchor-id="배열-만들기-1"><span class="header-section-number">11.2</span> 배열 만들기 1</h2>
<p>정수 n과 k가 주어졌을 때, 1 이상 n이하의 정수 중에서 k의 배수를 오름차순으로 저장한 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-43" class="level3" data-number="11.2.1">
<h3 data-number="11.2.1" class="anchored" data-anchor-id="파이썬-43"><span class="header-section-number">11.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb89" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb89-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tpying <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb89-2"></span>
<span id="cb89-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb89-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(k, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, k)]</span></code></pre></div>
</section>
<section id="러스트-44" class="level3" data-number="11.2.2">
<h3 data-number="11.2.2" class="anchored" data-anchor-id="러스트-44"><span class="header-section-number">11.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb90" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb90-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb90-2">    (k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb90-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb90-4"></span>
<span id="cb90-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb90-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb90-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb90-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb90-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result for n={} and k={}: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb90-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="글자-지우기" class="level2" data-number="11.3">
<h2 data-number="11.3" class="anchored" data-anchor-id="글자-지우기"><span class="header-section-number">11.3</span> 글자 지우기</h2>
<p>문자열 my_string과 정수 배열 indices가 주어질 때, my_string에서 indices의 원소에 해당하는 인덱스의 글자를 지우고 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-44" class="level3" data-number="11.3.1">
<h3 data-number="11.3.1" class="anchored" data-anchor-id="파이썬-44"><span class="header-section-number">11.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb91" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb91-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb91-2"></span>
<span id="cb91-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, indices: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb91-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 문자열을 리스트로 변환</span></span>
<span id="cb91-5">    chars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(my_string)</span>
<span id="cb91-6"></span>
<span id="cb91-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># indices의 원소에 해당하는 인덱스의 문자를 빈 문자로 대체</span></span>
<span id="cb91-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> index <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> indices:</span>
<span id="cb91-9">        chars[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb91-10"></span>
<span id="cb91-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트를 다시 문자열로 결합</span></span>
<span id="cb91-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(chars)</span></code></pre></div>
</section>
<section id="러스트-45" class="level3" data-number="11.3.2">
<h3 data-number="11.3.2" class="anchored" data-anchor-id="러스트-45"><span class="header-section-number">11.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb92" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb92-1">from typing import List</span>
<span id="cb92-2"></span>
<span id="cb92-3">def solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> List[int]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb92-4">    # 문자열을 리스트로 변환</span>
<span id="cb92-5">    chars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> list(my_string)</span>
<span id="cb92-6"></span>
<span id="cb92-7">    # indices의 원소에 해당하는 인덱스의 문자를 빈 문자로 대체</span>
<span id="cb92-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> index <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb92-9">        chars[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb92-10"></span>
<span id="cb92-11">    # 리스트를 다시 문자열로 결합</span>
<span id="cb92-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(chars)</span></code></pre></div>
</section>
</section>
<section id="카운트-다운" class="level2" data-number="11.4">
<h2 data-number="11.4" class="anchored" data-anchor-id="카운트-다운"><span class="header-section-number">11.4</span> 카운트 다운</h2>
<p>정수 start_num와 end_num가 주어질 때, start_num에서 end_num까지 1씩 감소하는 수들을 차례로 담은 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-45" class="level3" data-number="11.4.1">
<h3 data-number="11.4.1" class="anchored" data-anchor-id="파이썬-45"><span class="header-section-number">11.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb93" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb93-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb93-2"></span>
<span id="cb93-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(start_num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, end_num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb93-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(start_num, end_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</section>
<section id="러스트-46" class="level3" data-number="11.4.2">
<h3 data-number="11.4.2" class="anchored" data-anchor-id="러스트-46"><span class="header-section-number">11.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb94" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb94-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(start_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> end_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb94-2">    (end_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>start_num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>rev()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb94-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb94-4"></span>
<span id="cb94-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb94-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> start_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb94-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> end_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb94-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(start_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> end_num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb94-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result from {} to {}: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> start_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> end_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb94-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="가까운-1-찾기" class="level2" data-number="11.5">
<h2 data-number="11.5" class="anchored" data-anchor-id="가까운-1-찾기"><span class="header-section-number">11.5</span> 가까운 1 찾기</h2>
<p>정수 배열 arr가 주어집니다. 이때 arr의 원소는 1 또는 0입니다. 정수 idx가 주어졌을 때, idx보다 크면서 배열의 값이 1인 가장 작은 인덱스를 찾아서 반환하는 solution 함수를 완성해 주세요.만약 그러한 인덱스가 없다면 -1을 반환합니다.</p>
<section id="파이썬-46" class="level3" data-number="11.5.1">
<h3 data-number="11.5.1" class="anchored" data-anchor-id="파이썬-46"><span class="header-section-number">11.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb95" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb95-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb95-2"></span>
<span id="cb95-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], idx:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb95-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(idx, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr)):</span>
<span id="cb95-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb95-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i</span>
<span id="cb95-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-47" class="level3" data-number="11.5.2">
<h3 data-number="11.5.2" class="anchored" data-anchor-id="러스트-47"><span class="header-section-number">11.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb96" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb96-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb96-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>value) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>skip(idx) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb96-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb96-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb96-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb96-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb96-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb96-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb96-9"></span>
<span id="cb96-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb96-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb96-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb96-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> idx)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb96-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb96-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-12-리스트-배열" class="level1" data-number="12">
<h1 data-number="12"><span class="header-section-number">12</span> Day 12 리스트 (배열)</h1>
<section id="리스트-자르기" class="level2" data-number="12.1">
<h2 data-number="12.1" class="anchored" data-anchor-id="리스트-자르기"><span class="header-section-number">12.1</span> 리스트 자르기</h2>
<p>정수 n과 정수 3개가 담긴 리스트 slicer 그리고 정수 여러 개가 담긴 리스트 num_list가 주어집니다. slicer에 담긴 정수를 차례대로 a, b, c라고 할 때, n에 따라 다음과 같이 num_list를 슬라이싱 하려고 합니다.</p>
<ul>
<li>n = 1 : num_list의 0번 인덱스부터 b번 인덱스까지</li>
<li>n = 2 : num_list의 a번 인덱스부터 마지막 인덱스까지</li>
<li>n = 3 : num_list의 a번 인덱스부터 b번 인덱스까지</li>
<li>n = 4 : num_list의 a번 인덱스부터 b번 인덱스까지 c 간격으로</li>
</ul>
<p>올바르게 슬라이싱한 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-47" class="level3" data-number="12.1.1">
<h3 data-number="12.1.1" class="anchored" data-anchor-id="파이썬-47"><span class="header-section-number">12.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb97" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb97-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb97-2"></span>
<span id="cb97-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, slicer: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb97-4">    a, b, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> slicer</span>
<span id="cb97-5"></span>
<span id="cb97-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb97-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[:b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb97-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb97-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[a:]</span>
<span id="cb97-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb97-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[a:b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb97-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:</span>
<span id="cb97-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[a:b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:c]</span></code></pre></div>
</section>
<section id="러스트-48" class="level3" data-number="12.1.2">
<h3 data-number="12.1.2" class="anchored" data-anchor-id="러스트-48"><span class="header-section-number">12.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb98" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb98-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> slicer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb98-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (slicer[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> slicer[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> slicer[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-3"></span>
<span id="cb98-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb98-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> num_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>b]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb98-6">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> num_list[a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb98-7">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> num_list[a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>b]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb98-8">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> num_list[a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>b]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(c)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb98-9">        _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Handle unexpected n values</span></span>
<span id="cb98-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb98-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb98-12"></span>
<span id="cb98-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb98-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> slicer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-16"></span>
<span id="cb98-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n = 1: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>slicer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num_list))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="첫-번째로-나오는-음수" class="level2" data-number="12.2">
<h2 data-number="12.2" class="anchored" data-anchor-id="첫-번째로-나오는-음수"><span class="header-section-number">12.2</span> 첫 번째로 나오는 음수</h2>
<p>정수 리스트 num_list가 주어질 때, 첫 번째로 나오는 음수의 인덱스를 return하도록 solution 함수를 완성해주세요. 음수가 없다면 -1을 return합니다.</p>
<section id="파이썬-48" class="level3" data-number="12.2.1">
<h3 data-number="12.2.1" class="anchored" data-anchor-id="파이썬-48"><span class="header-section-number">12.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb99" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb99-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb99-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb99-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(num_list):</span>
<span id="cb99-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb99-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i</span>
<span id="cb99-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-49" class="level3" data-number="12.2.2">
<h3 data-number="12.2.2" class="anchored" data-anchor-id="러스트-49"><span class="header-section-number">12.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb100" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb100-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb100-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb100-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb100-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb100-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb100-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb100-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb100-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb100-9"></span>
<span id="cb100-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb100-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb100-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num_list))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb100-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-만들기-3" class="level2" data-number="12.3">
<h2 data-number="12.3" class="anchored" data-anchor-id="배열-만들기-3"><span class="header-section-number">12.3</span> 배열 만들기 3</h2>
<p>정수 배열 arr와 2개의 구간이 담긴 배열 intervals가 주어집니다.</p>
<p>intervals는 항상 <code>[[a1, b1], [a2, b2]]</code>의 꼴로 주어지며 각 구간은 닫힌 구간입니다. 닫힌 구간은 양 끝값과 그 사이의 값을 모두 포함하는 구간을 의미합니다.</p>
<p>이때 배열 arr의 첫 번째 구간에 해당하는 배열과 두 번째 구간에 해당하는 배열을 앞뒤로 붙여 새로운 배열을 만들어 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-49" class="level3" data-number="12.3.1">
<h3 data-number="12.3.1" class="anchored" data-anchor-id="파이썬-49"><span class="header-section-number">12.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb101" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb101-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb101-2"></span>
<span id="cb101-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], intervals: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb101-4">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb101-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> interval <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> intervals:</span>
<span id="cb101-6">        start, end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> interval</span>
<span id="cb101-7">        result.extend(arr[start:end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb101-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-50" class="level3" data-number="12.3.2">
<h3 data-number="12.3.2" class="anchored" data-anchor-id="러스트-50"><span class="header-section-number">12.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb102" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb102-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> intervals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb102-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> interval <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb102-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-6">        result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend_from_slice(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr[start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>end])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb102-8">    result</span>
<span id="cb102-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb102-10"></span>
<span id="cb102-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb102-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>intervals)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="의-영역" class="level2" data-number="12.4">
<h2 data-number="12.4" class="anchored" data-anchor-id="의-영역"><span class="header-section-number">12.4</span> 2의 영역</h2>
<p>정수 배열 arr가 주어집니다. 배열 안의 2가 모두 포함된 가장 작은 연속된 부분 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<p>단, arr에 2가 없는 경우 <code>[-1]</code>을 return 합니다.</p>
<section id="파이썬-50" class="level3" data-number="12.4.1">
<h3 data-number="12.4.1" class="anchored" data-anchor-id="파이썬-50"><span class="header-section-number">12.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb103" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb103-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb103-2"></span>
<span id="cb103-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb103-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2의 위치를 모두 찾습니다</span></span>
<span id="cb103-5">    indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(arr) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb103-6"></span>
<span id="cb103-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2가 없는 경우 [-1]을 반환합니다</span></span>
<span id="cb103-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> indices:</span>
<span id="cb103-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb103-10"></span>
<span id="cb103-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 첫 번째 2와 마지막 2의 인덱스를 찾습니다</span></span>
<span id="cb103-12">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> indices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb103-13">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> indices[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb103-14"></span>
<span id="cb103-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 해당 범위의 부분 배열을 반환합니다</span></span>
<span id="cb103-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> arr[start:end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</section>
<section id="러스트-51" class="level3" data-number="12.4.2">
<h3 data-number="12.4.2" class="anchored" data-anchor-id="러스트-51"><span class="header-section-number">12.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb104" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb104-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb104-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 2의 위치를 모두 찾습니다</span></span>
<span id="cb104-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb104-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate()</span>
<span id="cb104-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>x)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb104-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> i)</span>
<span id="cb104-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-8"></span>
<span id="cb104-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 2가 없는 경우 [-1]을 반환합니다</span></span>
<span id="cb104-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb104-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb104-13"></span>
<span id="cb104-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 첫 번째 2와 마지막 2의 인덱스를 찾습니다</span></span>
<span id="cb104-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> indices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> indices[indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-17"></span>
<span id="cb104-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 해당 범위의 부분 배열을 반환합니다</span></span>
<span id="cb104-19">    arr[start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>end]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()</span>
<span id="cb104-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb104-21"></span>
<span id="cb104-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb104-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-25">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-조각하기" class="level2" data-number="12.5">
<h2 data-number="12.5" class="anchored" data-anchor-id="배열-조각하기"><span class="header-section-number">12.5</span> 배열 조각하기</h2>
<p>정수 배열 arr와 query가 주어집니다.</p>
<p>query를 순회하면서 다음 작업을 반복합니다.</p>
<ul>
<li>짝수 인덱스에서는 arr에서 <code>query[i]</code>번 인덱스를 제외하고 배열의 <code>query[i]</code>번 인덱스 뒷부분을 잘라서 버립니다.</li>
<li>홀수 인덱스에서는 arr에서 <code>query[i]</code>번 인덱스는 제외하고 배열의 <code>query[i]</code>번 인덱스 앞부분을 잘라서 버립니다.</li>
</ul>
<p>위 작업을 마친 후 남은 arr의 부분 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-51" class="level3" data-number="12.5.1">
<h3 data-number="12.5.1" class="anchored" data-anchor-id="파이썬-51"><span class="header-section-number">12.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb105" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb105-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb105-2"></span>
<span id="cb105-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], query: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb105-4">    start, end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr)</span>
<span id="cb105-5"></span>
<span id="cb105-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, q <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(query):</span>
<span id="cb105-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 짝수 인덱스</span></span>
<span id="cb105-8">            end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb105-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 홀수 인덱스</span></span>
<span id="cb105-10">            start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> q</span>
<span id="cb105-11"></span>
<span id="cb105-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> arr[start:end]</span></code></pre></div>
</section>
<section id="러스트-52" class="level3" data-number="12.5.2">
<h3 data-number="12.5.2" class="anchored" data-anchor-id="러스트-52"><span class="header-section-number">12.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb106" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb106-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> query<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb106-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-4"></span>
<span id="cb106-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>q) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> query<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb106-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 짝수 인덱스</span></span>
<span id="cb106-7">            end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 홀수 인덱스</span></span>
<span id="cb106-9">            start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb106-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb106-12"></span>
<span id="cb106-13">    arr[start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>end]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()</span>
<span id="cb106-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb106-15"></span>
<span id="cb106-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb106-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>query)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-13-리스트-배열" class="level1" data-number="13">
<h1 data-number="13"><span class="header-section-number">13</span> Day 13 리스트 (배열)</h1>
<section id="n-번째-원소부터" class="level2" data-number="13.1">
<h2 data-number="13.1" class="anchored" data-anchor-id="n-번째-원소부터"><span class="header-section-number">13.1</span> n 번째 원소부터</h2>
<p>정수 리스트 num_list와 정수 n이 주어질 때, n 번째 원소부터 마지막 원소까지의 모든 원소를 담은 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-52" class="level3" data-number="13.1.1">
<h3 data-number="13.1.1" class="anchored" data-anchor-id="파이썬-52"><span class="header-section-number">13.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb107" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb107-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb107-2"></span>
<span id="cb107-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb107-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]</span></code></pre></div>
</section>
<section id="러스트-53" class="level3" data-number="13.1.2">
<h3 data-number="13.1.2" class="anchored" data-anchor-id="러스트-53"><span class="header-section-number">13.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb108" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb108-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb108-2">    num_list[n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()</span>
<span id="cb108-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb108-4"></span>
<span id="cb108-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb108-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb108-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb108-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb108-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb108-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="순서-바꾸기" class="level2" data-number="13.2">
<h2 data-number="13.2" class="anchored" data-anchor-id="순서-바꾸기"><span class="header-section-number">13.2</span> 순서 바꾸기</h2>
<p>정수 리스트 num_list와 정수 n이 주어질 때, num_list를 n 번째 원소 이후의 원소들과 n 번째까지의 원소들로 나눠 n 번째 원소 이후의 원소들을 n 번째까지의 원소들 앞에 붙인 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-53" class="level3" data-number="13.2.1">
<h3 data-number="13.2.1" class="anchored" data-anchor-id="파이썬-53"><span class="header-section-number">13.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb109" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb109-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb109-2"></span>
<span id="cb109-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb109-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[n:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num_list[:n]</span></code></pre></div>
</section>
<section id="러스트-54" class="level3" data-number="13.2.2">
<h3 data-number="13.2.2" class="anchored" data-anchor-id="러스트-54"><span class="header-section-number">13.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb110" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb110-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb110-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list[n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb110-3">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend_from_slice(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb110-4">    result</span>
<span id="cb110-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb110-6"></span>
<span id="cb110-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb110-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb110-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb110-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb110-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb110-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="왼쪽-오른쪽" class="level2" data-number="13.3">
<h2 data-number="13.3" class="anchored" data-anchor-id="왼쪽-오른쪽"><span class="header-section-number">13.3</span> 왼쪽 오른쪽</h2>
<p>문자열 리스트 str_list에는 “u”, “d”, “l”, “r” 네 개의 문자열이 여러 개 저장되어 있습니다. str_list에서 “l”과 “r” 중 먼저 나오는 문자열이 “l”이라면 해당 문자열을 기준으로 왼쪽에 있는 문자열들을 순서대로 담은 리스트를, 먼저 나오는 문자열이 “r”이라면 해당 문자열을 기준으로 오른쪽에 있는 문자열들을 순서대로 담은 리스트를 return하도록 solution 함수를 완성해주세요. “l”이나 “r”이 없다면 빈 리스트를 return합니다.</p>
<section id="파이썬-54" class="level3" data-number="13.3.1">
<h3 data-number="13.3.1" class="anchored" data-anchor-id="파이썬-54"><span class="header-section-number">13.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb111" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb111-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb111-2"></span>
<span id="cb111-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(str_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb111-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(str_list):</span>
<span id="cb111-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>:</span>
<span id="cb111-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> str_list[:i]</span>
<span id="cb111-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>:</span>
<span id="cb111-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> str_list[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]</span>
<span id="cb111-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> []</span></code></pre></div>
</section>
<section id="러스트-55" class="level3" data-number="13.3.2">
<h3 data-number="13.3.2" class="anchored" data-anchor-id="러스트-55"><span class="header-section-number">13.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb112" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb112-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb112-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> str_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb112-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb112-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> str_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb112-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb112-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> str_list[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb112-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb112-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb112-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()</span>
<span id="cb112-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb112-11"></span>
<span id="cb112-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb112-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb112-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"u"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb112-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"u"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb112-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb112-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb112-18">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb112-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb112-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb112-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="n번째-원소까지" class="level2" data-number="13.4">
<h2 data-number="13.4" class="anchored" data-anchor-id="n번째-원소까지"><span class="header-section-number">13.4</span> n번째 원소까지</h2>
<p>정수 리스트 num_list와 정수 n이 주어질 때, num_list의 첫 번째 원소부터 n 번째 원소까지의 모든 원소를 담은 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-55" class="level3" data-number="13.4.1">
<h3 data-number="13.4.1" class="anchored" data-anchor-id="파이썬-55"><span class="header-section-number">13.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb113" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb113-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb113-2"></span>
<span id="cb113-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb113-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[:n]</span></code></pre></div>
</section>
<section id="러스트-56" class="level3" data-number="13.4.2">
<h3 data-number="13.4.2" class="anchored" data-anchor-id="러스트-56"><span class="header-section-number">13.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb114" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb114-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb114-2">    num_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()</span>
<span id="cb114-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb114-4"></span>
<span id="cb114-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb114-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb114-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb114-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb114-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb114-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="n개-간격의-원소들" class="level2" data-number="13.5">
<h2 data-number="13.5" class="anchored" data-anchor-id="n개-간격의-원소들"><span class="header-section-number">13.5</span> n개 간격의 원소들</h2>
<p>정수 리스트 num_list와 정수 n이 주어질 때, num_list의 첫 번째 원소부터 마지막 원소까지 n개 간격으로 저장되어있는 원소들을 차례로 담은 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-56" class="level3" data-number="13.5.1">
<h3 data-number="13.5.1" class="anchored" data-anchor-id="파이썬-56"><span class="header-section-number">13.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb115" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb115-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb115-2"></span>
<span id="cb115-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb115-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[::n]</span></code></pre></div>
</section>
<section id="러스트-57" class="level3" data-number="13.5.2">
<h3 data-number="13.5.2" class="anchored" data-anchor-id="러스트-57"><span class="header-section-number">13.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb116" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb116-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb116-2">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb116-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb116-4"></span>
<span id="cb116-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb116-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb116-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb116-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb116-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb116-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-14-리스트-배열" class="level1" data-number="14">
<h1 data-number="14"><span class="header-section-number">14</span> Day 14 리스트 (배열)</h1>
<section id="홀수-vs-짝수" class="level2" data-number="14.1">
<h2 data-number="14.1" class="anchored" data-anchor-id="홀수-vs-짝수"><span class="header-section-number">14.1</span> 홀수 vs 짝수</h2>
<p>정수 리스트 num_list가 주어집니다. 가장 첫 번째 원소를 1번 원소라고 할 때, 홀수 번째 원소들의 합과 짝수 번째 원소들의 합 중 큰 값을 return 하도록 solution 함수를 완성해주세요. 두 값이 같을 경우 그 값을 return합니다.</p>
<section id="파이썬-57" class="level3" data-number="14.1.1">
<h3 data-number="14.1.1" class="anchored" data-anchor-id="파이썬-57"><span class="header-section-number">14.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb117" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb117-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb117-2"></span>
<span id="cb117-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb117-4">    odd_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(num_list[::<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 홀수 번째 원소들의 합</span></span>
<span id="cb117-5">    even_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(num_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>::<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 짝수 번째 원소들의 합</span></span>
<span id="cb117-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(odd_sum, even_sum)</span></code></pre></div>
</section>
<section id="러스트-58" class="level3" data-number="14.1.2">
<h3 data-number="14.1.2" class="anchored" data-anchor-id="러스트-58"><span class="header-section-number">14.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb118" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb118-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb118-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> odd_sum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb118-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> even_sum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>skip(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb118-4">    odd_sum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max(even_sum)</span>
<span id="cb118-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb118-6"></span>
<span id="cb118-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb118-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb118-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb118-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb118-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="명씩" class="level2" data-number="14.2">
<h2 data-number="14.2" class="anchored" data-anchor-id="명씩"><span class="header-section-number">14.2</span> 5명씩</h2>
<p>최대 5명씩 탑승가능한 놀이기구를 타기 위해 줄을 서있는 사람들의 이름이 담긴 문자열 리스트 names가 주어질 때, 앞에서 부터 5명씩 묶은 그룹의 가장 앞에 서있는 사람들의 이름을 담은 리스트를 return하도록 solution 함수를 완성해주세요. 마지막 그룹이 5명이 되지 않더라도 가장 앞에 있는 사람의 이름을 포함합니다.</p>
<section id="파이썬-58" class="level3" data-number="14.2.1">
<h3 data-number="14.2.1" class="anchored" data-anchor-id="파이썬-58"><span class="header-section-number">14.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb119" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb119-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb119-2"></span>
<span id="cb119-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(names: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]):</span>
<span id="cb119-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> names[::<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
</section>
<section id="러스트-59" class="level3" data-number="14.2.2">
<h3 data-number="14.2.2" class="anchored" data-anchor-id="러스트-59"><span class="header-section-number">14.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb120" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb120-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb120-2">    names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb120-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb120-4"></span>
<span id="cb120-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb120-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb120-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jane"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb120-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kim"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb120-9">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb120-10"></span>
<span id="cb120-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(names)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb120-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb120-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="할-일-목록" class="level2" data-number="14.3">
<h2 data-number="14.3" class="anchored" data-anchor-id="할-일-목록"><span class="header-section-number">14.3</span> 할 일 목록</h2>
<p>오늘 해야 할 일이 담긴 문자열 배열 todo_list와 각각의 일을 지금 마쳤는지를 나타내는 boolean 배열 finished가 매개변수로 주어질 때, todo_list에서 아직 마치지 못한 일들을 순서대로 담은 문자열 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-59" class="level3" data-number="14.3.1">
<h3 data-number="14.3.1" class="anchored" data-anchor-id="파이썬-59"><span class="header-section-number">14.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb121" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb121-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb121-2"></span>
<span id="cb121-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(todo_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], finished: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb121-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [task <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> task, is_finished <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(todo_list, finished) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> is_finished]</span></code></pre></div>
</section>
<section id="러스트-60" class="level3" data-number="14.3.2">
<h3 data-number="14.3.2" class="anchored" data-anchor-id="러스트-60"><span class="header-section-number">14.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb122" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb122-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(todo_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> finished<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb122-2">    todo_list</span>
<span id="cb122-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()</span>
<span id="cb122-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>zip(finished)</span>
<span id="cb122-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> is_finished)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>is_finished)</span>
<span id="cb122-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(task<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> task)</span>
<span id="cb122-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb122-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb122-9"></span>
<span id="cb122-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb122-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> todo_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb122-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"laundry"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb122-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dishes"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb122-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vacuum"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb122-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"groceries"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb122-16">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb122-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> finished <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb122-18"></span>
<span id="cb122-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(todo_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> finished)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb122-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unfinished tasks: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb122-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="n보다-커질-때까지-더하기" class="level2" data-number="14.4">
<h2 data-number="14.4" class="anchored" data-anchor-id="n보다-커질-때까지-더하기"><span class="header-section-number">14.4</span> n보다 커질 때까지 더하기</h2>
<p>정수 배열 numbers와 정수 n이 매개변수로 주어집니다. numbers의 원소를 앞에서부터 하나씩 더하다가 그 합이 n보다 커지는 순간 이때까지 더했던 원소들의 합을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-60" class="level3" data-number="14.4.1">
<h3 data-number="14.4.1" class="anchored" data-anchor-id="파이썬-60"><span class="header-section-number">14.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb123" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb123-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb123-2"></span>
<span id="cb123-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb123-4">    total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb123-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numbers:</span>
<span id="cb123-6">        total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> num</span>
<span id="cb123-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> n:</span>
<span id="cb123-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total</span>
<span id="cb123-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total</span></code></pre></div>
</section>
<section id="러스트-61" class="level3" data-number="14.4.2">
<h3 data-number="14.4.2" class="anchored" data-anchor-id="러스트-61"><span class="header-section-number">14.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb124" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb124-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb124-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb124-4">        total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb124-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb124-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb124-9">    total</span>
<span id="cb124-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb124-11"></span>
<span id="cb124-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb124-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb124-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb124-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb124-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb124-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb124-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb124-19">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-21"></span>
<span id="cb124-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-23">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="수열과-구간-쿼리-1" class="level2" data-number="14.5">
<h2 data-number="14.5" class="anchored" data-anchor-id="수열과-구간-쿼리-1"><span class="header-section-number">14.5</span> 수열과 구간 쿼리 1</h2>
<p>정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, <code>[s, e]</code> 꼴입니다. 각 query마다 순서대로 s ≤ i ≤ e인 모든 i에 대해 <code>arr[i]</code>에 1을 더합니다. 위 규칙에 따라 queries를 처리한 이후의 arr를 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-61" class="level3" data-number="14.5.1">
<h3 data-number="14.5.1" class="anchored" data-anchor-id="파이썬-61"><span class="header-section-number">14.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb125" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb125-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb125-2"></span>
<span id="cb125-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], queries: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb125-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s, e <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries:</span>
<span id="cb125-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(s, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb125-6">            arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb125-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> arr</span></code></pre></div>
</section>
<section id="러스트-62" class="level3" data-number="14.5.2">
<h3 data-number="14.5.2" class="anchored" data-anchor-id="러스트-62"><span class="header-section-number">14.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb126" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb126-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> queries<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb126-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> e) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb126-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb126-4">            arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb126-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb126-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb126-7">    arr</span>
<span id="cb126-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb126-9"></span>
<span id="cb126-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb126-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb126-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb126-13"></span>
<span id="cb126-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> queries)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb126-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb126-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-15-리스트-배열-문자열" class="level1" data-number="15">
<h1 data-number="15"><span class="header-section-number">15</span> Day 15 리스트 (배열), 문자열</h1>
<section id="조건에-맞게-수열-변환하기-1" class="level2" data-number="15.1">
<h2 data-number="15.1" class="anchored" data-anchor-id="조건에-맞게-수열-변환하기-1"><span class="header-section-number">15.1</span> 조건에 맞게 수열 변환하기 1</h2>
<p>정수 배열 arr가 주어집니다. arr의 각 원소에 대해 값이 50보다 크거나 같은 짝수라면 2로 나누고, 50보다 작은 홀수라면 2를 곱합니다. 그 결과인 정수 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-62" class="level3" data-number="15.1.1">
<h3 data-number="15.1.1" class="anchored" data-anchor-id="파이썬-62"><span class="header-section-number">15.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb127" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb127-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb127-2"></span>
<span id="cb127-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb127-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> num <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr]</span></code></pre></div>
</section>
<section id="러스트-63" class="level3" data-number="15.1.2">
<h3 data-number="15.1.2" class="anchored" data-anchor-id="러스트-63"><span class="header-section-number">15.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb128" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb128-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb128-2">    arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb128-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb128-4">            num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb128-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb128-6">            num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb128-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb128-8">            num</span>
<span id="cb128-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb128-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb128-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb128-12"></span>
<span id="cb128-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb128-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb128-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb128-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb128-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="조건에-맞게-수열-변환하기-2" class="level2" data-number="15.2">
<h2 data-number="15.2" class="anchored" data-anchor-id="조건에-맞게-수열-변환하기-2"><span class="header-section-number">15.2</span> 조건에 맞게 수열 변환하기 2</h2>
<p>정수 배열 arr가 주어집니다. arr의 각 원소에 대해 값이 50보다 크거나 같은 짝수라면 2로 나누고, 50보다 작은 홀수라면 2를 곱하고 다시 1을 더합니다.</p>
<p>이러한 작업을 x번 반복한 결과인 배열을 <code>arr(x)</code>라고 표현했을 때, <code>arr(x) = arr(x + 1)</code>인 x가 항상 존재합니다. 이러한 x 중 가장 작은 값을 return 하는 solution 함수를 완성해 주세요.</p>
<p>단, 두 배열에 대한 “=”는 두 배열의 크기가 서로 같으며, 같은 인덱스의 원소가 각각 서로 같음을 의미합니다.</p>
<section id="파이썬-63" class="level3" data-number="15.2.1">
<h3 data-number="15.2.1" class="anchored" data-anchor-id="파이썬-63"><span class="header-section-number">15.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb129" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb129-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb129-2"></span>
<span id="cb129-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb129-4">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb129-5">    prev_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr.copy()</span>
<span id="cb129-6"></span>
<span id="cb129-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb129-8">        new_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb129-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> prev_arr:</span>
<span id="cb129-10">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb129-11">                new_arr.append(num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb129-12">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb129-13">                new_arr.append(num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb129-14">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb129-15">                new_arr.append(num)</span>
<span id="cb129-16"></span>
<span id="cb129-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> new_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> prev_arr:</span>
<span id="cb129-18">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x</span>
<span id="cb129-19"></span>
<span id="cb129-20">        prev_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_arr</span>
<span id="cb129-21">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-64" class="level3" data-number="15.2.2">
<h3 data-number="15.2.2" class="anchored" data-anchor-id="러스트-64"><span class="header-section-number">15.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb130" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb130-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> prev_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-4"></span>
<span id="cb130-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">loop</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> new_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prev_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-8">                num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb130-9">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-10">                num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb130-11">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-12">                num</span>
<span id="cb130-13">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb130-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-15"></span>
<span id="cb130-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> new_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> prev_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-17">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb130-19"></span>
<span id="cb130-20">        prev_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-21">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb130-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb130-24"></span>
<span id="cb130-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb130-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-28">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-29"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="로-만들기" class="level2" data-number="15.3">
<h2 data-number="15.3" class="anchored" data-anchor-id="로-만들기"><span class="header-section-number">15.3</span> 1로 만들기</h2>
<p>정수가 있을 때, 짝수라면 반으로 나누고, 홀수라면 1을 뺀 뒤 반으로 나누면, 마지막엔 1이 됩니다. 예를 들어 10이 있다면 다음과 같은 과정으로 1이 됩니다.</p>
<pre><code>10 / 2 = 5
(5 - 1) / 2 = 2
2 / 2 = 1</code></pre>
<p>위와 같이 3번의 나누기 연산으로 1이 되었습니다.</p>
<p>정수들이 담긴 리스트 num_list가 주어질 때, num_list의 모든 원소를 1로 만들기 위해서 필요한 나누기 연산의 횟수를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-64" class="level3" data-number="15.3.1">
<h3 data-number="15.3.1" class="anchored" data-anchor-id="파이썬-64"><span class="header-section-number">15.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb132" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb132-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb132-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb132-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> count_operations(num):</span>
<span id="cb132-4">        count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb132-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb132-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb132-7">                num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb132-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb132-9">                num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb132-10">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb132-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count</span>
<span id="cb132-12"></span>
<span id="cb132-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(count_operations(num) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_list)</span></code></pre></div>
</section>
<section id="러스트-65" class="level3" data-number="15.3.2">
<h3 data-number="15.3.2" class="anchored" data-anchor-id="러스트-65"><span class="header-section-number">15.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb133" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb133-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> count_operations(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-6">                num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-7">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-8">                num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-9">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb133-10">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb133-12">        count</span>
<span id="cb133-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb133-14"></span>
<span id="cb133-15">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> count_operations(num))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb133-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb133-17"></span>
<span id="cb133-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb133-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="길이에-따른-연산" class="level2" data-number="15.4">
<h2 data-number="15.4" class="anchored" data-anchor-id="길이에-따른-연산"><span class="header-section-number">15.4</span> 길이에 따른 연산</h2>
<p>정수가 담긴 리스트 num_list가 주어질 때, 리스트의 길이가 11 이상이면 리스트에 있는 모든 원소의 합을 10 이하이면 모든 원소의 곱을 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-65" class="level3" data-number="15.4.1">
<h3 data-number="15.4.1" class="anchored" data-anchor-id="파이썬-65"><span class="header-section-number">15.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb134" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb134-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb134-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb134-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb134-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(num_list) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>:</span>
<span id="cb134-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(num_list)</span>
<span id="cb134-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb134-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> math.prod(num_list)</span></code></pre></div>
</section>
<section id="러스트-66" class="level3" data-number="15.4.2">
<h3 data-number="15.4.2" class="anchored" data-anchor-id="러스트-66"><span class="header-section-number">15.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb135" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb135-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-3">        num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb135-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-5">        num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>product()</span>
<span id="cb135-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-8"></span>
<span id="cb135-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input with less than 11 elements</span></span>
<span id="cb135-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input with 11 elements</span></span>
<span id="cb135-12"></span>
<span id="cb135-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(num_list1))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 2: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(num_list2))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="원하는-문자열-찾기" class="level2" data-number="15.5">
<h2 data-number="15.5" class="anchored" data-anchor-id="원하는-문자열-찾기"><span class="header-section-number">15.5</span> 원하는 문자열 찾기</h2>
<p>알파벳으로 이루어진 문자열 myString과 pat이 주어집니다. myString의 연속된 부분 문자열 중 pat이 존재하면 1을 그렇지 않으면 0을 return 하는 solution 함수를 완성해 주세요. 단, 알파벳 대문자와 소문자는 구분하지 않습니다.</p>
<section id="파이썬-66" class="level3" data-number="15.5.1">
<h3 data-number="15.5.1" class="anchored" data-anchor-id="파이썬-66"><span class="header-section-number">15.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb136" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb136-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, pat: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb136-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pat.lower() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> myString.lower())</span></code></pre></div>
</section>
<section id="러스트-67" class="level3" data-number="15.5.2">
<h3 data-number="15.5.2" class="anchored" data-anchor-id="러스트-67"><span class="header-section-number">15.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb137" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb137-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Import necessary modules</span></span>
<span id="cb137-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example import</span></span>
<span id="cb137-3"></span>
<span id="cb137-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define structs or enums if needed</span></span>
<span id="cb137-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> MyStruct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-6">    field1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb137-7">    field2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb137-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-9"></span>
<span id="cb137-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Implement methods for structs if needed</span></span>
<span id="cb137-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">impl</span> MyStruct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> new(value1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> value2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Self</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-13">        MyStruct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-14">            field1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> value1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb137-15">            field2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> value2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb137-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-18"></span>
<span id="cb137-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> some_method(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">self</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method implementation</span></span>
<span id="cb137-21">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">self</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>field1</span>
<span id="cb137-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-24"></span>
<span id="cb137-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Main function</span></span>
<span id="cb137-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Your converted code logic here</span></span>
<span id="cb137-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_instance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">MyStruct::</span>new(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb137-29">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> my_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>some_method())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb137-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-31"></span>
<span id="cb137-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Helper functions</span></span>
<span id="cb137-33"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> helper_function(param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Function implementation</span></span>
<span id="cb137-35">    param <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb137-36"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-16-문자열" class="level1" data-number="16">
<h1 data-number="16"><span class="header-section-number">16</span> Day 16 문자열</h1>
<section id="대문자로-바꾸기" class="level2" data-number="16.1">
<h2 data-number="16.1" class="anchored" data-anchor-id="대문자로-바꾸기"><span class="header-section-number">16.1</span> 대문자로 바꾸기</h2>
<p>알파벳으로 이루어진 문자열 myString이 주어집니다. 모든 알파벳을 대문자로 변환하여 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-67" class="level3" data-number="16.1.1">
<h3 data-number="16.1.1" class="anchored" data-anchor-id="파이썬-67"><span class="header-section-number">16.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb138" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb138-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb138-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> myString.upper()</span></code></pre></div>
</section>
<section id="러스트-68" class="level3" data-number="16.1.2">
<h3 data-number="16.1.2" class="anchored" data-anchor-id="러스트-68"><span class="header-section-number">16.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb139" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb139-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb139-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_uppercase()</span>
<span id="cb139-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb139-4"></span>
<span id="cb139-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb139-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, World!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb139-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb139-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb139-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Uppercase: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb139-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="소문자로-바꾸기" class="level2" data-number="16.2">
<h2 data-number="16.2" class="anchored" data-anchor-id="소문자로-바꾸기"><span class="header-section-number">16.2</span> 소문자로 바꾸기</h2>
<p>알파벳으로 이루어진 문자열 myString이 주어집니다. 모든 알파벳을 소문자로 변환하여 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-68" class="level3" data-number="16.2.1">
<h3 data-number="16.2.1" class="anchored" data-anchor-id="파이썬-68"><span class="header-section-number">16.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb140" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb140-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb140-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> myString.lower()</span></code></pre></div>
</section>
<section id="러스트-69" class="level3" data-number="16.2.2">
<h3 data-number="16.2.2" class="anchored" data-anchor-id="러스트-69"><span class="header-section-number">16.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb141" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb141-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb141-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_lowercase()</span>
<span id="cb141-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb141-4"></span>
<span id="cb141-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb141-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, World!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lowercase: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열에서-문자열-대소문자-변환" class="level2" data-number="16.3">
<h2 data-number="16.3" class="anchored" data-anchor-id="배열에서-문자열-대소문자-변환"><span class="header-section-number">16.3</span> 배열에서 문자열 대소문자 변환</h2>
<p>문자열 배열 strArr가 주어집니다. 모든 원소가 알파벳으로만 이루어져 있을 때, 배열에서 홀수번째 인덱스의 문자열은 모든 문자를 대문자로, 짝수번째 인덱스의 문자열은 모든 문자를 소문자로 바꿔서 반환하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-69" class="level3" data-number="16.3.1">
<h3 data-number="16.3.1" class="anchored" data-anchor-id="파이썬-69"><span class="header-section-number">16.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb142" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb142-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb142-2"></span>
<span id="cb142-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(strArr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb142-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [s.lower() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> s.upper() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(strArr)]</span></code></pre></div>
</section>
<section id="러스트-70" class="level3" data-number="16.3.2">
<h3 data-number="16.3.2" class="anchored" data-anchor-id="러스트-70"><span class="header-section-number">16.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb143" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb143-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-2">    str_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-4">            s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_lowercase()</span>
<span id="cb143-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-6">            s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_uppercase()</span>
<span id="cb143-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb143-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb143-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb143-10"></span>
<span id="cb143-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_vec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb143-13">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb143-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"World"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb143-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb143-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Programming"</span>)</span>
<span id="cb143-17">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-18"></span>
<span id="cb143-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-20"></span>
<span id="cb143-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_vec)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result:   {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="a-강조하기" class="level2" data-number="16.4">
<h2 data-number="16.4" class="anchored" data-anchor-id="a-강조하기"><span class="header-section-number">16.4</span> A 강조하기</h2>
<p>문자열 myString이 주어집니다. myString에서 알파벳 “a”가 등장하면 전부 “A”로 변환하고, “A”가 아닌 모든 대문자 알파벳은 소문자 알파벳으로 변환하여 return 하는 solution 함수를 완성하세요.</p>
<section id="파이썬-70" class="level3" data-number="16.4.1">
<h3 data-number="16.4.1" class="anchored" data-anchor-id="파이썬-70"><span class="header-section-number">16.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb144" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb144-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb144-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c.lower() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> c.lower() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> myString])</span></code></pre></div>
</section>
<section id="러스트-71" class="level3" data-number="16.4.2">
<h3 data-number="16.4.2" class="anchored" data-anchor-id="러스트-71"><span class="header-section-number">16.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb145" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb145-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_ascii_lowercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-4">            <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span></span>
<span id="cb145-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-6">            c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_ascii_lowercase()</span>
<span id="cb145-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb145-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb145-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb145-10"></span>
<span id="cb145-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AbCdEfG"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result:   {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="특정한-문자를-대문자로-바꾸기" class="level2" data-number="16.5">
<h2 data-number="16.5" class="anchored" data-anchor-id="특정한-문자를-대문자로-바꾸기"><span class="header-section-number">16.5</span> 특정한 문자를 대문자로 바꾸기</h2>
<p>영소문자로 이루어진 문자열 my_string과 영소문자 1글자로 이루어진 문자열 alp가 매개변수로 주어질 때, my_string에서 alp에 해당하는 모든 글자를 대문자로 바꾼 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-71" class="level3" data-number="16.5.1">
<h3 data-number="16.5.1" class="anchored" data-anchor-id="파이썬-71"><span class="header-section-number">16.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb146" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb146-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, alp:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb146-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string.replace(alp, alp.upper())</span></code></pre></div>
</section>
<section id="러스트-72" class="level3" data-number="16.5.2">
<h3 data-number="16.5.2" class="anchored" data-anchor-id="러스트-72"><span class="header-section-number">16.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb147" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb147-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> alp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb147-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>replace(alp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>alp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_uppercase())</span>
<span id="cb147-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb147-4"></span>
<span id="cb147-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb147-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello world"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_alp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_alp)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Replace '{}' with '{}': {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_alp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_alp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_uppercase()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-17-문자열" class="level1" data-number="17">
<h1 data-number="17"><span class="header-section-number">17</span> Day 17 문자열</h1>
<section id="특정-문자열로-끝나는-가장-긴-부분-문자열-찾기" class="level2" data-number="17.1">
<h2 data-number="17.1" class="anchored" data-anchor-id="특정-문자열로-끝나는-가장-긴-부분-문자열-찾기"><span class="header-section-number">17.1</span> 특정 문자열로 끝나는 가장 긴 부분 문자열 찾기</h2>
<section id="파이썬-72" class="level3" data-number="17.1.1">
<h3 data-number="17.1.1" class="anchored" data-anchor-id="파이썬-72"><span class="header-section-number">17.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb148" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb148-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString, pat):</span>
<span id="cb148-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(myString), <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb148-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> myString[:i].endswith(pat):</span>
<span id="cb148-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> myString[:i]</span></code></pre></div>
</section>
</section>
<section id="문자열이-몇-번-등장하는지-세기" class="level2" data-number="17.2">
<h2 data-number="17.2" class="anchored" data-anchor-id="문자열이-몇-번-등장하는지-세기"><span class="header-section-number">17.2</span> 문자열이 몇 번 등장하는지 세기</h2>
<section id="파이썬-73" class="level3" data-number="17.2.1">
<h3 data-number="17.2.1" class="anchored" data-anchor-id="파이썬-73"><span class="header-section-number">17.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb149" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb149-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString, pat):</span>
<span id="cb149-2">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb149-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(myString) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pat) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb149-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> myString[i:i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pat)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pat:</span>
<span id="cb149-5">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb149-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-73" class="level3" data-number="17.2.2">
<h3 data-number="17.2.2" class="anchored" data-anchor-id="러스트-73"><span class="header-section-number">17.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb150" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb150-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb150-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> pat_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-4"></span>
<span id="cb150-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pat_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb150-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>my_string[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>pat_len] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb150-7">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb150-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb150-10"></span>
<span id="cb150-11">    answer</span>
<span id="cb150-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb150-13"></span>
<span id="cb150-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb150-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> pat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pat)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-18">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열에서-ad-제거하기" class="level2" data-number="17.3">
<h2 data-number="17.3" class="anchored" data-anchor-id="문자열에서-ad-제거하기"><span class="header-section-number">17.3</span> 문자열에서 ad 제거하기</h2>
<section id="파이썬-74" class="level3" data-number="17.3.1">
<h3 data-number="17.3.1" class="anchored" data-anchor-id="파이썬-74"><span class="header-section-number">17.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb151" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb151-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(strArr):</span>
<span id="cb151-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [s <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> strArr <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ad"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s]</span></code></pre></div>
</section>
<section id="러스트-74" class="level3" data-number="17.3.2">
<h3 data-number="17.3.2" class="anchored" data-anchor-id="러스트-74"><span class="header-section-number">17.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb152" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb152-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb152-2">    str_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ad"</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb152-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb152-4"></span>
<span id="cb152-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb152-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb152-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bad"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb152-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"good"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb152-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mad"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb152-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glad"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb152-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sad"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb152-12">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb152-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str_arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb152-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb152-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="공백으로-구분하기-1" class="level2" data-number="17.4">
<h2 data-number="17.4" class="anchored" data-anchor-id="공백으로-구분하기-1"><span class="header-section-number">17.4</span> 공백으로 구분하기 1</h2>
<p>단어가 공백 한 개로 구분되어 있는 문자열 my_string이 매개변수로 주어질 때, my_string에 나온 단어를 앞에서부터 순서대로 담은 문자열 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-75" class="level3" data-number="17.4.1">
<h3 data-number="17.4.1" class="anchored" data-anchor-id="파이썬-75"><span class="header-section-number">17.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb153" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb153-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb153-2"></span>
<span id="cb153-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb153-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string.split()</span></code></pre></div>
</section>
<section id="러스트-75" class="level3" data-number="17.4.2">
<h3 data-number="17.4.2" class="anchored" data-anchor-id="러스트-75"><span class="header-section-number">17.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb154" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb154-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb154-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb154-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb154-4"></span>
<span id="cb154-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb154-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello world Rust programming"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb154-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb154-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original string: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb154-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Split result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb154-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="공백으로-구분하기-2" class="level2" data-number="17.5">
<h2 data-number="17.5" class="anchored" data-anchor-id="공백으로-구분하기-2"><span class="header-section-number">17.5</span> 공백으로 구분하기 2</h2>
<p>단어가 공백 한 개 이상으로 구분되어 있는 문자열 my_string이 매개변수로 주어질 때, my_string에 나온 단어를 앞에서부터 순서대로 담은 문자열 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-76" class="level3" data-number="17.5.1">
<h3 data-number="17.5.1" class="anchored" data-anchor-id="파이썬-76"><span class="header-section-number">17.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb155" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb155-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb155-2"></span>
<span id="cb155-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb155-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string.split()</span></code></pre></div>
</section>
<section id="러스트-76" class="level3" data-number="17.5.2">
<h3 data-number="17.5.2" class="anchored" data-anchor-id="러스트-76"><span class="header-section-number">17.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb156" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb156-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb156-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb156-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb156-4"></span>
<span id="cb156-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb156-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello world Rust programming"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb156-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb156-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original string: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb156-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Split result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb156-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-18-문자열" class="level1" data-number="18">
<h1 data-number="18"><span class="header-section-number">18</span> Day 18 문자열</h1>
<section id="x사이의-개수" class="level2" data-number="18.1">
<h2 data-number="18.1" class="anchored" data-anchor-id="x사이의-개수"><span class="header-section-number">18.1</span> x사이의 개수</h2>
<p>문자열 myString이 주어집니다. myString을 문자 “x”를 기준으로 나눴을 때 나눠진 문자열 각각의 길이를 순서대로 저장한 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-77" class="level3" data-number="18.1.1">
<h3 data-number="18.1.1" class="anchored" data-anchor-id="파이썬-77"><span class="header-section-number">18.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb157" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb157-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb157-2"></span>
<span id="cb157-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb157-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(s) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> myString.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>)]</span></code></pre></div>
</section>
<section id="러스트-77" class="level3" data-number="18.1.2">
<h3 data-number="18.1.2" class="anchored" data-anchor-id="러스트-77"><span class="header-section-number">18.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb158" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb158-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb158-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb158-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb158-4"></span>
<span id="cb158-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb158-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"examplexstringxhere"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb158-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb158-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb158-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-잘라서-정렬하기" class="level2" data-number="18.2">
<h2 data-number="18.2" class="anchored" data-anchor-id="문자열-잘라서-정렬하기"><span class="header-section-number">18.2</span> 문자열 잘라서 정렬하기</h2>
<p>문자열 myString이 주어집니다. “x”를 기준으로 해당 문자열을 잘라내 배열을 만든 후 사전순으로 정렬한 배열을 return 하는 solution 함수를 완성해 주세요. 단, 빈 문자열은 반환할 배열에 넣지 않습니다.</p>
<section id="파이썬-78" class="level3" data-number="18.2.1">
<h3 data-number="18.2.1" class="anchored" data-anchor-id="파이썬-78"><span class="header-section-number">18.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb159" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb159-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb159-2"></span>
<span id="cb159-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb159-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>([s <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> myString.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> s])</span></code></pre></div>
</section>
<section id="러스트-78" class="level3" data-number="18.2.2">
<h3 data-number="18.2.2" class="anchored" data-anchor-id="러스트-78"><span class="header-section-number">18.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb160" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb160-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb160-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>)</span>
<span id="cb160-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty())</span>
<span id="cb160-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from)</span>
<span id="cb160-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb160-6">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb160-7">    result</span>
<span id="cb160-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb160-9"></span>
<span id="cb160-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb160-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"axbxcxxdxe"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb160-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb160-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb160-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="간단한-식-계산하기" class="level2" data-number="18.3">
<h2 data-number="18.3" class="anchored" data-anchor-id="간단한-식-계산하기"><span class="header-section-number">18.3</span> 간단한 식 계산하기</h2>
<p>문자열 binomial이 매개변수로 주어집니다. binomial은 “a op b” 형태의 이항식이고 a와 b는 음이 아닌 정수, op는 ‘+’, ‘-’, ’*’ 중 하나입니다. 주어진 식을 계산한 정수를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-79" class="level3" data-number="18.3.1">
<h3 data-number="18.3.1" class="anchored" data-anchor-id="파이썬-79"><span class="header-section-number">18.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb161" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb161-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(binomial: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb161-2">    a, op, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> binomial.split()</span>
<span id="cb161-3">    a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(a), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(b)</span>
<span id="cb161-4"></span>
<span id="cb161-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'+'</span>:</span>
<span id="cb161-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="cb161-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>:</span>
<span id="cb161-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b</span>
<span id="cb161-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># op == '*'</span></span>
<span id="cb161-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b</span></code></pre></div>
</section>
<section id="러스트-79" class="level3" data-number="18.3.2">
<h3 data-number="18.3.2" class="anchored" data-anchor-id="러스트-79"><span class="header-section-number">18.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb162" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb162-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(binomial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb162-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> binomial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> op<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-6"></span>
<span id="cb162-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb162-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"+"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb162-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb162-10">        _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Assumes '*' for any other operator</span></span>
<span id="cb162-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb162-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb162-13"></span>
<span id="cb162-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb162-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> binomial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3 + 4"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(binomial)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-바꿔서-찾기" class="level2" data-number="18.4">
<h2 data-number="18.4" class="anchored" data-anchor-id="문자열-바꿔서-찾기"><span class="header-section-number">18.4</span> 문자열 바꿔서 찾기</h2>
<p>문자 “A”와 “B”로 이루어진 문자열 myString과 pat가 주어집니다. myString의 “A”를 “B”로, “B”를 “A”로 바꾼 문자열의 연속하는 부분 문자열 중 pat이 있으면 1을 아니면 0을 return 하는 solution 함수를 완성하세요.</p>
<section id="파이썬-80" class="level3" data-number="18.4.1">
<h3 data-number="18.4.1" class="anchored" data-anchor-id="파이썬-80"><span class="header-section-number">18.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb163" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb163-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, pat: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb163-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># myString의 "A"를 "B"로, "B"를 "A"로 바꾸는 함수</span></span>
<span id="cb163-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> swap(s):</span>
<span id="cb163-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'B'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'B'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s)</span>
<span id="cb163-5"></span>
<span id="cb163-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># myString을 변환하고 pat이 포함되어 있는지 확인</span></span>
<span id="cb163-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> swap(pat) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> myString <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-80" class="level3" data-number="18.4.2">
<h3 data-number="18.4.2" class="anchored" data-anchor-id="러스트-80"><span class="header-section-number">18.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb164" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb164-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> swap(s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-2">    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-3">        <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'B'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-4">        <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'B'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-5">        _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb164-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-8"></span>
<span id="cb164-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>swap(pat)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-11">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb164-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-13">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb164-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-16"></span>
<span id="cb164-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ABBAA"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> pat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AABB"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pat)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="rny_string" class="level2" data-number="18.5">
<h2 data-number="18.5" class="anchored" data-anchor-id="rny_string"><span class="header-section-number">18.5</span> rny_string</h2>
<p>’m’과 “rn”이 모양이 비슷하게 생긴 점을 활용해 문자열에 장난을 하려고 합니다. 문자열 rny_string이 주어질 때, rny_string의 모든 ’m’을 “rn”으로 바꾼 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-81" class="level3" data-number="18.5.1">
<h3 data-number="18.5.1" class="anchored" data-anchor-id="파이썬-81"><span class="header-section-number">18.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb165" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb165-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(rny_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb165-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> rny_string.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'m'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rn'</span>)</span></code></pre></div>
</section>
<section id="러스트-81" class="level3" data-number="18.5.2">
<h3 data-number="18.5.2" class="anchored" data-anchor-id="러스트-81"><span class="header-section-number">18.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb166" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb166-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(rny_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb166-2">    rny_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rn"</span>)</span>
<span id="cb166-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb166-4"></span>
<span id="cb166-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb166-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"programmer"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-19-문자열-리스트배열" class="level1" data-number="19">
<h1 data-number="19"><span class="header-section-number">19</span> Day 19 문자열, 리스트(배열)</h1>
<section id="세-개의-구분자" class="level2" data-number="19.1">
<h2 data-number="19.1" class="anchored" data-anchor-id="세-개의-구분자"><span class="header-section-number">19.1</span> 세 개의 구분자</h2>
<p>임의의 문자열이 주어졌을 때 문자 “a”, “b”, “c”를 구분자로 사용해 문자열을 나누고자 합니다.</p>
<p>예를 들어 주어진 문자열이 “baconlettucetomato”라면 나눠진 문자열 목록은 <code>["onlettu", "etom", "to"]</code> 가 됩니다.</p>
<p>문자열 myStr이 주어졌을 때 위 예시와 같이 “a”, “b”, “c”를 사용해 나눠진 문자열을 순서대로 저장한 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<p>단, 두 구분자 사이에 다른 문자가 없을 경우에는 아무것도 저장하지 않으며, return할 배열이 빈 배열이라면 <code>["EMPTY"]</code>를 return 합니다.</p>
<section id="파이썬-82" class="level3" data-number="19.1.1">
<h3 data-number="19.1.1" class="anchored" data-anchor-id="파이썬-82"><span class="header-section-number">19.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb167" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb167-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb167-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb167-3"></span>
<span id="cb167-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myStr: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb167-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'a', 'b', 'c'를 구분자로 사용하여 문자열을 분할</span></span>
<span id="cb167-6">    parts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[abc]'</span>, myStr)</span>
<span id="cb167-7"></span>
<span id="cb167-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 빈 문자열을 제거하고 남은 부분들만 저장</span></span>
<span id="cb167-9">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [part <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> part <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> parts <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> part]</span>
<span id="cb167-10"></span>
<span id="cb167-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 배열이 비어있으면 ["EMPTY"] 반환</span></span>
<span id="cb167-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> answer <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EMPTY"</span>]</span></code></pre></div>
</section>
<section id="러스트-82" class="level3" data-number="19.1.2">
<h3 data-number="19.1.2" class="anchored" data-anchor-id="러스트-82"><span class="header-section-number">19.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb168" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb168-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">regex::</span>Regex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-2"></span>
<span id="cb168-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 'a', 'b', 'c'를 구분자로 사용하여 문자열을 분할</span></span>
<span id="cb168-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> re <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Regex::</span>new(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[abc]"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split(my_str)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-7"></span>
<span id="cb168-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 빈 문자열을 제거하고 남은 부분들만 저장</span></span>
<span id="cb168-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>part<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>part<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-10"></span>
<span id="cb168-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 결과 배열이 비어있으면 ["EMPTY"] 반환</span></span>
<span id="cb168-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-13">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EMPTY"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb168-15"></span>
<span id="cb168-16">    answer</span>
<span id="cb168-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb168-18"></span>
<span id="cb168-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"baconlettucetomato"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb168-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열의-원소만큼-추가하기" class="level2" data-number="19.2">
<h2 data-number="19.2" class="anchored" data-anchor-id="배열의-원소만큼-추가하기"><span class="header-section-number">19.2</span> 배열의 원소만큼 추가하기</h2>
<p>아무 원소도 들어있지 않은 빈 배열 X가 있습니다. 양의 정수 배열 arr가 매개변수로 주어질 때, arr의 앞에서부터 차례대로 원소를 보면서 원소가 a라면 X의 맨 뒤에 a를 a번 추가하는 일을 반복한 뒤의 배열 X를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-83" class="level3" data-number="19.2.1">
<h3 data-number="19.2.1" class="anchored" data-anchor-id="파이썬-83"><span class="header-section-number">19.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb169" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb169-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb169-2"></span>
<span id="cb169-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb169-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb169-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr:</span>
<span id="cb169-6">        answer.extend([num] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> num)</span>
<span id="cb169-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-83" class="level3" data-number="19.2.2">
<h3 data-number="19.2.2" class="anchored" data-anchor-id="러스트-83"><span class="header-section-number">19.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb170" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb170-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-4">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend(<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb170-6">    answer</span>
<span id="cb170-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb170-8"></span>
<span id="cb170-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb170-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="빈-배열에-추가-삭제하기" class="level2" data-number="19.3">
<h2 data-number="19.3" class="anchored" data-anchor-id="빈-배열에-추가-삭제하기"><span class="header-section-number">19.3</span> 빈 배열에 추가, 삭제하기</h2>
<p>아무 원소도 들어있지 않은 빈 배열 X가 있습니다. 길이가 같은 정수 배열 arr과 boolean 배열 flag가 매개변수로 주어질 때, flag를 차례대로 순회하며 <code>flag[i]</code>가 true라면 X의 뒤에 <code>arr[i]</code>를 <code>arr[i] × 2</code> 번 추가하고, <code>flag[i]</code>가 false라면 X에서 마지막 <code>arr[i]</code>개의 원소를 제거한 뒤 X를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-84" class="level3" data-number="19.3.1">
<h3 data-number="19.3.1" class="anchored" data-anchor-id="파이썬-84"><span class="header-section-number">19.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb171" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb171-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb171-2"></span>
<span id="cb171-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], flag: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb171-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb171-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, f <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(flag):</span>
<span id="cb171-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> f:</span>
<span id="cb171-7">            answer.extend([arr[i]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb171-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb171-9">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> answer[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>arr[i]] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(answer) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> []</span>
<span id="cb171-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-84" class="level3" data-number="19.3.2">
<h3 data-number="19.3.2" class="anchored" data-anchor-id="러스트-84"><span class="header-section-number">19.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb172" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb172-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> flag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>f) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> flag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-5">            answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend(<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[arr[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> (arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-7">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> remove_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr[i] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> remove_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-9">                answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>truncate(answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> remove_count)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-10">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-11">                answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-12">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-15">    answer</span>
<span id="cb172-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-17"></span>
<span id="cb172-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> flag)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-만들기-6" class="level2" data-number="19.4">
<h2 data-number="19.4" class="anchored" data-anchor-id="배열-만들기-6"><span class="header-section-number">19.4</span> 배열 만들기 6</h2>
<p>0과 1로만 이루어진 정수 배열 arr가 주어집니다. arr를 이용해 새로운 배열 stk을 만드려고 합니다.</p>
<p>i의 초기값을 0으로 설정하고 i가 arr의 길이보다 작으면 다음을 반복합니다.</p>
<ul>
<li>만약 stk이 빈 배열이라면 <code>arr[i]</code>를 stk에 추가하고 i에 1을 더합니다.</li>
<li>stk에 원소가 있고, stk의 마지막 원소가 <code>arr[i]</code>와 같으면 stk의 마지막 원소를 stk에서 제거하고 i에 1을 더합니다.</li>
<li>stk에 원소가 있는데 stk의 마지막 원소가 <code>arr[i]</code>와 다르면 stk의 맨 마지막에 <code>arr[i]</code>를 추가하고 i에 1을 더합니다. 위 작업을 마친 후 만들어진 stk을 return 하는 solution 함수를 완성해 주세요. 단, 만약 빈 배열을 return 해야한다면 [-1]을 return 합니다.</li>
</ul>
<section id="파이썬-85" class="level3" data-number="19.4.1">
<h3 data-number="19.4.1" class="anchored" data-anchor-id="파이썬-85"><span class="header-section-number">19.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb173" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb173-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb173-2"></span>
<span id="cb173-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb173-4">    stk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb173-5">    i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb173-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr):</span>
<span id="cb173-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> stk:</span>
<span id="cb173-8">            stk.append(arr[i])</span>
<span id="cb173-9">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb173-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> stk[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arr[i]:</span>
<span id="cb173-11">            stk.pop()</span>
<span id="cb173-12">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb173-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb173-14">            stk.append(arr[i])</span>
<span id="cb173-15">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb173-16"></span>
<span id="cb173-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> stk <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> stk <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</section>
<section id="러스트-85" class="level3" data-number="19.4.2">
<h3 data-number="19.4.2" class="anchored" data-anchor-id="러스트-85"><span class="header-section-number">19.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb174" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb174-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> stk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-4"></span>
<span id="cb174-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-7">            stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(arr[i])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-8">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>last()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-10">            stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pop()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-11">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-13">            stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(arr[i])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-14">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-17"></span>
<span id="cb174-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-19">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb174-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-21">        stk</span>
<span id="cb174-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-24"></span>
<span id="cb174-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-28">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-29"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="무작위로-k의-수-뽑기" class="level2" data-number="19.5">
<h2 data-number="19.5" class="anchored" data-anchor-id="무작위로-k의-수-뽑기"><span class="header-section-number">19.5</span> 무작위로 k의 수 뽑기</h2>
<p>랜덤으로 서로 다른 k개의 수를 저장한 배열을 만드려고 합니다. 적절한 방법이 떠오르지 않기 때문에 일정한 범위 내에서 무작위로 수를 뽑은 후, 지금까지 나온적이 없는 수이면 배열 맨 뒤에 추가하는 방식으로 만들기로 합니다.</p>
<p>이미 어떤 수가 무작위로 주어질지 알고 있다고 가정하고, 실제 만들어질 길이 k의 배열을 예상해봅시다.</p>
<p>정수 배열 arr가 주어집니다. 문제에서의 무작위의 수는 arr에 저장된 순서대로 주어질 예정이라고 했을 때, 완성될 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<p>단, 완성될 배열의 길이가 k보다 작으면 나머지 값을 전부 -1로 채워서 return 합니다.</p>
<section id="파이썬-86" class="level3" data-number="19.5.1">
<h3 data-number="19.5.1" class="anchored" data-anchor-id="파이썬-86"><span class="header-section-number">19.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb175" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb175-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb175-2"></span>
<span id="cb175-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb175-4">    unique_nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb175-5">    seen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb175-6"></span>
<span id="cb175-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr:</span>
<span id="cb175-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> seen <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_nums) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> k:</span>
<span id="cb175-9">            unique_nums.append(num)</span>
<span id="cb175-10">            seen.add(num)</span>
<span id="cb175-11"></span>
<span id="cb175-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_nums) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> k:</span>
<span id="cb175-13">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb175-14"></span>
<span id="cb175-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># k개의 숫자를 채우지 못했다면 -1로 채움</span></span>
<span id="cb175-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_nums) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> k:</span>
<span id="cb175-17">        unique_nums.append(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb175-18"></span>
<span id="cb175-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> unique_nums</span></code></pre></div>
</section>
<section id="러스트-86" class="level3" data-number="19.5.2">
<h3 data-number="19.5.2" class="anchored" data-anchor-id="러스트-86"><span class="header-section-number">19.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb176" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb176-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-2"></span>
<span id="cb176-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> unique_nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> seen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashSet::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-6"></span>
<span id="cb176-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>seen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> unique_nums<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-9">            unique_nums<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-10">            seen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>insert(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-12"></span>
<span id="cb176-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> unique_nums<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-14">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-17"></span>
<span id="cb176-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// k개의 숫자를 채우지 못했다면 -1로 채움</span></span>
<span id="cb176-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> unique_nums<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-20">        unique_nums<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-22"></span>
<span id="cb176-23">    unique_nums</span>
<span id="cb176-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-25"></span>
<span id="cb176-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-30">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-31"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-20-함수메서드" class="level1" data-number="20">
<h1 data-number="20"><span class="header-section-number">20</span> Day 20 함수(메서드)</h1>
<section id="배열의-길이를-2의-거듭제곱으로-만들기" class="level2" data-number="20.1">
<h2 data-number="20.1" class="anchored" data-anchor-id="배열의-길이를-2의-거듭제곱으로-만들기"><span class="header-section-number">20.1</span> 배열의 길이를 2의 거듭제곱으로 만들기</h2>
<p>정수 배열 arr이 매개변수로 주어집니다. arr의 길이가 2의 정수 거듭제곱이 되도록 arr 뒤에 정수 0을 추가하려고 합니다. arr에 최소한의 개수로 0을 추가한 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-87" class="level3" data-number="20.1.1">
<h3 data-number="20.1.1" class="anchored" data-anchor-id="파이썬-87"><span class="header-section-number">20.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb177" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb177-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb177-2"></span>
<span id="cb177-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb177-4">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr)</span>
<span id="cb177-5">    target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb177-6"></span>
<span id="cb177-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n:</span>
<span id="cb177-8">        target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb177-9"></span>
<span id="cb177-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n)</span></code></pre></div>
</section>
<section id="러스트-87" class="level3" data-number="20.1.2">
<h3 data-number="20.1.2" class="anchored" data-anchor-id="러스트-87"><span class="header-section-number">20.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb178" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb178-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb178-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-4"></span>
<span id="cb178-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb178-6">        target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb178-8"></span>
<span id="cb178-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-10">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend(<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-11">    result</span>
<span id="cb178-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb178-13"></span>
<span id="cb178-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb178-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb178-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-비교하기" class="level2" data-number="20.2">
<h2 data-number="20.2" class="anchored" data-anchor-id="배열-비교하기"><span class="header-section-number">20.2</span> 배열 비교하기</h2>
<p>이 문제에서 두 정수 배열의 대소관계를 다음과 같이 정의합니다.</p>
<ul>
<li>두 배열의 길이가 다르다면, 배열의 길이가 긴 쪽이 더 큽니다.</li>
<li>배열의 길이가 같다면 각 배열에 있는 모든 원소의 합을 비교하여 다르다면 더 큰 쪽이 크고, 같다면 같습니다.</li>
</ul>
<p>두 정수 배열 arr1과 arr2가 주어질 때, 위에서 정의한 배열의 대소관계에 대하여 arr2가 크다면 -1, arr1이 크다면 1, 두 배열이 같다면 0을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-88" class="level3" data-number="20.2.1">
<h3 data-number="20.2.1" class="anchored" data-anchor-id="파이썬-88"><span class="header-section-number">20.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb179" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb179-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb179-2"></span>
<span id="cb179-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr1: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], arr2: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb179-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr1) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr2):</span>
<span id="cb179-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr1) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb179-6"></span>
<span id="cb179-7">    sum1, sum2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(arr1), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(arr2)</span>
<span id="cb179-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sum1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> sum2:</span>
<span id="cb179-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sum2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> sum1 <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb179-10"></span>
<span id="cb179-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-88" class="level3" data-number="20.2.2">
<h3 data-number="20.2.2" class="anchored" data-anchor-id="러스트-88"><span class="header-section-number">20.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb180" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb180-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb180-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb180-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb180-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb180-5"></span>
<span id="cb180-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sum1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sum2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sum1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> sum2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb180-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sum2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> sum1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb180-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb180-11"></span>
<span id="cb180-12">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb180-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb180-14"></span>
<span id="cb180-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb180-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb180-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb180-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> arr2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-19">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-묶기" class="level2" data-number="20.3">
<h2 data-number="20.3" class="anchored" data-anchor-id="문자열-묶기"><span class="header-section-number">20.3</span> 문자열 묶기</h2>
<p>문자열 배열 strArr이 주어집니다. strArr의 원소들을 길이가 같은 문자열들끼리 그룹으로 묶었을 때 가장 개수가 많은 그룹의 크기를 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-89" class="level3" data-number="20.3.1">
<h3 data-number="20.3.1" class="anchored" data-anchor-id="파이썬-89"><span class="header-section-number">20.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb181" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb181-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Counter</span>
<span id="cb181-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb181-3"></span>
<span id="cb181-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(strArr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb181-5">    length_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Counter(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(s) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> strArr)</span>
<span id="cb181-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(length_counts.values())</span></code></pre></div>
</section>
<section id="러스트-89" class="level3" data-number="20.3.2">
<h3 data-number="20.3.2" class="anchored" data-anchor-id="러스트-89"><span class="header-section-number">20.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb182" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb182-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-2"></span>
<span id="cb182-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> length_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashMap::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-5"></span>
<span id="cb182-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>str_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>length_counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>entry(len)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>or_insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-10"></span>
<span id="cb182-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>length_counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>values()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap_or(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb182-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-13"></span>
<span id="cb182-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apple"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cherry"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fig"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grape"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str_arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열의-길이에-따라-다른-연산하기" class="level2" data-number="20.4">
<h2 data-number="20.4" class="anchored" data-anchor-id="배열의-길이에-따라-다른-연산하기"><span class="header-section-number">20.4</span> 배열의 길이에 따라 다른 연산하기</h2>
<p>정수 배열 arr과 정수 n이 매개변수로 주어집니다. arr의 길이가 홀수라면 arr의 모든 짝수 인덱스 위치에 n을 더한 배열을, arr의 길이가 짝수라면 arr의 모든 홀수 인덱스 위치에 n을 더한 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-90" class="level3" data-number="20.4.1">
<h3 data-number="20.4.1" class="anchored" data-anchor-id="파이썬-90"><span class="header-section-number">20.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb183" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb183-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb183-2"></span>
<span id="cb183-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb183-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 배열의 길이가 홀수인 경우</span></span>
<span id="cb183-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> num <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(arr)]</span>
<span id="cb183-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 배열의 길이가 짝수인 경우</span></span>
<span id="cb183-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> num <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(arr)]</span></code></pre></div>
</section>
<section id="러스트-90" class="level3" data-number="20.4.2">
<h3 data-number="20.4.2" class="anchored" data-anchor-id="러스트-90"><span class="header-section-number">20.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb184" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb184-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-2"></span>
<span id="cb184-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> length_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashMap::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-5"></span>
<span id="cb184-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>str_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>length_counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>entry(len)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>or_insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb184-10"></span>
<span id="cb184-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>length_counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>values()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap_or(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb184-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb184-13"></span>
<span id="cb184-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apple"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cherry"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fig"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grape"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str_arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="뒤에서-5등까지" class="level2" data-number="20.5">
<h2 data-number="20.5" class="anchored" data-anchor-id="뒤에서-5등까지"><span class="header-section-number">20.5</span> 뒤에서 5등까지</h2>
<p>정수로 이루어진 리스트 num_list가 주어집니다. num_list에서 가장 작은 5개의 수를 오름차순으로 담은 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-91" class="level3" data-number="20.5.1">
<h3 data-number="20.5.1" class="anchored" data-anchor-id="파이썬-91"><span class="header-section-number">20.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb185" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb185-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb185-2"></span>
<span id="cb185-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb185-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(num_list)[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
</section>
<section id="러스트-91" class="level3" data-number="20.5.2">
<h3 data-number="20.5.2" class="anchored" data-anchor-id="러스트-91"><span class="header-section-number">20.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb186" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb186-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb186-2">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-3">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>take(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb186-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb186-5"></span>
<span id="cb186-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb186-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb186-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-21-함수메서드" class="level1" data-number="21">
<h1 data-number="21"><span class="header-section-number">21</span> Day 21 함수(메서드)</h1>
<section id="뒤에서-5등-위로" class="level2" data-number="21.1">
<h2 data-number="21.1" class="anchored" data-anchor-id="뒤에서-5등-위로"><span class="header-section-number">21.1</span> 뒤에서 5등 위로</h2>
<p>수로 이루어진 리스트 num_list가 주어집니다. num_list에서 가장 작은 5개의 수를 제외한 수들을 오름차순으로 담은 리스트를 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb187" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb187-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb187-2"></span>
<span id="cb187-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb187-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(num_list)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:]</span></code></pre></div>
<section id="러스트-92" class="level3" data-number="21.1.1">
<h3 data-number="21.1.1" class="anchored" data-anchor-id="러스트-92"><span class="header-section-number">21.1.1</span> 러스트</h3>
<div class="sourceCode" id="cb188" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb188-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb188-2">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-3">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_off(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb188-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb188-5"></span>
<span id="cb188-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb188-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">46</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">56</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="전국-대회-선발-고사" class="level2" data-number="21.2">
<h2 data-number="21.2" class="anchored" data-anchor-id="전국-대회-선발-고사"><span class="header-section-number">21.2</span> 전국 대회 선발 고사</h2>
<p>0번부터 n - 1번까지 n명의 학생 중 3명을 선발하는 전국 대회 선발 고사를 보았습니다. 등수가 높은 3명을 선발해야 하지만, 개인 사정으로 전국 대회에 참여하지 못하는 학생들이 있어 참여가 가능한 학생 중 등수가 높은 3명을 선발하기로 했습니다.</p>
<p>각 학생들의 선발 고사 등수를 담은 정수 배열 rank와 전국 대회 참여 가능 여부가 담긴 boolean 배열 attendance가 매개변수로 주어집니다. 전국 대회에 선발된 학생 번호들을 등수가 높은 순서대로 각각 a, b, c번이라고 할 때 <code>10000 × a + 100 × b + c</code>를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-92" class="level3" data-number="21.2.1">
<h3 data-number="21.2.1" class="anchored" data-anchor-id="파이썬-92"><span class="header-section-number">21.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb189" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb189-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb189-2"></span>
<span id="cb189-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(rank: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], attendance: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb189-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 참석 가능한 학생들의 등수와 번호를 저장</span></span>
<span id="cb189-5">    available <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(r, i) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, r <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(rank) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> attendance[i]]</span>
<span id="cb189-6"></span>
<span id="cb189-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 등수를 기준으로 정렬</span></span>
<span id="cb189-8">    available.sort()</span>
<span id="cb189-9"></span>
<span id="cb189-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 상위 3명 선택</span></span>
<span id="cb189-11">    top_3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb189-12"></span>
<span id="cb189-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 계산</span></span>
<span id="cb189-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> top_3[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> top_3[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> top_3[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</section>
<section id="러스트-93" class="level3" data-number="21.2.2">
<h3 data-number="21.2.2" class="anchored" data-anchor-id="러스트-93"><span class="header-section-number">21.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb190" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb190-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(rank<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> attendance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb190-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> available<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb190-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate()</span>
<span id="cb190-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> attendance[i])</span>
<span id="cb190-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>r)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i))</span>
<span id="cb190-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-7"></span>
<span id="cb190-8">    available<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_by_key(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> r)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-9"></span>
<span id="cb190-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> top_3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>take(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-11"></span>
<span id="cb190-12">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> top_3[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> top_3[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> top_3[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb190-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb190-14"></span>
<span id="cb190-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb190-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> attendance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-18"></span>
<span id="cb190-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(rank<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> attendance)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="정수-부분" class="level2" data-number="21.3">
<h2 data-number="21.3" class="anchored" data-anchor-id="정수-부분"><span class="header-section-number">21.3</span> 정수 부분</h2>
<p>실수 flo가 매개 변수로 주어질 때, flo의 정수 부분을 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-93" class="level3" data-number="21.3.1">
<h3 data-number="21.3.1" class="anchored" data-anchor-id="파이썬-93"><span class="header-section-number">21.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb191" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb191-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(flo: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb191-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(flo)</span></code></pre></div>
</section>
<section id="러스트-94" class="level3" data-number="21.3.2">
<h3 data-number="21.3.2" class="anchored" data-anchor-id="러스트-94"><span class="header-section-number">21.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb192" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb192-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(flo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb192-2">    flo <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb192-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb192-4"></span>
<span id="cb192-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb192-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.42</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">69.32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.14</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-7"></span>
<span id="cb192-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> flo <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb192-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(flo)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"입력: {}, 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> flo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb192-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-정수의-합" class="level2" data-number="21.4">
<h2 data-number="21.4" class="anchored" data-anchor-id="문자열-정수의-합"><span class="header-section-number">21.4</span> 문자열 정수의 합</h2>
<p>한 자리 정수로 이루어진 문자열 num_str이 주어질 때, 각 자리수의 합을 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb193" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb193-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_str: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb193-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(digit) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> digit <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_str)</span></code></pre></div>
<section id="러스트-95" class="level3" data-number="21.4.1">
<h3 data-number="21.4.1" class="anchored" data-anchor-id="러스트-95"><span class="header-section-number">21.4.1</span> 러스트</h3>
<div class="sourceCode" id="cb194" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb194-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-2">    num_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb194-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_digit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb194-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)</span>
<span id="cb194-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb194-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb194-7"></span>
<span id="cb194-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"456"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"789"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9999"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-10"></span>
<span id="cb194-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num_str <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-12">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_str)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-13">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"입력: {}, 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb194-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열을-정수로-변환하기" class="level2" data-number="21.5">
<h2 data-number="21.5" class="anchored" data-anchor-id="문자열을-정수로-변환하기"><span class="header-section-number">21.5</span> 문자열을 정수로 변환하기</h2>
<p>숫자로만 이루어진 문자열 n_str이 주어질 때, n_str을 정수로 변환하여 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb195" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb195-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n_str:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb195-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n_str)</span></code></pre></div>
<section id="러스트-96" class="level3" data-number="21.5.1">
<h3 data-number="21.5.1" class="anchored" data-anchor-id="러스트-96"><span class="header-section-number">21.5.1</span> 러스트</h3>
<div class="sourceCode" id="cb196" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb196-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-2">    n_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()</span>
<span id="cb196-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb196-4"></span>
<span id="cb196-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"456"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"789"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9999"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb196-7"></span>
<span id="cb196-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n_str <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n_str)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb196-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"입력: {}, 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb196-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb196-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-22-함수메서드-조건문-활용" class="level1" data-number="22">
<h1 data-number="22"><span class="header-section-number">22</span> Day 22 함수(메서드), 조건문 활용</h1>
<section id="떼기" class="level2" data-number="22.1">
<h2 data-number="22.1" class="anchored" data-anchor-id="떼기"><span class="header-section-number">22.1</span> 0 떼기</h2>
<p>정수로 이루어진 문자열 n_str이 주어질 때, n_str의 가장 왼쪽에 처음으로 등장하는 0들을 뗀 문자열을 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb197" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb197-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n_str:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb197-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n_str))</span></code></pre></div>
<section id="러스트-97" class="level3" data-number="22.1.1">
<h3 data-number="22.1.1" class="anchored" data-anchor-id="러스트-97"><span class="header-section-number">22.1.1</span> 러스트</h3>
<div class="sourceCode" id="cb198" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb198-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb198-2">    n_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb198-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb198-4"></span>
<span id="cb198-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb198-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"00123"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0456"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"000789"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0000"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-7"></span>
<span id="cb198-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n_str <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb198-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n_str)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"입력: {}, 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb198-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="두-수의-합" class="level2" data-number="22.2">
<h2 data-number="22.2" class="anchored" data-anchor-id="두-수의-합"><span class="header-section-number">22.2</span> 두 수의 합</h2>
<p>0 이상의 두 정수가 문자열 a, b로 주어질 때, a + b의 값을 문자열로 return 하는 solution 함수를 작성해 주세요. ### 파이썬</p>
<div class="sourceCode" id="cb199" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb199-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb199-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(a) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(b))</span></code></pre></div>
<section id="러스트-98" class="level3" data-number="22.2.1">
<h3 data-number="22.2.1" class="anchored" data-anchor-id="러스트-98"><span class="header-section-number">22.2.1</span> 러스트</h3>
<div class="sourceCode" id="cb200" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb200-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-2">    (a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb200-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb200-4"></span>
<span id="cb200-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"456"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"200"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"999"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-7"></span>
<span id="cb200-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"입력: ({} + {}), 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb200-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열로-변환" class="level2" data-number="22.3">
<h2 data-number="22.3" class="anchored" data-anchor-id="문자열로-변환"><span class="header-section-number">22.3</span> 문자열로 변환</h2>
<p>정수 n이 주어질 때, n을 문자열로 변환하여 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb201" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb201-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb201-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(n)</span></code></pre></div>
<section id="러스트-99" class="level3" data-number="22.3.1">
<h3 data-number="22.3.1" class="anchored" data-anchor-id="러스트-99"><span class="header-section-number">22.3.1</span> 러스트</h3>
<div class="sourceCode" id="cb202" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb202-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb202-2">    n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb202-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb202-4"></span>
<span id="cb202-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb202-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">456</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">789</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb202-7"></span>
<span id="cb202-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb202-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb202-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"입력: {}, 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb202-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb202-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열의-원소-삭제하기" class="level2" data-number="22.4">
<h2 data-number="22.4" class="anchored" data-anchor-id="배열의-원소-삭제하기"><span class="header-section-number">22.4</span> 배열의 원소 삭제하기</h2>
<p>정수 배열 arr과 delete_list가 있습니다. arr의 원소 중 delete_list의 원소를 모두 삭제하고 남은 원소들은 기존의 arr에 있던 순서를 유지한 배열을 return 하는 solution 함수를 작성해 주세요. ### 파이썬</p>
<div class="sourceCode" id="cb203" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb203-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb203-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], delete_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb203-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [x <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> delete_list]</span></code></pre></div>
<section id="러스트-100" class="level3" data-number="22.4.1">
<h3 data-number="22.4.1" class="anchored" data-anchor-id="러스트-100"><span class="header-section-number">22.4.1</span> 러스트</h3>
<div class="sourceCode" id="cb204" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb204-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> delete_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb204-2">    arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>delete_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>x))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb204-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb204-4"></span>
<span id="cb204-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb204-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb204-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> delete_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb204-8"></span>
<span id="cb204-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> delete_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb204-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb204-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="부분-문자열인지-확인하기" class="level2" data-number="22.5">
<h2 data-number="22.5" class="anchored" data-anchor-id="부분-문자열인지-확인하기"><span class="header-section-number">22.5</span> 부분 문자열인지 확인하기</h2>
<p>부분 문자열이란 문자열에서 연속된 일부분에 해당하는 문자열을 의미합니다. 예를 들어, 문자열 “ana”, “ban”, “anana”, “banana”, “n”는 모두 문자열 “banana”의 부분 문자열이지만, “aaa”, “bnana”, “wxyz”는 모두 “banana”의 부분 문자열이 아닙니다.</p>
<p>문자열 my_string과 target이 매개변수로 주어질 때, target이 문자열 my_string의 부분 문자열이라면 1을, 아니라면 0을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-94" class="level3" data-number="22.5.1">
<h3 data-number="22.5.1" class="anchored" data-anchor-id="파이썬-94"><span class="header-section-number">22.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb205" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb205-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, target: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb205-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(target <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string)</span></code></pre></div>
</section>
<section id="러스트-101" class="level3" data-number="22.5.2">
<h3 data-number="22.5.2" class="anchored" data-anchor-id="러스트-101"><span class="header-section-number">22.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb206" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb206-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb206-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(target) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb206-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb206-4"></span>
<span id="cb206-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb206-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb206-7">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcdef"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ab"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb206-8">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello world"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bye"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb206-9">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"on"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb206-10">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rust"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb206-11">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb206-12"></span>
<span id="cb206-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> target) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb206-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> target)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb206-15">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_string: '{}', target: '{}', 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb206-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb206-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-23-조건문-활용" class="level1" data-number="23">
<h1 data-number="23"><span class="header-section-number">23</span> Day 23 조건문 활용</h1>
<section id="부분-문자열" class="level2" data-number="23.1">
<h2 data-number="23.1" class="anchored" data-anchor-id="부분-문자열"><span class="header-section-number">23.1</span> 부분 문자열</h2>
<p>어떤 문자열 A가 다른 문자열 B안에 속하면 A를 B의 부분 문자열이라고 합니다. 예를 들어 문자열 “abc”는 문자열 “aabcc”의 부분 문자열입니다.</p>
<p>문자열 str1과 str2가 주어질 때, str1이 str2의 부분 문자열이라면 1을 부분 문자열이 아니라면 0을 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb207" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb207-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(str1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, str2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb207-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> str1 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> str2 <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
<section id="러스트-102" class="level3" data-number="23.1.1">
<h3 data-number="23.1.1" class="anchored" data-anchor-id="러스트-102"><span class="header-section-number">23.1.1</span> 러스트</h3>
<div class="sourceCode" id="cb208" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb208-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb208-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> str2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(str1) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb208-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb208-4"></span>
<span id="cb208-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb208-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb208-7">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abc"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcdef"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb208-8">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"world"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb208-9">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rust"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust is great"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb208-10">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"empty"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb208-11">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb208-12"></span>
<span id="cb208-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb208-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb208-15">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str1: '{}', str2: '{}', 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb208-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb208-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="꼬리-문자열" class="level2" data-number="23.2">
<h2 data-number="23.2" class="anchored" data-anchor-id="꼬리-문자열"><span class="header-section-number">23.2</span> 꼬리 문자열</h2>
<p>문자열들이 담긴 리스트가 주어졌을 때, 모든 문자열들을 순서대로 합친 문자열을 꼬리 문자열이라고 합니다. 꼬리 문자열을 만들 때 특정 문자열을 포함한 문자열은 제외시키려고 합니다. 예를 들어 문자열 리스트 <code>["abc", "def", "ghi"]</code>가 있고 문자열 “ef”를 포함한 문자열은 제외하고 꼬리 문자열을 만들면 “abcghi”가 됩니다.</p>
<p>문자열 리스트 str_list와 제외하려는 문자열 ex가 주어질 때, str_list에서 ex를 포함한 문자열을 제외하고 만든 꼬리 문자열을 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb209" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb209-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb209-2"></span>
<span id="cb209-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(str_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], ex: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb209-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([s <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> str_list <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ex <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s])</span></code></pre></div>
<section id="러스트-103" class="level3" data-number="23.2.1">
<h3 data-number="23.2.1" class="anchored" data-anchor-id="러스트-103"><span class="header-section-number">23.2.1</span> 러스트</h3>
<div class="sourceCode" id="cb210" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb210-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> ex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb210-2">    str_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()</span>
<span id="cb210-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(ex))</span>
<span id="cb210-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb210-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb210-6"></span>
<span id="cb210-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb210-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"world"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"example"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rust"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb210-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> ex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ex"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb210-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ex)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb210-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb210-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="정수-찾기" class="level2" data-number="23.3">
<h2 data-number="23.3" class="anchored" data-anchor-id="정수-찾기"><span class="header-section-number">23.3</span> 정수 찾기</h2>
<p>정수 리스트 num_list와 찾으려는 정수 n이 주어질 때, num_list안에 n이 있으면 1을 없으면 0을 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb211" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb211-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb211-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb211-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_list)</span></code></pre></div>
<section id="러스트-104" class="level3" data-number="23.3.1">
<h3 data-number="23.3.1" class="anchored" data-anchor-id="러스트-104"><span class="header-section-number">23.3.1</span> 러스트</h3>
<div class="sourceCode" id="cb212" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb212-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb212-2">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>n) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb212-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb212-4"></span>
<span id="cb212-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb212-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb212-7">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb212-8">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">98</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">67</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb212-9">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb212-10">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb212-11">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb212-12"></span>
<span id="cb212-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb212-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb212-15">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num_list: {:?}, n: {}, 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb212-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb212-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="주사위-게임-1" class="level2" data-number="23.4">
<h2 data-number="23.4" class="anchored" data-anchor-id="주사위-게임-1"><span class="header-section-number">23.4</span> 주사위 게임 1</h2>
<p>1부터 6까지 숫자가 적힌 주사위가 두 개 있습니다. 두 주사위를 굴렸을 때 나온 숫자를 각각 a, b라고 했을 때 얻는 점수는 다음과 같습니다.</p>
<ul>
<li>a와 b가 모두 홀수라면 <img src="https://latex.codecogs.com/png.latex?a2%20+%20b2"> 점을 얻습니다.</li>
<li>a와 b 중 하나만 홀수라면 <img src="https://latex.codecogs.com/png.latex?2%20%C3%97%20(a%20+%20b)"> 점을 얻습니다.</li>
<li>a와 b 모두 홀수가 아니라면 <img src="https://latex.codecogs.com/png.latex?%7Ca%20-%20b%7C"> 점을 얻습니다.</li>
</ul>
<p>두 정수 a와 b가 매개변수로 주어질 때, 얻는 점수를 return 하는 solution 함수를 작성해 주세요. ### 파이썬</p>
<div class="sourceCode" id="cb213" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb213-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb213-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb213-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb213-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb213-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b)</span>
<span id="cb213-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb213-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b)</span></code></pre></div>
<section id="러스트-105" class="level3" data-number="23.4.1">
<h3 data-number="23.4.1" class="anchored" data-anchor-id="러스트-105"><span class="header-section-number">23.4.1</span> 러스트</h3>
<div class="sourceCode" id="cb214" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb214-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb214-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb214-3">        a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pow(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pow(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb214-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb214-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b)</span>
<span id="cb214-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb214-7">        (a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>abs()</span>
<span id="cb214-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb214-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb214-10"></span>
<span id="cb214-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb214-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb214-13"></span>
<span id="cb214-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb214-15">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb214-16">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a: {}, b: {}, result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb214-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb214-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="날짜-비교하기" class="level2" data-number="23.5">
<h2 data-number="23.5" class="anchored" data-anchor-id="날짜-비교하기"><span class="header-section-number">23.5</span> 날짜 비교하기</h2>
<p>정수 배열 date1과 date2가 주어집니다. 두 배열은 각각 날짜를 나타내며 <img src="https://latex.codecogs.com/png.latex?%5Byear,%20month,%20day%5D"> 꼴로 주어집니다. 각 배열에서 year는 연도를, month는 월을, day는 날짜를 나타냅니다. 만약 date1이 date2보다 앞서는 날짜라면 1을, 아니면 0을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-95" class="level3" data-number="23.5.1">
<h3 data-number="23.5.1" class="anchored" data-anchor-id="파이썬-95"><span class="header-section-number">23.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb215" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb215-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb215-2"></span>
<span id="cb215-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(date1:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], date2:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb215-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb215-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> date1[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> date2[i]:</span>
<span id="cb215-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb215-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> date1[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> date2[i]:</span>
<span id="cb215-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb215-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-106" class="level3" data-number="23.5.2">
<h3 data-number="23.5.2" class="anchored" data-anchor-id="러스트-106"><span class="header-section-number">23.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb216" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb216-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(date1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> date2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb216-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb216-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> date1[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> date2[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb216-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb216-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> date1[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> date2[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb216-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb216-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb216-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb216-9">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb216-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb216-11"></span>
<span id="cb216-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb216-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb216-14">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">29</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb216-15">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb216-16">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">31</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb216-17">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb216-18"></span>
<span id="cb216-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (date1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> date2) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb216-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(date1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> date2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb216-21">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date1: {:?}, date2: {:?}, result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> date1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> date2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb216-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb216-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-24-조건문-활용-반복문-활용-이차원-리스트배열" class="level1" data-number="24">
<h1 data-number="24"><span class="header-section-number">24</span> Day 24 조건문 활용, 반복문 활용, 이차원 리스트(배열)</h1>
<section id="커피-심부름" class="level2" data-number="24.1">
<h2 data-number="24.1" class="anchored" data-anchor-id="커피-심부름"><span class="header-section-number">24.1</span> 커피 심부름</h2>
<p>팀의 막내인 철수는 아메리카노와 카페 라테만 판매하는 카페에서 팀원들의 커피를 사려고 합니다. 아메리카노와 카페 라테의 가격은 차가운 것과 뜨거운 것 상관없이 각각 4500, 5000원입니다. 각 팀원에게 마실 메뉴를 적어달라고 하였고, 그 중에서 메뉴만 적은 팀원의 것은 차가운 것으로 통일하고 “아무거나”를 적은 팀원의 것은 차가운 아메리카노로 통일하기로 하였습니다.</p>
<p>각 직원이 적은 메뉴가 문자열 배열 order로 주어질 때, 카페에서 결제하게 될 금액을 return 하는 solution 함수를 작성해주세요. order의 원소는 아래의 것들만 들어오고, 각각의 의미는 다음과 같습니다. ### 파이썬</p>
<div class="sourceCode" id="cb217" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb217-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb217-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(order: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb217-3">    total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb217-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> drink <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> order:</span>
<span id="cb217-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cafelatte'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> drink:</span>
<span id="cb217-6">            total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span></span>
<span id="cb217-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb217-8">            total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4500</span></span>
<span id="cb217-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total</span></code></pre></div>
<section id="러스트-107" class="level3" data-number="24.1.1">
<h3 data-number="24.1.1" class="anchored" data-anchor-id="러스트-107"><span class="header-section-number">24.1.1</span> 러스트</h3>
<div class="sourceCode" id="cb218" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb218-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb218-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb218-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> drink <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb218-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> drink<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cafelatte"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb218-5">            total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb218-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb218-7">            total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb218-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb218-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb218-10">    total</span>
<span id="cb218-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb218-12"></span>
<span id="cb218-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb218-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_orders <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb218-15">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cafelatte"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"americano"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cafelatte"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb218-16">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"americano"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"americano"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb218-17">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cafelatte"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"americano"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"espresso"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb218-18">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb218-19"></span>
<span id="cb218-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> order <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_orders <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb218-21">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb218-22">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Order: {:?}, Total: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> total)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb218-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb218-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="그림-확대" class="level2" data-number="24.2">
<h2 data-number="24.2" class="anchored" data-anchor-id="그림-확대"><span class="header-section-number">24.2</span> 그림 확대</h2>
<p>직사각형 형태의 그림 파일이 있고, 이 그림 파일은 1 × 1 크기의 정사각형 크기의 픽셀로 이루어져 있습니다. 이 그림 파일을 나타낸 문자열 배열 picture과 정수 k가 매개변수로 주어질 때, 이 그림 파일을 가로 세로로 k배 늘린 그림 파일을 나타내도록 문자열 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-96" class="level3" data-number="24.2.1">
<h3 data-number="24.2.1" class="anchored" data-anchor-id="파이썬-96"><span class="header-section-number">24.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb219" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb219-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb219-2"></span>
<span id="cb219-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(picture: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb219-4">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb219-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> picture:</span>
<span id="cb219-6">        expanded_row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> row])</span>
<span id="cb219-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(k):</span>
<span id="cb219-8">            result.append(expanded_row)</span>
<span id="cb219-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-108" class="level3" data-number="24.2.2">
<h3 data-number="24.2.2" class="anchored" data-anchor-id="러스트-108"><span class="header-section-number">24.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb220" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb220-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(picture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb220-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> picture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb220-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> expanded_row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>flat_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::iter::</span>repeat(c)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>take(k))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb220-6">            result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(expanded_row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb220-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb220-9">    result</span>
<span id="cb220-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb220-11"></span>
<span id="cb220-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb220-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> picture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abc"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"def"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(picture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="조건에-맞게-수열-변환하기-3" class="level2" data-number="24.3">
<h2 data-number="24.3" class="anchored" data-anchor-id="조건에-맞게-수열-변환하기-3"><span class="header-section-number">24.3</span> 조건에 맞게 수열 변환하기 3</h2>
<p>정수 배열 arr와 자연수 k가 주어집니다. 만약 k가 홀수라면 arr의 모든 원소에 k를 곱하고, k가 짝수라면 arr의 모든 원소에 k를 더합니다. 이러한 변환을 마친 후의 arr를 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-97" class="level3" data-number="24.3.1">
<h3 data-number="24.3.1" class="anchored" data-anchor-id="파이썬-97"><span class="header-section-number">24.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb221" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb221-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb221-2"></span>
<span id="cb221-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb221-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># k가 홀수인 경우</span></span>
<span id="cb221-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr]</span>
<span id="cb221-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># k가 짝수인 경우</span></span>
<span id="cb221-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr]</span></code></pre></div>
</section>
<section id="러스트-109" class="level3" data-number="24.3.2">
<h3 data-number="24.3.2" class="anchored" data-anchor-id="러스트-109"><span class="header-section-number">24.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb222" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb222-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb222-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb222-3">        arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb222-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb222-5">        arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb222-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb222-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="l로-만들기" class="level2" data-number="24.4">
<h2 data-number="24.4" class="anchored" data-anchor-id="l로-만들기"><span class="header-section-number">24.4</span> l로 만들기</h2>
<p>알파벳 소문자로 이루어진 문자열 myString이 주어집니다. 알파벳 순서에서 “l”보다 앞서는 모든 문자를 “l”로 바꾼 문자열을 return 하는 solution 함수를 완성해 주세요. ### 파이썬</p>
<div class="sourceCode" id="cb223" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb223-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb223-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> c <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> myString])</span></code></pre></div>
<section id="러스트-110" class="level3" data-number="24.4.1">
<h3 data-number="24.4.1" class="anchored" data-anchor-id="러스트-110"><span class="header-section-number">24.4.1</span> 러스트</h3>
<div class="sourceCode" id="cb224" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb224-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb224-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb224-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb224-4"></span>
<span id="cb224-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb224-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcdevwxyz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jjnnllkkmm"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"task"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb224-7"></span>
<span id="cb224-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> case <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb224-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(case)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb224-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input: {}, Output: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb224-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb224-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="특별한-이차원-배열-1" class="level2" data-number="24.5">
<h2 data-number="24.5" class="anchored" data-anchor-id="특별한-이차원-배열-1"><span class="header-section-number">24.5</span> 특별한 이차원 배열 1</h2>
<p>정수 n이 매개변수로 주어질 때, 다음과 같은 <img src="https://latex.codecogs.com/png.latex?n%20%C3%97%20n"> 크기의 이차원 배열 arr를 return 하는 solution 함수를 작성해 주세요. - <img src="https://latex.codecogs.com/png.latex?arr%5Bi%5D%5Bj%5D%20(0%20%E2%89%A4%20i,%20j%20%3C%20n)%EC%9D%98%20%EA%B0%92%EC%9D%80%20i%20=%20j%EB%9D%BC%EB%A9%B4%201,%20%EC%95%84%EB%8B%88%EB%9D%BC%EB%A9%B4%200%EC%9E%85%EB%8B%88%EB%8B%A4."></p>
<section id="파이썬-98" class="level3" data-number="24.5.1">
<h3 data-number="24.5.1" class="anchored" data-anchor-id="파이썬-98"><span class="header-section-number">24.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb225" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb225-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb225-2"></span>
<span id="cb225-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]:</span>
<span id="cb225-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n)] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n)]</span></code></pre></div>
</section>
<section id="러스트-111" class="level3" data-number="24.5.2">
<h3 data-number="24.5.2" class="anchored" data-anchor-id="러스트-111"><span class="header-section-number">24.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb226" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb226-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb226-2">    (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb226-3">        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb226-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb226-5">        )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb226-6">    )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb226-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb226-8"></span>
<span id="cb226-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb226-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb226-11"></span>
<span id="cb226-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb226-13">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb226-14">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n = {}:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb226-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb226-16">            <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> row)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb226-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb226-18">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb226-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb226-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-25-이차원-리스트배열" class="level1" data-number="25">
<h1 data-number="25"><span class="header-section-number">25</span> Day 25 이차원 리스트(배열)</h1>
<section id="정수를-나선형으로-배치하기" class="level2" data-number="25.1">
<h2 data-number="25.1" class="anchored" data-anchor-id="정수를-나선형으로-배치하기"><span class="header-section-number">25.1</span> 정수를 나선형으로 배치하기</h2>
<p>양의 정수 n이 매개변수로 주어집니다. <img src="https://latex.codecogs.com/png.latex?n%20%C3%97%20n"> 배열에 1부터 n2 까지 정수를 인덱스 <img src="https://latex.codecogs.com/png.latex?%5B0%5D%5B0%5D">부터 시계방향 나선형으로 배치한 이차원 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-99" class="level3" data-number="25.1.1">
<h3 data-number="25.1.1" class="anchored" data-anchor-id="파이썬-99"><span class="header-section-number">25.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb227" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb227-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb227-2"></span>
<span id="cb227-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb227-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># n x n 크기의 2차원 배열 초기화</span></span>
<span id="cb227-5">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n)] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n)]</span>
<span id="cb227-6"></span>
<span id="cb227-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시작 위치와 방향 설정</span></span>
<span id="cb227-8">    x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb227-9">    dx, dy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 처음에는 오른쪽으로 이동</span></span>
<span id="cb227-10"></span>
<span id="cb227-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1부터 n^2까지 숫자 채우기</span></span>
<span id="cb227-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb227-13">        answer[x][y] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i</span>
<span id="cb227-14"></span>
<span id="cb227-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다음 위치 계산</span></span>
<span id="cb227-16">        nx, ny <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dx, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dy</span>
<span id="cb227-17"></span>
<span id="cb227-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 방향 전환이 필요한 경우</span></span>
<span id="cb227-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> nx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> nx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> ny <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> ny <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> answer[nx][ny] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb227-20">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 방향 전환 (시계 방향)</span></span>
<span id="cb227-21">            dx, dy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dy, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>dx</span>
<span id="cb227-22">            nx, ny <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dx, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dy</span>
<span id="cb227-23"></span>
<span id="cb227-24">        x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx, ny</span>
<span id="cb227-25"></span>
<span id="cb227-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-112" class="level3" data-number="25.1.2">
<h3 data-number="25.1.2" class="anchored" data-anchor-id="러스트-112"><span class="header-section-number">25.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb228" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb228-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb228-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> n]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> n]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize a 2D array with zeros</span></span>
<span id="cb228-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Starting position</span></span>
<span id="cb228-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> dy) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initial direction: right</span></span>
<span id="cb228-5"></span>
<span id="cb228-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb228-7">        answer[x][y] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fill the current cell</span></span>
<span id="cb228-8"></span>
<span id="cb228-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the next position</span></span>
<span id="cb228-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (nx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ny) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">isize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">isize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dy)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb228-11"></span>
<span id="cb228-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if we need to change direction</span></span>
<span id="cb228-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> nx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> nx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">isize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ny <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ny <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">isize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> answer[nx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>][ny <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb228-14">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Change direction (clockwise)</span></span>
<span id="cb228-15">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (new_dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> new_dy) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (dy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>dx)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb228-16">            dx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb228-17">            dy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_dy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb228-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb228-19"></span>
<span id="cb228-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update position</span></span>
<span id="cb228-21">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">isize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dx) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb228-22">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (y <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">isize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dy) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb228-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb228-24"></span>
<span id="cb228-25">    answer</span>
<span id="cb228-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="특별한-이차원-배열-2" class="level2" data-number="25.2">
<h2 data-number="25.2" class="anchored" data-anchor-id="특별한-이차원-배열-2"><span class="header-section-number">25.2</span> 특별한 이차원 배열 2</h2>
<p><img src="https://latex.codecogs.com/png.latex?n%20%C3%97%20n"> 크기의 이차원 배열 arr이 매개변수로 주어질 때, arr이 다음을 만족하면 1을 아니라면 0을 return 하는 solution 함수를 작성해 주세요.</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?0%20%E2%89%A4%20i,%20j%20%3C%20n%EC%9D%B8%20%EC%A0%95%EC%88%98%20i,%20j%EC%97%90%20%EB%8C%80%ED%95%98%EC%97%AC%20arr%5Bi%5D%5Bj%5D%20=%20arr%5Bj%5D%5Bi%5D"></li>
</ul>
<section id="파이썬-100" class="level3" data-number="25.2.1">
<h3 data-number="25.2.1" class="anchored" data-anchor-id="파이썬-100"><span class="header-section-number">25.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb229" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb229-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb229-2"></span>
<span id="cb229-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb229-4">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr)</span>
<span id="cb229-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n):</span>
<span id="cb229-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n):</span>
<span id="cb229-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> arr[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> arr[j][i]:</span>
<span id="cb229-8">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb229-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-113" class="level3" data-number="25.2.2">
<h3 data-number="25.2.2" class="anchored" data-anchor-id="러스트-113"><span class="header-section-number">25.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb230" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb230-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb230-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb230-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb230-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb230-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> arr[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> arr[j][i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb230-6">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb230-7">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb230-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb230-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb230-10">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb230-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb230-12"></span>
<span id="cb230-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb230-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb230-15">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">95</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">95</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb230-16">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">498</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">258</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">587</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">63</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">93</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">754</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">258</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">723</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">587</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">754</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">723</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">81</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb230-17">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb230-18"></span>
<span id="cb230-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb230-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(case<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb230-21">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test case {}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb230-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb230-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="정사각형으로-만들기" class="level2" data-number="25.3">
<h2 data-number="25.3" class="anchored" data-anchor-id="정사각형으로-만들기"><span class="header-section-number">25.3</span> 정사각형으로 만들기</h2>
<p>이차원 정수 배열 arr이 매개변수로 주어집니다. arr의 행의 수가 더 많다면 열의 수가 행의 수와 같아지도록 각 행의 끝에 0을 추가하고, 열의 수가 더 많다면 행의 수가 열의 수와 같아지도록 각 열의 끝에 0을 추가한 이차원 배열을 return 하는 solution 함수를 작성해 주세요. ### 파이썬</p>
<div class="sourceCode" id="cb231" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb231-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb231-2"></span>
<span id="cb231-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]:</span>
<span id="cb231-4">    rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr)</span>
<span id="cb231-5">    cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb231-6">    max_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(rows, cols)</span>
<span id="cb231-7"></span>
<span id="cb231-8">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb231-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr:</span>
<span id="cb231-10">        new_row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (max_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(row))</span>
<span id="cb231-11">        result.append(new_row)</span>
<span id="cb231-12"></span>
<span id="cb231-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(result) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_size:</span>
<span id="cb231-14">        result.append([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> max_size)</span>
<span id="cb231-15"></span>
<span id="cb231-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
<section id="러스트-114" class="level3" data-number="25.3.1">
<h3 data-number="25.3.1" class="anchored" data-anchor-id="러스트-114"><span class="header-section-number">25.3.1</span> 러스트</h3>
<div class="sourceCode" id="cb232" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb232-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb232-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max(cols)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-5"></span>
<span id="cb232-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb232-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> new_row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-9">        new_row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize(max_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-10">        result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(new_row)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb232-12"></span>
<span id="cb232-13">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize_with(max_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> max_size])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-14"></span>
<span id="cb232-15">    result</span>
<span id="cb232-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb232-17"></span>
<span id="cb232-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb232-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb232-20">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb232-21">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb232-22">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb232-23">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-24"></span>
<span id="cb232-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb232-26">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(case<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-27">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test case {}:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb232-29">            <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> row)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-30">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb232-31">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-32">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb232-33"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="이차원-배열-대각선-순회하기" class="level2" data-number="25.4">
<h2 data-number="25.4" class="anchored" data-anchor-id="이차원-배열-대각선-순회하기"><span class="header-section-number">25.4</span> 이차원 배열 대각선 순회하기</h2>
<p>2차원 정수 배열 board와 정수 k가 주어집니다. <img src="https://latex.codecogs.com/png.latex?i%20+%20j%20%3C=%20k">를 만족하는 모든 <img src="https://latex.codecogs.com/png.latex?(i,%20j)">에 대한 <code>board[i][j]</code>의 합을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-101" class="level3" data-number="25.4.1">
<h3 data-number="25.4.1" class="anchored" data-anchor-id="파이썬-101"><span class="header-section-number">25.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb233" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb233-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb233-2"></span>
<span id="cb233-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(board: List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]], k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb233-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb233-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(board)):</span>
<span id="cb233-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(board[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])):</span>
<span id="cb233-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> k:</span>
<span id="cb233-8">                answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> board[i][j]</span>
<span id="cb233-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-115" class="level3" data-number="25.4.2">
<h3 data-number="25.4.2" class="anchored" data-anchor-id="러스트-115"><span class="header-section-number">25.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb234" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb234-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb234-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb234-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb234-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>board[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb234-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb234-6">                answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> board[i][j]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb234-7">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb234-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb234-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb234-10">    answer</span>
<span id="cb234-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb234-12"></span>
<span id="cb234-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb234-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> board <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb234-15">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb234-16">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb234-17">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb234-18">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb234-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb234-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb234-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb234-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>


</section>
</section>
</section>

 ]]></description>
  <category>Coding test</category>
  <category>Python</category>
  <category>Rust</category>
  <category>Programming</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Codingtest_training.html</guid>
  <pubDate>Sat, 11 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>쿼토로 시작하는 블로그</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Quarto_blog.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Quarto_blog.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Quarto_blog.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:50.0%"></a></p>
</figure>
</div>
<p>블로그는 많은 이유로 훌륭한 글쓰기 도구입니다. 그리고 쿼토(Quarto)는 몇번의 클릭만으로 블로그를 만들 수 있습니다. 게다가 커스터마이징이 쉽기도 합니다. 이 글은 쿼토를 이용한 블로그 만들기 가이드로 여러분의 소중한 시간을 절약하고 멋진 블로그를 시작하는 데 도움을 주기 위해 작성되었습니다.<sup>1</sup></p>
<section id="쿼토-블로그-시작하기" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 쿼토 블로그 시작하기</h1>
<p>솔직히 말해서 블로그를 처음 시작하는 단계에서 블로그 툴을 다루는데 많은 시간을 쓰는 것은 좋은 생각이 아닙니다. 중요한 것은 <strong>꾸준히 글을 쓰는 것</strong>이지 블로그를 화려하게 꾸미는 것이 아닙니다. 따라서 처음에는 기본 제공되는 테마와 랜딩 페이지를 사용하세요.</p>
<section id="당신이-블로그를-해야하는-이유" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="당신이-블로그를-해야하는-이유"><span class="header-section-number">1.1</span> 당신이 블로그를 해야하는 이유</h2>
<p>블로그를 시작하는 이유가 명확하지 않다면 몇 가지 예시를 제공하겠습니다.</p>
<ol type="1">
<li>배우기: 글쓰기는 얕은 지식을 막아줍니다. 블로그 글을 작성하는 과정에서 종종 제가 틀렸다는 사실을 깨닫곤 합니다. 글쓰기가 효과적인 학습 도구인 이유가 바로 이 때문이죠.</li>
<li>다른 사람에 도움주기: 자기가 아는 것을 공유하면서 비슷한 문제에 봉착한 다른 이들을 도와줄 수 있습니다. 전문가가 아니더라도 걱정하지는 마세요. 사실 사람들은 보통 전문가보다는 다른 학습자, 즉 자신보다 단계만 조금 앞선 사람에게서 배우는 것을 더 선호합니다. 왜냐하면 전문가들은 초심자들이 겪는 어려움을 간과하는 경향이 있기 때문이죠.</li>
<li>포트폴리오 및 취업 기회: 인터넷에 콘텐츠를 게시하면 누구든지 볼 수 있습니다. 이는 자신의 기술을 과시하는 데 유용합니다. 또한 개인적인 경험을 이야기하자면 공개적으로 글을 쓰는 것은 새로운 직업 기회로 연결될 수도 있습니다. 누가 당신의 블로그를 읽고 함께 일하기를 원할 수도 있으니까요.</li>
</ol>
</section>
<section id="블로그-초기-설정하기" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="블로그-초기-설정하기"><span class="header-section-number">1.2</span> 블로그 초기 설정하기</h2>
<p>쿼토를 로컬에 설치했다면 블로그를 만드는 것은 정말 간단합니다. 터미널에 다음 입력어를 입력합니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> create-project myblog <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span> website:blog</span></code></pre></div>
<p>더 자세한 것은 Beatriz Milz가 작성한 <a href="https://beamilz.com/posts/2022-06-05-creating-a-blog-with-quarto/en/">10 단계로 쿼토 블로그를 시작하는 방법</a>을 참고하세요.</p>
</section>
<section id="간단한-설정하기" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="간단한-설정하기"><span class="header-section-number">1.3</span> 간단한 설정하기</h2>
<p>루트 폴더에 있는 <code>_quarto.yml</code> 파일에는 쿼토 블로그에 대한 여러가지 설정이 존재합니다. 아래 예시 파일을 참고하세요.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>_quarto.yml</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="_quarto.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> website</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">website</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto blog"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 블로그 제목 설정</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">site-url</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://quarto-blog.com</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 블로그 URL 설정 (나중에 RSS 피드에 중요)</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">description</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This is personal Blog."</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 블로그 설명</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navbar</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 메뉴바 설정</span></span>
<span id="cb2-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">right</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Blog</span></span>
<span id="cb2-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> index.qmd </span></span>
<span id="cb2-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> github</span></span>
<span id="cb2-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/[xxxx]</span></span>
<span id="cb2-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> twitter</span></span>
<span id="cb2-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://twitter.com/[xxx]</span></span>
<span id="cb2-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> youtube</span></span>
<span id="cb2-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://www.youtube.com/user/[xxx]</span></span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># You can ignore this part in the first step</span></span>
<span id="cb2-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> rss</span></span>
<span id="cb2-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> blog.xml</span></span>
<span id="cb2-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Ressources</span></span>
<span id="cb2-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">menu</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb2-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> DataViz Portfolio</span></span>
<span id="cb2-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> dataviz_portfolio.html</span></span>
<span id="cb2-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> YARDS</span></span>
<span id="cb2-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://yards.albert-rapp.de/</span></span>
<span id="cb2-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> R Weekly</span></span>
<span id="cb2-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://rweekly.org/</span></span>
<span id="cb2-30"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> R Bloggers</span></span>
<span id="cb2-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://www.r-bloggers.com/</span></span>
<span id="cb2-32"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Archive</span></span>
<span id="cb2-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> archive.qmd</span></span>
<span id="cb2-34"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">google-analytics</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;Insert your ID here&gt;</span></span>
<span id="cb2-35"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cookie-consent</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb2-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">twitter-card</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb2-37"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> thumbnail_blog.png</span></span>
<span id="cb2-38"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card-style</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> summary_large_image</span></span>
<span id="cb2-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">creator</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"@rappa753"</span></span>
<span id="cb2-40"></span>
<span id="cb2-41"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filters</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> code-filename</span></span>
<span id="cb2-43"></span>
<span id="cb2-44"></span>
<span id="cb2-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-46"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-47"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> theme.scss</span></span></code></pre></div>
</div>
</section>
<section id="첫-번째-게시물-쓰기" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="첫-번째-게시물-쓰기"><span class="header-section-number">1.4</span> 첫 번째 게시물 쓰기</h2>
<p>블로그 게시물은 <code>posts</code> 디렉토리에 파일을 생성해서 만듭니다. 간단하게 <code>qmd</code> 파일을 만들어 시작해보세요.</p>
<section id="메타데이터" class="level3" data-number="1.4.1">
<h3 data-number="1.4.1" class="anchored" data-anchor-id="메타데이터"><span class="header-section-number">1.4.1</span> 메타데이터</h3>
<p>게시물에 대한 설정에 대한 것은 <code>posts/_metadata.yml</code> 파일이 처리합니다. 제가 사용하는 설정은 아래 파일을 참고하세요.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>posts/_metadata.yml</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="posts/_metadata.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Options specified here will apply to all posts in this folder</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># freeze computational output</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">freeze</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enable banner style title blocks</span></span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title-block-banner</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Author name of all blog posts</span></span>
<span id="cb3-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">author</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Albert Rapp'</span></span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Table of content settings</span></span>
<span id="cb3-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toc</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toc-depth</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb3-15"></span>
<span id="cb3-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page-layout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> article</span></span></code></pre></div>
</div>
</section>
</section>
<section id="목록-페이지-rss-피드-포함" class="level2" data-number="1.5">
<h2 data-number="1.5" class="anchored" data-anchor-id="목록-페이지-rss-피드-포함"><span class="header-section-number">1.5</span> 목록 페이지 (RSS 피드 포함)</h2>
<p>블로그 글에 대한 목록 페이지를 만들어보죠. <code>blog.qmd</code> 파일을 만들고 YAML 헤더에다음과 같이 작성합니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>blog.qmd</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="blog.qmd" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">listing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contents</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> posts/**/*.qmd</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # posts 디렉토리 (및 하위 디렉토리) 에 있는 모든 .qmd 파일을 이 목록 페이지에 포함한다는 의미</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date desc"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 날짜순으로 정렬 및 필터링 기능</span></span>
<span id="cb4-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default </span></span>
<span id="cb4-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">categories</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb4-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort-ui</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb4-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter-ui</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb4-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fields</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> reading-time</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> description</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> categories</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 자세한 것은 쿼토 공식 페이지를 참조</span></span>
<span id="cb4-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">feed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 이 목록 페이지가 RSS 페이지를 생성</span></span>
<span id="cb4-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page-layout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> full</span></span>
<span id="cb4-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title-block-banner</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 배너를 보여주지 않음</span></span>
<span id="cb4-13"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
</div>
</section>
<section id="아카이브-만들기" class="level2" data-number="1.6">
<h2 data-number="1.6" class="anchored" data-anchor-id="아카이브-만들기"><span class="header-section-number">1.6</span> 아카이브 만들기</h2>
<p>모든 글을 나열하는 아카이브 페이지도 만들어 보겠습니다. 루트 디렉토리에 새로운 파일 <code>archive.qmd</code> 를 만들고 다음과 같은 내용을 채웠습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>archive.qmd</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="archive.qmd" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Archive"</span></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page-layout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> full</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 좌우 여백을 제거</span></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">listing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contents</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> posts/**/*.qmd</span></span>
<span id="cb5-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb5-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fields</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb5-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date desc'</span></span>
<span id="cb5-9"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
</div>
</section>
<section id="댓글-기능-추가하기" class="level2" data-number="1.7">
<h2 data-number="1.7" class="anchored" data-anchor-id="댓글-기능-추가하기"><span class="header-section-number">1.7</span> 댓글 기능 추가하기</h2>
<p>이제 댓글 기능을 추가해 보겠습니다. 이 기능을 통해 독자들은 훌륭한 콘텐츠에 대한 댓글을 달 수 있습니다. 제가 주로 사용하는 도구는 utterances 입니다. 이 도구는 GitHub 를 통해 작동하기 때문에 GitHub 에서 별도의 공개 저장소를 만들어야 합니다. 이 저장소는 블로그의 댓글을 저장하는 공간이 될 것입니다. 하지만 먼저 새로 생성한 저장소에 utterances 를 설치해야 합니다. 설치 방법은 공식 페이지를 참고하세요.</p>
<p>블로그 게시글 하단에만 댓글을 보여주기 위해 <code>posts/_metadata.yml</code>파일에 아래 내용을 추가합니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>posts/_metadata.yml</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="posts/_metadata.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">comments</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">utterances</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb6-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">/blogComments</span></span></code></pre></div>
</div>
</section>
<section id="뉴스레터" class="level2" data-number="1.8">
<h2 data-number="1.8" class="anchored" data-anchor-id="뉴스레터"><span class="header-section-number">1.8</span> 뉴스레터</h2>
<p>정기적으로 구독자에게 새로운 콘텐츠 알림을 주기 위해서 뉴스레터를 발송하기 위해 서비스 제공 업체들의 코드를 원하는 위치에 배치하세요.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb7-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">iframe</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"beehiiv-form"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://embeds.beehiiv.com/9232d2a2-6e85-4beb-b8ed-1de94e9e4f01?slim=true"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> data-test-id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"beehiiv-embed"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> frameborder</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> scrolling</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"margin: 0; border-radius: 0px !important; background-color: transparent; height: 75px; width: 90%;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">iframe</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>블로그 목록 페이지 상단에 해당 코드를 추가하는 방법은 아래와 같습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>blog.qmd</strong></pre>
</div>
<div class="sourceCode" id="cb8" data-filename="blog.qmd" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb8-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">listing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contents</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> posts/**/*.qmd</span></span>
<span id="cb8-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date desc"</span></span>
<span id="cb8-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb8-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">categories</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb8-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort-ui</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb8-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter-ui</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb8-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fields</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> reading-time</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> description</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> categories</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb8-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">feed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb8-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page-layout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> full</span></span>
<span id="cb8-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title-block-banner</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb8-13"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb8-14"></span>
<span id="cb8-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.columns</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb8-16"></span>
<span id="cb8-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.column width=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"40%"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb8-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Series</span></span>
<span id="cb8-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##### [ggplot2-series](ggplot-series.html)</span></span>
<span id="cb8-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">This series contains a great deal of tips, tricks and packages </span></span>
<span id="cb8-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">that you can use to level up your ggplot game.</span></span>
<span id="cb8-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-23"></span>
<span id="cb8-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.column width=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"60%"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb8-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Subscribe</span></span>
<span id="cb8-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">&lt;iframe id="beehiiv-form" src="https</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">://embeds.beehiiv.com/9232d2a2-6e85-4beb-b8ed-1de94e9e4f01?slim=true" data-test-id="beehiiv-embed" frameborder="0" scrolling="no" style="margin</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 0; border-radius: 0px !important; background-color: transparent; height: 75px; width: 90%;"&gt;&lt;/iframe&gt;</span></span>
<span id="cb8-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-28"></span>
<span id="cb8-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span></code></pre></div>
</div>
</section>
<section id="바닥글-추가" class="level2" data-number="1.9">
<h2 data-number="1.9" class="anchored" data-anchor-id="바닥글-추가"><span class="header-section-number">1.9</span> 바닥글 추가</h2>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>posts/_metadata.yml</strong></pre>
</div>
<div class="sourceCode" id="cb9" data-filename="posts/_metadata.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb9-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb9-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">include-after-body</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ../footer.html</span></span></code></pre></div>
</div>
</section>
</section>
<section id="reference" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Reference</h1>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html#create-your-own-series↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Quarto blog</category>
  <category>Blog</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Quarto_blog.html</guid>
  <pubDate>Fri, 10 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Mojo 프로그래밍 언어</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Mojo_lang.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Mojo_lang.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Mojo_lang.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>Python 은 세계에서 가장 널리 사용되는 프로그래밍 언어 중 하나로 사용자 친화적인 성격 덕분에 다양한 분야에서 활발하게 활용되고 있습니다. 웹 개발자, 데이터 과학자, 마케터, 그리고 AI 전문가들까지, 여러 분야의 전문가들이 Python 을 선호하는 이유는 초보자도 쉽게 배울 수 있고 읽기와 쓰기가 쉽기 때문입니다.</p>
<p>그러나 Python 은 C++ 이나 Rust 와 비교했을 때 실행 속도가 느리고 배포 과정이 복잡하다는 단점이 있습니다. 반면, C++ 은 속도가 빠르지만 배우고 사용하기 어렵다는 문제점이 있죠. 이런 문제를 해결하기 위해 등장한 언어가 바로 <strong>Mojo</strong>입니다.</p>
<section id="mojo의-특징" class="level2" data-number="0.1">
<h2 data-number="0.1" class="anchored" data-anchor-id="mojo의-특징"><span class="header-section-number">0.1</span> Mojo🔥의 특징</h2>
<p>Mojo 는 Python 과 유사한 구문을 제공하면서도 병렬 처리를 최적화한 컴파일러 인프라인 MLIR 을 사용하여 성능을 크게 향상시킵니다. 특히, Mojo 를 사용하면 AI 모델을 병렬 처리하여 더 빠르고 효율적으로 실행할 수 있습니다. 실제로 Mojo 는 Python 보다 <strong>약 35,000배 빠른 속도</strong>를 자랑합니다. 또한 Mojo 는 <strong>Python 과 완벽한 호환성</strong>을 목표로 하고 있어, 기존의 Python 코드를 거의 그대로 사용할 수 있으며 추가적인 강력한 기능도 제공합니다.</p>
<p>따라서, 현재 사용 중인 모든 Python 패키지와 라이브러리는 Mojo 에서 문제없이 동작합니다. 특히 Mojo 는 <strong>AI 하드웨어를 프로그래밍</strong>하는 데 사용할 수 있는데, 이는 기존의 언어로는 구현하기 어려운 복잡한 AI 하드웨어의 구조를 쉽게 처리할 수 있도록 도와줍니다.</p>
<p><code>C++</code> 이나 CUDA 와 같은 기존의 고성능 프로그래밍 언어는 배우기 어렵다는 단점이 있지만, Mojo 는 이러한 복잡성을 없애고 누구나 쉽게 AI 하드웨어를 프로그래밍할 수 있게 합니다. 더불어, 사전 및 사후 처리 작업을 통해 모델을 쉽게 확장하거나 커스텀 연산을 적용할 수 있어 다양한 AI 작업에서 큰 유연성을 제공합니다. 커널 퓨전, 그래프 재작성, 형상 함수 등 고급 기능을 통해 더욱 효율적인 AI 프로그래밍이 가능합니다.</p>
<p>Mojo 는 Python 의 단점을 보완하면서도, 그 친숙한 구문과 강력한 성능을 결합하여 차세대 AI 프로그래밍을 이끄는 도구로 자리 잡고 있습니다.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Mojo 프로젝트는 이제 막 초기 단계에 있지만, 그 가능성과 전망은 매우 인상적입니다. 아직 시작 단계이지만, Mojo 가 앞으로 가져올 변화와 잠재력을 생각하면 기대감이 큽니다. Mojo 가 제공하는 풍부한 기능과 강력한 성능 향상은 그 자체로 큰 매력이며, 이것이 인공지능과 머신러닝 분야에 어떤 혁신을 가져올지 기대됩니다.</p>
</div>
</div>
</section>
<section id="mojo-시작하기" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Mojo🔥 시작하기</h1>
<p>이 글에서는 Mojo로 “Hello world”를 출력하는 방법을 보여드리겠습니다. 다른 Mojo 코드를 작성하는 방법을 읽고 싶으시다면 <a href="https://docs.modular.com/mojo/manual/basics">Mojo 문법 소개</a>를 참조하세요.</p>
<section id="새-프로젝트-만들기" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="새-프로젝트-만들기"><span class="header-section-number">1.1</span> 1. 새 프로젝트 만들기</h2>
<p>새로운 Mojo 프로젝트를 생성하기 위해 콘다 (Conda) 기반의 가상 환경 관리자이자 패키지 관리자인 <code>magic</code> 을 사용하겠습니다.</p>
<ol type="1">
<li><p>다음 명령어로 macOS 또는 우분투 리눅스에서 <code>magic</code> 을 설치합니다:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ssL</span> https://magic.modular.com/94d3e79d-46f1-4fa6-9d1b-ee5b81f4b079 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span></span></code></pre></div>
<p>그런 다음 터미널에 출력된 <code>source</code> 명령을 실행합니다.</p></li>
<li><p>hello-world 라는 Mojo 프로젝트를 생성합니다:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">magic</span> init hello-world <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span> mojoproject</span></code></pre></div>
<p>이렇게 하면 <code>hello-world</code> 라는 디렉터리가 생성되고 Mojo 프로젝트 종속성이 설치됩니다 (Mojo 프로젝트의 유일한 종속성은 <code>max</code> 패키지로 <a href="https://docs.modular.com/max/faq#why-bundle-mojo-with-max">MAX와 번들</a> 로 제공됩니다.).</p></li>
<li><p>프로젝트 가상 환경에서 셸을 시작합니다:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> hello-world <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">magic</span> shell</span></code></pre></div></li>
</ol>
<p>이제 가상 환경이 활성화되어 Mojo를 사용해 볼 수 있습니다. 예를 들어 다음과 같이 Mojo 버전을 확인할 수 있습니다:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mojo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span></span></code></pre></div>
</section>
<section id="repl에서-코드-실행하기" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="repl에서-코드-실행하기"><span class="header-section-number">1.2</span> 2. REPL에서 코드 실행하기</h2>
<p>명령 프롬프트에서 Mojo 코드를 작성하고 실행할 수 있는 Mojo <a href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop">REPL</a>을 사용해 보겠습니다:</p>
<ol type="1">
<li><p>REPL 세션을 시작하려면 <code>mojo</code> 를 입력합니다.</p></li>
<li><p>REPL을 종료하려면 <code>:quit</code> 을 입력하고 <code>Enter</code> 키를 누르거나 <code>Ctrl + D</code> 를 누릅니다.</p></li>
</ol>
<p>REPL에서 원하는 만큼 코드를 작성할 수 있습니다. 새 줄을 시작하고 코드 작성을 계속하려면 Enter키를 누르고, Mojo가 코드를 실행하게 하려면 Enter키를 두 번 누릅니다. REPL은 코드가 저장되지 않으므로 주로 짧은 실험에 유용합니다. 따라서 실제 프로그램을 작성하려면 <code>.mojo</code> 소스 파일에 코드를 작성하는 편이 좋습니다.</p>
</section>
<section id="mojo-파일-실행하기" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="mojo-파일-실행하기"><span class="header-section-number">1.3</span> 3. Mojo 파일 실행하기</h2>
<p>이제 Mojo 코드를 파일로 작성하고 <a href="https://docs.modular.com/mojo/cli/"><code>mojo</code></a>로 실행해 보겠습니다:</p>
<ol type="1">
<li><p><code>hello.mojo</code>(또는 <code>hello.🔥</code>) 라는 이름의 파일을 만들고 다음 코드를 추가합니다:</p>
<pre class="mojo"><code>fn main():
 print(“Hello, world!”)</code></pre>
<p>이 정도면 충분합니다. 파일을 저장하고 터미널로 돌아갑니다.</p></li>
<li><p>이제 <code>mojo</code> 명령어로 실행합니다:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mojo</span> hello.mojo</span></code></pre></div></li>
</ol>
</section>
<section id="실행-가능한-바이너리-빌드" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="실행-가능한-바이너리-빌드"><span class="header-section-number">1.4</span> 4. 실행 가능한 바이너리 빌드</h2>
<p>마지막으로 동일한 코드를 실행 파일로 빌드하고 실행해 보겠습니다:</p>
<ol type="1">
<li><p><code>build</code> 명령어로 실행 파일을 만듭니다:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mojo</span> build hello.mojo</span></code></pre></div>
<p>실행 파일은 <code>.mojo</code> 파일과 동일한 이름을 사용하지만 <code>-o</code> 옵션을 사용해 변경할 수도 있습니다.</p></li>
<li><p>그런 다음 실행 파일을 실행합니다:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./hello</span></span></code></pre></div></li>
</ol>
<p><code>build</code> 명령어는 정적으로 컴파일된 바이너리 파일을 생성하므로 실행에 필요한 모든 코드와 라이브러리가 포함되어 있습니다. 그리고 가상 환경을 비활성화 하려면 <code>exit</code>를 입력합니다.</p>
<pre><code>exit</code></pre>
</section>
<section id="github-에서-예제-실행하기" class="level2" data-number="1.5">
<h2 data-number="1.5" class="anchored" data-anchor-id="github-에서-예제-실행하기"><span class="header-section-number">1.5</span> 5. GitHub 에서 예제 실행하기</h2>
<p>GitHub 의 Mojo 코드 예제에는 Magic 구성 파일이 포함되어 있으므로 간단히 리포지토리를 복제하고 <code>magic</code> 으로 코드를 실행할 수 있습니다. 예를 들어</p>
<ol type="1">
<li><p>Mojo 리포지토리를 복제합니다:</p>
<pre><code>git clone https://github.com/modularml/mojo.git</code></pre>
<p>나이틀리(nightly) 빌드를 설치한 경우에만 nightly 브랜치로 체크 아웃하세요:</p>
<pre><code>git checkout nightly</code></pre></li>
<li><p>예제로 이동합니다:</p>
<pre><code>cd mojo/examples</code></pre></li>
<li><p>코드를 실행합니다:</p>
<pre><code>magic run mojo hello_interop.mojo</code></pre></li>
</ol>
</section>
</section>
<section id="다음-단계" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 다음 단계</h1>
<ul>
<li>Mojo 를 처음 사용하는 경우 <a href="https://docs.modular.com/mojo/manual/basics">Mojo 소개</a>에서 언어 기초를 익히는 것이 좋습니다.</li>
<li><code>magic</code> 도구에 대해 자세히 알아보려면 <a href="https://docs.modular.com/magic/">Magic 시작하기</a>를 참조하세요.</li>
<li>Mojo 리포지토리](https://github.com/modularml/mojo/) 에서 더 많은 코드 예제를 살펴보세요. 이 리포지토리에는 여러 가지 예제 외에도 Mojo의 고급 기능을 알려주는 <a href="https://github.com/modularml/mojo/tree/main/examples/notebooks#readme">Jupyter 노트북</a>이 있습니다.</li>
<li>사용 가능한 모든 Mojo API 를 보려면 <a href="https://docs.modular.com/mojo/lib">Mojo 표준 라이브러리 참조</a>를 확인하세요.</li>
<li>설치 중 문제가 발생하면 <a href="https://docs.modular.com/mojo/roadmap#mojo-sdk-known-issues">이미 알려진 문제</a> 문문서를 확인하세요.</li>
</ul>


</section>

 ]]></description>
  <category>Coding</category>
  <category>Programming</category>
  <category>Mojo lang</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Mojo_lang.html</guid>
  <pubDate>Wed, 08 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>파이썬 코딩 팁</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Tip_python.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Tip_python.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Tip_python.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<section id="파이썬-코딩을-위한-조언" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 파이썬 코딩을 위한 조언</h1>
<p>이 글은 <a href="https://qiita.com/sugulu_Ogawa_ISID/items/c0e8a5e6b177bfe05e99">원본 글</a>의 내용을 임의로 번역한 것입니다. 원저자는 데이터 사이언티스트와 AI 엔지니어가 Python으로 효율적으로 코드를 작성하기 위한 다양한 팁과 노하우를 공유하고자 여러 가지 원칙과 기법을 소개합니다. 이 내용을 통해 여러분의 프로그래밍 능력을 한층 더 향상시키길 바랍니다.</p>
<section id="레벨-1" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="레벨-1"><span class="header-section-number">1.1</span> 레벨 1</h2>
<section id="기본적인-명명법" class="level3" data-number="1.1.1">
<h3 data-number="1.1.1" class="anchored" data-anchor-id="기본적인-명명법"><span class="header-section-number">1.1.1</span> 기본적인 명명법</h3>
<p>함수나 변수(Variables)를 명명할 때는 아래의 규칙을 따르는 것이 좋습니다.</p>
<section id="변수-함수-메소드-모듈" class="level4" data-number="1.1.1.1">
<h4 data-number="1.1.1.1" class="anchored" data-anchor-id="변수-함수-메소드-모듈"><span class="header-section-number">1.1.1.1</span> 변수, 함수, 메소드, 모듈</h4>
<p>소문자만 사용하고 필요에 따라 언더스코어(<code>_</code>)로 단어를 구분하는 스네이크 표기법을 따르세요. 읽는 사람이 쉽게 이해할 수 있도록 하는 것이 중요합니다. 예를 들어 <code>test_set</code>이 있습니다.</p>
</section>
<section id="클래스명" class="level4" data-number="1.1.1.2">
<h4 data-number="1.1.1.2" class="anchored" data-anchor-id="클래스명"><span class="header-section-number">1.1.1.2</span> 클래스명</h4>
<p>클래스의 이름은 첫 글자를 대문자로 작성하고, 단어는 언더스코어가 아닌 대문자로 구별합니다. 예시로 <code>ClassAll</code>이 있습니다.</p>
<section id="클래스-내에서만-사용되는-프라이빗-변수" class="level5" data-number="1.1.1.2.1">
<h5 data-number="1.1.1.2.1" class="anchored" data-anchor-id="클래스-내에서만-사용되는-프라이빗-변수"><span class="header-section-number">1.1.1.2.1</span> 클래스 내에서만 사용되는 프라이빗 변수</h5>
<p>변수명 맨 앞에 언더스코어를 붙여야 합니다. 예를 들어 <code>_single_leading_underscores</code>가 있습니다. 클래스 내에서만 사용되는 프라이빗 메소드 또한 메소드명 앞에 언더스코어를 붙입니다. 예시로 <code>_single_leading_underscore(self, ...)</code>가 있습니다.</p>
</section>
</section>
<section id="상수-constants" class="level4" data-number="1.1.1.3">
<h4 data-number="1.1.1.3" class="anchored" data-anchor-id="상수-constants"><span class="header-section-number">1.1.1.3</span> 상수 (Constants)</h4>
<p>상수는 값이 변하지 않으므로 대문자만 사용하여 명명합니다. 단어들은 언더스코어(<code>_</code>)로 구분합니다. 예시로 <code>ALL_CAPS_WITH_UNDERSCORES</code>가 있습니다.</p>
</section>
<section id="패키지명" class="level4" data-number="1.1.1.4">
<h4 data-number="1.1.1.4" class="anchored" data-anchor-id="패키지명"><span class="header-section-number">1.1.1.4</span> 패키지명</h4>
<p>패키지명은 소문자만 사용해야 합니다. 예시로 <code>lowers</code>가 있습니다.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>함수와 메소드의 차이점: 함수는 클래스 안에 독립적으로 존재하며, 메소드는 클래스 내에 있는 함수를 의미합니다.</li>
<li>모듈과 패키지: 패키지는 가장 상위 레벨이며, 모듈은 패키지 내의 파일을 의미합니다. 예를 들어 <code>sklearn</code>은 패키지이고, <code>sklearn.linear_model</code>은 모듈입니다.</li>
</ul>
</div>
</div>
</section>
<section id="명명법-1-장황한-부분-제거하기" class="level4" data-number="1.1.1.5">
<h4 data-number="1.1.1.5" class="anchored" data-anchor-id="명명법-1-장황한-부분-제거하기"><span class="header-section-number">1.1.1.5</span> 명명법 1: 장황한 부분 제거하기</h4>
<p>클래스의 메소드 이름에는 클래스명이 반복되어서는 안 됩니다. 예를 들어 <code>class_1.class_1_max_length = 10</code>보다 <code>class_1.max_length = 10</code>이 더 적절합니다. 즉, 미리 <code>클래스명.변수명</code>을 고려하여 명명해야 합니다.</p>
</section>
<section id="라이브러리-import-규칙" class="level4" data-number="1.1.1.6">
<h4 data-number="1.1.1.6" class="anchored" data-anchor-id="라이브러리-import-규칙"><span class="header-section-number">1.1.1.6</span> 라이브러리 import 규칙</h4>
<section id="라이브러리-순서" class="level5" data-number="1.1.1.6.1">
<h5 data-number="1.1.1.6.1" class="anchored" data-anchor-id="라이브러리-순서"><span class="header-section-number">1.1.1.6.1</span> 라이브러리 순서</h5>
<p>외부 클래스나 함수를 <code>import</code>할 때 주의해야 할 점은 다음 세 가지입니다. 첫 번째는 <code>import</code>하는 순서입니다. 아래와 같은 순서로 라이브러리를 불러오세요.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| echo: false</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> 표준라이브러리</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> 서드파티라이브러리</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> 개인적으로_작성한라이브러리</span></code></pre></div>
<p>모듈 단위로 불러오는 것이 좋습니다. 예를 들어 <code>from pkg.module_1 import class_1</code> 대신 <code>from pkg import module_1</code>으로 하고, 이후에 <code>my_class = module_1.class_1()</code>과 같이 코드를 작성합니다.</p>
</section>
<section id="여러-라이브러리를-한-줄에-불러오지-않기" class="level5" data-number="1.1.1.6.2">
<h5 data-number="1.1.1.6.2" class="anchored" data-anchor-id="여러-라이브러리를-한-줄에-불러오지-않기"><span class="header-section-number">1.1.1.6.2</span> 여러 라이브러리를 한 줄에 불러오지 않기</h5>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| echo: false</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pkg, pkg2  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이 경우 아래와 같이 한 줄씩 작성합니다.</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pkg</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pkg2</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그러나 모듈의 경우 한 줄에 여러 개를 가져와도 괜찮습니다.</span></span>
<span id="cb2-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pkg <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> module_1, module_2</span></code></pre></div>
</section>
</section>
</section>
<section id="재현성을-위해-seed-고정하기" class="level3" data-number="1.1.2">
<h3 data-number="1.1.2" class="anchored" data-anchor-id="재현성을-위해-seed-고정하기"><span class="header-section-number">1.1.2</span> 재현성을 위해 seed 고정하기</h3>
<p>데이터 분석의 재현성을 위해 <code>seed</code> 값을 지정하는 것이 좋습니다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb3-5"></span>
<span id="cb3-6">SEED_VALUE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 값은 무엇이든 괜찮습니다.</span></span>
<span id="cb3-7">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PYTHONHASHSEED'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(SEED_VALUE)</span>
<span id="cb3-8">random.seed(SEED_VALUE)</span>
<span id="cb3-9">np.random.seed(SEED_VALUE)</span>
<span id="cb3-10">torch.manual_seed(SEED_VALUE)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PyTorch의 경우</span></span></code></pre></div>
<p><code>PyTorch</code>에서 GPU를 사용해 연산하는 경우에는 아래와 같이 설정해야 합니다. 다만 계산 속도가 떨어지기 때문에 추천하지는 않습니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">torch.backends.cudnn.deterministic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb4-2">torch.backends.cudnn.benchmark <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
<p>Scikit-learn의 경우 각 알고리즘에 <code>seed</code> 값을 정하는 부분이 있습니다. 예를 들어 아래와 같습니다.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LogisticRegression</span>
<span id="cb5-2"></span>
<span id="cb5-3">SEED_VALUE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb5-4">clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LogisticRegression(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SEED_VALUE)</span></code></pre></div>
</section>
</section>
<section id="레벨-2" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="레벨-2"><span class="header-section-number">1.2</span> 레벨 2</h2>
<section id="역방향-변수-명명-reverse-notation" class="level3" data-number="1.2.1">
<h3 data-number="1.2.1" class="anchored" data-anchor-id="역방향-변수-명명-reverse-notation"><span class="header-section-number">1.2.1</span> 역방향 변수 명명 (Reverse Notation)</h3>
<p>예를 들어 <code>a</code>의 길이, <code>b</code>의 길이, <code>c</code>의 길이와 같은 세 가지 변수를 만들고 싶다면, <code>a_length</code>, <code>b_length</code>, <code>c_length</code> 대신 <code>length_a</code>, <code>length_b</code>, <code>length_c</code>로 작성하는 것이 좋습니다. 이렇게 하면 단어의 앞부분이 동일해져 코드가 더 읽기 쉬워집니다. 만약 특정 변수인 <code>a</code>에 더 집중하고 싶다면, <code>a_length</code>, <code>a_width</code>, <code>a_max_length</code>와 같이 작성할 수 있습니다. 주목해야 할 대상을 변수명 앞에 두어 통일성을 유지하는 것이 바람직합니다.</p>
</section>
<section id="solid-원칙-따르기" class="level3" data-number="1.2.2">
<h3 data-number="1.2.2" class="anchored" data-anchor-id="solid-원칙-따르기"><span class="header-section-number">1.2.2</span> SOLID 원칙 따르기</h3>
<p><a href="https://en.wikipedia.org/wiki/SOLID">SOLID</a>는 로버트 마틴이 제안한 소프트웨어 설계 원리입니다. 모든 원리를 알 필요는 없지만, 첫 번째 원칙인 단일 책임 원리(Single Responsibility Principle)는 반드시 기억해야 합니다.</p>
<p>단일 책임 원리는 “함수나 클래스, 메소드는 단 하나의 책임만을 가져야 한다”는 의미입니다. 여기서 “단 하나”의 정의가 다소 모호할 수 있지만, 가능한 한 함수나 클래스, 메소드를 짧게 작성하여 상위 개념 변경에 영향을 받도록 하라는 의미로 이해하면 됩니다.</p>
<p>데이터 사이언티스트나 AI 엔지니어가 수행하는 작업은 보통 “데이터 전처리, 학습, 추론”과 같은 정형화된 흐름으로 진행됩니다. 따라서 구현하는 프로그램도 이러한 순서를 따르게 되며, 하나의 메인 클래스나 메소드가 비대해지고 여러 작업(책무)을 수행하게 되는 경우가 많습니다.</p>
<p>Jupyter Notebook에서 그치는 수준이라면 괜찮지만, 시스템 개발에 데이터 과학이나 AI를 도입하기 위해서는 이러한 상태가 바람직하지 않습니다.</p>
<p>AI 시스템에서 SoE(System of Engagement)의 개발은 SoR(System of Records)와 같이 요구 사항 정의 및 외부/내부 설계를 철저히 하는 워터폴 개발 방식이 아닌 애자일 개발 형태가 많습니다. 애자일 개발에서는 CI(Continuous Integration), 즉 자동 테스트를 실시하는 것이 기본입니다. 따라서 실제로 프로토타입을 만들고 동작을 살펴본 후 개선점을 발견하여 더 나은 결과물을 만드는 것이 목표입니다.</p>
<p>이러한 “개선” 과정에서 단일 클래스나 메소드의 책임이 클수록 수정해야 할 코드의 양도 많아집니다. 수정해야 할 코드가 많으면 영향 범위도 커지고, 새로운 단위 테스트를 작성해야 할 필요성도 증가합니다. 동시에 기존에 작성한 단위 테스트도 대부분 무용지물이 될 수 있습니다.</p>
<p>단위 테스트의 대폭적인 수정이나 변화가 빈번하게 발생하는 상황에서 개발을 진행하면, 단위 테스트를 제대로 수행할 수 없게 되고 시스템 전체의 품질도 저하될 수 있습니다. 또한, 개선을 위한 수정이 예상치 못한 부분에 영향을 미쳐 버그가 발생하기 쉬워집니다.</p>
</section>
<section id="함수와-메소드에-타입-힌트-작성하기" class="level3" data-number="1.2.3">
<h3 data-number="1.2.3" class="anchored" data-anchor-id="함수와-메소드에-타입-힌트-작성하기"><span class="header-section-number">1.2.3</span> 함수와 메소드에 타입 힌트 작성하기</h3>
<p>“SOLID의 S: 단일 책임”을 염두에 두고 함수나 메소드를 분할하면 많은 함수와 메소드가 생성됩니다. 이처럼 많은 함수와 메소드가 존재하면 이해하기 어려워질 수 있습니다. 코드 작성 시에는 괜찮지만, 3개월 후에 수정하거나 다른 사람이 코드를 사용할 때 “이 함수의 인수에는 무엇이 들어 있고, 어떤 것이 출력되는가?”라는 혼란스러운 상황이 발생할 수 있습니다.</p>
<p>따라서 함수를 구현할 때 타입 힌트를 붙이는 것이 좋습니다. 타입 힌트는 아래와 같이 작성할 수 있습니다.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calc_billing_amount(amount: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, price: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb6-2">    billing_amount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> amount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> price</span>
<span id="cb6-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> billing_amount</span></code></pre></div>
<p>인수 변수의 데이터형을 인수명 뒤에 기재하여 알 수 있도록 하고, 함수에서 반환되는 변수의 데이터형도 명시해주면 좋습니다.</p>
<p>타입 힌트는 강제성이 없으며, 위 예제에서 첫 번째 인수인 <code>amount</code>에 <code>int</code>가 아닌 <code>float</code>를 지정하고 <code>calc_billing_amount(0.5, 100)</code>을 실행해도 에러는 발생하지 않습니다.</p>
<p>리스트나 사전형을 사용할 경우 또는 여러 데이터형을 허용하고 싶다면 다음과 같이 작성합니다.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dict, List, Union</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calc_billing_amount(</span>
<span id="cb7-4">    amount_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], price_dictionary: Dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]]</span>
<span id="cb7-5">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb7-6">    billing_amount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb7-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> index, (key, value) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(price_dictionary.items()):</span>
<span id="cb7-8">        billing_amount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> amount_list[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> value</span>
<span id="cb7-9"></span>
<span id="cb7-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(billing_amount)</span></code></pre></div>
<p>타입 힌트를 위해 리스트와 사전형을 사용하려면 <code>from typing import List, Dict, Union</code>으로 임포트합니다. 예를 들어 요소가 <code>int</code>형 리스트인 경우는 <code>List[int]</code>로 기재하고, 키가 <code>string</code>형이며 값이 <code>int</code> 또는 <code>float</code>일 경우는 <code>Dict[str, Union[int, float]]</code>로 작성합니다.</p>
<p>실행하면 605가 출력됩니다.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">amount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span>
<span id="cb8-2">price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"item1"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"item2"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">30.5</span>}</span>
<span id="cb8-3">calc_billing_amount(amount, price)</span></code></pre></div>
<p>타입 힌트를 작성하는 것은 번거롭지만 많은 클래스와 메소드를 파악하기 쉽게 만들어주므로 추천합니다.</p>
</section>
<section id="클래스와-메소드에는-docstring-기재하기" class="level3" data-number="1.2.4">
<h3 data-number="1.2.4" class="anchored" data-anchor-id="클래스와-메소드에는-docstring-기재하기"><span class="header-section-number">1.2.4</span> 클래스와 메소드에는 docstring 기재하기</h3>
<p><code>docstring</code>은 클래스나 메소드, 함수의 사양이나 사용 방법을 설명하는 것입니다. 앞서 언급했듯이 단일 책임 원칙으로 인해 생성된 많은 클래스나 함수를 쉽게 파악하기 어려운 경우가 많습니다. 타입 힌트만으로는 여전히 알기 어렵기 때문에 상세한 설명으로 docstring을 작성하는 것이 좋습니다.</p>
<p>그러나 너무 세세하게 작성하는 것은 번거로운 일이므로 프라이빗 메소드나 행 수가 적은 메소드 등은 한 줄의 docstring으로 충분하다고 생각됩니다. 반면 다른 팀원이 사용하는 클래스나 메소드 또는 AI 시스템에서 중요한 역할을 하는 주요 클래스 등은 상세한 설명이 필요합니다.</p>
<p>docstring 작성 방식은 여러 가지가 있지만 보통은 reStructuredText, Google style 또는 Numpy style이 많이 사용됩니다. 이 세 가지 중 하나를 사용하는 이유는 나중에 Sphinx를 통해 자동으로 문서화할 수 있기 때문입니다. 따라서 Sphinx에서 지원하는 docstring 형식을 채택하는 것이 좋습니다. docstring의 세 가지 종류에 대한 설명은 나중에 기회가 있을 때 다루도록 하겠습니다.</p>
<p>Google style과 Numpy style은 길이가 길어 저는 reStructuredText style을 선호합니다. 예시는 아래와 같습니다.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> User:</span>
<span id="cb9-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""본 시스템을 사용하는 어카운트 유저를 표시하는 클래스이다.</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param name: 유저명</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param user_type: 어카운트 타입 (admin 또는 normal)</span></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb9-6"></span>
<span id="cb9-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, user_type: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb9-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name</span>
<span id="cb9-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> user_type</span>
<span id="cb9-10"></span>
<span id="cb9-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> print_user_type(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb9-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""유저의 타입을 출력한다.</span></span>
<span id="cb9-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        :param None: 입력 인수가 없다.</span></span>
<span id="cb9-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        :return: user_type을 문자열로 출력한다.</span></span>
<span id="cb9-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        :rtype: str</span></span>
<span id="cb9-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb9-17">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_type)</span></code></pre></div>
<p>Example까지 포함하면 매우 유용합니다. 얼마나 자세하게 쓸지는 Example이나 인수 및 반환 값 설명 후 결정하면 됩니다.</p>
<p>위와 같이 적으면 VS Code 등의 에디터에서 해당 프로그램 부분에 마우스를 올리면 docstring이 표시되어 프로그램 이해를 돕습니다.</p>
</section>
<section id="학습-완료-모델과-전처리-및-하이퍼파라미터-정보-저장하기" class="level3" data-number="1.2.5">
<h3 data-number="1.2.5" class="anchored" data-anchor-id="학습-완료-모델과-전처리-및-하이퍼파라미터-정보-저장하기"><span class="header-section-number">1.2.5</span> 학습 완료 모델과 전처리 및 하이퍼파라미터 정보 저장하기</h3>
<p>AI, 머신러닝 및 딥러닝에서는 학습 완료 모델만 저장하는 것이 아니라 전처리 파라미터와 모델 하이퍼파라미터 설정 등 학습 재현에 필요한 모든 정보를 저장해야 합니다.</p>
<p>모든 정보가 포함되어 있으면 어떤 저장 방법을 사용하든 상관없지만 scikit-learn과 PyTorch에서 예시는 다음과 같습니다.</p>
<section id="scikit-learn-예시" class="level4" data-number="1.2.5.1">
<h4 data-number="1.2.5.1" class="anchored" data-anchor-id="scikit-learn-예시"><span class="header-section-number">1.2.5.1</span> Scikit-learn 예시</h4>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime, timedelta, timezone</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb10-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> joblib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dump, load</span>
<span id="cb10-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_iris</span>
<span id="cb10-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LogisticRegression</span>
<span id="cb10-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.pipeline <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Pipeline</span>
<span id="cb10-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PolynomialFeatures, StandardScaler</span>
<span id="cb10-8"></span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># iris 데이터 준비</span></span>
<span id="cb10-10">X, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_iris(return_X_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb10-11"></span>
<span id="cb10-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전처리(표준화 및 제곱항 추가)</span></span>
<span id="cb10-13">preprocess_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pipeline(steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"standard_scaler"</span>, StandardScaler())])</span>
<span id="cb10-14">preprocess_pipeline.steps.append((<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"polynomial_features_2"</span>, PolynomialFeatures(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb10-15"></span>
<span id="cb10-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전처리 적용</span></span>
<span id="cb10-17">X_preprocessed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocess_pipeline.fit_transform(X)</span>
<span id="cb10-18"></span>
<span id="cb10-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습기 준비</span></span>
<span id="cb10-20">C <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 하이퍼파라미터 설정</span></span>
<span id="cb10-21">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LogisticRegression(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>C)</span>
<span id="cb10-22"></span>
<span id="cb10-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습 실시</span></span>
<span id="cb10-24">model.fit(X_preprocessed, y)</span>
<span id="cb10-25"></span>
<span id="cb10-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습 데이터 성능 평가</span></span>
<span id="cb10-27">accuracy_training <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.score(X_preprocessed, y)</span>
<span id="cb10-28"></span>
<span id="cb10-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 저장할 데이터 준비</span></span>
<span id="cb10-30">KST <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> timezone(timedelta(hours<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KST"</span>) </span>
<span id="cb10-31">now <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.now(KST).strftime(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y%m</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_%H%M%S"</span>)</span>
<span id="cb10-32"></span>
<span id="cb10-33">training_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb10-34">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"training_data"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iris"</span>,</span>
<span id="cb10-35">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model_type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LogisticRegression"</span>,</span>
<span id="cb10-36">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyper_param_logreg_C"</span>: C,</span>
<span id="cb10-37">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"accuracy_training"</span>: accuracy_training,</span>
<span id="cb10-38">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"save_date"</span>: now,</span>
<span id="cb10-39">}</span>
<span id="cb10-40"></span>
<span id="cb10-41">save_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb10-42">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"preprocess_pipeline"</span>: preprocess_pipeline,</span>
<span id="cb10-43">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trained_model"</span>: model,</span>
<span id="cb10-44">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"training_info"</span>: training_info,</span>
<span id="cb10-45">}</span>
<span id="cb10-46">filename <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./iris_model_"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> now <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".joblib"</span></span>
<span id="cb10-47"></span>
<span id="cb10-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 저장</span></span>
<span id="cb10-49">dump(save_data, filename)</span></code></pre></div>
<p>저장한 파일을 불러올 경우 아래와 같이 작성합니다.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">load_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load(filename)</span>
<span id="cb11-2"></span>
<span id="cb11-3">preprocess_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"preprocess_pipeline"</span>]</span>
<span id="cb11-4">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trained_model"</span>]</span>
<span id="cb11-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(load_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"training_info"</span>])</span></code></pre></div>
<p>위 코드의 출력은 다음과 같습니다.</p>
<pre><code>{'training_data': 'iris', 'model_type': 'LogisticRegression', 'hyper_param_logreg_C': 1.2, 'accuracy_training': 0.9866666666666667, 'save_date': '20200503_205145'}</code></pre>
</section>
<section id="pytorch-예시" class="level4" data-number="1.2.5.2">
<h4 data-number="1.2.5.2" class="anchored" data-anchor-id="pytorch-예시"><span class="header-section-number">1.2.5.2</span> PyTorch 예시</h4>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">PATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./checkpoint_'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(epoch) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.pt'</span></span>
<span id="cb13-2"></span>
<span id="cb13-3">torch.save({</span>
<span id="cb13-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'epoch'</span>: epoch,</span>
<span id="cb13-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'total_epoch'</span>: total_epoch,</span>
<span id="cb13-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'model_state_dict'</span>: model.state_dict(),</span>
<span id="cb13-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scheduler_state_dict'</span>: scheduler.state_dict(),</span>
<span id="cb13-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'optimizer_state_dict'</span>: optimizer.state_dict(),</span>
<span id="cb13-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss_train'</span>: loss_train,</span>
<span id="cb13-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss_eval'</span>: loss_eval,</span>
<span id="cb13-11">}, PATH)</span></code></pre></div>
<p>모델을 불러오는 경우 예제 코드는 다음과 같습니다.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TheModelClass()</span>
<span id="cb14-2">scheduler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TheSchedulerClass()</span>
<span id="cb14-3">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TheOptimizerClass()</span>
<span id="cb14-4"></span>
<span id="cb14-5">checkpoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.load(PATH)</span>
<span id="cb14-6">model.load_state_dict(checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'model_state_dict'</span>])</span>
<span id="cb14-7">scheduler.load_state_dict(checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scheduler_state_dict'</span>])</span>
<span id="cb14-8">optimizer.load_state_dict(checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'optimizer_state_dict'</span>])</span>
<span id="cb14-9">total_epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'total_epoch'</span>]</span>
<span id="cb14-10">epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'epoch'</span>]</span>
<span id="cb14-11">loss_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss_train'</span>]</span>
<span id="cb14-12">loss_eval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss_eval'</span>]</span>
<span id="cb14-13"></span>
<span id="cb14-14">model.train()</span>
<span id="cb14-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># model.eval()</span></span></code></pre></div>
<p>딥러닝의 데이터 세트와 데이터 로더까지 체크포인트로 저장하면 파일 크기가 너무 커지므로 별도로 저장하는 것을 추천합니다.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 세트 및 데이터 로더 저장</span></span>
<span id="cb15-2">torch.save(trainset, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./trainset.pt'</span>)</span>
<span id="cb15-3">torch.save(trainloader, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./dataloader.pt'</span>)</span></code></pre></div>
<p>다시 불러오는 코드는 다음과 같습니다.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">trainset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./trainset.pt'</span>)</span>
<span id="cb16-2">trainloader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./dataloader.pt'</span>)</span></code></pre></div>
</section>
</section>
</section>
<section id="레벨-3" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="레벨-3"><span class="header-section-number">1.3</span> 레벨 3</h2>
<section id="적절한-영어-단어와-품사로-명명하기" class="level3" data-number="1.3.1">
<h3 data-number="1.3.1" class="anchored" data-anchor-id="적절한-영어-단어와-품사로-명명하기"><span class="header-section-number">1.3.1</span> 적절한 영어 단어와 품사로 명명하기</h3>
<p>클래스, 메소드, 함수를 많이 만들수록 명명 규칙이 더욱 중요해집니다. 이상적으로는 이름만 보고도 “어떤 처리를 하고 있는가? 즉, 어떤 기능을 수행하며, 어떤 입력을 받고 어떤 출력을 하는가?”를 알 수 있어야 합니다.</p>
<p>하지만 데이터 사이언스나 AI 분야에서는 알고리즘 자체가 복잡하기 때문에, 처음 보는 사람이 주석 없이 클래스나 메소드를 이해하기는 어렵습니다. 따라서 명명 방법은 가능한 한 의도를 명확히 전달하는 것을 목표로 해야 합니다.</p>
<p>지켜야 할 최소한의 규칙은 다음과 같습니다:</p>
<ol type="1">
<li>클래스명과 변수명은 명사로 작성합니다.</li>
<li>메소드와 함수의 이름은 동사로 시작합니다.</li>
<li>멤버 변수의 <code>boolean</code> 형은 동사로 시작하는 것이 좋습니다. 예) <code>is_admin</code>, <code>has_item</code>, <code>can_drive</code> 등</li>
<li>코딩 규칙을 준수합니다.</li>
</ol>
</section>
<section id="적절한-예외-처리-구현하기" class="level3" data-number="1.3.2">
<h3 data-number="1.3.2" class="anchored" data-anchor-id="적절한-예외-처리-구현하기"><span class="header-section-number">1.3.2</span> 적절한 예외 처리 구현하기</h3>
<p>에러(예외)에 대한 <code>try-catch</code> 구문은 데이터 사이언티스트와 AI 엔지니어에게 매우 중요한 부분입니다. AI를 시스템에 구현할 때는 에러 핸들링이 필수적입니다. 예외가 발생하면 시스템 전체가 중단될 수 있기 때문입니다.</p>
<p>따라서 구현 코드에서 <code>try</code> 블록이 상위 레벨에 위치하도록 하여, 코드가 <code>try:</code> 블록 안에 들어가지 않도록 해야 합니다. 아래 예제를 살펴보겠습니다.</p>
<p>예를 들어 나눗셈 함수를 정의할 때:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_division(a, b):</span>
<span id="cb17-2">    ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> b</span>
<span id="cb17-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span></code></pre></div>
<p>위 함수에 <code>func_division(10, 0)</code>과 같이 입력하면 에러가 발생하여 프로그램이 중단됩니다. 따라서 예외 처리를 추가해야 합니다.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_division(a, b):</span>
<span id="cb18-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb18-3">        ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> b</span>
<span id="cb18-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span>
<span id="cb18-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span>:</span>
<span id="cb18-6">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"예외가 발생했습니다."</span>)</span></code></pre></div>
<p>그러나 이것만으로는 충분하지 않습니다. 발생할 수 있는 예외를 구체적으로 처리해야 합니다.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_division(a, b):</span>
<span id="cb19-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb19-3">        ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> b</span>
<span id="cb19-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span>
<span id="cb19-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ZeroDivisionError</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> err:</span>
<span id="cb19-6">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0으로 나누는 에러가 발생했습니다:'</span>, err)</span>
<span id="cb19-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> err:</span>
<span id="cb19-8">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"예기치 못한 에러가 발생했습니다:"</span>, err)</span></code></pre></div>
<p>이제 이전에 발생했던 <code>ans = func_division(10, 0)</code>을 다시 실행하면 “0으로 나누는 에러가 발생했습니다: division by zero”라는 메시지가 출력됩니다. 또한 <code>ans = func_division("hoge", "fuga")</code>를 실행하면 숫자가 아니므로 또 다른 에러가 발생합니다.</p>
</section>
<section id="적절하게-로그-출력하기" class="level3" data-number="1.3.3">
<h3 data-number="1.3.3" class="anchored" data-anchor-id="적절하게-로그-출력하기"><span class="header-section-number">1.3.3</span> 적절하게 로그 출력하기</h3>
<p>코드의 작동을 확인하기 위해 <code>print</code> 문을 사용하는 습관은 좋지 않습니다. 대신 적절한 로그를 출력하도록 작성해야 합니다. 로그 사용법은 다음과 같습니다.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> logging</span>
<span id="cb20-2"></span>
<span id="cb20-3">logger <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> logging.getLogger(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span>)</span>
<span id="cb20-4"></span>
<span id="cb20-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그에 기록할 내용</span></span>
<span id="cb20-6">total_epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb20-7">epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb20-8">loss_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.44444</span></span>
<span id="cb20-9"></span>
<span id="cb20-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그 리스트 생성</span></span>
<span id="cb20-11">log_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [total_epoch, epoch, loss_train]</span>
<span id="cb20-12"></span>
<span id="cb20-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그 기록</span></span>
<span id="cb20-14">logger.info(</span>
<span id="cb20-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"total_epoch: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0[0]}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, epoch: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0[1]}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, loss_train: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0[2]:.2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(log_list)</span>
<span id="cb20-16">)</span>
<span id="cb20-17"></span>
<span id="cb20-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기록된 내용을 출력하여 확인</span></span>
<span id="cb20-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"total_epoch: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0[0]}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, epoch: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0[1]}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, loss_train: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0[2]:.2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(log_list))</span></code></pre></div>
<p>저장된 로그를 <code>print</code> 문으로 확인하면 다음과 같이 출력됩니다.</p>
<pre><code>total_epoch: 1000, epoch: 100, loss_train: 5.44</code></pre>
<p>여기서 <code>{0:.2f}</code>는 <code>.format</code>으로 받은 리스트의 두 번째 요소를 소수점 두 자리까지 표시하는 것을 의미합니다. 로그 작성에 대한 자세한 내용은 <a href="https://docs.python.org/ko/3/howto/logging.html">공식 문서</a>를 참고하세요.</p>
<p>파이썬 3.8 이상을 사용하는 경우 <code>f-string</code>을 사용하여 다음과 같이 작성할 수 있습니다.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그에 기록할 값 설정</span></span>
<span id="cb22-2">total_epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb22-3">epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb22-4">loss_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.44444</span></span>
<span id="cb22-5"></span>
<span id="cb22-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그 기록</span></span>
<span id="cb22-7">logger.info(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>total_epoch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>epoch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, loss_train: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>loss_train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</section>
<section id="함수와-메소드의-인수는-3개-이하로-제한하기" class="level3" data-number="1.3.4">
<h3 data-number="1.3.4" class="anchored" data-anchor-id="함수와-메소드의-인수는-3개-이하로-제한하기"><span class="header-section-number">1.3.4</span> 함수와 메소드의 인수는 3개 이하로 제한하기</h3>
<p>함수나 메소드의 인수는 많아도 최대 3개까지로 제한하는 것이 좋습니다. 4개 이상의 인수는 피하는 것이 바람직합니다. 인수가 많으면 해당 함수의 사용법을 이해하기 어려워지고, 단위 테스트 준비나 관리도 복잡해집니다.</p>
<p>많은 인수를 다루고 싶다면 사전형 변수를 사용하여 <code>hogehoge_config</code>와 같은 형태로 하나의 사전 변수를 전달하는 방법이 있습니다.</p>
<p>예를 들어 복잡한 계산 함수를 정의할 때:</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_many_calculation(a, b, c, d, e):</span>
<span id="cb23-2">    ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> e</span>
<span id="cb23-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span></code></pre></div>
<p>위 함수는 <code>ans = func_many_calculation(10, 2, 3, 5, 2)</code>와 같이 사용하면 인수가 많아 다루기 불편하고 오류가 발생할 가능성이 높습니다. 따라서 다음과 같이 사전형으로 정의하는 것이 좋습니다.</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_many_calculation(func_config):</span>
<span id="cb24-2">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func_config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>]</span>
<span id="cb24-3">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func_config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>]</span>
<span id="cb24-4">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func_config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>]</span>
<span id="cb24-5">    d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func_config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d"</span>]</span>
<span id="cb24-6">    e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func_config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"e"</span>]</span>
<span id="cb24-7">    ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> e</span>
<span id="cb24-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span></code></pre></div>
<p>이렇게 하면 <code>func_config = {"a": 10,"b": 2,"c": 3,"d": 5,"e": 2}</code>를 대입하여 <code>ans = func_many_calculation(func_config)</code>를 실행할 수 있습니다.</p>
<p>그러나 이러한 방식은 함수 정의를 더욱 복잡하게 만들 수 있으므로, 함수 정의 부분에서는 인수를 보통대로 작성하고 실행하는 부분에서는 인수를 적게 사용하는 것이 좋습니다.</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_many_calculation(a, b, c, d, e):</span>
<span id="cb25-2">    ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> e</span>
<span id="cb25-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span>
<span id="cb25-4"></span>
<span id="cb25-5">func_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"e"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>}</span>
<span id="cb25-6">ans <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func_many_calculation(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>func_config)</span></code></pre></div>
</section>
<section id="args-kwargs-를-적절히-사용하기" class="level3" data-number="1.3.5">
<h3 data-number="1.3.5" class="anchored" data-anchor-id="args-kwargs-를-적절히-사용하기"><span class="header-section-number">1.3.5</span> *args, **kwargs 를 적절히 사용하기</h3>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><code>args</code>는 <code>arguments</code>, <code>kwargs</code>는 <code>keyword arguments</code>의 약어입니다.</p>
</div>
</div>
<p><code>*args</code>와 <code>**kwargs</code>는 가변 길이 인수를 나타냅니다. 여기서 <code>*</code>는 리스트 변수의 언팩(unpacking) 조작이며, <code>**</code>는 사전형 변수의 언팩 조작입니다. 가변 길이 인수를 사용하는 이유는 크게 세 가지입니다.</p>
<p>첫 번째 이유는 함수의 인수에 여분의 값을 받아들이기 위해서입니다. 예를 들어 아래 함수를 실행하면 <code>func_args_kwargs2(10, 20, 30)</code>의 출력이 10이 되어 에러 없이 실행됩니다.</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_args_kwargs2(a, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args):</span>
<span id="cb26-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a)</span></code></pre></div>
<p>두 번째 이유는 함수를 확장하여 인수를 나중에 추가하고 싶을 때입니다. 이 경우 <code>*args</code>로 받으면 함수 본체나 인수 정의 부분을 수정할 필요가 없습니다.</p>
<p>세 번째 이유는 함수나 메소드를 실행할 때 선택적으로 전달할 수 있는 인수를 받아들이기 위해서입니다. 이때에는 기본값을 설정해 두어야 합니다. 예를 들어 다음과 같이 작성할 수 있습니다.</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_args_kwargs3(a, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb27-2">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kwargs.pop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>)</span>
<span id="cb27-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b)</span></code></pre></div>
<p>이렇게 하면 기본값을 설정하면서도 가변 길이 인수를 사용할 수 있습니다.</p>
</section>
</section>
<section id="레벨-4" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="레벨-4"><span class="header-section-number">1.4</span> 레벨 4</h2>
<section id="if-문을-간결하게-작성하기" class="level3" data-number="1.4.1">
<h3 data-number="1.4.1" class="anchored" data-anchor-id="if-문을-간결하게-작성하기"><span class="header-section-number">1.4.1</span> if 문을 간결하게 작성하기</h3>
<p>파이썬에서는 <code>if</code> 문을 한 줄로 작성할 수 있습니다.</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 짝수인지 홀수인지 판별</span></span>
<span id="cb28-2">num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb28-3"></span>
<span id="cb28-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb28-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"짝수"</span>)</span>
<span id="cb28-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb28-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"홀수"</span>)</span></code></pre></div>
<p>위 코드는 다음과 같이 간단하게 표현할 수 있습니다.</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 짝수인지 홀수인지 판별</span></span>
<span id="cb29-2">num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb29-3"></span>
<span id="cb29-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"짝수"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"홀수"</span>)</span></code></pre></div>
</section>
<section id="sklearn-규격에-맞춰-전처리-및-모델-클래스-구현하기" class="level3" data-number="1.4.2">
<h3 data-number="1.4.2" class="anchored" data-anchor-id="sklearn-규격에-맞춰-전처리-및-모델-클래스-구현하기"><span class="header-section-number">1.4.2</span> sklearn 규격에 맞춰 전처리 및 모델 클래스 구현하기</h3>
<p>sklearn 규격이란 <code>scikit-learn</code>의 <code>BaseEstimator</code>, <code>TransformerMixin</code>, <code>ClassifierMixin</code> 등을 상속받아, scikit-learn의 다른 객체와 함께 사용될 수 있도록 구현된 클래스를 의미합니다. 자신이 만든 전처리 클래스나 모델을 sklearn 규격으로 만들면, scikit-learn의 <code>Pipeline</code>과 함께 사용할 수 있어 매우 편리합니다.</p>
<p>예를 들어, 전처리 클래스를 구현할 때는 <code>TransformerMixin</code>과 <code>BaseEstimator</code>를 상속합니다.</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.base <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BaseEstimator, TransformerMixin</span>
<span id="cb30-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.utils.validation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> check_array, check_is_fitted</span>
<span id="cb30-3"></span>
<span id="cb30-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> TemplateTransformer(TransformerMixin, BaseEstimator):</span>
<span id="cb30-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, demo_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo'</span>):</span>
<span id="cb30-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.demo_param <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> demo_param</span>
<span id="cb30-7">        </span>
<span id="cb30-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> fit(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, X, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb30-9">        X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_array(X, accept_sparse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb30-10">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.n_features_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> X.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb30-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span></span>
<span id="cb30-12"></span>
<span id="cb30-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> transform(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, X):</span>
<span id="cb30-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" 인수 X에 전처리를 적용한다. """</span></span>
<span id="cb30-15">        check_is_fitted(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_features_'</span>)</span>
<span id="cb30-16">        X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_array(X, accept_sparse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb30-17">        X_transformed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hogehoge(X)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 여기서 hogehoge는 실제 변환 로직으로 대체해야 합니다.</span></span>
<span id="cb30-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> X_transformed</span></code></pre></div>
<p>모델 클래스는 <code>ClassifierMixin</code>과 <code>BaseEstimator</code>를 상속하여 구현할 수 있습니다.</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.base <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BaseEstimator, ClassifierMixin</span>
<span id="cb31-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.utils.validation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> check_array, check_is_fitted, check_X_y</span>
<span id="cb31-3"></span>
<span id="cb31-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> TemplateClassifier(ClassifierMixin, BaseEstimator):</span>
<span id="cb31-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" 모델 클래스의 예시 """</span></span>
<span id="cb31-6">    </span>
<span id="cb31-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, demo_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo"</span>):</span>
<span id="cb31-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.demo_param <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> demo_param </span>
<span id="cb31-9">        </span>
<span id="cb31-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> fit(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, X, y):</span>
<span id="cb31-11">        X, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_X_y(X, y)</span>
<span id="cb31-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fugafuga <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> piyopiyo(X, y)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># piyopiyo는 모델 학습 로직으로 대체해야 합니다.</span></span>
<span id="cb31-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span></span>
<span id="cb31-14"></span>
<span id="cb31-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> predict(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, X):</span>
<span id="cb31-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" 미지의 데이터 추론 """</span></span>
<span id="cb31-17">        check_is_fitted(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fugafuga"</span>])</span>
<span id="cb31-18">        X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_array(X)</span>
<span id="cb31-19">        y_predicted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fugafuga(X)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 여기서도 추론 로직으로 대체해야 합니다.</span></span>
<span id="cb31-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> y_predicted</span></code></pre></div>
<p>sklearn 규격으로 클래스를 구현할 때는 scikit-learn에서 제공하는 템플릿을 기반으로 변경하는 것을 추천합니다.</p>
</section>
<section id="데코레이터를-적절히-활용하기" class="level3" data-number="1.4.3">
<h3 data-number="1.4.3" class="anchored" data-anchor-id="데코레이터를-적절히-활용하기"><span class="header-section-number">1.4.3</span> 데코레이터를 적절히 활용하기</h3>
<p>데코레이터는 <code>@hogehoge</code>와 같은 형태로 주로 메소드나 함수 위에서 사용됩니다. 파이썬에는 표준 데코레이터와 사용자 정의 데코레이터가 있습니다. 자주 사용되는 표준 데코레이터로는 <code>@property</code>, <code>@staticmethod</code>, <code>@classmethod</code>, <code>@abstractmethod</code> 등이 있습니다. 하나씩 살펴보겠습니다.</p>
<section id="property" class="level4" data-number="1.4.3.1">
<h4 data-number="1.4.3.1" class="anchored" data-anchor-id="property"><span class="header-section-number">1.4.3.1</span> <span class="citation" data-cites="property">@property</span></h4>
<p><code>@property</code>는 클래스 외부에서 해당 멤버 변수를 변경할 수 없도록 만드는 데코레이터입니다.</p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> User:</span>
<span id="cb32-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, user_type: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb32-3">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name</span>
<span id="cb32-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.__user_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> user_type</span>
<span id="cb32-5"></span>
<span id="cb32-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@property</span></span>
<span id="cb32-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> user_type(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb32-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.__user_type</span></code></pre></div>
<p>위의 예에서 <code>User</code> 클래스의 <code>user_type</code>은 <code>@property</code>로 정의되어 있습니다. 따라서 <code>taro = User("taro", "admin")</code> 후에 <code>print(taro.user_type)</code>를 실행하면 “admin”이 출력됩니다. 그러나 <code>taro.user_type = "normal"</code>과 같이 변경하려고 하면 에러가 발생합니다. 이렇게 외부에서 변경할 수 없는 변수를 정의할 수 있습니다.</p>
</section>
<section id="staticmethod-및-classmethod" class="level4" data-number="1.4.3.2">
<h4 data-number="1.4.3.2" class="anchored" data-anchor-id="staticmethod-및-classmethod"><span class="header-section-number">1.4.3.2</span> <span class="citation" data-cites="staticmethod">@staticmethod</span> 및 <span class="citation" data-cites="classmethod">@classmethod</span></h4>
<p><code>@staticmethod</code>와 <code>@classmethod</code>는 객체를 생성하지 않고도 메소드를 호출할 수 있게 해줍니다.</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> User:</span>
<span id="cb33-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, user_type: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb33-3">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name</span>
<span id="cb33-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> user_type</span>
<span id="cb33-5"></span>
<span id="cb33-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@staticmethod</span></span>
<span id="cb33-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> say_hello(name):</span>
<span id="cb33-8">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> name)</span></code></pre></div>
<p>위와 같이 정의한 후 아래와 같이 실행하면 “Hello Hanako”가 출력됩니다.</p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">User.say_hello(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hanako"</span>)</span></code></pre></div>
</section>
<section id="abstractmethod" class="level4" data-number="1.4.3.3">
<h4 data-number="1.4.3.3" class="anchored" data-anchor-id="abstractmethod"><span class="header-section-number">1.4.3.3</span> <span class="citation" data-cites="abstractmethod">@abstractmethod</span></h4>
<p>다른 표준 Python 데코레이터인 <code>@abstractmethod</code>는 클래스의 메소드에 붙여 사용하며, 해당 클래스를 상속받은 자식 클래스에서 반드시 그 메소드를 구현해야 합니다. 구현하지 않으면 에러가 발생합니다. 즉, 추상 클래스를 정의하고 자식 클래스에서 메소드 구현을 강제하고 싶을 때 사용합니다.</p>
</section>
<section id="사용자-정의-데코레이터" class="level4" data-number="1.4.3.4">
<h4 data-number="1.4.3.4" class="anchored" data-anchor-id="사용자-정의-데코레이터"><span class="header-section-number">1.4.3.4</span> 사용자 정의 데코레이터</h4>
<p>사용자 정의 데코레이터를 통해 특정 조건을 만족하는 경우에만 메소드를 실행하도록 할 수 있습니다. 예를 들어, 사용자가 ’admin’일 때만 특정 작업을 수행하도록 하는 경우입니다.</p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> admin_only(func):</span>
<span id="cb35-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""데코레이터 정의"""</span></span>
<span id="cb35-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> wrapper(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb35-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"admin"</span>:</span>
<span id="cb35-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> func(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb35-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb35-7">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"권한 오류: 이 기능은 admin만 사용할 수 있습니다."</span>)</span>
<span id="cb35-8">    </span>
<span id="cb35-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> wrapper</span>
<span id="cb35-10"></span>
<span id="cb35-11"></span>
<span id="cb35-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> User:</span>
<span id="cb35-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, user_type: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb35-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name</span>
<span id="cb35-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> user_type</span>
<span id="cb35-16"></span>
<span id="cb35-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@admin_only</span></span>
<span id="cb35-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_admin_can_do(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb35-19">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I'm admin."</span>)</span></code></pre></div>
<p>이렇게 정의하면 <code>@admin_only</code> 데코레이터를 붙이는 것만으로 사용자가 ‘admin’인 경우에만 처리가 실행됩니다. ’admin’ 여부를 판단하는 로직이 여러 메소드에 필요하거나 동일한 코드를 반복 작성해야 하는 경우에 데코레이터가 특히 유용합니다.</p>
</section>
<section id="데코레이터-사용의-이점" class="level4" data-number="1.4.3.5">
<h4 data-number="1.4.3.5" class="anchored" data-anchor-id="데코레이터-사용의-이점"><span class="header-section-number">1.4.3.5</span> 데코레이터 사용의 이점</h4>
<p>데코레이터를 사용하면 다음과 같은 이점이 있습니다:</p>
<ol type="1">
<li>코드 중복을 줄일 수 있습니다.</li>
<li>권한 체크 로직을 한 곳에서 관리할 수 있어 유지보수가 쉬워집니다.</li>
<li>메소드의 본래 기능과 권한 체크 로직을 분리하여 코드의 가독성을 향상시킬 수 있습니다.</li>
<li>새로운 admin 전용 메소드를 추가할 때 데코레이터만 붙이면 되므로 개발 효율성이 높아집니다.</li>
</ol>
</section>
</section>
</section>
<section id="마치며" class="level2" data-number="1.5">
<h2 data-number="1.5" class="anchored" data-anchor-id="마치며"><span class="header-section-number">1.5</span> 마치며</h2>
<p>이 글에서는 데이터 사이언티스트와 AI 엔지니어가 Python을 활용하여 효율적으로 작업할 수 있는 다양한 방법과 유용한 팁을 소개했습니다. 마지막으로 이 글이 여러분의 프로그래밍 여정에 작은 도움이 되기를 바라며 앞으로도 지속적인 학습과 개선을 통해 더 나은 개발자가 되시길 응원합니다. 읽어 주셔서 감사합니다.</p>
</section>
</section>
<section id="타입-힌팅" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 타입 힌팅</h1>
<section id="변수" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="변수"><span class="header-section-number">2.1</span> 변수</h2>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">age: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb36-2"></span>
<span id="cb36-3">child: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span></span>
<span id="cb36-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>:</span>
<span id="cb36-5">    child <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb36-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb36-7">    child <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
</section>
<section id="유용한-내부-타입" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="유용한-내부-타입"><span class="header-section-number">2.2</span> 유용한 내부 타입</h2>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb37-2">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span></span>
<span id="cb37-3">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb37-4">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span></span>
<span id="cb37-5">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bytes</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b"test"</span></span>
<span id="cb37-6">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb37-7">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>}</span>
<span id="cb37-8">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"field"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>}</span></code></pre></div>
</section>
<section id="함수" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="함수"><span class="header-section-number">2.3</span> 함수</h2>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Callable, Iteractor, Union, Optional</span>
<span id="cb38-2"></span>
<span id="cb38-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> stringfy(num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb38-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(num)</span>
<span id="cb38-5"></span>
<span id="cb38-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plus(num1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb38-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num2</span></code></pre></div>
</section>
<section id="객체-지향-프로그래밍" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="객체-지향-프로그래밍"><span class="header-section-number">2.4</span> 객체 지향 프로그래밍</h2>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Union</span>
<span id="cb39-2"></span>
<span id="cb39-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Calculator:</span>
<span id="cb39-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb39-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb39-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, a: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>], b: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]:</span>
<span id="cb39-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="cb39-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result</span>
<span id="cb39-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> subtract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, a: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>], b: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]:</span>
<span id="cb39-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b</span>
<span id="cb39-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result</span>
<span id="cb39-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> multiply(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, a: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>], b: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]:</span>
<span id="cb39-13">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b</span>
<span id="cb39-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result</span>
<span id="cb39-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> devide(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, a: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>], b: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]:</span>
<span id="cb39-16">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> b</span>
<span id="cb39-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result</span></code></pre></div>
</section>
</section>
<section id="기타" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 기타</h1>
<section id="jupyter에서-사용하지-않는-커널-삭제" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="jupyter에서-사용하지-않는-커널-삭제"><span class="header-section-number">3.1</span> Jupyter에서 사용하지 않는 커널 삭제</h2>
<section id="커널-리스트-확인" class="level3" data-number="3.1.1">
<h3 data-number="3.1.1" class="anchored" data-anchor-id="커널-리스트-확인"><span class="header-section-number">3.1.1</span> 커널 리스트 확인</h3>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb40-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jupyter</span> kernelspec list</span></code></pre></div>
</section>
<section id="커널-삭제" class="level3" data-number="3.1.2">
<h3 data-number="3.1.2" class="anchored" data-anchor-id="커널-삭제"><span class="header-section-number">3.1.2</span> 커널 삭제</h3>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb41-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jupyter</span> kernelspec uninstall&nbsp;<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">unwanted_kernel_name</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
</section>
</section>
<section id="api-키-안전하게-사용하기" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="api-키-안전하게-사용하기"><span class="header-section-number">3.2</span> API 키 안전하게 사용하기</h2>
<section id="python-dotenv-사용1" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="python-dotenv-사용1"><span class="header-section-number">3.2.1</span> python-dotenv 사용<sup>1</sup></h3>
<p>API 토큰을 변수에 담아서 사용하는 것은 보안상 좋지 않은 방법이다. 여러가지 우회방법이 있지만 가장 유명한것은 아무래도 <code>python-dotenv</code>를 사용하는 방법이다.</p>
<section id="설치" class="level4" data-number="3.2.1.1">
<h4 data-number="3.2.1.1" class="anchored" data-anchor-id="설치"><span class="header-section-number">3.2.1.1</span> 설치</h4>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb42-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">venv</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> pip install python-dotenv</span></code></pre></div>
</section>
<section id="env-파일-만들기" class="level4" data-number="3.2.1.2">
<h4 data-number="3.2.1.2" class="anchored" data-anchor-id="env-파일-만들기"><span class="header-section-number">3.2.1.2</span> .env 파일 만들기</h4>
<p>설치가 끝나면&nbsp;<code>.env</code>&nbsp;파일을 작성해준다. 문자열이더라도 따옴표는 안 붙여도 된다. 파일 경로는 아무데나 저장해도 상관없는데 보통 프로젝트 루트 디렉토리에 저장한다. 프로젝트 루트 폴더에 <code>.env</code>를 만들고 아래와 같이 API 토큰을 입력한다.</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb43-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">HK_TOKEN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hf_cTKyTsXtqSHWyXPLAuxSIGECiIctuNsBona</span></code></pre></div>
</section>
<section id="gitignore-파일에-예외처리" class="level4" data-number="3.2.1.3">
<h4 data-number="3.2.1.3" class="anchored" data-anchor-id="gitignore-파일에-예외처리"><span class="header-section-number">3.2.1.3</span> .gitignore 파일에 예외처리</h4>
<p>일반적으로는 이미 명시되어 있겠지만 노파심에 한번 <code>.gitignore</code>파일에 아래 내용이 있는지 확인합니다.</p>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb44-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dotenv environment variable files</span></span>
<span id="cb44-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.env</span></span>
<span id="cb44-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.env.development.local</span></span>
<span id="cb44-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.env.test.local</span></span>
<span id="cb44-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.env.production.local</span></span>
<span id="cb44-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.env.local</span></span></code></pre></div>
</section>
<section id="코드-예시" class="level4" data-number="3.2.1.4">
<h4 data-number="3.2.1.4" class="anchored" data-anchor-id="코드-예시"><span class="header-section-number">3.2.1.4</span> 코드 예시</h4>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb45-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dotenv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dotenv</span>
<span id="cb45-3"></span>
<span id="cb45-4">load_dotenv(verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb45-5">TOKEN <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HK_TOKEN'</span>)</span>
<span id="cb45-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(TOKEN)</span></code></pre></div>
<p><code>load_dotenv()</code>&nbsp;함수에 사용되는 변수는 다음과 같다.</p>
<ul>
<li>dotenv_path: .env 파일의 절대경로 및 상대경로</li>
<li>stream: .env 파일 내용에 대한 StringIO 객체</li>
<li>verbose: .env 파일 누락 등의 경고 메시지를 출력할 것인지에 대한 옵션</li>
<li>override: 시스템 환경변수를 .env 파일에 정의한 환경변수가 덮어쓸지에 대한 옵션</li>
</ul>
<hr>
</section>
</section>
</section>
</section>
<section id="reference" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Reference</h1>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><a href="https://pypi.org/project/python-dotenv/">https://pypi.org/project/python-dotenv/</a>↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Tip</category>
  <category>Productivity</category>
  <category>Programming</category>
  <category>Cheatsheet</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Tip_python.html</guid>
  <pubDate>Sat, 21 Dec 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>학술 논문을 효율적으로 읽는 법</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/How_readPaper.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="how_readPaper.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/how_readPaper.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>데이터 과학 분야에서 머신 러닝, 딥 러닝, 새로운 데이터베이스 및 데이터 엔지니어링과 같은 분야에서 사용되는 기술들은 매우 복잡합니다. 게다가 새로운 기술들이 매주 쏟아져 나오고 있어서 최신 동향을 따라잡고 필요한 정보를 얻기 위해서는 꾸준히 논문을 읽고 공부해야 합니다. 다만, 논문을 읽는 것은 쉬운 일이 아닙니다. 왜냐하면 논문은 독자들이 전문적인 지식을 갖추고 있다고 가정하고 쓰여지기 때문입니다. 그러나 논문을 읽는 것은 연습과 노력을 통해 향상될 수 있는 기술로 꾸준한 연습과 학습을 통해 논문을 이해하고 최신 지식을 습득하는 능력을 키워나갈 수 있습니다. 따라서 논문을 읽는 것을 두려워하지 말고 꾸준히 도전하고 연습하여 능력을 향상시켜 나가는 것이 중요합니다.</p>
<section id="논문의-구성" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 논문의 구성</h1>
<p>다행히 대부분의 논문 들은 아래와 같은 형식을 따릅니다<sup>1</sup>:</p>
<ul>
<li>제목: 흥미로운 제목과 함께, 저자와 그들의 소속에 대한 정보가 포함됩니다.</li>
<li>초록: 전체 논문의 요약으로, 주요 내용과 연구의 목적을 간략하게 설명합니다.</li>
<li>서론: 연구의 배경과 기존 연구에 대한 정보를 제공합니다.</li>
<li>방법: 연구 방법과 도구, 과정에 대한 상세한 설명을 담고 있습니다.</li>
<li>결과: 저자가 수집하고 분석한 데이터와 결과를 제시합니다.</li>
<li>토의: 저자가 결과를 해석하고, 자신의 발견과 가설을 설명하며, 독자를 설득합니다.</li>
<li>참고문헌: 본문에서 인용된 다른 논문과 자료들을 나열합니다.</li>
<li>부록: 추가적인 그림, 수학 공식, 또는 흥미로운 보충 자료를 포함합니다.</li>
</ul>
<p>논문의 구성을 파악하고 읽으면 이해하는 것이 한결 수월해 질 것입니다.</p>
</section>
<section id="체계적으로-논문-읽기" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 체계적으로 논문 읽기</h1>
<p>논문에 담긴 정보는 매우 밀도 높고 복잡하기 때문에 논문을 읽을 때 처음부터 끝까지 한 번에 읽으려고 하는 것은 비효율적입니다. 그래서 저는 논문을 읽을 때 다음과 같은 체계적인 접근법을 사용합니다:<sup>2</sup></p>
<ul>
<li>조용하고 편안한 환경을 선택하세요. 좋아하는 음료와 함께 몇 시간 동안 집중할 수 있는 공간을 마련하세요. 요즘에는 멋진 카페에서 작업하는 것도 좋은 방법입니다.</li>
<li>먼저 제목과 초록을 읽으세요. 논문의 전체적인 내용과 저자의 주요 목표, 핵심 결과를 파악하는 것이 목표입니다. 초록은 논문의 목적을 요약한 광고와 같으니 이를 통해 논문의 방향을 이해하세요.</li>
<li>논문을 훑어보며 전체적인 레이아웃과 내용의 위치를 파악하세요. 약 15 분 정도 그림과 키워드를 살펴보며 논문의 구조를 이해합니다.</li>
<li>서론에 집중하세요. 특히 익숙하지 않은 분야의 논문이라면 서론에 더 많은 시간을 할애하세요. 저자들이 제공하는 배경 정보와 참고 문헌을 통해 논문의 맥락을 이해할 수 있습니다.</li>
<li>그림에 특별한 주의를 기울이세요. 저자의 주요 메시지와 정보를 담고 있으므로 그림을 통해 논문의 핵심 내용을 파악하세요.</li>
<li>잠시 휴식을 취하세요. 산책이나 가벼운 간식을 통해 머리를 식히고 다음 단계로 넘어갑니다.</li>
<li>논문을 처음부터 끝까지 읽으세요. 이 단계에서는 상위 수준의 노트를 작성하기 시작합니다. 이해되지 않는 부분이 있더라도 표시만 하고 넘어가세요. 약 1 시간 30 분 정도 논문을 익히고 전반적인 흐름을 이해하는 데 집중합니다.</li>
<li>다시 초록부터 시작하여 서론을 빠르게 훑어보고 방법 섹션을 주의 깊게 읽으세요. 방법 섹션에는 논문의 근거가 되는 세부 정보가 담겨 있으므로 전체적인 이해를 얻는데 주력합니다. 결과와 토론 섹션을 읽으며 주요 결과와 그 결정 과정을 명확히 이해하세요.</li>
<li>다시 잠시 휴식을 취한 후 그림의 세부 사항을 살펴보세요. 방법, 결과, 토론 섹션을 읽으면 그림에서 더 많은 정보를 얻을 수 있을 것입니다. 30 분에서 1 시간 정도 집중해서 보세요.</li>
<li>두 번째로 전체적인 내용을 훑어보세요. 이번에는 매우 비판적인 시각으로 읽습니다. 이 과정은 이해하기 어려웠던 부분에 집중하고, 각 문장과 단어를 정확히 이해하세요.</li>
<li>이제 토론 섹션을 비판적으로 읽으면서 저자의 추론과 논리를 생각해봅니다. 그리고 논문을 읽으며 배운 내용과 제시된 증거를 비교하고 동료에게 질문할 만한 흥미로운 내용을 찾아보세요. 논문의 저자에게 이메일로 질문하는 것도 좋은 방법입니다.</li>
<li>이 시점에서는 논문에 대해 자신 있게 이야기하고 결과를 비판적으로 생각하며 다른 연구와 비교할 수 있어야 합니다. 그리고 내용을 오래 기억하기 위해 논문에 대한 글을 쓰는 것도 도움이 됩니다. 배운 내용과 결과의 중요성을 짧은 문장으로 정리해보세요.</li>
</ul>
</section>
<section id="논문을-읽을-때-생각해야-할-질문들" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 논문을 읽을 때 생각해야 할 질문들</h1>
<p>논문을 읽을 때 다음과 같은 질문들을 스스로에게 던져보면 내용을 더 쉽게 이해할 수 있습니다.</p>
<ol type="1">
<li>이 논문이 어떤 선행 연구나 이론을 바탕으로 작성되었는지 확인하세요. 소개 섹션에서 주로 이전 연구와 이론에 대한 언급을 찾을 수 있습니다. 이를 통해 논문의 맥락과 배경을 이해할 수 있습니다.</li>
<li>연구의 동기와 목적은 무엇인지 명확히 하세요. 저자가 연구를 수행한 이유와 그 중요성을 이해하는 것이 중요합니다. 소개 섹션에서 연구의 목적과 동기를 찾을 수 있습니다.</li>
<li>연구의 구체적인 목적을 나열하고, 각 목적이 어떻게 달성되었는지 살펴보세요.</li>
<li>연구에 사용된 장비, 소프트웨어, 도구 등을 확인하세요. 방법 섹션에서 이러한 정보들을 찾을 수 있습니다.</li>
<li>실험이나 연구 과정에서 어떤 변수들이 측정되었는지 파악하세요. 방법 섹션에서 변수들의 정의와 측정 방법을 확인할 수 있습니다.</li>
<li>통계적 검정이 사용되었다면, 그 결과와 해석을 주의 깊게 살펴보세요. 방법 또는 결과 섹션에서 통계적 검정의 결과와 의미를 이해해야 합니다.</li>
<li>주요 발견과 결과는 무엇인지 정리하세요. 결과 섹션에서 저자가 강조하는 주요 결과들을 파악하고, 그 중요성을 이해하세요.</li>
<li>이러한 결과가 해당 분야의 다른 연구들과 어떻게 연결되고, 어떤 의미를 갖는지 생각해 보세요. 토론 섹션에서 저자가 다른 연구들과의 비교와 해석을 어떻게 하는지 살펴보세요.</li>
<li>각 그림을 자세히 분석하고, 저자가 전달하려는 메시지를 파악하세요. 그림은 논문의 핵심 내용을 시각적으로 표현하므로, 그림을 통해 논문의 주요 내용을 이해할 수 있습니다.</li>
<li>결과의 재현 가능성과 코드의 존재 여부를 확인하세요. 재현 가능성은 연구의 신뢰성과 투명성을 평가하는 데 중요합니다.</li>
<li>논문의 저자, 연도, 제목을 정확히 기록하세요. 이는 논문을 인용하거나 참고할 때 필수적인 정보입니다.</li>
<li>저자 중에 익숙한 사람이 있는지, 그들의 이전 연구나 업적을 알고 있는지 확인하세요. 저자의 전문성과 연구의 맥락을 이해하는 데 도움이 됩니다.</li>
<li>모르는 핵심 용어와 개념이 있다면, 사전이나 교과서를 통해 찾아보거나, 전문가에게 문의하세요. 이해하지 못한 부분은 논문을 읽는 데 장애물이 될 수 있습니다.</li>
<li>결과에 대한 자신의 생각과 평가를 적어보세요. 결과가 타당하고 설득력 있다고 생각하는지, 다른 관점에서 바라볼 수 있는지 생각해 보세요.</li>
</ol>
</section>
<section id="저널-클럽-참여하기" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 저널 클럽 참여하기</h1>
<p>논문을 읽고 토론하는 저널 클럽은 매우 유익한 활동입니다. 동료들과 함께 정기적으로 논문을 토론하면, 서로 다른 관점과 지식을 공유하고, 더 깊은 통찰력을 얻을 수 있기 때문이죠. 매월 1~2 편의 논문을 선택하여 함께 읽고 토론하는 저널 클럽을 시작해 보세요. 논문을 혼자 읽는 것보다 친구들과 함께 읽고 토론하는 것이 훨씬 더 즐겁고 유익한 경험이 될 것입니다. 저널 클럽을 통해 얻는 장점은 다음과 같습니다:</p>
<ul>
<li>다양한 관점과 해석을 공유하고, 논문에 대한 이해를 심화할 수 있습니다.</li>
<li>논문을 읽는 재미와 동기를 부여합니다.</li>
<li>논문에 대한 비판적 사고와 분석 능력을 향상시킬 수 있습니다.</li>
</ul>
</section>
<section id="논문-읽기를-도와주는-도구들" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 논문 읽기를 도와주는 도구들</h1>
<p>다음은 논문 읽기를 도와주는 유용한 도구들과 그 설명입니다.<sup>3</sup> 논문을 읽고 연구하는 과정에서 이러한 도구들을 활용하면, 정보 접근과 관리를 더 효율적으로 할 수 있습니다. 특히 참고문헌 관리자는 특히 많은 논문을 관리하고 읽을 때 큰 도움이 됩니다.</p>
<section id="논문-검색" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="논문-검색"><span class="header-section-number">5.1</span> 논문 검색</h2>
<ul>
<li><a href="https://arxiv.org">arXiv</a>: 주로 과학, 수학, 공학, 컴퓨터 과학, 물리학, 통계학 등 다양한 분야의 논문을 자유롭게 다운로드하고 읽을 수 있습니다.</li>
<li><a href="https://pmc.ncbi.nlm.nih.gov">PubMed</a>: 미국 국립보건원 국립의학도서관 (NIH/NLM) 에서 제공하는 PubMed Central®(PMC) 은 생명과학 및 의학 관련 논문 전문 보관소입니다. PubMed 는 의학 및 생명 과학 분야의 논문을 검색하고 접근하기에 매우 유용한 도구입니다.</li>
<li><a href="https://scholar.google.com">Google Scholar</a>: 구글의 검색 엔진을 활용하여 학술 문헌을 검색하는 도구입니다. 간단한 검색어를 입력하면 다양한 분야의 논문, 학위 논문, 책, 초록 등을 검색할 수 있습니다.</li>
<li><a href="https://sci-hub.ru">Sci-hub</a>: 유료 학술 논문에 무료로 접근할 수 있게 해주는 웹사이트입니다. 저작권 문제로 논란의 여지가 있지만, 많은 연구자들이 이용하고 있습니다.</li>
<li><a href="https://www.smartquantai.com">Sciencehubmutalaid</a>: 연구자들이 서로 논문을 공유하는 사이트로 주로 유료 학술 논문을 위주로 읽고 싶은 논문에 대해서 요청을 하면 권한이 있는 다른 사람이 찾아 주고는 합니다.</li>
<li><a href="https://scispace.com">SCICSPACE</a>: 논문 검색, 요약, 및 시각화 기능을 제공하는 플랫폼으로 LLM 기술을 사용해 문헌 조사 과정을 간소화하고 효율적으로 만듭니다.</li>
</ul>
</section>
<section id="참고-문헌-관리" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="참고-문헌-관리"><span class="header-section-number">5.2</span> 참고 문헌 관리</h2>
<ul>
<li><a href="https://www.zotero.org">Zotero</a>: 오픈 소스 참고 문헌 관리 소프트웨어로, 웹 브라우저와 통합되어 온라인 자료를 쉽게 수집하고 관리할 수 있습니다.</li>
<li><a href="https://www.mendeley.com">Mendeley</a>: 참고 문헌 관리와 학술 소셜 네트워크 기능을 결합한 도구로, PDF 주석 기능과 협업 기능이 강점입니다.</li>
<li><a href="https://paperpile.com">PaperPile</a>: 클라우드 기반의 참고 문헌 관리 도구로, Google Docs 와의 통합이 뛰어나 온라인 작업 환경에 적합합니다.</li>
<li><a href="https://endnote.com">Endnote</a>: 광범위한 참고 문헌 관리 기능을 제공하는 소프트웨어로, 문헌 수집, 조직화, 인용 및 서지 작성을 효율적으로 수행할 수 있습니다. Microsoft Word 와의 통합이 뛰어나며, 다양한 인용 스타일을 지원합니다.</li>
</ul>
</section>
</section>
<section id="마치며" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> 마치며</h1>
<p>여러분은 이제 체계적인 접근법을 통해 논문을 효율적으로 읽고 이해할 수 있을 것입니다. 그러나 논문을 읽는 것은 꾸준한 연습과 노력이 필요한 과정이므로 항상 자신만의 방법을 찾아가는 것이 가장 중요하다는 사실을 기억하세요.</p>
</section>
<section id="reference" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Reference</h1>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Hubbard, K. E., &amp; Dunbar, S. D. (2017). Perceptions of scientific research literature and strategies for reading papers depend on academic career stage. PloS one, 12(12), e0189753.↩︎</p></li>
<li id="fn2"><p>Shout out to Chris at CoffeeCycle! Simply the best coffee in San Diego.↩︎</p></li>
<li id="fn3"><p>Keshav, S. (2007). How to read a paper. ACM SIGCOMM Computer Communication Review, 37(3), 83–84.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Data science</category>
  <category>Tip</category>
  <category>Productivity</category>
  <guid>https://tomorrow-lab.github.io/posts/md/How_readPaper.html</guid>
  <pubDate>Sat, 30 Nov 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>파이썬으로 Sankey diagram그리기</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/python_sankeyDiagram.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="python_sankeyDiagram.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_sankeyDiagram.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>Sankey 다이어그램은 한 값 집합에서 다른 값 집합으로의 흐름을 시각화하는 도구로 열 손실에 비례하는 너비를 가진 화살표를 사용하여 증기 엔진 효율을 시각화했던 Sankey 선장의 이름을 따서 명명되었습니다. Sankey 다이어그램은 서로 다른 고객 세그먼트 간의 전환이나 흐름을 보여주는 데 효과적이며 노드(연결되는 항목)와 링크(연결)로 구성됩니다.</p>
<p>Sankey 다이어그램은 두 도메인 간의 다대다 매핑이나 여러 경로를 통해 트래픽이 이동하는 방식을 나타내는 데 유용합니다. 예를 들어, 대학과 전공 간의 관계를 시각화하거나 웹사이트 내에서 페이지 간의 트래픽 흐름을 보여줄 수 있습니다.</p>
<section id="기본-sankey-다이어그램-그리기" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 기본 Sankey 다이어그램 그리기</h1>
<p>간단한 Sankey 다이어그램을 구현하는 방법을 이해하기 위해 <code>Plotly</code>를 사용해 기본적인 다이어그램을 만들어 보겠습니다. <code>Plotly</code>에서 Sankey 다이어그램은 세 개의 리스트로 정의됩니다. 세 가지 리스트는 <strong>source</strong>(출발점), <strong>target</strong>(도착점), <strong>values</strong>(값)입니다. Plotly는 각 노드를 0부터 시작하여 전체 노드 수에서 1을 뺀 숫자까지 인덱싱합니다. <strong>source</strong>와 <strong>target</strong> 리스트는 노드 간의 연결을 정의합니다. 아래 코드를 살펴보면 이해하기 더 쉬울 것입니다.</p>
<div id="cell-3" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plotly.graph_objects <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> go</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plotly.io <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pio</span>
<span id="cb1-3"></span>
<span id="cb1-4">pio.renderers.default <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plotly_mimetype+notebook_connected"</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define node and link data</span></span>
<span id="cb1-7">labels: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>]</span>
<span id="cb1-8">source_indices: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb1-9">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-10">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-11">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-12">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-13">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-14">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-15">]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A -&gt; X, A -&gt; Y, A -&gt; Z, B -&gt; X, B -&gt; Y, B -&gt; Z</span></span>
<span id="cb1-16">target_indices: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># X, Y, Z</span></span>
<span id="cb1-17">values: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Weights for each link</span></span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define colors</span></span>
<span id="cb1-20">color_dict: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-21">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(252,65,94,0.7)"</span>,</span>
<span id="cb1-22">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(255,162,0,0.7)"</span>,</span>
<span id="cb1-23">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(55,178,255,0.7)"</span>,</span>
<span id="cb1-24">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(200,200,200,0.7)"</span>,</span>
<span id="cb1-25">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(200,200,200,0.7)"</span>,</span>
<span id="cb1-26">}</span>
<span id="cb1-27"></span>
<span id="cb1-28">color_dict_link: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-29">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(252,65,94,0.4)"</span>,</span>
<span id="cb1-30">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(255,162,0,0.4)"</span>,</span>
<span id="cb1-31">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(55,178,255,0.4)"</span>,</span>
<span id="cb1-32">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(200,200,200,0.4)"</span>,</span>
<span id="cb1-33">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(200,200,200,0.4)"</span>,</span>
<span id="cb1-34">}</span>
<span id="cb1-35"></span>
<span id="cb1-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create node color list</span></span>
<span id="cb1-37">node_colors: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [color_dict[label] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> label <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> labels]</span>
<span id="cb1-38"></span>
<span id="cb1-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create link color list based on source nodes</span></span>
<span id="cb1-40">link_colors: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb1-41">    (</span>
<span id="cb1-42">        color_dict_link[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>]</span>
<span id="cb1-43">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-44">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> color_dict_link[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>]</span>
<span id="cb1-45">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-46">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> color_dict_link[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>]</span>
<span id="cb1-47">    )</span>
<span id="cb1-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> source <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> source_indices</span>
<span id="cb1-49">]</span>
<span id="cb1-50"></span>
<span id="cb1-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create Sankey diagram</span></span>
<span id="cb1-52">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> go.Figure(</span>
<span id="cb1-53">    data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb1-54">        go.Sankey(</span>
<span id="cb1-55">            node<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb1-56">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pad"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,</span>
<span id="cb1-57">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thickness"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb1-58">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"line"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"width"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>},</span>
<span id="cb1-59">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>: labels,</span>
<span id="cb1-60">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: node_colors,</span>
<span id="cb1-61">            },</span>
<span id="cb1-62">            link<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb1-63">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"source"</span>: source_indices,</span>
<span id="cb1-64">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>: target_indices,</span>
<span id="cb1-65">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>: values,</span>
<span id="cb1-66">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: link_colors,</span>
<span id="cb1-67">            },</span>
<span id="cb1-68">        )</span>
<span id="cb1-69">    ]</span>
<span id="cb1-70">)</span>
<span id="cb1-71"></span>
<span id="cb1-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update layout</span></span>
<span id="cb1-73">fig.update_layout(</span>
<span id="cb1-74">    title_text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sankey Diagram with Custom Colors for A and B"</span>,</span>
<span id="cb1-75">    font_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb1-76">    width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>,</span>
<span id="cb1-77">    height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>,</span>
<span id="cb1-78">)</span>
<span id="cb1-79"></span>
<span id="cb1-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show diagram</span></span>
<span id="cb1-81">fig.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>                            <div id="1af15438-457d-40cb-a879-64cbcedc3fad" class="plotly-graph-div" style="height:400px; width:600px;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("1af15438-457d-40cb-a879-64cbcedc3fad")) {                    Plotly.newPlot(                        "1af15438-457d-40cb-a879-64cbcedc3fad",                        [{"link":{"color":["rgba(252,65,94,0.4)","rgba(252,65,94,0.4)","rgba(252,65,94,0.4)","rgba(255,162,0,0.4)","rgba(255,162,0,0.4)","rgba(255,162,0,0.4)"],"source":[0,0,0,1,1,1],"target":[2,3,4,2,3,4],"value":[5,7,6,2,9,4]},"node":{"color":["rgba(252,65,94,0.7)","rgba(255,162,0,0.7)","rgba(55,178,255,0.7)","rgba(200,200,200,0.7)","rgba(200,200,200,0.7)"],"label":["A","B","X","Y","Z"],"line":{"color":"black","width":0.5},"pad":15,"thickness":20},"type":"sankey"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"title":{"text":"Sankey Diagram with Custom Colors for A and B"},"font":{"size":10},"width":600,"height":400},                        {"responsive": true}                    ).then(function(){
                            
var gd = document.getElementById('1af15438-457d-40cb-a879-64cbcedc3fad');
var x = new MutationObserver(function (mutations, observer) {{
        var display = window.getComputedStyle(gd).display;
        if (!display || display === 'none') {{
            console.log([gd, 'removed!']);
            Plotly.purge(gd);
            observer.disconnect();
        }}
}});

// Listen for the removal of the full notebook cells
var notebookContainer = gd.closest('#notebook-container');
if (notebookContainer) {{
    x.observe(notebookContainer, {childList: true});
}}

// Listen for the clearing of the current output cell
var outputEl = gd.closest('.output');
if (outputEl) {{
    x.observe(outputEl, {childList: true});
}}

                        })                };                });            </script>        </div>
</div>
</div>
</section>
<section id="고급-sankey-다이어그램-그리기" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 고급 Sankey 다이어그램 그리기</h1>
<p>Sankey 다이어그램을 위해서는 먼저 데이터를 전처리하는 것부터 시작해야 합니다. 아래는 <code>pandas</code>를 사용해 데이터를 불러오고 노드와 링크 데이터를 만들고 시각화하는 코드입니다.</p>
<div id="cell-5" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-2"></span>
<span id="cb2-3">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../input/estimated-us-energy-cons.csv"</span>)</span>
<span id="cb2-4">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Category</th>
<th data-quarto-table-cell-role="th">Sankey demo series (from)</th>
<th data-quarto-table-cell-role="th">Sankey demo series (to)</th>
<th data-quarto-table-cell-role="th">Sankey demo series (weight)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>highcharts-k3rhrdv-1</td>
<td>Net Import</td>
<td>Electricity &amp; Heat</td>
<td>0.14</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>highcharts-k3rhrdv-2</td>
<td>Solar</td>
<td>Electricity &amp; Heat</td>
<td>1.28</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>highcharts-k3rhrdv-3</td>
<td>Nuclear</td>
<td>Electricity &amp; Heat</td>
<td>8.05</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>highcharts-k3rhrdv-4</td>
<td>Hydro</td>
<td>Electricity &amp; Heat</td>
<td>2.31</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>highcharts-k3rhrdv-5</td>
<td>Wind</td>
<td>Electricity &amp; Heat</td>
<td>3.84</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="cell-6" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 노드 및 링크 데이터 준비</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 고유한 'to' 노드를 포함하여 모든 노드를 정의합니다.</span></span>
<span id="cb3-3">to_nodes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sankey demo series (to)"</span>].unique().tolist()</span>
<span id="cb3-4">labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sankey demo series (from)"</span>].tolist() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> to_nodes</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출발 노드 인덱스 (source)</span></span>
<span id="cb3-7">source_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sankey demo series (from)"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: labels.index(x)).tolist()</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 도착 노드 인덱스 (target)</span></span>
<span id="cb3-10">target_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [labels.index(to_node) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> to_node <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sankey demo series (to)"</span>]]</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 링크의 가중치</span></span>
<span id="cb3-13">values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sankey demo series (weight)"</span>].tolist()</span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 색상 정의</span></span>
<span id="cb3-16">color_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb3-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Net Import"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(252,65,94,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Red</span></span>
<span id="cb3-18">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Solar"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(255,162,0,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Orange</span></span>
<span id="cb3-19">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nuclear"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(55,178,255,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Light Blue</span></span>
<span id="cb3-20">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hydro"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(0,128,0,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Green</span></span>
<span id="cb3-21">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wind"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(75,0,130,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Indigo</span></span>
<span id="cb3-22">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Geothermal"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(255,105,180,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hot Pink</span></span>
<span id="cb3-23">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Natural Gas"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(255,215,0,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gold</span></span>
<span id="cb3-24">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Coal"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(105,105,105,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dim Gray</span></span>
<span id="cb3-25">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Biomass"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(139,69,19,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Saddle Brown</span></span>
<span id="cb3-26">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Petroleum"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(173,216,230,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pastel Blue</span></span>
<span id="cb3-27">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Electricity &amp; Heat"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(200,200,200,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gray for target node</span></span>
<span id="cb3-28">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residential"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(173,216,230,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Light Blue for Residential</span></span>
<span id="cb3-29">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Commercial"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(144,238,144,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Light Green for Commercial</span></span>
<span id="cb3-30">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Industrial"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(255,182,193,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Light Pink for Industrial</span></span>
<span id="cb3-31">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Transportation"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(255,140,0,0.7)"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dark Orange for Transportation</span></span>
<span id="cb3-32">}</span>
<span id="cb3-33"></span>
<span id="cb3-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 노드 색상 리스트 생성</span></span>
<span id="cb3-35">node_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [color_dict.get(label, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgba(200,200,200,0.7)"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> label <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> labels]</span>
<span id="cb3-36"></span>
<span id="cb3-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 링크 색상 리스트 생성 (출발 노드에 따라 색상 결정)</span></span>
<span id="cb3-38">link_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [color_dict[df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sankey demo series (from)"</span>].iloc[i]] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df))]</span>
<span id="cb3-39"></span>
<span id="cb3-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sankey 다이어그램 생성</span></span>
<span id="cb3-41">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> go.Figure(</span>
<span id="cb3-42">    data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb3-43">        go.Sankey(</span>
<span id="cb3-44">            node<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb3-45">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pad"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,</span>
<span id="cb3-46">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thickness"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb3-47">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"line"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"width"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>},</span>
<span id="cb3-48">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>: labels,</span>
<span id="cb3-49">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: node_colors,</span>
<span id="cb3-50">            },</span>
<span id="cb3-51">            link<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb3-52">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"source"</span>: source_indices,</span>
<span id="cb3-53">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>: target_indices,</span>
<span id="cb3-54">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>: values,</span>
<span id="cb3-55">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: link_colors,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 링크 색상 적용</span></span>
<span id="cb3-56">            },</span>
<span id="cb3-57">        )</span>
<span id="cb3-58">    ]</span>
<span id="cb3-59">)</span>
<span id="cb3-60"></span>
<span id="cb3-61"></span>
<span id="cb3-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 레이아웃 업데이트</span></span>
<span id="cb3-63">fig.update_layout(</span>
<span id="cb3-64">    title_text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sankey Diagram for Energy Sources"</span>,</span>
<span id="cb3-65">    font_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb3-66">    width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>,</span>
<span id="cb3-67">    height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>,</span>
<span id="cb3-68">)</span>
<span id="cb3-69"></span>
<span id="cb3-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다이어그램 표시</span></span>
<span id="cb3-71">fig.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>                            <div id="208d0867-d80a-4a4f-9222-8889bedde8f8" class="plotly-graph-div" style="height:500px; width:600px;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("208d0867-d80a-4a4f-9222-8889bedde8f8")) {                    Plotly.newPlot(                        "208d0867-d80a-4a4f-9222-8889bedde8f8",                        [{"link":{"color":["rgba(252,65,94,0.7)","rgba(255,162,0,0.7)","rgba(55,178,255,0.7)","rgba(0,128,0,0.7)","rgba(75,0,130,0.7)","rgba(255,105,180,0.7)","rgba(255,215,0,0.7)","rgba(105,105,105,0.7)","rgba(139,69,19,0.7)","rgba(173,216,230,0.7)","rgba(200,200,200,0.7)","rgba(255,162,0,0.7)","rgba(255,105,180,0.7)","rgba(255,215,0,0.7)","rgba(139,69,19,0.7)","rgba(173,216,230,0.7)","rgba(200,200,200,0.7)","rgba(255,162,0,0.7)","rgba(255,105,180,0.7)","rgba(255,215,0,0.7)","rgba(105,105,105,0.7)","rgba(139,69,19,0.7)","rgba(173,216,230,0.7)","rgba(200,200,200,0.7)","rgba(255,162,0,0.7)","rgba(255,215,0,0.7)","rgba(105,105,105,0.7)","rgba(139,69,19,0.7)","rgba(173,216,230,0.7)","rgba(200,200,200,0.7)","rgba(255,215,0,0.7)","rgba(139,69,19,0.7)","rgba(173,216,230,0.7)","rgba(200,200,200,0.7)","rgba(173,216,230,0.7)","rgba(144,238,144,0.7)","rgba(255,182,193,0.7)","rgba(255,140,0,0.7)","rgba(173,216,230,0.7)","rgba(144,238,144,0.7)","rgba(255,182,193,0.7)","rgba(255,140,0,0.7)"],"source":[0,1,2,3,4,5,6,7,8,9,10,1,5,6,8,9,10,1,5,6,7,8,9,10,1,6,7,8,9,10,6,8,9,10,34,35,36,37,34,35,36,37],"target":[10,10,10,10,10,10,10,10,10,10,34,34,34,34,34,34,35,35,35,35,35,35,35,36,36,36,36,36,36,37,37,37,37,47,47,47,47,47,48,48,48,48],"value":[0.14,1.28,8.05,2.31,3.84,0.15,12.5,8.9,0.41,0.24,5.19,0.4,0.04,5.17,0.48,0.98,4.69,0.16,0.02,3.65,0.02,0.15,0.88,3.44,0.04,10.8,0.99,2.27,9.13,0.02,1.29,1.57,24.6,24.3,4.29,3.35,13.6,21.7,7.97,6.22,13.1,5.77]},"node":{"color":["rgba(252,65,94,0.7)","rgba(255,162,0,0.7)","rgba(55,178,255,0.7)","rgba(0,128,0,0.7)","rgba(75,0,130,0.7)","rgba(255,105,180,0.7)","rgba(255,215,0,0.7)","rgba(105,105,105,0.7)","rgba(139,69,19,0.7)","rgba(173,216,230,0.7)","rgba(200,200,200,0.7)","rgba(255,162,0,0.7)","rgba(255,105,180,0.7)","rgba(255,215,0,0.7)","rgba(139,69,19,0.7)","rgba(173,216,230,0.7)","rgba(200,200,200,0.7)","rgba(255,162,0,0.7)","rgba(255,105,180,0.7)","rgba(255,215,0,0.7)","rgba(105,105,105,0.7)","rgba(139,69,19,0.7)","rgba(173,216,230,0.7)","rgba(200,200,200,0.7)","rgba(255,162,0,0.7)","rgba(255,215,0,0.7)","rgba(105,105,105,0.7)","rgba(139,69,19,0.7)","rgba(173,216,230,0.7)","rgba(200,200,200,0.7)","rgba(255,215,0,0.7)","rgba(139,69,19,0.7)","rgba(173,216,230,0.7)","rgba(200,200,200,0.7)","rgba(173,216,230,0.7)","rgba(144,238,144,0.7)","rgba(255,182,193,0.7)","rgba(255,140,0,0.7)","rgba(173,216,230,0.7)","rgba(144,238,144,0.7)","rgba(255,182,193,0.7)","rgba(255,140,0,0.7)","rgba(200,200,200,0.7)","rgba(173,216,230,0.7)","rgba(144,238,144,0.7)","rgba(255,182,193,0.7)","rgba(255,140,0,0.7)","rgba(200,200,200,0.7)","rgba(200,200,200,0.7)"],"label":["Net Import","Solar","Nuclear","Hydro","Wind","Geothermal","Natural Gas","Coal","Biomass","Petroleum","Electricity & Heat","Solar","Geothermal","Natural Gas","Biomass","Petroleum","Electricity & Heat","Solar","Geothermal","Natural Gas","Coal","Biomass","Petroleum","Electricity & Heat","Solar","Natural Gas","Coal","Biomass","Petroleum","Electricity & Heat","Natural Gas","Biomass","Petroleum","Electricity & Heat","Residential","Commercial","Industrial","Transportation","Residential","Commercial","Industrial","Transportation","Electricity & Heat","Residential","Commercial","Industrial","Transportation","Rejected Energy","Energy Services"],"line":{"color":"black","width":0.5},"pad":15,"thickness":20},"type":"sankey"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"title":{"text":"Sankey Diagram for Energy Sources"},"font":{"size":10},"width":600,"height":500},                        {"responsive": true}                    ).then(function(){
                            
var gd = document.getElementById('208d0867-d80a-4a4f-9222-8889bedde8f8');
var x = new MutationObserver(function (mutations, observer) {{
        var display = window.getComputedStyle(gd).display;
        if (!display || display === 'none') {{
            console.log([gd, 'removed!']);
            Plotly.purge(gd);
            observer.disconnect();
        }}
}});

// Listen for the removal of the full notebook cells
var notebookContainer = gd.closest('#notebook-container');
if (notebookContainer) {{
    x.observe(notebookContainer, {childList: true});
}}

// Listen for the clearing of the current output cell
var outputEl = gd.closest('.output');
if (outputEl) {{
    x.observe(outputEl, {childList: true});
}}

                        })                };                });            </script>        </div>
</div>
</div>
</section>
<section id="마치며" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 마치며</h1>
<p>Sankey 다이어그램은 데이터 분석과 시각화에 있어 매우 유용한 도구입니다. 고객 세그먼트 간 전환, 웹사이트 트래픽 흐름, 에너지 소비 등 다양한 분야에서 활용될 수 있습니다. Python과 Plotly를 사용하면 복잡한 데이터셋도 쉽게 Sankey 다이어그램으로 표현할 수 있어, 데이터 기반의 의사결정과 인사이트 도출에 큰 도움이 될 것입니다. Sankey 다이어그램의 구현 방법을 익히고 실제 데이터에 적용해 보면서, 여러분의 데이터 시각화 스킬을 한 단계 더 발전시켜 보시기 바랍니다.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>Visualization</category>
  <category>Bioinformatics</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/python_sankeyDiagram.html</guid>
  <pubDate>Fri, 29 Nov 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Seurat 라이브러리 치트시트(Cheatsheet)</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Cheatsheet_Seurat.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Cheatsheet_Seurat.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Cheatsheet_Seurat.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p><a href="https://satijalab.org/seurat/">Seurat</a> 은 scRNA-seq 분석에서 가장 널리 사용되는 R 패키지로, 다양한 기능을 통해 데이터를 처리하고 시각화합니다. 이 문서는 주요 명령어와 기능을 요약하여 사용자가 데이터를 효율적으로 다룰 수 있도록 지원합니다. 특히, 데이터 로드, 전처리, 클러스터링 및 시각화와 같은 일반적인 작업에 대한 예제를 제공합니다. Seurat v5.0.1 버전을 사용한 환경에서 테스트되었습니다. 다양한 명령어와 튜토리얼은 <a href="https://satijalab.org/seurat/essential_commands.html">공식 페이지</a> 에서 확인하세요.</p>
<section id="파일-불러오기" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 파일 불러오기</h1>
<p>scRNA-seq 정보를 저장할 수 있는 파일에는 여러 형식이 있으며, 모든 형식을 여기에 모두 나열할 수는 없습니다. 다만 보편적인 형식은 아래와 같습니다.</p>
<ol type="1">
<li><code>SMARTseq2</code> 에서는 행렬과 샘플 메타데이터를 <code>csv</code>, <code>tsv</code> 또는 <code>txt</code> 형식으로 저장합니다.</li>
<li><code>10X Chromium</code> 데이터의 기본 형식 중 하나는 <code>.tsv</code> 로 저장된 유전자 및 세포에 대한 주석이 포함된 압축된 희소 행렬 파일 <code>.mtx</code> 를 사용합니다.</li>
<li>현재는 <code>10X Chromium</code> 에서 많이 사용되는 형식은 <code>HDF5</code> 파일입니다. <code>HDF5</code> 는 속도가 빠르고 확장 가능하며 한 번에 사용할 데이터의 일부만을 불러오는 기능도 제공합니다. 또한 메타데이터를 동일한 파일에 저장하며 데이터를 이진 압축된 희소 행렬 형식으로 저장합니다.</li>
</ol>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># csv, tsv, txt 등의 형식 읽기</span></span>
<span id="cb1-2">raw_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.delim</span>(</span>
<span id="cb1-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/folder_sample1.csv"</span>,</span>
<span id="cb1-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-5">)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 희소 행렬로 변환</span></span>
<span id="cb1-8">sparse_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Matrix</span>(</span>
<span id="cb1-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data   =</span> raw_matrix,</span>
<span id="cb1-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sparse =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb1-11">)</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mtx 형식에서 읽고 변환하기 (폴더에 있는 파일들을 읽음)</span></span>
<span id="cb1-14">sparse_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Read10X</span>(</span>
<span id="cb1-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data.dir =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/folder_sample1"</span></span>
<span id="cb1-16">)</span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># h5 형식에서 읽고 변환하기</span></span>
<span id="cb1-19">sparse_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Read10X_h5</span>(</span>
<span id="cb1-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/matrix_file.h5"</span>,</span>
<span id="cb1-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb1-22">)</span></code></pre></div>
<p>메타 데이터는 데이터 프레임 형식으로 가져와야 합니다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># csv 또는 tsv 형식에서 메타데이터 읽기</span></span>
<span id="cb2-2">metadata <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.delim</span>(</span>
<span id="cb2-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/metadata.csv"</span>,</span>
<span id="cb2-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>,</span>
<span id="cb2-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-6">)</span></code></pre></div>
</section>
<section id="seurat-객체-만들기" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Seurat 객체 만들기</h1>
<p>개발자들은 데이터 분석 프로세스를 조금 더 간단하게 만들기 위해 데이터를 간결한 형식으로 저장하는 객체를 만들었습니다. <strong>Seurat</strong> 에서는 <code>CreateSeuratObject</code> 함수를 사용해 희소 행렬 또는 카운트가 포함된 데이터를 입력으로 객체를 생성합니다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateSeuratObject</span>(</span>
<span id="cb3-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts =</span> sparse_matrix,</span>
<span id="cb3-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>,</span>
<span id="cb3-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">project =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SAMPLE1"</span>,</span>
<span id="cb3-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta.data =</span> metadata</span>
<span id="cb3-6">)</span></code></pre></div>
<p>Seurat 객체는 객체 이름 뒤에 <code>@</code> 또는 <code>$</code> 문자를 사용하여 내용에 쉽게 접근할 수 있습니다.</p>
<ul>
<li><code>@</code> 기호는 <code>assays</code>, <code>meta.data</code>, <code>graphs</code> 및 <code>reduction</code> 슬롯을 포함한 모든 분석 결과에 접근할 수 있습니다.</li>
<li><code>$</code> 기호를 사용하면 <strong>Seurat</strong> 객체의 메타데이터 열에 직접 액세스할 수 있습니다. 즉, <code>SeuratObject$column1</code> 은 <code>SeuratObject@meta.data$column1</code> 과 동일한 결과를 출력합니다.</li>
</ul>
<p>기본적으로 분석 데이터는 RNA 이라는 이름의 <code>assay</code> 슬롯에 저장됩니다. 분석을 수행할 때 추가 <code>assays</code> 가 생성되며 예를 들어 유전자의 원시 데이터 (counts), 정규화한 데이터 (data), 스케일링/회귀된 데이터 (scale.data) 및 유전자의 분산에 관한 정보 (var) 들이 있습니다. <strong>Seurat</strong> 객체의 모든 슬롯에 대한 자세한 설명은 <a href="https://github.com/satijalab/seurat/wiki/Assay">Seurat 위키</a> 를 참고하세요.</p>
<section id="메타데이터에-새로운-열-추가" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="메타데이터에-새로운-열-추가"><span class="header-section-number">2.1</span> 메타데이터에 새로운 열 추가</h2>
<p>새로운 열을 추가하려면 <code>$</code> 기호를 사용하여 벡터를 메타데이터 열에 할당할 수 있습니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>NEW_COLUMN_NAME <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setNames</span>(</span>
<span id="cb4-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(SeuratObject),</span>
<span id="cb4-3">    vector_NEW_DATA</span>
<span id="cb4-4">)</span></code></pre></div>
<p>또는 <code>AddMetaData</code> 함수를 사용하여 열을 추가할 수 있습니다.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddMetaData</span>(</span>
<span id="cb5-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object   =</span> SeuratObject,</span>
<span id="cb5-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> vector_NEW_DATA,</span>
<span id="cb5-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NEW_COLUMN_NAME"</span></span>
<span id="cb5-5">)</span></code></pre></div>
</section>
<section id="seurat-객체-하위-집합-만들기" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="seurat-객체-하위-집합-만들기"><span class="header-section-number">2.2</span> Seurat 객체 하위 집합 만들기</h2>
<p>일부 데이터를 따로 때어내는 방법은 <code>R</code> 의 데이터프레임 문법을 사용하는 방법과 <strong>Seurat</strong> 함수를 사용하는 방법이 있습니다. 먼저 데이터 프레임 문법은 아래와 같습니다.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Feature 하위 집합</span></span>
<span id="cb6-2">SeuratObject[vector_FEATURES_TO_USE, ]</span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 세포 하위 집합</span></span>
<span id="cb6-4">SeuratObject[, vector_CELLS_TO_USE]</span></code></pre></div>
<p><strong>Seurat</strong> 에서 제공하는 함수는 아래와 같습니다.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Identity 클래스를 기반으로 Seurat 객체를 하위 집합으로 추출합니다. 자세한 내용은 ?SubsetData를 참조하세요.</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">idents =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bcell"</span>)</span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">idents =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4T"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8T"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">invert =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 유전자/특성의 발현 수준을 기준으로 하위 집합을 만듭니다.</span></span>
<span id="cb7-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subset =</span> MS4A1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기준의 조합에 따라 하위 집합을 만듭니다.</span></span>
<span id="cb7-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subset =</span> MS4A1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> PC1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb7-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subset =</span> MS4A1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">idents =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B 세포"</span>)</span>
<span id="cb7-11"></span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 객체 메타 데이터의 값에 따라 하위 집합을 만듭니다.</span></span>
<span id="cb7-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subset =</span> orig.ident <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Replicate1"</span>)</span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 identity 클래스당 세포 수를 다운샘플링합니다.</span></span>
<span id="cb7-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">downsample =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span></code></pre></div>
</section>
<section id="시각화하기" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="시각화하기"><span class="header-section-number">2.3</span> 시각화하기</h2>
<p>가장 일반적으로 사용되는 시각화 함수는 바이올린 플롯과 UMAP(차원 축소 후의 산점도) 입니다.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>UMAP 을 그리기 전에 반드시 먼저 차원 축소를 계산해야 합니다.</p>
</div>
</div>
<p>연속 변수에 대하여 바이올린 플롯 시각화하는 코드</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">VlnPlot</span>(</span>
<span id="cb8-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb8-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orig.ident"</span>,</span>
<span id="cb8-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"percent_mito"</span>),</span>
<span id="cb8-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pt.size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb8-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb8-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y.max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb8-8">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NoLegend</span>()</span></code></pre></div>
<p>연속 변수에 대한 UMAP 을 그리는 방법 (예시: 유전자 발현량):</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FeaturePlot</span>(</span>
<span id="cb9-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb9-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FEATURE_1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FEATURE_2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FEATURE_3"</span>),</span>
<span id="cb9-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reduction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"umap"</span>,</span>
<span id="cb9-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb9-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">order =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb9-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pt.size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb9-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb9-9">)</span></code></pre></div>
<p>범주형 변수에 대한 UMAP 을 그리는 방법 (예시: 세포 유형):</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DimPlot</span>(</span>
<span id="cb10-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb10-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATASET"</span>),</span>
<span id="cb10-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reduction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"umap"</span>,</span>
<span id="cb10-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb10-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pt.size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb10-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb10-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb10-9">)</span></code></pre></div>
<p>이것 말고도 다양한 시각화 함수가 있으니 자세한 것은 <a href="https://satijalab.org/seurat/articles/visualization_vignette">공식 문서</a> 를 참고하세요.</p>
</section>
<section id="데이터-합치기" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="데이터-합치기"><span class="header-section-number">2.4</span> 데이터 합치기</h2>
<p>두 개이상의 데이터셋을 결합하려면:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">merged_obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(</span>
<span id="cb11-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> SeuratObject1,</span>
<span id="cb11-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(SeuratObject2, SeuratObject3, SeuratObject4),</span>
<span id="cb11-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add.cell.ids =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset4"</span>)</span>
<span id="cb11-5">)</span></code></pre></div>
</section>
</section>
<section id="전체-feature-의-수-확인하기" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 전체 Feature 의 수 확인하기</h1>
<p>일반적인 방식은 적어도 200 개의 유전자가 있는 세포와 유전자는 적어도 3 개 이상의 세포에서 발현된 것만 남기는 것입니다. 다만 이 수치는 데이터를 준비할 때 사용된 라이브러리 기술에 매우 의존적입니다. 따라서 주의해서 사용해야 합니다. <strong>Seurat</strong> 에서는 <code>nCount_RNA</code>: 세포 당 UMIs(Unique Molecular Identifiers) 의 수; <code>nFeature_RNA</code>: 각 세포에서 감지된 유전자의 수로 저장하고 있습니다. 시각화를 통해 유전자 수와 UMI 의 갯수를 살펴보는 코드는 아래와 같습니다.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">VlnPlot</span>(</span>
<span id="cb12-2">    SeuratObject,</span>
<span id="cb12-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orig.ident"</span>,</span>
<span id="cb12-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nFeature_RNA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nCount_RNA"</span>),</span>
<span id="cb12-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pt.size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb12-6">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NoLegend</span>()</span></code></pre></div>
</section>
<section id="유전자-관련-품질-관리" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 유전자 관련 품질 관리</h1>
<p>단일 세포에서 가장 많이 감지되는 유전자는 주로 미토콘드리아 유전자 (<code>MT-</code>), 리보솜 유전자 (<code>RPL</code> 및 <code>RPS</code>), 그리고 기타 항상 발현되는 구조 단백질들 (예: ACTB, TMSB4X, B2M, EEF1A1) 입니다. 이러한 유전자 데이터는 세포 품질 지표 계산, 데이터 정규화, 배치 효과 보정 등 단일 세포 데이터 분석의 여러 목적에 활용될 수 있습니다.<sup>1</sup></p>
<section id="미토콘드리아-유전자-비율" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="미토콘드리아-유전자-비율"><span class="header-section-number">4.1</span> 미토콘드리아 유전자 비율</h2>
<p>높은 비율의 미토콘드리아 유전자는 일반적으로 손상된 세포를 의미합니다. 이는 세포질 속의 RNA 가 쉽게 소실되는 반면, 미토콘드리아 속의 RNA 는 비교적 덜 손실되기 때문입니다. 다음은 미토콘드리아 유전자 비율을 계산하고 메타데이터 테이블에 추가하는 예시입니다.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 미토콘드리아 유전자의 비율 계산</span></span>
<span id="cb13-2">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PercentageFeatureSet</span>(</span>
<span id="cb13-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb13-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^MT"</span>,</span>
<span id="cb13-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>,</span>
<span id="cb13-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"percent_mito"</span></span>
<span id="cb13-7">)</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>유전자 관련 품질 관리에 대한 설명은 사람 (human) 에 해당하는 내용으로 다른 종의 데이터를 처리하는 경우에는 코드가 수정되어야 합니다. 예시로 생쥐 (mouse) 의 경우 미토콘드리아 (<code>mt-</code>), 리보소말 (<code>Rpl</code>) 입니다.</p>
</div>
</div>
</section>
<section id="리보솜-유전자-비율" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="리보솜-유전자-비율"><span class="header-section-number">4.2</span> 리보솜 유전자 비율</h2>
<p>리보솜 유전자는 모든 세포에서 가장 많이 발현되는 유전자 중 하나이며, 미토콘드리아 유전자와는 반대로 미토콘드리아 수에 반비례하는 경향이 있습니다. 즉, 미토콘드리아의 수가 많을수록 리보솜 유전자의 감지 수준은 낮아집니다 (다만, 이 관계는 비선형적입니다). 리보솜 단백질에서 유래하는 유전자 발현 비율을 계산하는 방법은 미토콘드리아 유전자 비율을 계산하는 방법과 유사합니다.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리보솜 유전자의 비율 계산</span></span>
<span id="cb14-2">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PercentageFeatureSet</span>(</span>
<span id="cb14-3">    SeuratObject,</span>
<span id="cb14-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern  =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^RP[SL]"</span>,</span>
<span id="cb14-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"percent_ribo"</span></span>
<span id="cb14-6">)</span></code></pre></div>
</section>
<section id="유전자-유형-및-염색체-위치-정보" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="유전자-유형-및-염색체-위치-정보"><span class="header-section-number">4.3</span> 유전자 유형 및 염색체 위치 정보</h2>
<p>RNA 시퀀싱에서 얻은 유전자는 여러 유형으로 구분할 수 있습니다. 이에는 단백질 발현 정보를 포함하는 Coding 유전자, 단백질 정보를 포함하지 않는 Non-coding 유전자, BCR 및 TCR 과 관련된 VDJ 영역 유전자 (세포 분화에 대한 정보를 포함), 그리고 siRNA 등이 포함됩니다. 이러한 정보를 활용하면 원하는 분석 유형에 따라 관심 없는 특정 유전자 범주를 필터링할 수 있습니다.</p>
<p>특히, scRNA-seq 는 일반적으로 <code>poly-A</code> 를 사용하여 RNA 를 농축하기 때문에 데이터에 존재하는 유전자의 약 80-90% 가 단백질 코딩 유전자입니다. 또한, 유전자의 염색체 위치 정보를 수집하면 성 염색체에 의한 효과를 식별하는 데 유용할 수 있습니다.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사람 유전자로 변경하기 위해 먼저 ENSEMBL에서 마우스 유전자 주석 검색</span></span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(biomaRt)</span>
<span id="cb15-3"></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ENSEMBL 마트 설정</span></span>
<span id="cb15-5">mart <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> biomaRt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useMart</span>(</span>
<span id="cb15-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">biomart =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ensembl"</span>,</span>
<span id="cb15-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dataset =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hsapiens_gene_ensembl"</span>,</span>
<span id="cb15-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">host=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"www.ensembl.org"</span></span>
<span id="cb15-9">)</span>
<span id="cb15-10"></span>
<span id="cb15-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 선택된 속성으로 마우스 유전자 주석 검색</span></span>
<span id="cb15-12">annot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> biomaRt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getBM</span>(</span>
<span id="cb15-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mart =</span> mart,</span>
<span id="cb15-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">attributes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"external_gene_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_biotype"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chromosome_name"</span>)</span>
<span id="cb15-15">)</span></code></pre></div>
<p>유전자 이름을 해당 생물 유형과 일치시킵니다.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 유전자 이름과 해당 염색체 위치 일치</span></span>
<span id="cb16-2">item <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> annot[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">match</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(SeuratObject), annot[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chromosome_name"</span>]</span>
<span id="cb16-3"></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NA 값을 "unknown"으로 대체</span></span>
<span id="cb16-5">item[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(item)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unknown"</span></span>
<span id="cb16-6"></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 유효하지 않은 염색체 값을 "other"로 대체</span></span>
<span id="cb16-8">item[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>item <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MT"</span>))] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"other"</span></span></code></pre></div>
<p>예를 들어 단백질 코딩 유전자에만 초점을 맞추려면 다음과 같이 수행 할 수 있습니다.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SeuratObject의 차원 확인</span></span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(SeuratObject)</span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 유전자 주석에서 단백질 코딩 유전자 선택</span></span>
<span id="cb17-5">sel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> annot[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">match</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(SeuratObject), annot[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein_coding"</span></span>
<span id="cb17-6"></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 선택된 유전자 이름 가져오기</span></span>
<span id="cb17-8">genes_use <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(SeuratObject)[sel]</span>
<span id="cb17-9">genes_use <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">na.omit</span>(genes_use))</span>
<span id="cb17-10"></span>
<span id="cb17-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SeuratObject에서 단백질 코딩 유전자만 필터링</span></span>
<span id="cb17-12">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> SeuratObject[genes_use, ]</span>
<span id="cb17-13"></span>
<span id="cb17-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 필터링 후 SeuratObject의 차원 확인</span></span>
<span id="cb17-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(SeuratObject)</span></code></pre></div>
</section>
</section>
<section id="세포-주기에-대한-정보" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 세포 주기에 대한 정보</h1>
<p>각각의 세포가 어떤 주기에 해당하는지는 특정 유전자의 평균 발현을 계산하여 예측합니다. <strong>Seurat</strong> 은 <code>CellCycleScoring</code> 함수를 통해 이것은 쉽게 계산할 수 있습니다 (사람 유전자에만 해당). 실행 방법은 다음과 같습니다.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CellCycleScoring를 실행하기 전에 데이터를 정규화하고 로그 변환해야 합니다.</span></span>
<span id="cb18-2">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NormalizeData</span>(SeuratObject)</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cell Cycle 점수 계산</span></span>
<span id="cb18-5">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CellCycleScoring</span>(</span>
<span id="cb18-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb18-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">g2m.features =</span> cc.genes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>g2m.genes,</span>
<span id="cb18-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s.features =</span> cc.genes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>s.genes</span>
<span id="cb18-9">)</span></code></pre></div>
</section>
<section id="pca-플롯에-메타데이터-시각화" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> PCA 플롯에 메타데이터 시각화</h1>
<p>메타데이터를 PCA 플롯에서 시각화하는 것은 각각의 메타데이터 변수를 개별적으로 분석하는 것보다 쉽습니다. 모든 정보를 하나의 플롯으로 결합하기 위해 주성분 분석 (PCA) 을 사용할 것입니다. 상위 주성분 (<code>PC1</code> 과 <code>PC2</code>) 에 대한 시각화는 데이터 세트 간의 차이가 어떻게 반영되는지 직관적으로 보여줍니다.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 선택된 메타데이터 매개 변수를 사용하여 PCA 계산</span></span>
<span id="cb19-2">metadata_use <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span>(</span>
<span id="cb19-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"perc"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb19-4">)</span>
<span id="cb19-5"></span>
<span id="cb19-6">metadata_use <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb19-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nCount_RNA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nFeature_RNA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S.Score"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G2M.Score"</span>,</span>
<span id="cb19-8">    metadata_use</span>
<span id="cb19-9">)</span>
<span id="cb19-10"></span>
<span id="cb19-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PCA 실행</span></span>
<span id="cb19-12">PC <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prcomp</span>(</span>
<span id="cb19-13">    SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data[, metadata_use],</span>
<span id="cb19-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">center =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb19-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale. =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb19-16">)</span>
<span id="cb19-17"></span>
<span id="cb19-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 객체에 PCA(메타데이터에서 실행됨) 추가</span></span>
<span id="cb19-19">SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca_metadata"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateDimReducObject</span>(</span>
<span id="cb19-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">embeddings =</span> PC<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x,</span>
<span id="cb19-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadataPC_"</span>,</span>
<span id="cb19-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span></span>
<span id="cb19-23">)</span>
<span id="cb19-24"></span>
<span id="cb19-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 메타데이터에서 실행된 PCA 플롯</span></span>
<span id="cb19-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DimPlot</span>(</span>
<span id="cb19-27">    SeuratObject,</span>
<span id="cb19-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reduction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca_metadata"</span>,</span>
<span id="cb19-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb19-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orig.ident"</span></span>
<span id="cb19-31">)</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>제로 카운트 유전자와 모든 값이 0 인 데이터 열은 PCA 와 같은 분석에 영향을 줄 수 있어서 이런 데이터를 제외하기 위해 아래 코드를 사용합니다.</p>
</div>
</div>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 제로 카운트 유전자 제거</span></span>
<span id="cb20-2">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> SeuratObject[Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(SeuratObject) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, ]</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모든 0인 메타데이터 열 제외</span></span>
<span id="cb20-5">metadata_use <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metadata_use[</span>
<span id="cb20-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data[, metadata_use] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb20-7">]</span></code></pre></div>
</section>
<section id="데이터-정규화-및-회귀" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> 데이터 정규화 및 회귀</h1>
<p>추가 분석을 수행하기 전에 서로 다른 시퀀싱 깊이를 고려하여 데이터를 정규화해야 합니다. 일반적으로 로그 변환을 통해 데이터를 정규화하며, 세포 주기, 미토콘드리아 비율, 감지된 유전자 수와 같은 데이터 품질 관리를 위한 메타데이터는 제거하는 것이 좋습니다.</p>
<section id="데이터-정규화" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="데이터-정규화"><span class="header-section-number">7.1</span> 데이터 정규화</h2>
<p>scRNA-seq 에서 가장 일반적인 정규화 방법은 로그 정규화입니다. 이 방법은 각 유전자의 카운트를 모든 유전자 카운트의 합 (라이브러리 크기라고도 함) 으로 나누어 라이브러리 크기의 차이를 보상합니다. 그 후, 결과에 상수를 곱하여 모든 세포가 동일한 시퀀싱 깊이를 가지도록 합니다. 대부분의 bulk RNA-seq 에서는 상수가 보통 <code>1e6</code> 이며, 이로 인해 CPM(백만 단위 카운트) 이 생성됩니다. 그러나 단일 세포 라이브러리 크기는 그보다 훨씬 작기 때문에 <code>1e3</code> 에서 <code>1e4</code>(10,000 단위 카운트) 까지 사용됩니다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%20NormCounts%20=%20%5Cfrac%7B(GeneCounts%20%5Ctimes%2010000)%7D%7BLibrarySize%7D%20"></p>
<p>라이브러리 크기에 대해 보정된 값은 로그 변환하여 로그 정규 분포로 만듭니다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%20logNormCounts%20=%20%5Cln(NormCounts%20+%201)%20"></p>
<p><strong>Seurat</strong>에서는 <code>NormalizeData</code> 함수를 사용하여 이 과정을 수행할 수 있습니다.</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 분산이 0인 유전자 제거</span></span>
<span id="cb21-2">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> SeuratObject[Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(SeuratObject) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, ]</span>
<span id="cb21-3"></span>
<span id="cb21-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 정규화 (LogNormalize 사용)</span></span>
<span id="cb21-5">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NormalizeData</span>(</span>
<span id="cb21-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb21-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale.factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>,</span>
<span id="cb21-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normalization.method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LogNormalize"</span></span>
<span id="cb21-9">)</span></code></pre></div>
</section>
<section id="데이터-회귀-regression" class="level2" data-number="7.2">
<h2 data-number="7.2" class="anchored" data-anchor-id="데이터-회귀-regression"><span class="header-section-number">7.2</span> 데이터 회귀 (Regression)</h2>
<p>데이터에서 혼란 요인을 제거하기 위해 회귀 분석을 수행할 수 있습니다. 예를 들어, 세포 주기나 품질 지표 (예: 미토콘드리아 비율 또는 감지된 유전자 수) 와 같은 혼란 요인을 제거할 수 있습니다. <strong>Seurat</strong>에서는 <code>ScaleData</code> 함수를 사용하여 이러한 회귀를 수행할 수 있습니다.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleData</span>(</span>
<span id="cb22-2">    SeuratObject,</span>
<span id="cb22-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vars.to.regress =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nFeature_RNA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"percent_mito"</span>),</span>
<span id="cb22-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb22-5">)</span></code></pre></div>
<p>이렇게 하면 데이터에 회귀가 적용되며, 이제 데이터가 준비되었으므로 추가 분석을 진행할 수 있습니다.</p>
</section>
</section>
<section id="highly-variable-features-선택하기" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> highly variable features 선택하기</h1>
<p>대규모 데이터 분석에서 중요한 단계는 샘플 간에 현저한 차이를 보이는 features(유전자, 전사체, 단백질, 대사물질 등) 를 식별하는 것입니다. 예를 들어, 다양한 종류의 상피 세포가 포함된 데이터셋을 가정해 보겠습니다. 상피 세포의 하위 유형을 구별하기 위해 다음과 같은 전략을 사용할 수 있습니다:</p>
<ol type="1">
<li>모든 상피 세포에서 공통적으로 발현되며 수준이 거의 동일한 유전자만 사용합니다.</li>
<li>상피 세포에서 감지되지 않는 유전자만 사용합니다.</li>
<li>상피 세포 간에 발현 수준이 크게 다른 유전자만 사용합니다.</li>
<li>데이터셋의 모든 유전자를 사용합니다.</li>
</ol>
<p>상피 세포 간 발현이 크게 다른 유전자를 사용하는 것이 가장 효과적인 방법이며, 그 다음으로 모든 유전자를 사용하는 것이 좋습니다. 반면, 상피 세포 간에 균일하게 발현되는 유전자나 상피 세포에서 감지되지 않는 유전자를 사용하는 것은 하위 유형을 구별하는 데 충분한 정보를 제공하지 않을 수 있습니다.그러나 단일 세포 분석에서는 보통 세포의 상피 세포 유형을 사전에 알지 못합니다 (그것이 발견하려는 대상이기 때문입니다). 따라서 이 작업을 수행하기 위해 다른 방법이 필요합니다. 일반적인 접근법은 각 샘플 전체에서 유전자의 분산을 기준으로 유전자를 순위 지정하는 것입니다. 분산이 높은 유전자는 세포를 구분하는 데 효과적일 가능성이 높습니다.일반적으로 발현 수준이 높은 유전자는 자연스럽게 더 높은 변동성을 나타내므로, 각 유전자의 평균 로그 발현량으로 변동성을 정규화하는 것이 중요합니다.</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Variable feature 찾기</span></span>
<span id="cb23-2">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindVariableFeatures</span>(</span>
<span id="cb23-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb23-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3000</span>,</span>
<span id="cb23-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selection.method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst"</span>,</span>
<span id="cb23-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb23-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span></span>
<span id="cb23-8">)</span>
<span id="cb23-9"></span>
<span id="cb23-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 상위 20개의 Variable feature 시각화</span></span>
<span id="cb23-11">top20 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">VariableFeatures</span>(SeuratObject), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb23-12"></span>
<span id="cb23-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LabelPoints</span>(</span>
<span id="cb23-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">VariableFeaturePlot</span>(SeuratObject),</span>
<span id="cb23-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">points =</span> top20,</span>
<span id="cb23-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repel =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb23-17">)</span></code></pre></div>
</section>
<section id="스케일링-및-중심화" class="level1" data-number="9">
<h1 data-number="9"><span class="header-section-number">9</span> 스케일링 및 중심화</h1>
<section id="선형-스케일링-및-중심화" class="level2" data-number="9.1">
<h2 data-number="9.1" class="anchored" data-anchor-id="선형-스케일링-및-중심화"><span class="header-section-number">9.1</span> (선형) 스케일링 및 중심화</h2>
<p>각 유전자는 서로 다른 발현 수준을 가지므로, 높은 발현 값을 가진 유전자는 자연스럽게 더 높은 변동성을 보입니다. 이는 후속 분석에서 잘 포착될 수 있습니다. 따라서 각 유전자에 대해 유사한 가중치를 부여하는 것이 중요합니다. 일반적으로 PCA 를 수행하기 전에 각 유전자를 중심화하고 스케일링하는 것이 권장됩니다. 이러한 정밀한 스케일링 방법은 Z- 점수 정규화라고 하며, PCA, 클러스터링 및 히트맵 시각화에 매우 유용합니다.</p>
<p>또한, 세포 주기, 시퀀싱 깊이, 미토콘드리아 비율 등과 같은 데이터셋에서 원하지 않는 변동 소스를 제거하기 위해 회귀 분석을 사용할 수 있습니다. 이는 이러한 매개변수를 모형의 공변량으로 사용하여 일반화된 선형 회귀 (GLM) 를 수행함으로써 달성됩니다. 이후 모델의 잔차는 “회귀된 데이터”로 간주됩니다.</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleData</span>(</span>
<span id="cb24-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb24-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vars.to.regress =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nCount_RNA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"percent_mito"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nFeatures_RNA"</span>),</span>
<span id="cb24-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model.use =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear"</span>,</span>
<span id="cb24-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>,</span>
<span id="cb24-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">do.scale =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb24-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">do.center =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb24-8">)</span></code></pre></div>
<p>Seurat 은 기본적으로 Seurat 객체에 있는 모든 변수 기능에 대해 스케일링을 실행합니다. 변수 기능이 있을 경우 이러한 스케일링 단계의 성능을 크게 향상시킬 수 있습니다. 그러나 결과는 변수 유전자 자체에 기반하여 PCA, 차원 축소 또는 클러스터링과 같은 후속 분석의 결과가 변경되지 않습니다. 전체 유전자 수에 대해 데이터를 스케일링하려는 경우 <code>FindVariableFeatures</code> 를 사용한 후 함수 호출에서 이를 지정할 수 있습니다.</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleData</span>(</span>
<span id="cb25-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb25-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vars.to.regress =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nCount_RNA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"percent_mito"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nFeatures_RNA"</span>),</span>
<span id="cb25-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model.use  =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear"</span>,</span>
<span id="cb25-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>,</span>
<span id="cb25-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">do.scale =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb25-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">do.center =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb25-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(SeuratObject)</span>
<span id="cb25-9">)</span></code></pre></div>
</section>
<section id="포아송-스케일링-및-중심화" class="level2" data-number="9.2">
<h2 data-number="9.2" class="anchored" data-anchor-id="포아송-스케일링-및-중심화"><span class="header-section-number">9.2</span> (포아송) 스케일링 및 중심화</h2>
<p>위의 선형 스케일링과 중심화는 로그 - 선형 데이터 분포를 가정하기 때문에, RNA-seq 데이터 (단일 세포 포함) 는 보다 음이항 분포에 가까울 수 있으며, 이로 인해 변이를 올바르게 회귀하지 못할 수 있습니다. 위의 절차의 대안으로 “포아송” 또는 “음이항” 분포를 사용하여 원시 UMI 카운트 데이터에 대해 실행할 수 있습니다. 이는 포아송 모델을 사용하여 유전자별 GLM 회귀를 수행하는 방법입니다.&nbsp;</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleData</span>(</span>
<span id="cb26-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb26-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vars.to.regress =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nCount_RNA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mito.percent"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nFeatures_RNA"</span>),</span>
<span id="cb26-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model.use =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"poisson"</span>,</span>
<span id="cb26-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>,</span>
<span id="cb26-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">do.scale =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb26-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">do.center =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb26-8">)</span></code></pre></div>
</section>
</section>
<section id="sctransform" class="level1" data-number="10">
<h1 data-number="10"><span class="header-section-number">10</span> SCTransform</h1>
<p>포아송 분포를 기반으로 한 스케일링과 중심화는 경우에 따라 데이터를 과적합시킬 수 있습니다. 이러한 문제를 극복하기 위해 유사한 풍부도를 가진 유전자 간의 정보를 통합하여 회귀 모델에서 안정된 매개변수 추정을 얻을 수 있습니다. 이 방법을&nbsp;<code>scTransform</code> 이라고 하며, 간단히 말해 제한된 음이항 모델을 사용하여 유전자별 일반 선형 모델 회귀를 수행하는 방식입니다.</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SCTransform</span>(</span>
<span id="cb27-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb27-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>,</span>
<span id="cb27-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vars.to.regress =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"percent_mito"</span>,</span>
<span id="cb27-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new.assay.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sctransform"</span>,</span>
<span id="cb27-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">do.center =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb27-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb27-8">)</span></code></pre></div>
</section>
<section id="차원-축소하기" class="level1" data-number="11">
<h1 data-number="11"><span class="header-section-number">11</span> 차원 축소하기</h1>
<p>scRNA-seq 데이터는 수천 개의 유전자로 구성된 전체 유전자 발현 공간을 포함하고 있으며, 이 공간은 상당한 노이즈를 포함하고 있어 시각화가 어렵습니다. 따라서 대부분의 scRNA-seq 분석에서는 데이터의 일부 변동을 제거하기 위해 PCA(주성분 분석) 또는 ICA(독립 성분 분석) 와 같은 방법으로 시작합니다.단순한 scRNA-seq 데이터셋에서는 몇 가지 세포 유형만 포함되어 있는 경우 PCA 가 데이터를 2 차원 또는 3 차원으로 시각화하는 데 충분할 수 있습니다. 그러나 데이터의 복잡성이 증가함에 따라 비선형 차원 축소 방법을 사용하여 데이터를 2 차원으로 투영해야 할 필요가 있습니다. 이러한 비선형 차원 축소 방법에는 t-SNE, UMAP, 확산 맵 등이 있습니다.어떤 차원 축소 방법을 선택할지는 간단한 문제가 아니며, 여러 가지 적절한 답변이 있을 수 있는 복잡한 문제입니다. 더 자세한 내용을 알고 싶다면 다음&nbsp;<a href="https://www.biorxiv.org/content/10.1101/120378v4">논문</a> 을 참고하시기 바랍니다.</p>
<section id="pca" class="level2" data-number="11.1">
<h2 data-number="11.1" class="anchored" data-anchor-id="pca"><span class="header-section-number">11.1</span> PCA</h2>
<p>주성분 분석 (PCA) 은 데이터를 새로운 좌표계로 변환하는 직교 선형 변환입니다. 이 과정에서 데이터의 가장 큰 분산이 첫 번째 주성분에 위치하고, 두 번째로 큰 분산은 두 번째 주성분에 위치하도록 합니다. 이러한 과정을 통해 데이터의 분산을 가장 잘 설명하는 방식으로 내부 구조를 드러냅니다. 일반적으로 이 동작은 데이터의 차원을 줄여 변환된 데이터의 차원을 축소하는 방식으로 이해될 수 있습니다.</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 주성분 분석 실행</span></span>
<span id="cb28-2">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunPCA</span>(</span>
<span id="cb28-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb28-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>,</span>
<span id="cb28-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">npcs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb28-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb28-7">)</span></code></pre></div>
</section>
<section id="t-sne" class="level2" data-number="11.2">
<h2 data-number="11.2" class="anchored" data-anchor-id="t-sne"><span class="header-section-number">11.2</span> t-SNE</h2>
<p>t- 분포 확률적 이웃 임베딩 (t-distributed stochastic neighbor embedding, t-SNE) 은 고차원 데이터를 저차원 공간으로 임베딩하여 시각화하는 데 적합한 비선형 차원 축소 기술입니다. 이 방법은 각 고차원 객체를 유사한 객체와 가까운 점으로 모델링하고, 서로 다른 객체는 먼 확률적 점으로 모델링하여 두 개 또는 세 개의 차원으로 표현합니다.<sup>2</sup></p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tSNE 실행</span></span>
<span id="cb29-2">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunTSNE</span>(</span>
<span id="cb29-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb29-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reduction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca"</span>,</span>
<span id="cb29-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">perplexity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>,</span>
<span id="cb29-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb29-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb29-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">eta =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,</span>
<span id="cb29-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">exaggeration_factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb29-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims.use =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb29-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb29-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_threads =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb29-13">)</span></code></pre></div>
</section>
<section id="umap" class="level2" data-number="11.3">
<h2 data-number="11.3" class="anchored" data-anchor-id="umap"><span class="header-section-number">11.3</span> UMAP</h2>
<p>UMAP(Uniform Manifold Approximation and Projection) 은 t-SNE 와 유사하게 시각화를 위한 차원 축소에 사용할 수 있는 기술이며, 일반적인 비선형 차원 축소에도 활용될 수 있습니다.<sup>3</sup></p>
<p>UMAP 알고리즘은 실제 데이터에 적용할 수 있는 실용적이고 확장 가능한 방법입니다. 이 알고리즘은 시각화 품질에서 t-SNE 와 경쟁할 만큼 우수하며, 더 나은 실행 시간 성능을 바탕으로 전역 구조를 더 잘 보존한다고 알려져 있습니다. 또한 UMAP 은 임베딩 차원에 대한 계산 제한이 없어 머신러닝을 위한 일반적인 목적의 차원 축소 기술로 널리 사용될 수 있습니다.<sup>4</sup></p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunUMAP</span>(</span>
<span id="cb30-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb30-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reduction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca"</span>,</span>
<span id="cb30-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb30-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n.components =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb30-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n.neighbors =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb30-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repulsion.strength =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb30-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb30-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n.epochs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,</span>
<span id="cb30-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metric =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"euclidean"</span>,</span>
<span id="cb30-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed.use =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>,</span>
<span id="cb30-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reduction.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"umap"</span></span>
<span id="cb30-13">)</span></code></pre></div>
</section>
<section id="확산-맵-diffusion-maps" class="level2" data-number="11.4">
<h2 data-number="11.4" class="anchored" data-anchor-id="확산-맵-diffusion-maps"><span class="header-section-number">11.4</span> 확산 맵 (Diffusion Maps)</h2>
<p>확산 맵 (Diffusion Maps, DM) 은 데이터 집합을 유클리드 공간 (일반적으로 저차원) 으로 임베딩하는 차원 축소 기법 중 하나입니다. 이 기법은 데이터에 대한 확산 연산자의 고유 벡터와 고유값을 기반으로 임베딩을 계산합니다. 임베딩된 공간에서의 점들 사이의 유클리드 거리는 해당 점들을 중심으로 하는 확률 분포 간의 “확산 거리”와 동일합니다. 이 방법은 주어진 데이터에서 랜덤 워크를 수행할 때, 인접한 데이터 포인트로 이동하는 것이 멀리 떨어진 데이터 포인트로 이동하는 것보다 더 자주 발생한다는 기본적인 관찰에 기반하여 작동합니다.확산 맵은 주로 데이터가 추출된 기저 매니폴드를 발견하는 데 중점을 두고 있으며, 이는 주성분 분석 (PCA) 이나 다차원 스케일링 (MDS) 과 같은 선형 차원 축소 방법과는 다른 접근 방식입니다.<sup>5</sup></p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 추가 라이브러리 로드</span></span>
<span id="cb31-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(destiny)</span>
<span id="cb31-3"></span>
<span id="cb31-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># destiny 패키지를 사용하여 확산 맵 실행</span></span>
<span id="cb31-5">dm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DiffusionMap</span>(</span>
<span id="cb31-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>],</span>
<span id="cb31-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb31-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_eigs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb31-9"></span>
<span id="cb31-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DM 임베딩에서 셀 이름 수정</span></span>
<span id="cb31-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(dm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>eigenvectors) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(SeuratObject)</span>
<span id="cb31-12"></span>
<span id="cb31-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SeuratObject에 DM 임베딩 추가</span></span>
<span id="cb31-14">SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dm"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateDimReducObject</span>(</span>
<span id="cb31-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">embeddings =</span> dm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>eigenvectors,                                </span>
<span id="cb31-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DC_"</span>,</span>
<span id="cb31-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span></span>
<span id="cb31-18">)</span></code></pre></div>
</section>
<section id="독립-성분-분석-ica" class="level2" data-number="11.5">
<h2 data-number="11.5" class="anchored" data-anchor-id="독립-성분-분석-ica"><span class="header-section-number">11.5</span> 독립 성분 분석 (ICA)</h2>
<p>독립 성분 분석 (Independent Component Analysis, ICA) 은 다변량 신호를 가산성 하위 구성 요소로 분리하는 계산 방법입니다. 이 기법은 하위 구성 요소가 가우시안이 아닌 신호이며 서로 통계적으로 독립적이라는 가정을 기반으로 합니다. ICA 는 블라인드 소스 분리 (blind source separation) 의 특별한 경우로 간주됩니다.<sup>6</sup></p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunICA</span>(</span>
<span id="cb32-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb32-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca"</span>,</span>
<span id="cb32-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nics =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb32-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reduction.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ica"</span></span>
<span id="cb32-6">)</span></code></pre></div>
</section>
</section>
<section id="그래프-만들기" class="level1" data-number="12">
<h1 data-number="12"><span class="header-section-number">12</span> 그래프 만들기</h1>
<p>scRNA-seq 데이터의 클러스터링을 전체 발현 데이터 혹은 PCA 공간 (선형 거리를 제공) 에서 하는 대신 그래프 (셀 간 유사성에 대한 비선형 표현) 를 먼저 만들고 클러스터링을 하는 것이 매우 효과적입니다. 그래프는 모든 셀 (노드 또는 정점) 을 나타내며, 일정한 유사성 기준에 따라 이들 사이에 에지를 연결합니다. 예를 들어, 50 개의 주요 구성 요소를 사용하여 PCA 공간에서 서로 X 거리 이하인 모든 셀 사이에 에지를 갖는 그래프를 구성할 수 있습니다.</p>
<section id="knn" class="level2" data-number="12.1">
<h2 data-number="12.1" class="anchored" data-anchor-id="knn"><span class="header-section-number">12.1</span> KNN</h2>
<p>KNN 은 “K Nearest Neighbors”의 약자로, 데이터 마이닝 및 기계 학습 분야에서 기본적이고 인기 있는 주제입니다. KNN 그래프는 두 정점&nbsp;<code>p</code> 와&nbsp;<code>q</code> 가 연결되는 그래프로, 그 거리가 K 번째로 작은 거리 중 하나인 경우에만 연결됩니다. 이때 쌍별 거리 측정치는 해밍 거리, 코사인 거리, 유클리드 거리 등 다양한 방법을 사용할 수 있습니다. 본 논문에서는 벡터 간 유사성을 측정하기 위해 유클리드 거리를 사용합니다. KNN 그래프 데이터 구조는 데이터 마이닝에서 많은 이점을 제공합니다. 예를 들어, 수십억 개의 데이터 세트에서는 KNN 그래프를 오프라인으로 사전 구축하여 인덱스로 사용하는 것이 여러 번의 온라인 KNN 검색보다 훨씬 효율적입니다.</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindNeighbors</span>(</span>
<span id="cb33-2">    SeuratObject,</span>
<span id="cb33-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>,</span>
<span id="cb33-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">compute.SNN =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FALSE로 설정하면 KNN 그래프만 계산됩니다.</span></span>
<span id="cb33-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reduction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca"</span>,</span>
<span id="cb33-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb33-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">graph.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nn"</span>,</span>
<span id="cb33-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prune.SNN =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,</span>
<span id="cb33-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k.param =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb33-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">force.recalc =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb33-11">)</span></code></pre></div>
<p>KNN 그래프는 모든 셀 간의 연결이 1 로 표시된 행렬로 나타납니다. 이를 가중치가 없는 그래프라고 하며, Seurat 의 기본 설정입니다. 그러나 일부 셀 간의 연결은 다른 연결보다 더 중요할 수 있으며, 이 경우 그래프의 가중치는 0 에서 최대 거리까지 다양해집니다. 일반적으로 거리가 작을수록 두 점이 가까워지고, 그들의 연결이 강해집니다. 이러한 경우를 가중치가 있는 그래프라고 합니다.</p>
<p>가중치가 있는 그래프와 가중치가 없는 그래프 모두 클러스터링에 적합하지만, 대규모 데이터 세트 (100,000 개 이상의 세포) 에서는 가중치가 없는 그래프에서 클러스터링하는 것이 더 빠릅니다.</p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pheatmap)</span>
<span id="cb34-2"></span>
<span id="cb34-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pheatmap</span>(</span>
<span id="cb34-4">    SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>graphs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>],</span>
<span id="cb34-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>),</span>
<span id="cb34-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border_color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey90"</span>,</span>
<span id="cb34-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb34-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_rows =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb34-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_cols =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb34-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontsize =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb34-11">)</span></code></pre></div>
</section>
<section id="snn" class="level2" data-number="12.2">
<h2 data-number="12.2" class="anchored" data-anchor-id="snn"><span class="header-section-number">12.2</span> SNN</h2>
<p>추가로 KNN 그래프 외에도 모든 두 점 간에 공유된 최근접 이웃의 수를 계산합니다. 이를 통해 “공유된 최근접 이웃” 그래프를 형성합니다. 이 과정에서는 두 점 간의 각 링크의 가중치를 해당 점들이 공유하는 이웃의 수로 대체합니다. 다시 말해, 이는 최근접 이웃 그래프 내에서 모든 두 점 사이의 길이가 2 인 경로의 수를 나타냅니다.공유된 최근접 이웃 그래프가 생성되면 모든 점 쌍이 비교됩니다. 두 점이 T 이상의 이웃을 공유하는 경우, 즉 공유된 최근접 이웃 그래프에서 가중치가 임계값 T 보다 많은 링크를 가지면, 두 점과 그들이 속한 모든 클러스터가 병합됩니다. 다시 말해, 클러스터는 임계값을 사용하여 희소화한 후 공유된 최근접 이웃 그래프에서의 연결 요소입니다.</p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindNeighbors</span>(</span>
<span id="cb35-2">    SeuratObject,</span>
<span id="cb35-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>,</span>
<span id="cb35-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">compute.SNN =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># KNN 그래프와 SNN 그래프 둘 다 계산합니다.</span></span>
<span id="cb35-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reduction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca"</span>,</span>
<span id="cb35-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb35-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">graph.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SNN"</span>,</span>
<span id="cb35-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prune.SNN =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,</span>
<span id="cb35-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k.param =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb35-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">force.recalc =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb35-11">)</span></code></pre></div>
</section>
</section>
<section id="여러-데이터셋-합치기-및-배치-보정하기" class="level1" data-number="13">
<h1 data-number="13"><span class="header-section-number">13</span> 여러 데이터셋 합치기 및 배치 보정하기</h1>
<p>기존의 일괄 보정 방법은 주로 대량 RNA-seq 을 위해 설계되었습니다. 따라서 이러한 방법을 scRNA-seq 데이터에 적용할 때는 각 일괄 처리 내의 세포 모집단 구성이 동일하다고 가정합니다. 일괄 간의 평균 유전자 발현 사이에 시스템적인 차이가 있을 경우, 이는 기술적인 차이로 귀속됩니다. 그러나 실제로는 scRNA-seq 연구에서 일괄 처리별로 모집단 구성이 동일하지 않을 수 있습니다. 각 일괄 처리에 동일한 세포 유형이 존재한다고 하더라도, 세포 유형의 풍부도는 세포 배양, 조직 추출, 분리 및 분류 등의 미세한 차이에 따라 달라질 수 있습니다. 따라서 일괄 차단 요인에 대한 추정 계수는 순수하게 기술적인 것이 아니라 구성의 차이로 인한 비생물학적 요소를 포함하게 됩니다. 이러한 계수를 기반으로 한 일괄 보정은 세포의 발현 프로파일을 부정확하게 표현할 수 있으며, 보정을 수행하지 않은 경우보다 결과가 더 나쁠 수 있습니다.<sup>7</sup></p>
<p>많은 다른 scRNA-seq 방법론과 마찬가지로, 데이터셋에 대해 어떤 일괄 보정 기술을 사용해야 할지 선택하기 어려울 수 있습니다.<sup>8</sup></p>
<section id="scanorama-사용하기" class="level2" data-number="13.1">
<h2 data-number="13.1" class="anchored" data-anchor-id="scanorama-사용하기"><span class="header-section-number">13.1</span> Scanorama 사용하기</h2>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>최근 여러 방법들이 데이터셋을 성공적으로 통합할 수 있다는 것을 보여주고 있습니다. 그러나 이러한 접근법들은 데이터셋에 적어도 하나의 공통 세포 유형이 존재한다고 가정하기 때문에, 세포 구성이 상당히 다른 데이터셋을 결합할 경우 과도한 보정이 발생할 수 있습니다.</p>
</div>
</div>
<p><code>Scanorama</code> 의 접근 방식은 두 데이터 세트 간의 유사한 요소를 찾는 상호 최근접 이웃 일치 기술을 일반화하여 여러 데이터 세트 간에 유사한 요소를 탐색합니다. 이 방식은 휴대폰으로 파노라마 사진을 촬영하는 기술과 유사합니다. <code>Scanorama</code> 는 자동으로 유사한 전사 프로필을 가진 세포를 식별하고 이를 일괄 보정 및 통합에 활용합니다. 이 방법은 강력한 특징을 가지고 있으며, 데이터셋의 크기나 출처에 크게 영향을 받지 않으며, 모든 데이터셋이 적어도 하나의 공통 세포 모집단을 공유할 필요가 없습니다.<sup>9</sup></p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(reticulate)</span>
<span id="cb36-2">scanorama <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">import</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scanorama"</span>)</span>
<span id="cb36-3"></span>
<span id="cb36-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 오브젝트를 배치 별로 분할</span></span>
<span id="cb36-5">SeuratObject.list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SplitObject</span>(</span>
<span id="cb36-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object   =</span> SeuratObject,</span>
<span id="cb36-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">split.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BATCH"</span></span>
<span id="cb36-8">)</span>
<span id="cb36-9"></span>
<span id="cb36-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 어레이 및 제네릭 데이터 만들기</span></span>
<span id="cb36-11">assaylist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb36-12">genelist  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb36-13"></span>
<span id="cb36-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(SeuratObject.list)) {</span>
<span id="cb36-15">    assaylist[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(</span>
<span id="cb36-16">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetAssayData</span>(SeuratObject.list[[i]], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>))</span>
<span id="cb36-17">    )</span>
<span id="cb36-18">    genelist[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(SeuratObject.list[[i]])</span>
<span id="cb36-19">}</span>
<span id="cb36-20"></span>
<span id="cb36-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 통합 및 보정</span></span>
<span id="cb36-22">integrated.data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scanorama<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">integrate</span>(assaylist, genelist)</span>
<span id="cb36-23">corrected.data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scanorama<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">correct</span>(</span>
<span id="cb36-24">    assaylist,</span>
<span id="cb36-25">    genelist,</span>
<span id="cb36-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">return_dense =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb36-27">)</span>
<span id="cb36-28">integrated.corrected.data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scanorama<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">correct</span>(</span>
<span id="cb36-29">    assaylist,</span>
<span id="cb36-30">    genelist,</span>
<span id="cb36-31">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">return_dimred =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb36-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">return_dense =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb36-33">)</span>
<span id="cb36-34"></span>
<span id="cb36-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 결합 및 이름 지정</span></span>
<span id="cb36-36">intdata <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(integrated.corrected.data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]], t)</span>
<span id="cb36-37">panorama <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(cbind, intdata)</span>
<span id="cb36-38"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(panorama) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(integrated.corrected.data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]])</span>
<span id="cb36-39"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(panorama) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(assaylist, rownames))</span>
<span id="cb36-40"></span>
<span id="cb36-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 차원 축소 결과 결합</span></span>
<span id="cb36-42">intdimred <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do.call</span>(rbind, integrated.corrected.data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span>
<span id="cb36-43"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(intdimred) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PC_"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb36-44"></span>
<span id="cb36-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Seurat에서 Elbow Plot을 그리기 위해 표준 편차 추가</span></span>
<span id="cb36-46">stdevs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(intdimred, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">MARGIN =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span> sd)</span>
<span id="cb36-47"></span>
<span id="cb36-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 새로운 어레이 오브젝트 만들기</span></span>
<span id="cb36-49">SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>assays[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pano"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateAssayObject</span>(</span>
<span id="cb36-50">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> panorama,</span>
<span id="cb36-51">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.cells =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb36-52">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb36-53">)</span>
<span id="cb36-54"></span>
<span id="cb36-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PCA 결과 추가</span></span>
<span id="cb36-56">SeuratObject[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca_scanorama"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateDimReducObject</span>(</span>
<span id="cb36-57">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">embeddings =</span> intdimred,</span>
<span id="cb36-58">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stdev =</span> stdevs,</span>
<span id="cb36-59">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PC_"</span>,</span>
<span id="cb36-60">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pano"</span></span>
<span id="cb36-61">)</span></code></pre></div>
</section>
<section id="harmony-사용하기" class="level2" data-number="13.2">
<h2 data-number="13.2" class="anchored" data-anchor-id="harmony-사용하기"><span class="header-section-number">13.2</span> Harmony 사용하기</h2>
<p>Harmony 는 주어진 저차원 임베딩 (예: 주성분 분석) 을 기반으로 시작합니다. Harmony 는 먼저 이 임베딩을 사용하여 셀을 여러 데이터 세트 클러스터로 그룹화합니다. 부드러운 전이를 고려하기 위해 소프트 클러스터링을 사용하여 셀을 잠재적으로 여러 클러스터에 할당합니다. 이러한 클러스터는 이산적인 세포 유형을 식별하기 위한 것이 아니라, 세포 상태 간의 부드러운 전환을 반영하는 대리 변수로 기능합니다. 클러스터링이 완료되면 각 데이터셋에는 클러스터별 중심점이 생성됩니다. 이 중심점은 클러스터별 선형 보정 계수를 계산하는 데 사용됩니다. 클러스터가 세포 유형과 상태에 해당하므로, 클러스터별 보정 계수는 개별 세포 유형 및 세포 상태에 특정한 보정 계수로 작용합니다. 이를 통해 Harmony 는 미묘한 세포 표현형에 민감한 간단한 선형 조정 함수를 학습합니다. 마지막으로, 각 세포는 이러한 클러스터의 가중 평균을 할당받고, 세포별 선형 요소에 의해 보정됩니다. 각 세포가 여러 클러스터에 속할 수 있기 때문에, 각 세포에는 잠재적으로 고유한 보정 계수가 부여됩니다. Harmony 는 셀 클러스터 할당이 안정될 때까지 이 네 단계를 반복합니다. Harmony 는 대규모 데이터셋으로 확장 가능하며, 다양한 인구 집단과 세부적인 하위 집단을 동시에 식별할 수 있는 유연성을 갖추고 있습니다. 또한 복잡한 실험 설계를 수용할 수 있으며, 다양한 모드 간 통합이 가능한 강력한 알고리즘입니다.<sup>10</sup></p>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 추가 라이브러리 로드</span></span>
<span id="cb37-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(harmony)</span>
<span id="cb37-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(SeuratWrappers)</span>
<span id="cb37-4"></span>
<span id="cb37-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Harmony 실행</span></span>
<span id="cb37-6">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunHarmony</span>(</span>
<span id="cb37-7">  SeuratObject,</span>
<span id="cb37-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group.by.vars =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"batch"</span></span>
<span id="cb37-9">)</span></code></pre></div>
</section>
</section>
<section id="클러스터링-하기" class="level1" data-number="14">
<h1 data-number="14"><span class="header-section-number">14</span> 클러스터링 하기</h1>
<p>scRNA-seq 연구의 주요 목표 중 하나는 유사한 세포들을 클러스터로 그룹화하는 것입니다. 클러스터를 정의하는 방법은 여러 가지가 있으며, K- 평균, 계층적 클러스터링, 친화 전파와 같은 전통적인 접근 방식이 있지만, 최근 대부분의 파이프라인에서는 그래프를 사용하여 클러스터를 상호 연결된 세포 그룹으로 정의합니다 (위의 섹션 참조).그래프에서 클러스터를 정의하기 위해 Louvain, Leiden, Infomap 과 같은 다양한 커뮤니티 탐지 알고리즘이 사용됩니다. 이들 알고리즘의 주요 아이디어는 데이터셋 내에서 서로 더 많은 엣지 (높은 유사도의 연결) 를 가진 세포 그룹을 찾는 것입니다.모든 클러스터링 방법은 세포 간의 페어와이즈 거리를 정의하는 것으로 시작합니다. 일반적으로 이는 데이터를 스케일링하고 변수를 선택한 후 PCA 공간에서 세포 간의 유클리드 거리를 계산함으로써 수행됩니다. 따라서 클러스터링 결과는 데이터 전처리 단계에서의 선택에 크게 의존하게 됩니다. 특히 변수 유전자 선택과 PCA 에서 포함할 주성분의 수가 중요한 요소입니다.그래프 기반 방법에서는 PCA 공간에서의 거리를 사용하여 이웃하는 세포 사이에 엣지가 있는 그래프를 생성합니다. 이때 KNN 그래프의 이웃 수와 SNN 구성을 위한 가지치기 설정과 같은 여러 매개변수가 클러스터링 결과에 영향을 미칩니다.<sup>11</sup></p>
<section id="루브앵-louvain" class="level2" data-number="14.1">
<h2 data-number="14.1" class="anchored" data-anchor-id="루브앵-louvain"><span class="header-section-number">14.1</span> 루브앵 (Louvain)</h2>
<p>루브앵 (Louvain) 방법은 Blondel 이 개발한 대규모 네트워크에서 커뮤니티를 추출하는 기법입니다.<sup>12</sup> 이 방법은 네트워크 노드 수에 대해 <img src="https://latex.codecogs.com/png.latex?O(n.log2n)"> 의 시간 복잡도를 가지는 탐욕적 최적화 방법입니다. 최적화하는 값은 모듈러리티 (modularity) 로 이는 커뮤니티 내 링크 밀도를 커뮤니티 간 링크와 비교하여 측정하는 범위 내 값입니다. 이 값을 최적화하는 것은 이론적으로 주어진 네트워크의 노드를 가장 잘 그룹화하는 결과를 도출하지만 모든 노드를 그룹으로 나누는 모든 가능한 반복 과정을 거치는 것은 비실용적이므로 휴리스틱 알고리즘이 사용됩니다.&nbsp;</p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindClusters</span>(</span>
<span id="cb38-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb38-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">graph.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SNN"</span>,</span>
<span id="cb38-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resolution =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>,</span>
<span id="cb38-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">algorithm =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1로 설정하면 Louvain을 의미합니다.</span></span>
<span id="cb38-6">)</span></code></pre></div>
<p>클러스터 수는 <code>resolution</code> 매개변수를 사용하여 제어할 수 있으며 값이 높을수록 더 많은 (작은) 클러스터가 생성됩니다.</p>
</section>
<section id="라이든-leiden" class="level2" data-number="14.2">
<h2 data-number="14.2" class="anchored" data-anchor-id="라이든-leiden"><span class="header-section-number">14.2</span> 라이든 (Leiden)</h2>
<p>라이든 알고리즘은 반복적으로 적용되어 모든 커뮤니티의 하위 집합이 지역적으로 최적화된 분할로 수렴합니다.<sup>13</sup> 이 알고리즘은 빠른 로컬 이동 접근 방식을 기반으로 하여 루브앵 알고리즘보다 더 빠르게 실행됩니다. 라이든 알고리즘은 다음과 같은 세 단계로 구성됩니다:</p>
<ol type="1">
<li><strong>노드의 로컬 이동</strong>: 네트워크 내의 각 노드는 주변 노드와의 연결을 고려하여 위치를 조정합니다. 이 과정에서 각 노드는 자신의 이웃 중에서 가장 높은 모듈러리티를 제공하는 위치로 이동하게 됩니다. 이를 통해 각 노드가 속한 커뮤니티가 더욱 명확해집니다.</li>
<li><strong>분할의 정제</strong>: 초기 클러스터링 결과를 바탕으로, 각 커뮤니티 내에서 노드의 재배치를 통해 더 나은 분할을 찾습니다. 이 단계에서는 커뮤니티 간의 경계를 명확히 하고, 중복된 연결을 줄이는 과정이 포함됩니다.</li>
<li><strong>정제된 분할을 바탕으로 네트워크를 집계</strong>: 정제된 분할을 사용하여 새로운 집계 네트워크를 생성합니다. 이때, 정제되지 않은 분할을 기반으로 초기 집계 네트워크의 분할을 생성하여, 전체 네트워크 구조를 반영합니다.</li>
</ol>
<p>이러한 과정을 통해 라이든 알고리즘은 데이터의 구조를 효과적으로 파악하고, 커뮤니티 간의 관계를 명확히 하여 최적화된 결과를 도출합니다. 라이든 알고리즘은 대규모 네트워크에서도 효율적으로 작동하며, 다양한 분야에서 널리 사용되고 있습니다.</p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1">SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindClusters</span>(</span>
<span id="cb39-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb39-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">graph.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SNN"</span>,</span>
<span id="cb39-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resolution =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>,</span>
<span id="cb39-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">algorithm =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4로 설정하면 Leiden을 의미합니다.</span></span>
<span id="cb39-6">)</span></code></pre></div>
<p>클러스터 수는 <code>resolution</code> 매개변수를 사용하여 제어할 수 있으며 값이 높을수록 더 많은 (작은) 클러스터가 생성됩니다.</p>
</section>
<section id="계층적-클러스터링" class="level2" data-number="14.3">
<h2 data-number="14.3" class="anchored" data-anchor-id="계층적-클러스터링"><span class="header-section-number">14.3</span> 계층적 클러스터링</h2>
<p>계층적 클러스터링 (Hierarchical Clustering, HC) 은 클러스터의 계층 구조를 구축하는 클러스터 분석 방법입니다. 이 방법은 일반적으로 두 가지 전략으로 나뉘며, 각각 합병적 (agglomerative) 또는 분할적 (divisive) 입니다. 병합과 분할은 보통 탐욕적인 방식으로 결정됩니다. 계층적 클러스터링의 결과는 일반적으로 덴드로그램 (dendrogram) 으로 시각화됩니다.</p>
<p>계층적 병합 클러스터링 (Hierarchical Agglomerative Clustering, HAC) 의 표준 알고리즘은 <img src="https://latex.codecogs.com/png.latex?O(n%5E3)"> 의 시간 복잡도를 가지며 <img src="https://latex.codecogs.com/png.latex?O(n%5E2)"> 의 메모리를 필요로 하기 때문에, 중간 규모의 데이터 세트에서도 느릴 수 있습니다. 병합적인 경우에는 어떤 클러스터를 결합할 것인지, 분할적인 경우에는 어떤 클러스터를 분할할 것인지를 결정하기 위해 관측값 집합 간의 불일치 측정이 필요합니다. 대부분의 계층적 클러스터링 방법에서는 적절한 메트릭 (관측값 쌍 간의 거리 측정) 과 연결 기준을 사용하여 관측값 집합의 불일치를 관측값 쌍 간 거리의 함수로 정의합니다.</p>
<p><code>R</code> 의 기본 <code>stats</code> 패키지에는 모든 샘플 쌍 사이의 거리를 계산하는 <code>dist()</code> 함수가 포함되어 있습니다. <code>dist()</code> 에서 사용할 수 있는 거리 방법은 다음과 같습니다:</p>
<ul>
<li>유클리드 거리 (euclidean)</li>
<li>최대 거리 (maximum)</li>
<li>맨하탄 거리 (manhattan)</li>
<li>캔버라 거리 (canberra)</li>
<li>이진 거리 (binary)</li>
<li>민코프스키 거리 (minkowski)</li>
</ul>
<p>또한, 이미 셀 간 거리 정보를 포함하는 그래프 (KNN 또는 SNN) 를 사용하여 직접 계층적 클러스터링을 수행할 수도 있습니다. 그러나 그래프의 거리는 반전되어 있으므로 (0 은 멀리 떨어져 있음을 나타내고 1 은 가깝다는 것을 나타냄), 그래프의 최대값 (인접 SNN 의 경우 1) 을 뺀 후 0 이 가까운 거리를 나타내고 1 이 먼 거리를 나타내도록 조정해야 합니다.</p>
<p>샘플 간의 거리를 계산한 후에는 본격적인 계층적 클러스터링을 진행할 수 있습니다. 이를 위해 <code>hclust()</code> 함수를 사용하며, 위에서 생성한 거리 객체를 활용하여 간단히 실행할 수 있습니다. 사용 가능한 방법에 대한 자세한 내용은 <a href="https://en.wikipedia.org/wiki/Hierarchical_clustering_of_networks">HC for networks</a> 에서 확인할 수 있습니다.</p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PCA에서 HC 실행</span></span>
<span id="cb40-2">h_pca <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hclust</span>(</span>
<span id="cb40-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist</span>(</span>
<span id="cb40-4">        SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>],</span>
<span id="cb40-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"euclidean"</span></span>
<span id="cb40-6">    ),</span>
<span id="cb40-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ward.D2"</span></span>
<span id="cb40-8">)</span>
<span id="cb40-9"></span>
<span id="cb40-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프에서 HC 실행</span></span>
<span id="cb40-11">h_graph <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hclust</span>(</span>
<span id="cb40-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.dist</span>(SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>graphs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>SNN),</span>
<span id="cb40-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ward.D2"</span></span>
<span id="cb40-14">)</span></code></pre></div>
<p>클러스터 계층이 정의되면, 다음 단계는 특정 클러스터에 속하는 샘플을 식별하는 것입니다.</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(h, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<p>세포에 대한 덴드로그램을 확인한 후, 고정된 높이 (threshold) 에서 나무 (tree) 를 자를 수 있습니다. 이 작업은&nbsp;<code>cutree</code>&nbsp;함수를 사용하여 수행할 수 있습니다. 또한, 해상도에 따라 다른 수준에서 나무를 자르는 것도 가능합니다.</p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 덴드로그램 높이를 기반으로 나무 자르기</span></span>
<span id="cb42-2">SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>HC_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cutree</span>(</span>
<span id="cb42-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tree =</span> h,</span>
<span id="cb42-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span></span>
<span id="cb42-5">)</span>
<span id="cb42-6"></span>
<span id="cb42-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 클러스터 수를 기반으로 나무 자르기</span></span>
<span id="cb42-8">SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>HC_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cutree</span>(</span>
<span id="cb42-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tree =</span> h,</span>
<span id="cb42-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb42-11">)</span>
<span id="cb42-12"></span>
<span id="cb42-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 클러스터에 속하는 셀 수 확인</span></span>
<span id="cb42-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>HC_res)</span></code></pre></div>
<p>클러스터의 수는 높이 (h) 를 기준으로 하거나 직접 k 매개변수를 설정하여 조절할 수 있습니다.</p>
</section>
<section id="k--평균-클러스터링" class="level2" data-number="14.4">
<h2 data-number="14.4" class="anchored" data-anchor-id="k--평균-클러스터링"><span class="header-section-number">14.4</span> K- 평균 클러스터링</h2>
<p>K- 평균 클러스터링 (k-means clustering) 은 신호 처리에서 시작된 벡터 양자화 방법으로, n 개의 관측값을 k 개의 클러스터로 분할하여 각 관측값이 평균 (클러스터 중심) 과 가장 가까운 클러스터에 속하도록 하는 것을 목표로 합니다. 이 평균은 클러스터의 프로토타입 역할을 합니다. 그러나 알고리즘은 전역 최적값으로 수렴하는 것을 보장하지 않으며, 결과는 초기 클러스터 설정에 따라 달라질 수 있습니다. 일반적으로 알고리즘은 빠르게 실행되므로 서로 다른 초기 조건으로 여러 번 실행하는 것이 일반적입니다. K- 평균 클러스터링은 주로 비슷한 공간 범위의 클러스터 (모두 같은 크기) 를 찾지만, 기대값 최대화 메커니즘 덕분에 클러스터가 다양한 형태를 가질 수 있습니다.</p>
<p>K- 평균은 많은 응용 분야에서 널리 사용되는 클러스터링 알고리즘입니다. <code>R</code> 에서는 <code>kmeans</code> 함수를 사용하여 쉽게 적용할 수 있습니다. 일반적으로 이 알고리즘은 표현 데이터의 축소된 차원 표현 (대부분 PCA 를 사용함) 에 적용되며, 이는 저차원 거리의 해석 가능성 덕분입니다. K- 평균 클러스터링을 수행할 때는 클러스터의 수를 미리 정의해야 하며, 결과는 클러스터 중심의 초기화에 따라 달라지므로 일반적으로 다양한 시작 구성으로 k-means 를 실행하는 것이 권장됩니다 (<code>nstart</code> 인수를 통해 설정 가능).</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb43-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 재현성을 위해 설정합니다.</span></span>
<span id="cb43-2"></span>
<span id="cb43-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># K-means 클러스터링 실행</span></span>
<span id="cb43-4">SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>kmeans_12 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kmeans</span>(</span>
<span id="cb43-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>],</span>
<span id="cb43-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">centers =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb43-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter.max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb43-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nstart =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb43-9">)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cluster</span></code></pre></div>
<p>클러스터의 수는&nbsp;<code>centers</code>&nbsp;매개변수를 사용하여 설정할 수 있습니다. 그렇다면 어떤 클러스터링 해상도를 선택해야 할까요?클러스터링 해상도를 결정하는 것은 간단한 문제가 아니며, 여러 방법을 통해 접근할 수 있습니다. 합리적인 클러스터 수를 정하는 것은 복잡한 과정으로, 샘플에 대한 생물학적 지식과 조사가 필요합니다.차별적 유전자 발현 (Differential gene expression) 분석은 이 과정에 큰 도움이 될 수 있습니다. 만약 두 클러스터가 동일한 차별적 유전자 발현을 보이고 구별할 만한 유전자가 없다면, 이들을 개별 클러스터로 분리하는 것은 바람직하지 않을 수 있습니다. 또한, 품질 관리 지표 (QC metrics) 를 통해 생성된 클러스터를 검토하여, 일부 클러스터가 낮은 품질의 세포나 이중체로 구성되지 않았는지 확인하는 것이 중요합니다.</p>
</section>
<section id="클러스터링-결과-비교하기" class="level2" data-number="14.5">
<h2 data-number="14.5" class="anchored" data-anchor-id="클러스터링-결과-비교하기"><span class="header-section-number">14.5</span> 클러스터링 결과 비교하기</h2>
<p>클러스터링 결과를 다른 클러스터링 기법과 비교하는 것은 매우 유용합니다. 이를 다음과 같은 방식으로 수행할 수 있습니다: 위 코드는 비교 대상 클래스에 속하는 세포 수에 대한 정보를 포함하는 테이블을 생성합니다. 이 데이터를 막대 그래프로 시각화하여 클러스터링 결과를 쉽게 비교할 수 있습니다.</p>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 비교 테이블 생성</span></span>
<span id="cb44-2">comparison_table <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(</span>
<span id="cb44-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb44-4">        SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data[,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"METADATA_FACTOR_1"</span>],</span>
<span id="cb44-5">        SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data[,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"METADATA_FACTOR_2"</span>]</span>
<span id="cb44-6">    )</span>
<span id="cb44-7">)</span>
<span id="cb44-8"></span>
<span id="cb44-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터를 백분율로 변환</span></span>
<span id="cb44-10">comparison_table <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(comparison_table) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(comparison_table)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb44-11"></span>
<span id="cb44-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 막대 그래프 그리기</span></span>
<span id="cb44-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">barplot</span>(</span>
<span id="cb44-14">    comparison_table,</span>
<span id="cb44-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(comparison_table),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 색상 설정</span></span>
<span id="cb44-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,</span>
<span id="cb44-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">las =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 축 라벨 방향 설정</span></span>
<span id="cb44-18">)</span></code></pre></div>
</section>
</section>
<section id="차등발현-differentially-expressed-분석" class="level1" data-number="15">
<h1 data-number="15"><span class="header-section-number">15</span> 차등발현 (Differentially Expressed) 분석</h1>
<p>클러스터가 정의된 후, 각 클러스터를 특징짓는 유전자를 찾는 것이 종종 유익합니다. scRNA-seq 에서의 차별적 발현 (DE) 분석 방법은 일반적인 RNA-seq 방법과 다소 다릅니다. 한편으로는 대량 RNA-seq 에 비해 샘플 (개별 세포) 의 수가 훨씬 많지만, 반면에 scRNA-seq 데이터는 노이즈가 많고 드롭아웃에 취약하여 분석이 복잡해집니다.<sup>14</sup></p>
<section id="degdifferential-expression-gene-찾기" class="level2" data-number="15.1">
<h2 data-number="15.1" class="anchored" data-anchor-id="degdifferential-expression-gene-찾기"><span class="header-section-number">15.1</span> DEG(Differential expression gene) 찾기</h2>
<p>차별적 발현 유전자 (DEG) 는 종종 “마커 유전자”로 언급되지만, 대부분의 DE 테스트는 한 그룹의 세포와 다른 그룹의 세포 간에 발현이 더 높은 유전자를 감지하도록 설계되었다는 점을 인식해야 합니다. DEG 가 자동으로 세포 유형을 위한 고유한 마커가 되지는 않습니다.Seurat 패키지에는 DE 분석을 위한 여러 가지 테스트가 구현되어 있으며, 일부는 scRNA-seq 에 특화되어 있고, 다른 일부는 벌크 RNA-seq 에서 사용됩니다.</p>
<ul>
<li><strong>wilcox</strong>: Wilcoxon 순위 합 검정을 사용하여 두 그룹의 세포 간 차이가 있는 유전자 식별</li>
<li><strong>bimod</strong>: 단일 세포 유전자 발현에 대한 우도 비율 검정 <sup>15</sup></li>
<li><strong>roc</strong>: ROC 분석을 사용하여 유전자 발현의 ’마커’를 식별합니다. 각 유전자에 대해 해당 유전자를 기반으로 구축된 분류기를 평가하여 두 그룹의 세포를 분류합니다. AUC 를 사용하여 각 유전자에 대한 분류기의 성능을 평가하며, AUC 값이 1 인 경우 해당 유전자의 발현 값만으로 두 그룹을 완벽하게 구분할 수 있음을 의미합니다. AUC 값이 0 인 경우 완벽한 분류가 이루어지지만 반대 방향입니다. AUC 값이 0.5 인 경우 해당 유전자가 두 그룹을 구분하는 데 예측력이 없음을 나타냅니다. 이 방법은 예상되는 차별적 발현 유전자의 순위를 지정된&nbsp;<strong>예측력</strong><img src="https://latex.codecogs.com/png.latex?(abs(AUC-0.5)%20*%202)"> 행렬로 반환합니다.</li>
<li><strong>t</strong>: 두 그룹의 세포 간 차이가 있는 유전자 식별을 위한 Student 의 t-test 사용</li>
<li><strong>negbinom</strong>: 음이항 일반화 선형 모델을 사용하여 두 그룹의 세포 간 차이가 있는 유전자 식별 (UMI 기반 데이터 세트에만 사용)</li>
<li><strong>poisson</strong>: 포아송 일반화 선형 모델을 사용하여 두 그룹의 세포 간 차이가 있는 유전자 식별 (UMI 기반 데이터 세트에만 사용)</li>
<li><strong>LR</strong>: 로지스틱 회귀 모델을 사용하여 차이가 있는 유전자 식별. 각 기능을 개별적으로 사용하여 그룹 소속을 예측하는 로지스틱 회귀 모델을 구성하고 이를 가능도 비율 검정과 비교합니다.</li>
<li><strong>MAST</strong>: scRNA-seq 데이터에 특화된 허들 모델을 사용하여 두 그룹의 세포 간 차이가 있는 유전자 식별. DE 테스트를 실행하기 위해&nbsp;<code>MAST</code>&nbsp;패키지를 사용합니다.</li>
<li><strong>DESeq2</strong>: DESeq2 를 사용하여 두 그룹의 세포 간 차이가 있는 유전자 식별. DESeq2 는 음이항 분포를 사용하는 모델에 기초하며, 이 테스트는 세포 그룹 간 평균 차이 (또는 감지율의 백분율) 에 따른 유전자의 사전 필터링을 지원하지 않습니다. 그러나 유전자는 세포 그룹 모두에서 최소 감지율 (<code>min.pct</code>) 기준으로 사전 필터링될 수 있습니다. 이 방법을 사용하려면&nbsp;<a href="https://bioconductor.org/packages/release/bioc/html/DESeq2.html">DESeq2</a> 를 설치하십시오.</li>
</ul>
<p><strong>Seurat</strong> 객체의 모든 클러스터에 대해 각 클러스터와 모든 다른 세포 간의 DE 예측을 실행하려면&nbsp;<code>FindAllMarkers</code>&nbsp;함수를 사용하세요.</p>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb45-1">markers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindAllMarkers</span>(</span>
<span id="cb45-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb45-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>,</span>
<span id="cb45-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">logfc.threshold =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>,</span>
<span id="cb45-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">test.use =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wilcox"</span>,</span>
<span id="cb45-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slot =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>,</span>
<span id="cb45-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.pct =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb45-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.diff.pct =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>,</span>
<span id="cb45-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">only.pos =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb45-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.cells.per.ident =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>,</span>
<span id="cb45-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">latent.vars =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb45-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.cells.feature =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb45-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.cells.group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb45-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pseudocount.use =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb45-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">return.thresh =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb45-16">)</span></code></pre></div>
<p>아래에 나타낸 여러 가지 기준을 통해 특정 유전자를 포함하거나 출력을 필터링할 수 있습니다. 예를 들어, 상향 조절된 유전자만 테스트하면 분석 속도를 높일 수 있습니다:</p>
<ul>
<li><code>only.pos = TRUE</code> 를 사용하여 상향 조절된 유전자만 테스트</li>
<li>유전자가 발현된 최소 세포 수를 설정하는&nbsp;<code>min.cells.feature</code></li>
<li>유전자가 발현된 클러스터의 최소 세포 수를 나타내는&nbsp;<code>min.cells.group</code></li>
<li>클러스터에서&nbsp;<code>min.pct</code>&nbsp;이상 발현된 유전자만 테스트</li>
<li>두 그룹 간의 발현 비율 차이가&nbsp;<code>min.pct.diff</code> 인 유전자만 테스트</li>
<li><code>p.value &lt; return.thresh</code> 인 유전자만 반환</li>
<li><code>logFoldchange &gt; logfc.threshold</code> 인 유전자만 반환</li>
</ul>
<p>또한 고려해야 할 몇 가지 중요한 사항이 있습니다:</p>
<blockquote class="blockquote">
<p>객체에 여러 분석이 포함된 경우, 올바른 분석 결과에서 차등발현 분석을 실행해야 합니다. 예를 들어, 데이터가 통합된 경우에는 <code>Batch</code> 를 고려해야 합니다.</p>
</blockquote>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1">cell_selection <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> SeuratObject[, SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>seurat_clusters <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb46-2">cell_selection <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetIdent</span>(cell_selection, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Batch"</span>)</span>
<span id="cb46-3"></span>
<span id="cb46-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 차별적 발현 계산</span></span>
<span id="cb46-5">DGE_cell_selection <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindAllMarkers</span>(</span>
<span id="cb46-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> cell_selection,</span>
<span id="cb46-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">logfc.threshold =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb46-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">test.use =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wilcox"</span>,</span>
<span id="cb46-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.pct =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb46-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.diff.pct =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>,</span>
<span id="cb46-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">only.pos =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb46-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.cells.per.ident =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>,</span>
<span id="cb46-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">latent.vars =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb46-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.cells.feature =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb46-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.cells.group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb46-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pseudocount.use =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb46-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">return.thresh =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb46-18">)</span></code></pre></div>
<p>또한&nbsp;<code>FindMarkers</code>&nbsp;함수를 사용하여 두 세트의 세포 간의 차이를 테스트할 수 있으며, 각 그룹에 대한 셀 이름을&nbsp;<code>cells</code>&nbsp;및&nbsp;<code>cells</code> 로 지정할 수 있습니다.</p>
</section>
<section id="deg-시각화하기" class="level2" data-number="15.2">
<h2 data-number="15.2" class="anchored" data-anchor-id="deg-시각화하기"><span class="header-section-number">15.2</span> DEG 시각화하기</h2>
<p>DE 테스트를 실행한 후, 다양한 방법으로 유전자를 시각화하고 싶을 수 있습니다. 그러나 먼저 각 클러스터에서 상위 DEG 를 추출해야 합니다. 각 클러스터별로 상위 5 개의 유전자를 선택하는 방법은 다음과 같습니다:</p>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb47-1">top5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> markers <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(cluster) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">top_n</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, p_val_adj)</span></code></pre></div>
<p>이를 히트맵으로 시각화할 수 있습니다:</p>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb48-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DoHeatmap</span>(</span>
<span id="cb48-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb48-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(top5<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene)),</span>
<span id="cb48-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seurat_clusters"</span>,</span>
<span id="cb48-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span></span>
<span id="cb48-6">)</span></code></pre></div>
<p>또는 각 클러스터가 평균 발현으로 색상별로 나타내고, 해당 유전자를 발현하는 세포의 비율로 크기별로 나타내는 점 도플롯을 사용할 수 있습니다:</p>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb49-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># coord_flip() 함수를 위해 필요</span></span>
<span id="cb49-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2) </span>
<span id="cb49-3"></span>
<span id="cb49-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DotPlot</span>(</span>
<span id="cb49-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb49-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(top5<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene)),</span>
<span id="cb49-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seurat_clusters"</span>,</span>
<span id="cb49-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span></span>
<span id="cb49-9">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>()</span></code></pre></div>
<p>또한 각 유전자에 대해 바이올린 플롯을 그릴 수 있습니다:</p>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb50-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">VlnPlot</span>(</span>
<span id="cb50-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb50-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(top5<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene)),</span>
<span id="cb50-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb50-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seurat_clusters"</span>,</span>
<span id="cb50-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span></span>
<span id="cb50-7">)</span></code></pre></div>
<p>바이올린 플롯을 배치별로 분할할 수도 있습니다. 이것은 감지된 DEG 가 단일 배치로 인해 주도되는 것이 아닌지 확인하는 데 매우 유용할 수 있습니다.</p>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb51-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">VlnPlot</span>(</span>
<span id="cb51-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">object =</span> SeuratObject,</span>
<span id="cb51-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(top5<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene)),</span>
<span id="cb51-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb51-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seurat_clusters"</span>,</span>
<span id="cb51-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">assay =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>,</span>
<span id="cb51-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">split.by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Batch"</span></span>
<span id="cb51-8">)</span></code></pre></div>
</section>
</section>
<section id="기능적-풍부도-분석-functional-enrichment-anaysis" class="level1" data-number="16">
<h1 data-number="16"><span class="header-section-number">16</span> 기능적 풍부도 분석 (Functional enrichment anaysis)</h1>
<p><code>enrichR</code> 을 사용해 DEG 에 대하여 기능적 풍부도 분석을 할 수 있습니다.</p>
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb52-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 추가 패키지 불러오기</span></span>
<span id="cb52-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(enrichR)</span>
<span id="cb52-3"></span>
<span id="cb52-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용 가능한 데이터베이스를 확인</span></span>
<span id="cb52-5">enrichR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">listEnrichrDbs</span>()</span>
<span id="cb52-6"></span>
<span id="cb52-7">enrich_results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enrichr</span>(</span>
<span id="cb52-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">genes =</span> top5<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene[top5<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cluster <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>], <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 관심있는 클러스터 이름</span></span>
<span id="cb52-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">databases =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KEGG_2019_Human"</span> )[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용할 데이터베이스 </span></span></code></pre></div>
<p><code>enrichR</code> 에 포함된 유용한 데이터베이스 목록은 다음과 같습니다:</p>
<ul>
<li>GO_Biological_Process_2017b</li>
<li>KEGG_2019_Human</li>
<li>KEGG_2019_Mouse</li>
<li>WikiPathways_2019_Human</li>
<li>WikiPathways_2019_Mouse</li>
</ul>
<p>결과를 시각화하기 위해 간단한 막대 그래프를 사용할 수 있습니다. 예를 들어:</p>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb53-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rafalib)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 추가 패키지 로드</span></span>
<span id="cb53-2"></span>
<span id="cb53-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 설정</span></span>
<span id="cb53-4">rafalib<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mypar</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb53-5"></span>
<span id="cb53-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 막대 그래프 그리기</span></span>
<span id="cb53-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">barplot</span>(</span>
<span id="cb53-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(enrich_results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>P.value)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb53-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names.arg =</span> enrich_results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Term[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb53-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">horiz =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb53-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">las =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb53-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb53-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex.names =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이름 크기 설정 (예시 값)</span></span>
<span id="cb53-14">)</span>
<span id="cb53-15"></span>
<span id="cb53-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기준선 추가</span></span>
<span id="cb53-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 유의성 기준선</span></span>
<span id="cb53-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 0 기준선</span></span></code></pre></div>
</section>
<section id="경로-분석-trajectory-analysis" class="level1" data-number="17">
<h1 data-number="17"><span class="header-section-number">17</span> 경로 분석 (trajectory analysis)</h1>
<p>탐색적 데이터 분석 및 연구 데이터에는 다양한 방법으로 수행되는 데이터 처리 단계가 포함됩니다. 이러한 데이터 처리 단계는 경로 분석에 필요한 정보를 준비하는 데 도움을 줍니다. 주요 단계는 다음과 같습니다:</p>
<ol type="1">
<li>경로 분석을 수행할 차원 축소 기법 선택 (PCA &gt; MDS &gt; DM &gt; UMAP &gt; t-SNE)</li>
<li>세포 클러스터링 정보</li>
<li>경로 분석을 위한 “최적” 방법 선택은 일반적으로 다른 scRNA-seq 분석과 마찬가지로 간단하지 않은 과정입니다.<sup>16</sup></li>
</ol>
<section id="slingshot-사용하기" class="level2" data-number="17.1">
<h2 data-number="17.1" class="anchored" data-anchor-id="slingshot-사용하기"><span class="header-section-number">17.1</span> Slingshot 사용하기</h2>
<p>슬링샷 (Slingshot) 은 차원 축소, 클러스터링 및 주요 곡선 (Principal curves) 과 같은 다른 경로 분석 방법에서 발견되는 여러 인기 있는 구성 요소를 포함하고 있어 가장 전형적인 방법 중 하나입니다. 슬링샷은 특정 차원 축소 방법에 제한되지 않으며, 어떤 방법을 사용할지 결정할 때 고려해야 할 중요한 세 가지 사항이 있습니다:</p>
<ol type="1">
<li>데이터의 전체 복잡성을 포착하기에 충분한 차원을 사용해야 합니다. 이는 특히 PCA 및 MDS 와 같은 선형 차원 축소에서 중요하며, 경로의 위상이 이분화보다 복잡할 경우 더욱 그렇습니다. 두 차원에서 경로가 명확하게 보이지 않을 때도 여전히 다차원에서 경로를 시각화할 수 있습니다.</li>
<li>일부 차원 축소 방법은 고밀도 영역에서 거리를 확대할 수 있습니다. t-SNE 와 UMAP 은 이러한 문제를 겪을 수 있습니다. 우리가 사용하는 데이터셋에서는 이러한 문제가 발생하지 않지만, 생물학적 모집단을 무작위로 샘플링할 경우 문제가 발생할 수 있습니다.</li>
<li>일부 차원 축소 방법은 셀의 그룹화를 강제하고 연속성을 제거하려고 합니다. t-SNE 와 UMAP 도 이러한 문제를 일부 가지고 있으며, 이로 인해 실제로는 그렇지 않은 셀들이 함께 묶일 수 있습니다.</li>
</ol>
<p>이러한 이유로 MDS 와 확산 맵이 종종 선호되는 선택지입니다. 그러나 샘플이 균형 잡힌 경우 t-SNE 와 UMAP 도 효과적으로 작동할 수 있습니다.</p>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb54-1">dimred <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pca'</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용될 embedding 지정</span></span></code></pre></div>
<p>그 답은 간단합니다. 클러스터링은 문제를 단순화하며, 경로 상에서 거의 동일한 위치에 있는 세포 그룹을 찾아냅니다. 이러한 그룹은 이후 세포가 어떤 경로를 통해 이동하고 분기되는지를 파악하는 데 연결될 수 있습니다. 이상적으로 TI 를 위한 클러스터링 방법은 밀도를 기반으로 셀을 그룹화해서는 안 됩니다. 예를 들어 DBSCAN 과 같은 밀도 기반 클러스터링은 정의상 모든 세포가 고밀도 영역을 통해 연결되지만 유전자 발현에서는 차이가 발생할 수 있습니다. 여기서는 <strong>Seurat</strong>의 표준 클러스터링 방법인 라이든 (Leiden) 클러스터링을 사용할 것입니다.</p>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb55-1">clustering <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(</span>
<span id="cb55-2">    SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data[, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seurat_clusters"</span>]</span>
<span id="cb55-3">) </span></code></pre></div>
<p>이제부터 이 클러스터링 결과를 경로 분석에 적용할 것입니다. 전체 프로세스는 단일 함수인 <code>slingshot</code> 을 사용하여 수행할 수 있으며, 이는 경로 분석을 위한 두 가지 주요 단계를 간단히 묶어 놓은 래퍼 (wrapper) 입니다. 프로세스의 첫 번째 단계는 세포 계통 (cell lineages) 을 정의하고, 그 다음 데이터를 통해 경로를 정의하는 곡선을 맞추는 것입니다. 이러한 단계들은 아래에서 설명합니다.</p>
<section id="slingshot-으로-세포-계통-정의하기" class="level3" data-number="17.1.1">
<h3 data-number="17.1.1" class="anchored" data-anchor-id="slingshot-으로-세포-계통-정의하기"><span class="header-section-number">17.1.1</span> Slingshot 으로 세포 계통 정의하기</h3>
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb56-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기본 설정으로 Slingshot 세포 계통 식별을 실행</span></span>
<span id="cb56-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(slingshot)</span>
<span id="cb56-3"></span>
<span id="cb56-4">lineages <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getLineages</span>(</span>
<span id="cb56-5">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dimred,</span>
<span id="cb56-6">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clusterLabels =</span> clustering</span>
<span id="cb56-7">)</span>
<span id="cb56-8"></span>
<span id="cb56-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Lineages를 시각화.</span></span>
<span id="cb56-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb56-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(</span>
<span id="cb56-12">     dimred[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb56-13">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> clustering,</span>
<span id="cb56-14">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> ,</span>
<span id="cb56-15">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb56-16">)</span></code></pre></div>
<p>여기서 우리는 경로 분석의 한 가지 중요한 문제를 살펴볼 수 있습니다: 경로 분석이 어디에서 시작되는지를 알 수 없다는 점입니다. 추가 정보가 없이는 이를 파악하기가 거의 불가능합니다. 경로 분석의 시작점과 끝점을 정의하기 위해서는 사전 생물학적 정보가 필요합니다.</p>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb57-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cluster 5에서 Slingshot을 시작하기.</span></span>
<span id="cb57-2">lineages <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getLineages</span>(</span>
<span id="cb57-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dimred,</span>
<span id="cb57-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clusterLabels =</span> clustering,</span>
<span id="cb57-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start.clus =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span></span>
<span id="cb57-6">)</span>
<span id="cb57-7"></span>
<span id="cb57-8">lineages</span></code></pre></div>
</section>
<section id="주요-경로-정의하기" class="level3" data-number="17.1.2">
<h3 data-number="17.1.2" class="anchored" data-anchor-id="주요-경로-정의하기"><span class="header-section-number">17.1.2</span> 주요 경로 정의하기</h3>
<p>시작 클러스터를 정한 뒤에는 Slingshot 을 사용하여 경로 분석을 수행할 수 있습니다. Slingshot 의 알고리즘은 초기 경로를 반복적으로 수정하여 데이터 포인트와 더 잘 일치되도록 합니다. 구체적으로 Slingshot 은 두 가지 기능을 사용합니다.</p>
<ul>
<li><strong>각 “계통”마다 주요 경로를 찾습니다</strong>: 여기서 “계통”이란 특정 시작 클러스터에서 특정 종단 클러스터로 이어지는 클러스터 집합을 의미합니다. 즉, 각 계통은 세포들이 어떤 경로를 따라 이동하는지를 나타내며, 이를 통해 세포의 발달 과정을 이해할 수 있습니다.</li>
<li><strong>동일한 클러스터 집합을 가진 계통은 주요 곡선이 겹치는 클러스터 주위에 묶이도록 제약됩니다</strong>: 이는 서로 연결된 세포 그룹이 같은 경로를 공유하도록 하여, 분석의 일관성을 높이는 역할을 합니다. 이렇게 하면 각 계통이 서로 다른 경로를 따라 이동하더라도, 동일한 클러스터 내에서의 관계를 유지할 수 있습니다.</li>
</ul>
<p>Slingshot 의&nbsp;<code>getCurves()</code>&nbsp;함수는 실행하는 데 시간이 오래 걸리므로 각 계통에서 사용할 셀의 수를 줄여 곡선 적합 프로세스의 속도를 높일 수 있습니다. 이상적으로는 모든 셀을 사용하는 것이 좋지만 여기서는&nbsp;<code>approx_points</code> 를 300 으로 설정하여 속도를 높였습니다.</p>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb58-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 곡선 데이터 가져오기</span></span>
<span id="cb58-2">curves <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getCurves</span>(</span>
<span id="cb58-3">    lineages,</span>
<span id="cb58-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">approx_points =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb58-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">thresh =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>,</span>
<span id="cb58-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stretch =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># stretch 인수에 NULL 설정 (예시)</span></span>
<span id="cb58-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">allow.breaks =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb58-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shrink =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># shrink 인수에 NULL 설정 (예시)</span></span>
<span id="cb58-9">)</span>
<span id="cb58-10"></span>
<span id="cb58-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 곡선 데이터 확인</span></span>
<span id="cb58-12">curves</span>
<span id="cb58-13"></span>
<span id="cb58-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 차원 축소 결과 플롯</span></span>
<span id="cb58-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(</span>
<span id="cb58-16">    dimred,</span>
<span id="cb58-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> clustering,</span>
<span id="cb58-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb58-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb58-20">)</span>
<span id="cb58-21"></span>
<span id="cb58-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 곡선 추가</span></span>
<span id="cb58-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(</span>
<span id="cb58-24">    curves,</span>
<span id="cb58-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb58-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span></span>
<span id="cb58-27">)</span></code></pre></div>
</section>
</section>
<section id="경로-분석를-따라-변하는-유전자를-찾기-differential-expression-along-trajectories" class="level2" data-number="17.2">
<h2 data-number="17.2" class="anchored" data-anchor-id="경로-분석를-따라-변하는-유전자를-찾기-differential-expression-along-trajectories"><span class="header-section-number">17.2</span> 경로 분석를 따라 변하는 유전자를 찾기 (Differential expression along trajectories)</h2>
<p>경로 분석을 해석하는 주요 방법 중 하나는 경로를 따라 변하는 유전자를 찾는 것입니다. 경로 분석에서 차별적 발현 (differential expression) 을 정의하는 방법은 여러 가지가 있습니다:</p>
<ol type="1">
<li><strong>특정 경로를 따라 발현 변화</strong>: 예를 들어, 세포가 유사한 시간에 따라 발현이 어떻게 변화하는지를 분석합니다.</li>
<li><strong>가지 사이의 발현 차이</strong>: 서로 다른 경로 (또는 가지) 간의 유전자 발현 차이를 비교합니다.</li>
<li><strong>분기점에서의 발현 변화</strong>: 세포가 분기점에 도달했을 때 발현이 어떻게 변화하는지를 살펴봅니다.</li>
<li><strong>경로 분석의 어느 지점에서든 발현 변화</strong>: 경로의 모든 지점에서 유전자 발현의 변화를 평가합니다.</li>
</ol>
<p><a href="https://github.com/statOmics/tradeSeq">tradeSeq</a> 는 경로 분석 결과에서 차별적 발현 유전자를 찾는 도구 중 하나입니다. 이 도구는 일반화된 가법 모형 (Generalized Additive Models, GAMs) 을 사용하여 경로를 따라 유전자 발현을 조정하고 경로의 여러 지점 사이에서 특정 계수가 통계적으로 다른지를 테스트합니다. GAM 모델을 적합시키는 과정은 시간이 많이 걸립니다. 따라서 여기에서는 매우 엄격한 필터링을 통해 많은 유전자를 제거하였습니다. 실제로는 모든 유전자 데이터를 사용하는 것이 좋습니다.</p>
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb59-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 추가 패키지 로드</span></span>
<span id="cb59-2">BiocParallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">register</span>(BiocParallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SerialParam</span>())</span>
<span id="cb59-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tradeSeq)</span>
<span id="cb59-4"></span>
<span id="cb59-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연산 속도를 높이기 위해 일부 유전자 제거</span></span>
<span id="cb59-6">counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(SeuratObject[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>counts)</span>
<span id="cb59-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(counts)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원본 카운트 행렬 차원 확인</span></span>
<span id="cb59-8"></span>
<span id="cb59-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 필터링된 카운트 행렬 생성</span></span>
<span id="cb59-10">filt_counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> counts[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(counts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(counts) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, ]</span>
<span id="cb59-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(filt_counts)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 필터링 후 카운트 행렬 차원 확인</span></span>
<span id="cb59-12"></span>
<span id="cb59-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 감마 분포 fitting</span></span>
<span id="cb59-14">sce <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fitGAM</span>(</span>
<span id="cb59-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(filt_counts),</span>
<span id="cb59-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sds =</span> curves</span>
<span id="cb59-17">)</span>
<span id="cb59-18"></span>
<span id="cb59-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 플롯</span></span>
<span id="cb59-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotGeneCount</span>(</span>
<span id="cb59-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">curve =</span> curves,</span>
<span id="cb59-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts =</span> filt_counts,</span>
<span id="cb59-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clusters =</span> clustering,</span>
<span id="cb59-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">models =</span> sce</span>
<span id="cb59-25">)</span></code></pre></div>
<section id="두-시간점-사이에서-변하는-유전자" class="level3" data-number="17.2.1">
<h3 data-number="17.2.1" class="anchored" data-anchor-id="두-시간점-사이에서-변하는-유전자"><span class="header-section-number">17.2.1</span> 두 시간점 사이에서 변하는 유전자</h3>
<p>원하는 경우 사용자 정의 유사 시간 (Pseudotime) 값을 설정하여 두 시간점 사이에서 변하는 유전자를 찾을 수 있습니다. 예를 들어, 전구 세포 표시자와 같은 특정 유전자를 분석할 수 있습니다. 기본적으로는 시작점과 끝점 사이의 차이를 살펴보는 방식으로 진행됩니다.</p>
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb60-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pseudotime 시작과 끝 간의 연관성 테스트</span></span>
<span id="cb60-2">pseudotime_start_end_association <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">startVsEndTest</span>(</span>
<span id="cb60-3">    sce,</span>
<span id="cb60-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pseudotimeValues =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb60-5">)</span>
<span id="cb60-6"></span>
<span id="cb60-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># feature_id 추가</span></span>
<span id="cb60-8">pseudotime_start_end_association<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>feature_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pseudotime_start_end_association)</span>
<span id="cb60-9"></span>
<span id="cb60-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># p-value가 0.05 미만인 feature_id 필터링 및 선택</span></span>
<span id="cb60-11">feature_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pseudotime_start_end_association <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb60-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pvalue <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb60-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">top_n</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, waldStat) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb60-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(feature_id)</span>
<span id="cb60-15"></span>
<span id="cb60-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 차별 발현 플롯 그리기</span></span>
<span id="cb60-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_differential_expression</span>(feature_id)</span></code></pre></div>
</section>
<section id="경로가-갈라지는-사이에서-변하는-유전자" class="level3" data-number="17.2.2">
<h3 data-number="17.2.2" class="anchored" data-anchor-id="경로가-갈라지는-사이에서-변하는-유전자"><span class="header-section-number">17.2.2</span> 경로가 갈라지는 사이에서 변하는 유전자</h3>
<p>두 가지 사이에서 차별적으로 발현되는 유전자는 특히 흥미로운 연구 대상입니다. 이러한 유전자 중 일부는 이전의 두 시간점 사이에서 변하는 유전자 분석에서 이미 발견되었을 수 있습니다. “경로가 갈라지는 사이에서 변하는 유전자”를 정의하는 여러 가지 방법이 있으며 방법에 따라 함수가 다릅니다.<sup>17</sup></p>
<ul>
<li><strong>diffEndTest</strong>: 각 가지의 끝점에서 발현 차이를 분석합니다.</li>
<li><strong>earlyDETest</strong>: 가지의 분기점에서 발현 차이를 평가합니다.</li>
<li><strong>patternTest</strong>: 경로 분석의 어느 지점에서든 발현 차이를 탐색합니다. 이 마지막 함수는 두 가지 간의 유사 시간이 정렬되어 있어야 함을 요구합니다.</li>
</ul>
<div class="sourceCode" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb61-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 차별적 끝 연관성 테스트 수행</span></span>
<span id="cb61-2">different_end_association <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diffEndTest</span>(sce)</span>
<span id="cb61-3">different_end_association<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>feature_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(different_end_association)</span>
<span id="cb61-4"></span>
<span id="cb61-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># p-value가 0.05 미만인 feature_id 필터링 및 정렬</span></span>
<span id="cb61-6">feature_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> different_end_association <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb61-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pvalue <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb61-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(waldStat)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb61-9">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb61-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(feature_id)</span>
<span id="cb61-11"></span>
<span id="cb61-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 차별 발현 플롯 그리기</span></span>
<span id="cb61-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_differential_expression</span>(feature_id)</span>
<span id="cb61-14"></span>
<span id="cb61-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 가지점 연관성 테스트 수행</span></span>
<span id="cb61-16">branch_point_association <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">earlyDETest</span>(sce)</span>
<span id="cb61-17">branch_point_association<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>feature_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(branch_point_association)</span>
<span id="cb61-18"></span>
<span id="cb61-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># p-value가 0.05 미만인 feature_id 필터링 및 정렬</span></span>
<span id="cb61-20">feature_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> branch_point_association <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb61-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(pvalue <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb61-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(waldStat)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb61-23">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb61-24">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(feature_id)</span>
<span id="cb61-25"></span>
<span id="cb61-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 차별 발현 플롯 그리기</span></span>
<span id="cb61-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_differential_expression</span>(feature_id)</span></code></pre></div>
<p>더 자세한 것은 <a href="https://statomics.github.io/tradeSeq/articles/tradeSeq.html">공식 문서</a> 를 확인하십시오.</p>
</section>
</section>
</section>
<section id="더-읽을-거리" class="level1" data-number="18">
<h1 data-number="18"><span class="header-section-number">18</span> 더 읽을 거리</h1>
<p>scRNA-seq 분야는 방대하고 끊임없이 발전하고 있습니다. 이로 인해 다양한 방법, 도구, 소프트웨어가 존재하여 유사한 작업을 수행하는 데 활용될 수 있습니다. 아래는 이 분야에 대한 더 깊은 이해를 돕기 위해 탐색할 수 있는 몇 가지 추가 자료입니다.</p>
<section id="온라인-강의" class="level2" data-number="18.1">
<h2 data-number="18.1" class="anchored" data-anchor-id="온라인-강의"><span class="header-section-number">18.1</span> 온라인 강의</h2>
<ul>
<li><a href="https://nbisweden.github.io/workshop-scRNAseq/exercises.html">Exercises for the NBIS scRNA-seq course</a></li>
<li><a href="https://github.com/NBISweden/workshop-scRNAseq">The GitHub repository for the NBIS scRNA-seq course</a></li>
<li><a href="https://scrnaseq-course.cog.sanger.ac.uk/website/index.html">Single cell RNA-seq course at from Hemberg lab</a></li>
<li><a href="https://chanzuckerberg.github.io/scRNA-python-workshop/intro/about">Single cell RNA-seq course in Python</a></li>
<li><a href="https://broadinstitute.github.io/2019_scWorkshop/">Single cell RNA-seq course at Broad</a></li>
</ul>
</section>
<section id="프레젠테이션-및-강의" class="level2" data-number="18.2">
<h2 data-number="18.2" class="anchored" data-anchor-id="프레젠테이션-및-강의"><span class="header-section-number">18.2</span> 프레젠테이션 및 강의</h2>
<ul>
<li><a href="https://nbisweden.github.io/workshop-scRNAseq/lectures/single_cell_methodologies_Karolina_Wallenborg_2020.pdf">Single-cell methodologies</a></li>
<li><a href="https://nbisweden.github.io/workshop-scRNAseq/lectures/scRNAseq_QC_Asa_Bjorklund_2020.pdf">Quaility controls</a></li>
<li><a href="https://nbisweden.github.io/workshop-scRNAseq/lectures/scRNAseq_normalization_Asa_Bjorklund_2020.pdf">Normalisation</a></li>
<li><a href="https://nbisweden.github.io/workshop-scRNAseq/lectures/dimensionality_reduction_paulo_czarnewski.pdf">Dimensionality reduction</a></li>
<li><a href="https://nbisweden.github.io/workshop-scRNAseq/lectures/data_integration_paulo_czarnewski_2020.pdf">Batch correction and data integration</a></li>
<li><a href="https://nbisweden.github.io/workshop-scRNAseq/lectures/scRNAseq_clustering_Asa_Bjorklund_2020.pdf">Clustering techniques</a></li>
<li><a href="https://nbisweden.github.io/workshop-scRNAseq/lectures/differenatial_expression_olga_dethlefsen_2020.pdf">Differential expression analysis</a></li>
<li><a href="https://nbisweden.github.io/workshop-scRNAseq/lectures/trajectory_inference_analysis_paulo_czarnewski.pdf">Trajectory inference analyses</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLjiXAZO27elC_xnk7gVNM85I2IQl5BEJN">All of the above in a YouTube playlist</a></li>
</ul>
</section>
<section id="도구-및-파이프라인" class="level2" data-number="18.3">
<h2 data-number="18.3" class="anchored" data-anchor-id="도구-및-파이프라인"><span class="header-section-number">18.3</span> 도구 및 파이프라인</h2>
<ul>
<li><a href="https://github.com/seandavi/awesome-single-cell">Repository listing many scRNA-seq tools</a></li>
<li><a href="https://bitbucket.org/asbj/qc-summary_scrnaseq">Bitbucket repository for QC report scripts</a></li>
<li><a href="https://bitbucket.org/scilifelab-lts/lts-workflows-sm-scrnaseq">Bitbucket repository for an NBIS scRNA-seq pipeline</a></li>
<li><a href="https://www.scrna-tools.org/">A catalogue of many scRNA-seq tools</a></li>
</ul>
</section>
<section id="웹사이트" class="level2" data-number="18.4">
<h2 data-number="18.4" class="anchored" data-anchor-id="웹사이트"><span class="header-section-number">18.4</span> 웹사이트</h2>
<ul>
<li><a href="https://hemberg-lab.github.io/scRNA.seq.datasets/">SingleCellExperiment objects for many datasets</a></li>
<li><a href="http://imlspenticton.uzh.ch:3838/conquer/">Conquer datasets - many different datasets based on a salmon pipeline</a></li>
<li><a href="https://www.humancellatlas.org/">The Human Cell Atlas project</a></li>
<li><a href="https://www.ebi.ac.uk/gxa/sc">The EBI Single-cell expression atlas</a></li>
</ul>
</section>
</section>
<section id="reference" class="level1" data-number="19">
<h1 data-number="19"><span class="header-section-number">19</span> Reference</h1>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>https://www.pnas.org/content/116/20/9775)↩︎</p></li>
<li id="fn2"><p>https://distill.pub/2016/misread-tsne, http://jmlr.org/papers/volume9/vandermaaten08a/vandermaaten08a.pdf↩︎</p></li>
<li id="fn3"><p>https://umap-learn.readthedocs.io/en/latest↩︎</p></li>
<li id="fn4"><p>https://arxiv.org/abs/1802.03426↩︎</p></li>
<li id="fn5"><p>https://projecteuclid.org/euclid.ajm/1253539864↩︎</p></li>
<li id="fn6"><p>https://en.wikipedia.org/wiki/Independent_component_analysis↩︎</p></li>
<li id="fn7"><p>https://www.nature.com/articles/nbt.4091↩︎</p></li>
<li id="fn8"><p>https://genomebiology.biomedcentral.com/articles/10.1186/s13059-019-1850-9↩︎</p></li>
<li id="fn9"><p>https://www.nature.com/articles/s41587-019-0113-3↩︎</p></li>
<li id="fn10"><p>https://www.nature.com/articles/s41592-019-0619-00↩︎</p></li>
<li id="fn11"><p>https://f1000research.com/articles/7-1141↩︎</p></li>
<li id="fn12"><p>https://iopscience.iop.org/article/10.1088/1742-5468/2008/10/P10008/pdf↩︎</p></li>
<li id="fn13"><p>https://www.nature.com/articles/s41598-019-41695-z.pdf↩︎</p></li>
<li id="fn14"><p>https://www.nature.com/articles/nmeth.4612↩︎</p></li>
<li id="fn15"><p>McDavid et al., Bioinformatics, 2013↩︎</p></li>
<li id="fn16"><p>https://www.nature.com/articles/s41587-019-0071-9↩︎</p></li>
<li id="fn17"><p>Cannoodt, Robrecht, Wouter Saelens, and Yvan Saeys. 2016.”Computational Methods for Trajectory Inference from Single-Cell Transcriptomics.”European Journal of Immunology 46 (11): 2496–2506.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>Tip</category>
  <category>scRNA-seq</category>
  <category>Bioinformatics</category>
  <category>Seurat</category>
  <category>Cheatsheet</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Cheatsheet_Seurat.html</guid>
  <pubDate>Tue, 12 Nov 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>GSE에서 sc-RNAseq 데이터 가져오기</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/python_GSE_data_fetch.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="python_GSE_data_fetch.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_GSE_data_fetch.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>GSE 데이터베이스는 고처리량 유전자 발현 데이터, 특히 유전자 발현 옴니버스(Gene Expression Omnibus) 데이터의 저장소입니다. 이는 국립생물공학정보센터(NCBI)에서 관리하는 무료 온라인 데이터베이스로, 연구자와 과학자들이 유전자 발현 데이터를 공유하고 접근하는 데 널리 사용됩니다. 이 데이터베이스는 RNA 시퀀싱 실험을 포함한 다양한 출처의 방대한 데이터셋 컬렉션을 포함하고 있고 연구자들이 다운로드하여 추가 분석과 연구 목적으로 활용할 수 있습니다. 이는 생물정보학과 유전체학 연구에 매우 귀중한 자원입니다.</p>
<section id="예시-데이터" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 예시 데이터</h1>
<p>예시 데이터로 <a href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE231559">GSE231559</a>를 불러오는 방법을 다뤄 보겠습니다. GSE231559는 2023년 9월 25일에 공개된 데이터셋으로, 대장암(CRC)의 단일 세포 수준에서의 유전자 발현 프로파일을 다루고 있습니다. 이 연구는 MD Anderson 암센터의 CRC Moon Shot 프로젝트의 일환으로 수행되었으며, 단일 세포 RNA 시퀀싱(scRNA-seq) 기술을 사용하여 대장암의 다양성을 분석했습니다. 이 데이터셋은 <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC10807546/">Oncogenic KRAS drives lipo–fibrogenesis to promote angiogenesis and colon cancer progression</a> 논문에 사용되었습니다.</p>
</section>
<section id="원시-데이터-살펴보기" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 원시 데이터 살펴보기</h1>
<p>GSE 데이터베이스에서 파일을 다운로드해서 압축을 풀어보면 GSE231559가 아래와 같이 여러개의 파일로 되어 있다는 것을 확인 할 수 있습니다.</p>
<pre class="shell"><code>GSM7290760_SC10_21N_barcodes.tsv.gz  GSM7290773_SC10_5_barcodes.tsv.gz
GSM7290760_SC10_21N_features.tsv.gz  GSM7290773_SC10_5_features.tsv.gz
GSM7290760_SC10_21N_matrix.mtx.gz    GSM7290773_SC10_5_matrix.mtx.gz
GSM7290761_SC10_22T_barcodes.tsv.gz  GSM7290774_SC10_7_barcodes.tsv.gz
GSM7290761_SC10_22T_features.tsv.gz  GSM7290774_SC10_7_features.tsv.gz
GSM7290761_SC10_22T_matrix.mtx.gz    GSM7290774_SC10_7_matrix.mtx.gz
GSM7290762_SC10_23N_barcodes.tsv.gz  GSM7290775_SC10_8_barcodes.tsv.gz
GSM7290762_SC10_23N_features.tsv.gz  GSM7290775_SC10_8_features.tsv.gz
GSM7290762_SC10_23N_matrix.mtx.gz    GSM7290775_SC10_8_matrix.mtx.gz
GSM7290763_SC10_24T_barcodes.tsv.gz  GSM7290776_SC143_17_barcodes.tsv.gz
GSM7290763_SC10_24T_features.tsv.gz  GSM7290776_SC143_17_features.tsv.gz
GSM7290763_SC10_24T_matrix.mtx.gz    GSM7290776_SC143_17_matrix.mtx.gz
GSM7290764_SC10_25N_barcodes.tsv.gz  GSM7290777_SC143_7_barcodes.tsv.gz
GSM7290764_SC10_25N_features.tsv.gz  GSM7290777_SC143_7_features.tsv.gz
GSM7290764_SC10_25N_matrix.mtx.gz    GSM7290777_SC143_7_matrix.mtx.gz
GSM7290765_SC10_26N_barcodes.tsv.gz  GSM7290778_SC173_1_barcodes.tsv.gz
GSM7290765_SC10_26N_features.tsv.gz  GSM7290778_SC173_1_features.tsv.gz
GSM7290765_SC10_26N_matrix.mtx.gz    GSM7290778_SC173_1_matrix.mtx.gz
GSM7290766_SC10_27N_barcodes.tsv.gz  GSM7290779_SC173_2_barcodes.tsv.gz
GSM7290766_SC10_27N_features.tsv.gz  GSM7290779_SC173_2_features.tsv.gz
GSM7290766_SC10_27N_matrix.mtx.gz    GSM7290779_SC173_2_matrix.mtx.gz
GSM7290767_SC10_28T_barcodes.tsv.gz  GSM7290780_SC216_1_barcodes.tsv.gz
GSM7290767_SC10_28T_features.tsv.gz  GSM7290780_SC216_1_features.tsv.gz
GSM7290767_SC10_28T_matrix.mtx.gz    GSM7290780_SC216_1_matrix.mtx.gz
GSM7290768_SC10_29N_barcodes.tsv.gz  GSM7290781_SC216_2_barcodes.tsv.gz
GSM7290768_SC10_29N_features.tsv.gz  GSM7290781_SC216_2_features.tsv.gz
GSM7290768_SC10_29N_matrix.mtx.gz    GSM7290781_SC216_2_matrix.mtx.gz
GSM7290769_SC10_30T_barcodes.tsv.gz  GSM7290782_SC216_3_barcodes.tsv.gz
GSM7290769_SC10_30T_features.tsv.gz  GSM7290782_SC216_3_features.tsv.gz
GSM7290769_SC10_30T_matrix.mtx.gz    GSM7290782_SC216_3_matrix.mtx.gz
GSM7290770_SC10_35N_barcodes.tsv.gz  GSM7290783_SC216_5_barcodes.tsv.gz
GSM7290770_SC10_35N_features.tsv.gz  GSM7290783_SC216_5_features.tsv.gz
GSM7290770_SC10_35N_matrix.mtx.gz    GSM7290783_SC216_5_matrix.mtx.gz
GSM7290771_SC10_37N_barcodes.tsv.gz  GSM7290784_SC216_6_barcodes.tsv.gz
GSM7290771_SC10_37N_features.tsv.gz  GSM7290784_SC216_6_features.tsv.gz
GSM7290771_SC10_37N_matrix.mtx.gz    GSM7290784_SC216_6_matrix.mtx.gz
GSM7290772_SC10_38T_barcodes.tsv.gz  GSM7290785_SC216_7_barcodes.tsv.gz
GSM7290772_SC10_38T_features.tsv.gz  GSM7290785_SC216_7_features.tsv.gz
GSM7290772_SC10_38T_matrix.mtx.gz    GSM7290785_SC216_7_matrix.mtx.gz</code></pre>
<p>골치가 벌써 아파지네요. 그래도 파일명에 일정한 패턴이 있기에 아래 파이썬 코드를 사용해 갹갹의 <code>adata</code> 객체를 만들어서 합치면 될 것 같습니다.</p>
<div id="cell-2" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> anndata <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ad</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.io <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> mmread</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.sparse <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> csr_matrix</span>
<span id="cb2-8"></span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> load_mtx_file(file_path: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> csr_matrix:</span>
<span id="cb2-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> mmread(file_path).transpose().tocsr()</span>
<span id="cb2-12"></span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> load_tsv_file(</span>
<span id="cb2-15">    file_path: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, header: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, names: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-16">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pd.DataFrame:</span>
<span id="cb2-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pd.read_csv(file_path, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>header, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>names)</span>
<span id="cb2-18"></span>
<span id="cb2-19"></span>
<span id="cb2-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> create_anndata(</span>
<span id="cb2-21">    X: csr_matrix,</span>
<span id="cb2-22">    obs_names: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>],</span>
<span id="cb2-23">    var_names: np.ndarray,</span>
<span id="cb2-24">    var_gene_ids: np.ndarray,</span>
<span id="cb2-25">    code_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb2-26">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> ad.AnnData:</span>
<span id="cb2-27">    adata <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ad.AnnData(X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>X)</span>
<span id="cb2-28">    adata.obs_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obs_names</span>
<span id="cb2-29">    adata.var_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var_names</span>
<span id="cb2-30">    adata.var[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_ids"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> var_gene_ids</span>
<span id="cb2-31">    adata.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Code_name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> code_name</span>
<span id="cb2-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> adata</span>
<span id="cb2-33"></span>
<span id="cb2-34"></span>
<span id="cb2-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> process_sample(data_dir: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, sample_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> ad.AnnData <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb2-36">    matrix_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(data_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_matrix.mtx.gz"</span>)</span>
<span id="cb2-37">    features_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(data_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_features.tsv.gz"</span>)</span>
<span id="cb2-38">    barcodes_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(data_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_barcodes.tsv.gz"</span>)</span>
<span id="cb2-39">    code_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb2-40"></span>
<span id="cb2-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>(os.path.exists(f) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [matrix_file, features_file, barcodes_file]):</span>
<span id="cb2-42">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Missing files for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-43">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-44"></span>
<span id="cb2-45">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb2-46">        X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_mtx_file(matrix_file)</span>
<span id="cb2-47">        gene_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_tsv_file(</span>
<span id="cb2-48">            features_file, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_ids"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_symbols"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gene_expression"</span>]</span>
<span id="cb2-49">        )</span>
<span id="cb2-50">        barcodes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_tsv_file(barcodes_file, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"barcode"</span>])</span>
<span id="cb2-51"></span>
<span id="cb2-52">        obs_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>code_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> b <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> barcodes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"barcode"</span>]]</span>
<span id="cb2-53">        var_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_names[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_symbols"</span>].values</span>
<span id="cb2-54">        var_gene_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_names[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_ids"</span>].values</span>
<span id="cb2-55"></span>
<span id="cb2-56">        adata <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_anndata(X, obs_names, var_names, var_gene_ids, code_name)</span>
<span id="cb2-57">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Successfully read </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> adata</span>
<span id="cb2-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb2-60">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Error reading </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(e)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-61">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-62"></span>
<span id="cb2-63"></span>
<span id="cb2-64">data_dir: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../input/GSE231559"</span></span>
<span id="cb2-65">adatas: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[ad.AnnData] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-66"></span>
<span id="cb2-67"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> os.listdir(data_dir):</span>
<span id="cb2-68">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_matrix.mtx.gz"</span>):</span>
<span id="cb2-69">        sample_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_matrix.mtx.gz"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb2-70">        adata: ad.AnnData <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> process_sample(data_dir, sample_name)</span>
<span id="cb2-71">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> adata <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb2-72">            adatas.append(adata)</span>
<span id="cb2-73"></span>
<span id="cb2-74"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Total number of processed samples: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(adatas)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Successfully read GSM7290779_SC173_2
Successfully read GSM7290775_SC10_8
Successfully read GSM7290761_SC10_22T
Successfully read GSM7290770_SC10_35N
Successfully read GSM7290768_SC10_29N
Successfully read GSM7290777_SC143_7
Successfully read GSM7290776_SC143_17
Successfully read GSM7290766_SC10_27N
Successfully read GSM7290774_SC10_7
Successfully read GSM7290763_SC10_24T
Successfully read GSM7290784_SC216_6
Successfully read GSM7290767_SC10_28T
Successfully read GSM7290764_SC10_25N
Successfully read GSM7290782_SC216_3
Successfully read GSM7290780_SC216_1
Successfully read GSM7290783_SC216_5
Successfully read GSM7290769_SC10_30T
Successfully read GSM7290773_SC10_5
Successfully read GSM7290771_SC10_37N
Successfully read GSM7290772_SC10_38T
Successfully read GSM7290765_SC10_26N
Successfully read GSM7290760_SC10_21N
Successfully read GSM7290762_SC10_23N
Successfully read GSM7290781_SC216_2
Successfully read GSM7290785_SC216_7
Successfully read GSM7290778_SC173_1
Total number of processed samples: 26</code></pre>
</div>
</div>
<p>성공적으로 데이터를 불어왔는지 확인하기 첫번째 객체의 데이터를 확인해봅니다.</p>
<div id="cell-4" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">adatas[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].obs.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Code_name</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">GSM7290779_AAACCCAAGCTAATCC-1</td>
<td>GSM7290779</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">GSM7290779_AAACGAAAGTCTAGCT-1</td>
<td>GSM7290779</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">GSM7290779_AAAGAACAGCTCAGAG-1</td>
<td>GSM7290779</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">GSM7290779_AAAGAACCATGAATAG-1</td>
<td>GSM7290779</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">GSM7290779_AAAGGATAGAGGCTGT-1</td>
<td>GSM7290779</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="cell-5" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">adatas[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].var.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">gene_ids</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">MIR1302-2HG</td>
<td>ENSG00000243485</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">FAM138A</td>
<td>ENSG00000237613</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">OR4F5</td>
<td>ENSG00000186092</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">AL627309.1</td>
<td>ENSG00000238009</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">AL627309.3</td>
<td>ENSG00000239945</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>문제없이 불러온 것 같습니다.</p>
</section>
<section id="여러-데이터를-하나로-합치기" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 여러 데이터를 하나로 합치기</h1>
<p>이제 여러 데이터를 하나의 객체로 합쳐보겠습니다. 추가로 메타 데이터를 찾아서 맵핑을 통해 환자 정보와 질병 정보를 추가합니다.</p>
<div id="cell-7" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> make_var_names_unique(adatas: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[ad.AnnData]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[ad.AnnData]:</span>
<span id="cb6-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> adata <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> adatas:</span>
<span id="cb6-3">        adata.var_names_make_unique()</span>
<span id="cb6-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> adatas</span>
<span id="cb6-5"></span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> merge_anndata(adatas: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[ad.AnnData]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> ad.AnnData:</span>
<span id="cb6-8">    adata_merged <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ad.concat(adatas, join<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"outer"</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index_unique<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>)</span>
<span id="cb6-9">    all_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([adata.var <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> adata <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> adatas], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, join<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"outer"</span>)</span>
<span id="cb6-10">    all_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_var.loc[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>all_var.index.duplicated(keep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first"</span>)]</span>
<span id="cb6-11">    adata_merged.var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_var.loc[adata_merged.var_names]</span>
<span id="cb6-12">    adata_merged.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Code_name"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate(</span>
<span id="cb6-13">        [np.repeat(adata.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Code_name"</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], adata.n_obs) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> adata <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> adatas]</span>
<span id="cb6-14">    )</span>
<span id="cb6-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> adata_merged</span>
<span id="cb6-16"></span>
<span id="cb6-17"></span>
<span id="cb6-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> create_sample_dict() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb6-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {</span>
<span id="cb6-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290760"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L1_N"</span>,</span>
<span id="cb6-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290761"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L1_T"</span>,</span>
<span id="cb6-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290762"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C1_N"</span>,</span>
<span id="cb6-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290763"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C1_T"</span>,</span>
<span id="cb6-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290764"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L2_N"</span>,</span>
<span id="cb6-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290765"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L3_N"</span>,</span>
<span id="cb6-26">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290766"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L4_N"</span>,</span>
<span id="cb6-27">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290767"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L4_T"</span>,</span>
<span id="cb6-28">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290768"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C2_N"</span>,</span>
<span id="cb6-29">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290769"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C2_T"</span>,</span>
<span id="cb6-30">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290770"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L5_N"</span>,</span>
<span id="cb6-31">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290771"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C3_N"</span>,</span>
<span id="cb6-32">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290772"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C3_T"</span>,</span>
<span id="cb6-33">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290773"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C4_T"</span>,</span>
<span id="cb6-34">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290774"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C5_T"</span>,</span>
<span id="cb6-35">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290775"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L6_T"</span>,</span>
<span id="cb6-36">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290776"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L7_N"</span>,</span>
<span id="cb6-37">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290777"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C6_T"</span>,</span>
<span id="cb6-38">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290778"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L8_T"</span>,</span>
<span id="cb6-39">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290779"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L8_T"</span>,</span>
<span id="cb6-40">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290780"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L9_N"</span>,</span>
<span id="cb6-41">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290781"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L9_T"</span>,</span>
<span id="cb6-42">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290782"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L10_T"</span>,</span>
<span id="cb6-43">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290783"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L11_T"</span>,</span>
<span id="cb6-44">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290784"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L11_N"</span>,</span>
<span id="cb6-45">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GSM7290785"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L12_T"</span>,</span>
<span id="cb6-46">    }</span>
<span id="cb6-47"></span>
<span id="cb6-48"></span>
<span id="cb6-49"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> map_code_to_sample(code: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, sample_dict: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb6-50">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> sample_dict.get(code, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb6-51"></span>
<span id="cb6-52"></span>
<span id="cb6-53"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> create_metadata() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pd.DataFrame:</span>
<span id="cb6-54">    metadata <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb6-55">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient"</span>: [</span>
<span id="cb6-56">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C1"</span>,</span>
<span id="cb6-57">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C2"</span>,</span>
<span id="cb6-58">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C3"</span>,</span>
<span id="cb6-59">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C4"</span>,</span>
<span id="cb6-60">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C5"</span>,</span>
<span id="cb6-61">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C6"</span>,</span>
<span id="cb6-62">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L1"</span>,</span>
<span id="cb6-63">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L4"</span>,</span>
<span id="cb6-64">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L6"</span>,</span>
<span id="cb6-65">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L8"</span>,</span>
<span id="cb6-66">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L9"</span>,</span>
<span id="cb6-67">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L11"</span>,</span>
<span id="cb6-68">        ],</span>
<span id="cb6-69">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Location"</span>: [</span>
<span id="cb6-70">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Colon"</span>,</span>
<span id="cb6-71">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Colon"</span>,</span>
<span id="cb6-72">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Colon"</span>,</span>
<span id="cb6-73">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Colon"</span>,</span>
<span id="cb6-74">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Colon"</span>,</span>
<span id="cb6-75">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Colon"</span>,</span>
<span id="cb6-76">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Liver"</span>,</span>
<span id="cb6-77">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Liver"</span>,</span>
<span id="cb6-78">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Liver"</span>,</span>
<span id="cb6-79">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Liver"</span>,</span>
<span id="cb6-80">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Liver"</span>,</span>
<span id="cb6-81">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Liver"</span>,</span>
<span id="cb6-82">        ],</span>
<span id="cb6-83">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gender"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>],</span>
<span id="cb6-84">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Current_age"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">47</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">39</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">62</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">68</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">54</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">56</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>],</span>
<span id="cb6-85">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stage_at_collection"</span>: [</span>
<span id="cb6-86">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IV"</span>,</span>
<span id="cb6-87">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IV"</span>,</span>
<span id="cb6-88">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IV"</span>,</span>
<span id="cb6-89">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"II"</span>,</span>
<span id="cb6-90">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IV"</span>,</span>
<span id="cb6-91">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IV"</span>,</span>
<span id="cb6-92">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IV"</span>,</span>
<span id="cb6-93">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IV"</span>,</span>
<span id="cb6-94">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IV"</span>,</span>
<span id="cb6-95">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IV"</span>,</span>
<span id="cb6-96">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IV"</span>,</span>
<span id="cb6-97">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IV"</span>,</span>
<span id="cb6-98">        ],</span>
<span id="cb6-99">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MS_status"</span>: [</span>
<span id="cb6-100">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MSS"</span>,</span>
<span id="cb6-101">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MSS"</span>,</span>
<span id="cb6-102">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MSS"</span>,</span>
<span id="cb6-103">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MSI"</span>,</span>
<span id="cb6-104">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MSS"</span>,</span>
<span id="cb6-105">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MSS"</span>,</span>
<span id="cb6-106">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MSS"</span>,</span>
<span id="cb6-107">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MSS"</span>,</span>
<span id="cb6-108">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MSS"</span>,</span>
<span id="cb6-109">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MSS"</span>,</span>
<span id="cb6-110">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MSS"</span>,</span>
<span id="cb6-111">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MSS"</span>,</span>
<span id="cb6-112">        ],</span>
<span id="cb6-113">    }</span>
<span id="cb6-114">    meta_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(metadata)</span>
<span id="cb6-115">    meta_df.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb6-116">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> meta_df</span>
<span id="cb6-117"></span>
<span id="cb6-118"></span>
<span id="cb6-119"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> extract_patient_id(sample: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb6-120">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> sample.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb6-121"></span>
<span id="cb6-122"></span>
<span id="cb6-123"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> determine_tissue(sample: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb6-124">    parts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)</span>
<span id="cb6-125">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> parts[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T"</span>):</span>
<span id="cb6-126">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tumor"</span></span>
<span id="cb6-127">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> parts[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>):</span>
<span id="cb6-128">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span></span>
<span id="cb6-129">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb6-130">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unknown"</span></span>
<span id="cb6-131"></span>
<span id="cb6-132"></span>
<span id="cb6-133"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_metadata_to_anndata(adata: ad.AnnData, meta_df: pd.DataFrame) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> ad.AnnData:</span>
<span id="cb6-134">    adata.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adata.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sample"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(extract_patient_id)</span>
<span id="cb6-135">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> column <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> meta_df.columns:</span>
<span id="cb6-136">        adata.obs[column] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adata.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Patient"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(meta_df[column])</span>
<span id="cb6-137">    adata.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tissue_type"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adata.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sample"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(determine_tissue)</span>
<span id="cb6-138">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> adata</span>
<span id="cb6-139"></span>
<span id="cb6-140"></span>
<span id="cb6-141"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Main execution</span></span>
<span id="cb6-142">adatas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> make_var_names_unique(adatas)</span>
<span id="cb6-143">adata_merged <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> merge_anndata(adatas)</span>
<span id="cb6-144"></span>
<span id="cb6-145">sample_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_sample_dict()</span>
<span id="cb6-146">adata_merged.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sample"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adata_merged.obs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Code_name"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(</span>
<span id="cb6-147">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: map_code_to_sample(x, sample_dict)</span>
<span id="cb6-148">)</span>
<span id="cb6-149"></span>
<span id="cb6-150">meta_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_metadata()</span>
<span id="cb6-151">adata_merged <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> add_metadata_to_anndata(adata_merged, meta_df)</span>
<span id="cb6-152"></span>
<span id="cb6-153"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check the result</span></span>
<span id="cb6-154">adata_merged.obs.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Code_name</th>
<th data-quarto-table-cell-role="th">Sample</th>
<th data-quarto-table-cell-role="th">Patient</th>
<th data-quarto-table-cell-role="th">Location</th>
<th data-quarto-table-cell-role="th">Gender</th>
<th data-quarto-table-cell-role="th">Current_age</th>
<th data-quarto-table-cell-role="th">Stage_at_collection</th>
<th data-quarto-table-cell-role="th">MS_status</th>
<th data-quarto-table-cell-role="th">Tissue_type</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">GSM7290779_AAACCCAAGCTAATCC-1-0</td>
<td>GSM7290779</td>
<td>L8_T</td>
<td>L8</td>
<td>Liver</td>
<td>M</td>
<td>54.0</td>
<td>IV</td>
<td>MSS</td>
<td>tumor</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">GSM7290779_AAACGAAAGTCTAGCT-1-0</td>
<td>GSM7290779</td>
<td>L8_T</td>
<td>L8</td>
<td>Liver</td>
<td>M</td>
<td>54.0</td>
<td>IV</td>
<td>MSS</td>
<td>tumor</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">GSM7290779_AAAGAACAGCTCAGAG-1-0</td>
<td>GSM7290779</td>
<td>L8_T</td>
<td>L8</td>
<td>Liver</td>
<td>M</td>
<td>54.0</td>
<td>IV</td>
<td>MSS</td>
<td>tumor</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">GSM7290779_AAAGAACCATGAATAG-1-0</td>
<td>GSM7290779</td>
<td>L8_T</td>
<td>L8</td>
<td>Liver</td>
<td>M</td>
<td>54.0</td>
<td>IV</td>
<td>MSS</td>
<td>tumor</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">GSM7290779_AAAGGATAGAGGCTGT-1-0</td>
<td>GSM7290779</td>
<td>L8_T</td>
<td>L8</td>
<td>Liver</td>
<td>M</td>
<td>54.0</td>
<td>IV</td>
<td>MSS</td>
<td>tumor</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>위의 출력을 보니 데이터가 정상적으로 합쳐진 것 같습니다. 데이터의 크기도 확인해보죠.</p>
<div id="cell-9" class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">adata_merged.obs.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="32">
<pre><code>(39992, 15)</code></pre>
</div>
</div>
</section>
<section id="데이터-저장하기" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 데이터 저장하기</h1>
<p>이제 데이터 분석에 사용하기 위해 결과를 <code>h5ad</code> 파일로 저장합니다.</p>
<div id="cell-11" class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 저장</span></span>
<span id="cb9-2">adata_merged.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../output/241015_GSE231559_merged.h5ad"</span>, compression<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gzip"</span>)</span></code></pre></div>
</div>
</section>
<section id="마치며" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 마치며</h1>
<p>이번 글에서 우리는 GSE231559 데이터셋을 불러오고 처리하는 과정을 살펴보았습니다. 이러한 과정은 생물정보학 연구에서 매우 중요한 단계이지만, 몇 가지 도전적인 측면이 있습니다. 특히 수동으로 데이터를 합치는 과정과 메타데이터를 추가하는 부분은 모든 데이터셋마다 통일되지 않아 작업자가 직접 작성해야 한다는 점이 번거로울 수 있습니다. 각 데이터셋의 고유한 특성과 구조로 인해 이 과정을 완전히 자동화하기는 어렵기 때문입니다.</p>
<p>그럼에도 불구하고, 이러한 과정을 직접 수행해보는 것은 데이터의 구조와 특성을 깊이 이해하는 데 큰 도움이 됩니다. 또한, 이를 통해 데이터 처리 능력을 향상시킬 수 있으며, 향후 유사한 작업을 더 효율적으로 수행할 수 있게 될 것입니다.</p>
<p>이 글을 통해 독자 여러분이 GSE231559와 같은 데이터셋을 직접 다루어보고, 생물정보학 데이터 처리의 실제적인 측면을 경험해보시기를 바랍니다. 이러한 경험은 여러분의 연구나 프로젝트에 큰 도움이 될 것입니다.</p>
</section>
<section id="참고" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> 참고</h1>
<ul>
<li>이 데이터를 포함하고 있는 다른 CRC scRNA-seq 데이터 모음: https://onlinelibrary.wiley.com/doi/10.1002/tox.24157</li>
</ul>


</section>

 ]]></description>
  <category>Python</category>
  <category>Gene Expression Omnibus</category>
  <category>scRNA-seq</category>
  <category>Bioinformatics</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/python_GSE_data_fetch.html</guid>
  <pubDate>Sat, 09 Nov 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>임상 통계학</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Stat_clinical_trial.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Stat_clinical_trial.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Stat_clinical_trial.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>다음은 책 ” 강승호, 신약개발에 필요한 임상통계학, 자유 아카데미, 2022” 을 읽고 요약 정리한 것으로 많은 설명은 <a href="https://www.perplexity.ai/">perplexity</a> 를 사용해 덧붙였습니다. 책 전체 내용을 요약하지는 않았기 때문에 더 자세한 내용에 관심이 있으다면 책을 한번 읽어보시길 바랍니다.</p>
<section id="임상-통계학의-개요" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 임상 통계학의 개요</h1>
<p>신약 개발에서 통계학은 여러 가지 중요한 역할을 수행합니다. 특히 임상 시험은 비용이 많이 들기 때문에 통계학적 지식을 이용해 계획하는 단계부터 비용과 편향을 줄이는 것이 매우 중요합니다.</p>
<ol type="1">
<li><p><strong>임상시험 설계 및 분석</strong>: 신약 개발 과정에서 임상시험은 필수적인 단계이며, 이 과정에서 통계학은 시험의 설계와 결과 분석에 핵심적인 역할을 합니다. 임상시험은 의약품의 안전성과 유효성을 검증하기 위해 과학적으로 검증된 방식으로 대용량의 데이터를 수집하고, 이를 기반으로 통계적 분석을 통해 의미 있는 결과를 도출합니다. 이러한 과정에서 통계학은 임상시험 디자인의 오류를 줄이고 연구자의 편향을 최소화하는 데 기여합니다.</p></li>
<li><p><strong>의사결정 지원</strong>: 통계학은 신약이 인류의 건강에 실제로 도움이 되는지, 그리고 시장에 출시할 가치가 있는지를 결정하는 데 중요한 역할을 합니다. 임상통계 전문가는 임상시험 계획서의 검토, 안전성 및 유효성의 심사 등에서 핵심적인 역할을 하며, 제약사들이 개발 우선순위를 정하는 데에도 통계적 근거를 제공합니다.</p></li>
<li><p><strong>데이터 관리 및 해석</strong>: 신약 개발 과정에서 발생하는 방대한 데이터를 관리하고 해석하는 데 통계학이 필수적입니다. 데이터 과학의 일환으로 통계학은 임상시험의 초기 단계부터 데이터를 기록하고 관리하며, 이를 통해 유의미한 인사이트를 추출하는 데 기여합니다.</p></li>
<li><p><strong>규제 승인 및 허가 지원</strong>: 신약이 시장에 출시되기 위해서는 규제 기관의 승인이 필요합니다. 이 과정에서 통계학은 허가심사 자료의 근거를 제공하는 중요한 역할을 하며, 글로벌 신약의 국내 허가 신청 시에도 필수적입니다.</p></li>
</ol>
<section id="임상적-유의성과-통계적-유의성" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="임상적-유의성과-통계적-유의성"><span class="header-section-number">1.1</span> 임상적 유의성과 통계적 유의성</h2>
<p>임상적 유의성과 통계적 유의성은 임상 연구에서 중요한 개념이지만 서로 다른 의미를 가집니다.</p>
<ul>
<li><p><strong>통계적 유의성</strong>: 연구 결과가 우연에 의해 발생할 가능성이 낮다는 것을 의미합니다. 일반적으로 p- 값이 미리 정해진 유의수준 (보통 5%) 보다 작을 때 통계적으로 유의하다고 판단합니다. 통계적 유의성은 데이터의 변동성을 고려하여 결과가 우연이 아닐 확률을 평가합니다.<sup>1</sup></p></li>
<li><p><strong>임상적 유의성</strong>: 통계적으로 유의한 결과가 실제 임상 환경에서 환자에게 의미 있는 변화를 가져오는지를 임상의가 평가합니다. 즉, 통계적으로 유의한 차이가 임상적으로도 중요한 차이인지 판단하는 것입니다. 예를 들어, 고혈압 치료제의 경우, 통계적으로 유의한 혈압 감소가 실제로 환자의 건강에 긍정적인 영향을 미칠 만큼 충분히 큰지 평가해야 합니다.<sup>2</sup></p></li>
</ul>
<p>따라서, 통계적으로 유의한 결과가 항상 임상적으로 유의한 것은 아닙니다. 다만 통계적 유의성은 객관적인 자료를 통해 설명되지만 임상적 유의성은 임상의 주관이 들어가게 되는 차이가 있습니다. 하지만 무엇보다도 허가 기관으로 부터 품목 허가를 받기 위해서는 위의 두가지 유의성이 모두 적절히 설명되어야 합니다.</p>
</section>
<section id="통계분석계획-statistical-analysis-plan-sap-과-맹검-검토-blind-review-의-필요성" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="통계분석계획-statistical-analysis-plan-sap-과-맹검-검토-blind-review-의-필요성"><span class="header-section-number">1.2</span> 통계분석계획 (Statistical Analysis Plan, SAP) 과 맹검 검토 (Blind review) 의 필요성</h2>
<section id="통계분석계획의-필요성" class="level3" data-number="1.2.1">
<h3 data-number="1.2.1" class="anchored" data-anchor-id="통계분석계획의-필요성"><span class="header-section-number">1.2.1</span> 통계분석계획의 필요성</h3>
<p>사전에 작성된 임상 시험 계획서의 통계 분석법이 적절하지 않은 경우가 많습니다. 따라서 통계 분석 계획은 임상 시험을 통해 자료를 모두 수집한 뒤 분석법을 수정할 수 있는 마지막 기회입니다.</p>
<ul>
<li><strong>규제 요구사항 충족</strong>: 규제 기관은 임상시험의 신뢰성과 타당성을 평가하기 위해 통계분석계획을 요구합니다. 이는 허가 심사 과정에서 중요한 근거 자료로 사용됩니다.<sup>3</sup></li>
</ul>
</section>
<section id="맹검-검토의-필요성" class="level3" data-number="1.2.2">
<h3 data-number="1.2.2" class="anchored" data-anchor-id="맹검-검토의-필요성"><span class="header-section-number">1.2.2</span> 맹검 검토의 필요성</h3>
<ol type="1">
<li><p><strong>편향 최소화</strong>: 맹검 검토는 분석자가 시험 데이터를 해석할 때 발생할 수 있는 편향 (연구자의 사전 지식이나 기대가 결과에 영향) 을 최소화합니다.<sup>4</sup></p></li>
<li><p><strong>객관성 확보</strong>: 맹검 검토는 연구 결과가 의도하지 않은 외부 요인에 의해 왜곡되지 않도록 보장해 임상시험의 객관성을 높입니다.</p></li>
</ol>
</section>
</section>
<section id="임상-시험에-자주-쓰이는-시험-디자인" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="임상-시험에-자주-쓰이는-시험-디자인"><span class="header-section-number">1.3</span> 임상 시험에 자주 쓰이는 시험 디자인</h2>
<section id="평행-설계-parallel-design" class="level3" data-number="1.3.1">
<h3 data-number="1.3.1" class="anchored" data-anchor-id="평행-설계-parallel-design"><span class="header-section-number">1.3.1</span> 평행 설계 (Parallel Design)</h3>
<pre class="shell"><code>| group A  | group B  | group C  |
| -------- | -------- | -------- |
| patient1 | patient2 | patiant3 |
| -------- | -------- | -------- |
| patient4 | patient5 | patiant6 |</code></pre>
<p>평행 설계는 임상시험 참가자들을 두 개 이상의 그룹으로 무작위로 배정하여, 각 그룹이 서로 다른 치료를 받도록 하는 방식입니다. 각 그룹은 시험 기간 동안 동일한 치료를 계속 받습니다.</p>
<ul>
<li><strong>장점</strong>: 이 설계는 단순하고 이해하기 쉬우며, 각 그룹 간의 비교가 명확합니다. 또한, 교차 설계에 비해 참가자가 적게 필요할 수 있습니다.</li>
<li><strong>적용</strong>: 주로 만성 질환의 장기 치료 효과를 평가할 때 사용됩니다.<sup>5</sup></li>
</ul>
</section>
<section id="교차-설계-cross-over-design" class="level3" data-number="1.3.2">
<h3 data-number="1.3.2" class="anchored" data-anchor-id="교차-설계-cross-over-design"><span class="header-section-number">1.3.2</span> 교차 설계 (Cross-over Design)</h3>
<pre class="shell"><code>patient1 —-&gt; treatment A —-&gt; wash out —&gt; treatment B
partien2 —-&gt; treatment B —-&gt; wash out —-&gt; treatment A</code></pre>
<p>교차 설계는 참가자들이 두 개 이상의 치료를 순차적으로 받도록 하는 방식입니다. 각 참가자는 모든 치료를 받으며, 치료 사이에 세척 기간 (washout period) 을 두어 이전 치료의 영향을 최소화합니다.</p>
<ul>
<li><strong>장점</strong>: 각 참가자가 자신의 대조군 역할을 하므로, 개인 간 변동을 줄일 수 있습니다. 이는 통계적 검정력을 높이고, 필요한 참가자 수를 줄일 수 있습니다.</li>
<li><strong>적용</strong>: 주로 급성 질환이나 일시적인 증상에 대한 치료 효과를 평가할 때 사용됩니다. 그러나 질병의 자연 경과가 빠르게 변하거나, 치료의 장기적 효과가 있는 경우에는 부적합할 수 있습니다</li>
</ul>
</section>
<section id="요인-설계" class="level3" data-number="1.3.3">
<h3 data-number="1.3.3" class="anchored" data-anchor-id="요인-설계"><span class="header-section-number">1.3.3</span> 요인 설계?</h3>
<pre class="shell"><code>| patient  | treatment A | treatment B | treatment A+B | no treatment |
| -------- | ----------- | ----------- | ------------- | ------------ |
| patient1 | yes         |             |               |              |
| patient2 |             | yes         |               |              |
| partien3 |             |             | yes           |              |</code></pre>
</section>
</section>
<section id="우위성-검정" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="우위성-검정"><span class="header-section-number">1.4</span> 우위성 검정</h2>
<p>우위성 검정 (Superiority Test) 은 임상시험에서 시험약이 대조약보다 더 나은 효과를 보임을 증명하기 위해 수행되는 통계적 검정입니다. 이 검정은 새로운 치료법이나 약물이 기존의 표준 치료법보다 효과적이라는 것을 입증하는 데 사용됩니다.</p>
</section>
<section id="우위성-검정의-주요-특징" class="level2" data-number="1.5">
<h2 data-number="1.5" class="anchored" data-anchor-id="우위성-검정의-주요-특징"><span class="header-section-number">1.5</span> 우위성 검정의 주요 특징</h2>
<ol type="1">
<li><strong>목적</strong>: 시험약이 대조약보다 통계적으로 유의하게 더 나은 효과를 보이는지를 확인하는 것입니다. 이는 새로운 치료가 기존 치료보다 임상적으로 의미 있는 개선을 제공하는지를 평가합니다.</li>
<li><strong>설계</strong>: 일반적으로 무작위 대조시험 (Randomized Controlled Trial, RCT) 에서 수행되며, 두 그룹 간의 효과 차이를 비교합니다. 이 과정에서 통계적 유의성을 확보하기 위해 적절한 표본 크기와 설계가 필요합니다.</li>
<li><strong>결과 해석</strong>: 통계적으로 유의한 결과가 도출되면, 이는 시험약이 대조약보다 우수하다는 증거로 해석됩니다. 그러나 통계적 유의성이 임상적 유의성을 항상 보장하는 것은 아니므로, 임상적 의미도 함께 고려해야 합니다.</li>
</ol>
<p>우위성 검정은 신약 개발 및 임상시험에서 중요한 역할을 하며, 새로운 치료법의 도입을 위한 과학적 근거를 제공합니다.</p>
</section>
<section id="동등성-검정" class="level2" data-number="1.6">
<h2 data-number="1.6" class="anchored" data-anchor-id="동등성-검정"><span class="header-section-number">1.6</span> 동등성 검정</h2>
<p>동등성 검정 (Equivalence Test) 은 두 치료제 사이에 임상적으로 의미 있는 차이가 없음을 증명하기 위해 수행되는 통계적 검정입니다. 이는 주로 두 치료제가 서로 동등한 효과를 가진다는 것을 입증하려는 경우에 사용됩니다.</p>
<ol type="1">
<li><strong>목적</strong>: 두 치료제 간의 효과 차이가 사전에 정의된 허용 가능한 범위 내에 있음을 증명하는 것입니다. 이는 두 치료제가 임상적으로 동등한 효과를 나타낸다는 것을 보여주려는 것입니다.</li>
<li><strong>설계</strong>: 동등성 검정에서는 양측 신뢰구간을 사용하여 두 치료제 간의 차이가 사전에 설정된 동등성 경계 내에 있는지를 평가합니다. 신뢰구간이 동등성 경계 내에 완전히 포함되면 두 치료제가 동등하다고 결론지을 수 있습니다.<sup>6</sup></li>
<li><strong>결과 해석</strong>: 동등성 검정의 결과는 두 치료제가 통계적으로 유의한 차이가 없다는 것을 의미하며, 이는 임상적으로도 의미 있는 차이가 없다는 것을 나타냅니다. 이는 새로운 치료제가 기존 치료제와 유사한 효과를 제공함을 입증하는 데 사용됩니다.</li>
</ol>
<p>동등성 검정은 제네릭 의약품의 승인이나 기존 치료제와의 비교 연구에서 자주 사용됩니다. 이를 통해 새로운 치료제의 효과가 기존 치료제와 동등함을 입증함으로써, 임상적 유용성을 확보할 수 있습니다.</p>
</section>
<section id="비열등성-검정" class="level2" data-number="1.7">
<h2 data-number="1.7" class="anchored" data-anchor-id="비열등성-검정"><span class="header-section-number">1.7</span> 비열등성 검정</h2>
<p>비열등성 검정 (Non-inferiority Test) 은 임상시험에서 실험적 치료가 대조약보다 열등하지 않음을 증명하기 위해 수행되는 통계적 검정입니다. 이는 특히 위약 대조가 비윤리적이거나 실용적이지 않은 경우에 사용되며, 시험약이 대조약과 비교하여 임상적으로 의미 있는 차이가 없음을 입증하려는 목적을 가집니다.</p>
<ol type="1">
<li><strong>목적</strong>: 비열등성 검정은 새로운 치료제가 기존의 활성 대조약보다 열등하지 않다는 것을 입증하는 데 목적이 있습니다. 이를 통해 새로운 치료제가 기존 치료와 유사한 효과를 제공하면서도 다른 장점 (예: 부작용 감소, 비용 절감 등) 을 가질 수 있음을 보여줍니다.</li>
<li><strong>설계</strong>: 비열등성 검정에서는 비열등성 마진 (non-inferiority margin) 을 사전에 정의해야 합니다. 이 마진은 두 치료제 간의 허용 가능한 최대 효과 차이를 나타내며, 신뢰구간이 이 마진 내에 있으면 비열등하다고 결론지을 수 있습니다.<sup>7</sup></li>
<li><strong>결과 해석</strong>: 비열등성 검정의 결과는 실험적 치료가 대조약보다 통계적으로 유의하게 열등하지 않다는 것을 의미합니다. 이를 통해, 실험적 치료가 위약보다 효과적임을 간접적으로 증명할 수 있습니다.</li>
</ol>
<p>비열등성 검정은 특히 새로운 치료법이 기존 치료법과 유사한 효과를 가지면서도 다른 임상적 이점을 제공할 때 유용합니다. 이는 임상시험에서 중요한 설계 전략으로 활용됩니다.</p>
</section>
<section id="임상-시험에서-심사기관의-가장-큰-관심사" class="level2" data-number="1.8">
<h2 data-number="1.8" class="anchored" data-anchor-id="임상-시험에서-심사기관의-가장-큰-관심사"><span class="header-section-number">1.8</span> 임상 시험에서 심사기관의 가장 큰 관심사</h2>
<p>약효가 없는 신약을 허가해주는 것 (False positive; 제 1 종 오류) 이 약효가 있는 신약을 허가하지 않는 것 (제 2 종 오류) 보다 큰 문제이다. 따라서 임상 시험에서 제 1 종 오류의 비율이 5% 이하로 통제되었는지를 가장 관심 있게 본다.</p>
</section>
</section>
<section id="임상-시험-개요" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 임상 시험 개요</h1>
<p>임상시험은 의약품이나 의료기기를 인간을 대상으로 적용하여 그 효과와 안전성을 검증하는 연구 과정입니다. 이는 사람을 직접 대상으로 하거나 사람에게서 추출된 검체 또는 정보를 이용하여 이루어지며, 새로운 치료법이나 이미 알려진 치료법의 효과와 안전성을 평가하기 위해 설계됩니다.<sup>8</sup></p>
<p>임상시험은 일반적으로 다음과 같은 단계로 구분됩니다:</p>
<ol type="1">
<li><strong>비임상시험</strong>: 동물이나 세포를 대상으로 하는 초기 연구 단계로, 안전성과 기초적인 효과를 평가합니다.</li>
<li><strong>1 상 임상시험</strong>: 소수의 건강한 자원자를 대상으로 안전성과 적정 용량을 평가합니다.</li>
<li><strong>2 상 임상시험</strong>: 소수의 환자를 대상으로 약물의 효능과 부작용을 평가합니다.</li>
<li><strong>3 상 임상시험</strong>: 대규모 환자를 대상으로 약물의 효과와 안전성을 확증하고, 기존 치료법과 비교합니다.</li>
<li><strong>4 상 임상시험</strong>: 시판 후 추가적인 안전성과 장기적 효과를 평가합니다.</li>
</ol>
<p>임상시험은 철저한 계획과 설계가 필요하며, 이는 임상시험계획서에 명시됩니다. 이 계획서는 연구의 목적, 방법, 대상자 수, 통계적 분석 방법 등을 포함하여 임상시험의 성공적인 수행을 위한 지침을 제공합니다.<sup>9</sup></p>
<section id="차-유효성-평가-변수-primary-endpoint" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="차-유효성-평가-변수-primary-endpoint"><span class="header-section-number">2.1</span> 1 차 유효성 평가 변수 (Primary endpoint)</h2>
<p>1 차 유효성 평가 변수 (Primary Endpoint) 는 임상시험의 성공 여부를 판단하는 데 사용되는 주요 변수입니다. 이는 임상시험의 목표를 달성했는지를 평가하는 핵심 기준으로, 임상시험계획서에 명확하게 명시되어야 하며, 선택한 이유에 대한 설명도 포함되어야 합니다. 일반적으로 하나의 1 차 유효성 평가 변수가 설정되며, 이는 표본 크기를 계산하는 데도 사용될 수 있습니다. 이러한 변수는 임상시험의 결과를 해석하고, 시험약의 효과를 평가하는 데 중요한 역할을 합니다.</p>
<ul>
<li><strong>목적</strong>: 임상시험의 주요 목표를 달성했는지를 평가하는 핵심 지표입니다. 이는 임상시험의 성공 여부를 판단하는 데 가장 중요한 변수로, 시험의 설계 단계에서 명확하게 정의되어야 합니다.</li>
<li><strong>특징</strong>: 일반적으로 하나의 1 차 유효성 평가 변수가 설정되며, 표본 크기 계산과 통계적 검정의 주요 기준으로 사용됩니다.</li>
<li><strong>예시</strong>: 암 치료제의 경우, 무진행 생존기간 (Progression-Free Survival) 이나 전체 생존기간 (Overall Survival) 이 1 차 유효성 평가 변수가 될 수 있습니다.</li>
</ul>
<section id="차-유효성-평가-변수-primary-endpoint-의-예시" class="level3" data-number="2.1.1">
<h3 data-number="2.1.1" class="anchored" data-anchor-id="차-유효성-평가-변수-primary-endpoint-의-예시"><span class="header-section-number">2.1.1</span> 1 차 유효성 평가 변수 (Primary Endpoint) 의 예시</h3>
<ol type="1">
<li><p><strong>무진행 생존기간 (Progression-Free Survival, PFS)</strong>: 이는 암 치료제 임상시험에서 자주 사용되는 1 차 유효성 평가 변수로, 환자가 질병의 진행 없이 생존한 기간을 측정합니다. PFS 는 치료의 효과를 평가하는 중요한 지표로 활용됩니다.<sup>10</sup></p></li>
<li><p><strong>최적 전체 반응 (Best Overall Response, BOR)</strong>: 이 변수는 치료 후 종양의 크기 변화나 반응을 평가하는 데 사용됩니다. BOR 은 암 치료의 효과를 정량화하는 데 중요한 역할을 합니다.</p></li>
</ol>
</section>
</section>
<section id="차-유효성-평가-변수-secondary-endpoint" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="차-유효성-평가-변수-secondary-endpoint"><span class="header-section-number">2.2</span> 2 차 유효성 평가 변수 (Secondary Endpoint)</h2>
<p>2 차 유효성 평가 변수 (Secondary Endpoint) 는 임상시험에서 보조적으로 시험약의 효과를 측정하는 변수입니다. 이는 1 차 유효성 평가 변수 외에 추가적인 정보를 제공하며, 치료의 부가적인 효과나 안전성을 평가하는 데 사용됩니다. 2 차 유효성 평가 변수는 임상시험의 보조적인 목표를 달성했는지를 평가하며 일반적으로 2 차 유효성 평가 변수는 다음과 같은 6 가지 유형으로 나뉩니다:</p>
<ol type="1">
<li><strong>증상 개선</strong>: 치료가 환자의 증상을 얼마나 개선하는지를 평가합니다.</li>
<li><strong>삶의 질</strong>: 치료가 환자의 전반적인 삶의 질에 미치는 영향을 측정합니다.</li>
<li><strong>부작용 발생률</strong>: 치료와 관련된 부작용의 빈도와 심각성을 평가합니다.</li>
<li><strong>생체표지자 변화</strong>: 치료가 특정 생체표지자에 미치는 영향을 측정합니다.</li>
<li><strong>경제적 평가</strong>: 치료의 비용 효과성을 평가합니다.</li>
<li><strong>장기적 효과</strong>: 치료의 장기적인 효과와 안전성을 평가합니다.</li>
</ol>
<ul>
<li><strong>목적</strong>: 1 차 유효성 평가 변수 외에 추가적인 정보를 제공하며, 치료의 부가적인 효과나 안전성을 평가하는 데 사용됩니다. 이는 임상시험의 보조적인 목표를 달성했는지를 평가합니다.</li>
<li><strong>특징</strong>: 여러 개의 2 차 유효성 평가 변수가 설정될 수 있으며, 1 차 유효성 평가 변수에 비해 상대적으로 중요도가 낮습니다. 그러나, 2 차 유효성 평가 변수는 치료의 전체적인 효과를 이해하는 데 중요한 역할을 합니다.</li>
<li><strong>예시</strong>: 위의 암 치료제 사례에서, 삶의 질 (Quality of Life) 이나 부작용 발생률 등이 2 차 유효성 평가 변수가 될 수 있습니다.</li>
</ul>
</section>
</section>
<section id="편향-bias" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 편향 (Bias)</h1>
<p>편향 (Bias) 은 임상시험이나 연구에서 체계적인 오류로 인해 결과가 왜곡되는 현상을 의미합니다. 이는 랜덤 오차 (random error) 와는 다른 개념으로, 특정 방향으로 결과를 지속적으로 왜곡시킵니다. 편향을 최소화하는 것은 연구의 신뢰성과 타당성을 확보하는 데 매우 중요합니다.</p>
<section id="주요-편향-유형" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="주요-편향-유형"><span class="header-section-number">3.1</span> 주요 편향 유형</h2>
<ol type="1">
<li><p><strong>선정 편향 (Selection Bias)</strong>: 연구 대상자를 선택하는 과정에서 발생하는 편향으로, 연구 결과가 모집단 전체를 대표하지 못하게 합니다. 무작위 배정 (randomization) 을 통해 최소화할 수 있습니다.</p></li>
<li><p><strong>정보 편향 (Information Bias)</strong>: 데이터를 수집하거나 측정하는 과정에서 발생하는 오류로, 잘못된 정보가 수집되어 결과에 영향을 미칩니다. 맹검 (blinding) 과 표준화된 측정 방법을 통해 줄일 수 있습니다.</p></li>
<li><p><strong>관찰자 편향 (Observer Bias)</strong>: 연구자가 결과를 해석하거나 측정할 때 주관적인 판단이 개입되는 경우 발생합니다. 이중 맹검 (double-blind) 설계를 통해 최소화할 수 있습니다.</p></li>
<li><p><strong>출판 편향 (Publication Bias)</strong>: 긍정적인 결과가 부정적인 결과보다 더 자주 출판되는 경향이 있어, 연구 결과의 전반적인 해석에 영향을 미칩니다.</p></li>
<li><p><strong>회귀 편향 (Regression Bias)</strong>: 극단적인 값이 평균으로 회귀하는 경향으로 인해 발생하는 편향입니다.</p></li>
</ol>
</section>
<section id="편향-최소화-전략" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="편향-최소화-전략"><span class="header-section-number">3.2</span> 편향 최소화 전략</h2>
<ul>
<li><strong>무작위 배정</strong>: 연구 대상자를 무작위로 배정하여 선정 편향을 줄입니다.</li>
<li><strong>맹검</strong>: 연구자와 참가자가 어떤 치료를 받는지 모르게 하여 관찰자와 정보 편향을 줄입니다.</li>
<li><strong>표준화된 프로토콜</strong>: 데이터 수집과 측정 방법을 표준화하여 정보 편향을 줄입니다.</li>
<li><strong>완전한 데이터 보고</strong>: 긍정적, 부정적 결과 모두를 보고하여 출판 편향을 줄입니다.</li>
</ul>
</section>
<section id="편향의-발생을-막는-임상-디자인" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="편향의-발생을-막는-임상-디자인"><span class="header-section-number">3.3</span> 편향의 발생을 막는 임상 디자인</h2>
<p>편향을 방지하기 위한 임상시험 디자인 방법 중 하나는 맹검 (blinding) 입니다. 맹검은 연구자가 의도치 않게 결과에 영향을 미치는 것을 방지하기 위해 피험자와 연구자 모두에게 특정 정보를 숨기는 방법입니다. 맹검에는 여러 유형이 있으며, 그 중 흔히 사용되는 두 가지는 다음과 같습니다:</p>
<section id="맹검" class="level3" data-number="3.3.1">
<h3 data-number="3.3.1" class="anchored" data-anchor-id="맹검"><span class="header-section-number">3.3.1</span> 맹검</h3>
<ol type="1">
<li>단일 맹검 (Single-Blind)</li>
</ol>
<ul>
<li><strong>설명</strong>: 피험자만이 자신이 어떤 치료를 받고 있는지 모르는 경우입니다. 연구자나 시험자는 어떤 치료가 피험자에게 투여되는지 알고 있습니다.</li>
<li><strong>목적</strong>: 피험자가 자신이 받는 치료에 대해 알지 못하게 하여, 심리적 요인이나 기대가 결과에 미치는 영향을 최소화합니다.</li>
</ul>
<ol start="2" type="1">
<li>이중 맹검 (Double-Blind)</li>
</ol>
<ul>
<li><strong>설명</strong>: 피험자와 연구자 모두가 어떤 치료가 투여되고 있는지 모르는 경우입니다.</li>
<li><strong>목적</strong>: 피험자와 연구자 모두의 편향을 방지하여, 연구 결과의 객관성과 신뢰성을 높입니다. 이는 편향을 최소화하는 가장 강력한 방법 중 하나로 간주됩니다.<sup>11</sup></li>
</ul>
<p>이러한 맹검 방법은 임상시험에서 편향을 줄이고, 결과의 타당성을 높이는 데 중요한 역할을 합니다.</p>
</section>
<section id="무작위-배정" class="level3" data-number="3.3.2">
<h3 data-number="3.3.2" class="anchored" data-anchor-id="무작위-배정"><span class="header-section-number">3.3.2</span> 무작위 배정</h3>
<p>무작위 배정 (Randomization) 은 임상시험에서 편향을 줄이고 결과의 신뢰성을 높이기 위해 피험자를 무작위로 배정하는 방법입니다. 무작위 배정의 주요 유형과 각각의 특징은 다음과 같습니다:</p>
<ol type="1">
<li>단순 무작위 배정 (Simple Randomization)</li>
</ol>
<ul>
<li><strong>설명</strong>: 난수발생기를 사용하여 피험자를 무작위로 배정하는 방법입니다.</li>
<li><strong>장점</strong>: 가장 기본적이고 이해하기 쉬운 방법입니다.</li>
<li><strong>단점</strong>: 불균등한 배정이 발생할 수 있는 가능성이 있어, 특히 작은 표본 크기에서 그룹 간 불균형이 생길 수 있습니다.</li>
</ul>
<ol start="2" type="1">
<li>블록 무작위 배정 (Block Randomization)</li>
</ol>
<ul>
<li><strong>설명</strong>: 피험자들을 몇 개의 블록으로 나누고, 각 블록 내에서 단순 무작위 배정을 수행하는 방법입니다.</li>
<li><strong>장점</strong>: 각 치료군에 균등한 수의 피험자가 배정되도록 보장하여, 시간 경과에 따른 외부 요인의 영향을 최소화할 수 있습니다. 이는 특히 중간 분석이 필요한 경우에 유리합니다.</li>
</ul>
<ol start="3" type="1">
<li>층화 무작위 배정 (Stratified Randomization)</li>
</ol>
<ul>
<li><strong>설명</strong>: 피험자들을 특정 특성 (예: 질병의 중증도, 연령 등) 에 따라 층으로 나눈 후, 각 층 내에서 블록 무작위 배정을 수행하는 방법입니다.</li>
<li><strong>장점</strong>: 중요한 인구통계학적 또는 임상적 특성에 따라 피험자를 균등하게 배정하여, 이러한 특성들이 결과에 미치는 영향을 최소화할 수 있습니다.</li>
<li><strong>단점</strong>: 층의 수가 많아질수록 복잡성이 증가하며, 각 층에 충분한 수의 피험자가 필요합니다. 이는 시험 설계와 관리에 있어 추가적인 부담이 될 수 있습니다.</li>
</ul>
</section>
</section>
</section>
<section id="검정력과-표본의-크기" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 검정력과 표본의 크기</h1>
<p>검정력 (Power) 과 표본의 크기는 임상시험 설계에서 중요한 요소로, 연구 결과의 신뢰성과 타당성을 확보하는 데 필수적입니다.</p>
<section id="검정력-power" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="검정력-power"><span class="header-section-number">4.1</span> 검정력 (Power)</h2>
<ul>
<li><strong>정의</strong>: 검정력은 실제로 효과가 존재할 때, 연구가 그 효과를 발견할 수 있는 확률을 의미합니다. 이는 <em>1 - 제 2종 오류 확률(β)</em> 로 정의됩니다.</li>
<li><strong>의미</strong>: 검정력이 높을수록 연구가 실제 효과를 발견할 가능성이 높아집니다. 일반적으로 80% 이상의 검정력이 목표로 설정됩니다.</li>
</ul>
</section>
<section id="제-1-종-오류와-제-2-종-오류" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="제-1-종-오류와-제-2-종-오류"><span class="header-section-number">4.2</span> 제 1 종 오류와 제 2 종 오류</h2>
<ul>
<li><strong>제 1 종 오류 (Type I Error, α)</strong>: 실제로 효과가 없는데도 효과가 있다고 잘못 결론 내리는 오류입니다. 일반적으로 α는 5% 이하로 설정됩니다.</li>
<li><strong>제 2 종 오류 (Type II Error, β)</strong>: 실제로 효과가 있는데도 효과가 없다고 잘못 결론 내리는 오류입니다. β가 낮을수록 검정력이 높아집니다.</li>
</ul>
</section>
<section id="제-1-종-오류와-제-2-종-오류-간의-트레이드-오프" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="제-1-종-오류와-제-2-종-오류-간의-트레이드-오프"><span class="header-section-number">4.3</span> 제 1 종 오류와 제 2 종 오류 간의 트레이드 오프</h2>
<ul>
<li><strong>트레이드 오프</strong>: 표본의 크기가 동일한 경우, 제 1 종 오류 (α) 를 줄이면 제 2 종 오류 (β) 가 증가하는 경향이 있습니다. 이는 연구 설계에서 두 오류 간의 균형을 맞추는 것이 중요함을 의미합니다.</li>
<li><strong>해결 방법</strong>: 이 트레이드 오프를 해결하기 위해서는 표본의 크기를 증가시키는 것이 일반적인 방법입니다. 표본 크기를 늘리면 제 2 종 오류를 줄여 검정력을 높일 수 있습니다. 다시 말해 임상 시험에서 제 1 종 오류는 5% 이하로 고정되어 있기 때문에 제 2 종 오류를 줄여서 검정력을 높이기 위해서는 표본의 크기를 늘리는 수 밖에 없다.</li>
</ul>
</section>
<section id="표본의-크기를-늘리지-않고-검정력을-높이는-방법" class="level2" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="표본의-크기를-늘리지-않고-검정력을-높이는-방법"><span class="header-section-number">4.4</span> 표본의 크기를 늘리지 않고 검정력을 높이는 방법</h2>
<p>표본의 크기를 늘리지 않고 검정력을 높이는 방법에는 다음은 두 가지 방법이 있습니다.</p>
<ol type="1">
<li><strong>환자 선정을 엄격하게 해서 동질적인 환자를 모집</strong>:
<ul>
<li><strong>설명</strong>: 연구에 포함되는 환자군을 더 동질적으로 만들기 위해 엄격한 선정 기준을 적용합니다. 이는 환자 간 변동성을 줄여 결과의 변동성을 감소시킵니다.</li>
<li><strong>장점</strong>: 동질적인 환자군을 통해 통계적 검정력이 높아질 수 있습니다.</li>
<li><strong>단점</strong>: 환자 모집에 시간이 더 걸릴 수 있으며, 신약의 적응증이 줄어들 수 있습니다.</li>
</ul></li>
<li><strong>시험약의 약효 크기를 높임</strong>:
<ul>
<li><strong>설명</strong>: 시험약의 효과 크기를 증가시키면, 통계적으로 유의한 결과를 얻을 가능성이 높아집니다.</li>
<li><strong>장점</strong>: 더 큰 효과 크기는 검정력을 증가시킵니다.</li>
<li><strong>단점</strong>: 임상 시험이 이미 진행 중인 경우에는 이 방법을 적용하기 어려울 수 있습니다.</li>
</ul></li>
</ol>
</section>
<section id="허가-기관에서-권장하는-검정력" class="level2" data-number="4.5">
<h2 data-number="4.5" class="anchored" data-anchor-id="허가-기관에서-권장하는-검정력"><span class="header-section-number">4.5</span> 허가 기관에서 권장하는 검정력</h2>
<p>허가 기관에서 권장하는 검정력은 일반적으로 80% 에서 90% 사이입니다. ICH E9 가이드라인에 따르면 이정도 수준의 검정력은 임상시험의 의미 있는 결과를 도출하는 데 필수적입니다.<sup>12</sup></p>
</section>
<section id="표본의-크기를-결정하는-방법" class="level2" data-number="4.6">
<h2 data-number="4.6" class="anchored" data-anchor-id="표본의-크기를-결정하는-방법"><span class="header-section-number">4.6</span> 표본의 크기를 결정하는 방법</h2>
<p>표본의 크기를 결정하는 방법은 임상시험의 설계에서 중요한 요소로, 1 차 유효성 평가 변수에 의해 크게 영향을 받습니다. 특히, 통계 분석법이 two-sample t-test 인 경우, 표본 크기 결정은 다음과 같은 요소들을 고려합니다:</p>
<ol type="1">
<li><strong>효과 크기 (Effect Size)</strong>: 두 그룹 간의 차이를 측정하는 데 사용됩니다. 효과 크기가 클수록 필요한 표본 크기는 작아질 수 있습니다.</li>
<li><strong>유의 수준 (Significance Level, α)</strong>: 일반적으로 5% 로 설정되며, 이는 제 1 종 오류의 허용 확률을 의미합니다.</li>
<li><strong>검정력 (Power, 1-β)</strong>: 일반적으로 80% 에서 90% 로 설정되며, 이는 실제 효과가 있을 때 이를 발견할 수 있는 확률입니다.</li>
<li><strong>표준 편차 (Standard Deviation)</strong>: 모집단의 변동성을 나타내며, 변동성이 클수록 더 많은 표본이 필요합니다.</li>
</ol>
<p>이러한 요소들은 표본 크기를 결정하는 데 중요한 역할을 하며, 연구의 목표와 설계에 따라 신중하게 고려되어야 합니다. 표본 크기를 적절히 설정함으로써 연구의 신뢰성과 타당성을 높일 수 있습니다.</p>
<p>1 차 유효성 평가 변수에 의해 결정된다. 통계 분석법이 two-sample t-test 인 경우는 다음과 같다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%20n%20=%20%5Cfrac%7BZ_%7Balpha/2%7D%20+%20Z_%7Bbeta%7D%20*%202%20*%20%5Cdelta%5E2%7D%7B%20(%5Cmu_1%20-%20%5Cmu_2)%5E2%7D"></p>
</section>
<section id="표본의-크기-계산에-사용된-값의-정확도" class="level2" data-number="4.7">
<h2 data-number="4.7" class="anchored" data-anchor-id="표본의-크기-계산에-사용된-값의-정확도"><span class="header-section-number">4.7</span> 표본의 크기 계산에 사용된 값의 정확도</h2>
<p>표본의 크기를 계산할 때 사용되는 값들은 일반적으로 임상시험이 끝나야 정확히 알 수 있는 미지의 값이기 때문에, 초기에는 추정치를 사용하여 계산합니다. 이러한 추정치는 과거의 연구 데이터나 파일럿 연구의 결과를 바탕으로 추정됩니다. 이로 인해, 표본 크기 계산은 항상 어느 정도의 불확실성을 내포하고 있습니다.</p>
</section>
<section id="그룹간-표본-크기" class="level2" data-number="4.8">
<h2 data-number="4.8" class="anchored" data-anchor-id="그룹간-표본-크기"><span class="header-section-number">4.8</span> 그룹간 표본 크기</h2>
<ol type="1">
<li><strong>동일한 표본 크기</strong>: 두 그룹 간의 표본 크기를 동일하게 설정하면, 통계적 검정력이 최대화됩니다. 이는 두 그룹의 비교가 더 균형 잡히고, 결과의 해석이 용이해지기 때문입니다.</li>
<li><strong>비대칭 표본 크기</strong>: 실질적인 이유 (예: 모집의 어려움, 비용 제한 등) 로 인해 두 그룹의 표본 크기가 동일하지 않을 수 있습니다. 비대칭 표본 크기는 연구의 검정력을 감소시킬 수 있으며, 이를 보완하기 위해서는 더 많은 총 표본이 필요할 수 있습니다.</li>
</ol>
<p>결론적으로, 표본 크기를 설계할 때는 가능한 한 두 그룹의 크기를 동일하게 유지하는 것이 이상적입니다. 그러나, 연구의 실질적인 제약을 고려하여 비대칭적인 크기를 사용할 수도 있으며, 이 경우 검정력에 미치는 영향을 충분히 고려해야 합니다.</p>
</section>
<section id="임상-시험이-실패하는-이유" class="level2" data-number="4.9">
<h2 data-number="4.9" class="anchored" data-anchor-id="임상-시험이-실패하는-이유"><span class="header-section-number">4.9</span> 임상 시험이 실패하는 이유</h2>
<p>임상시험이 실패하는 이유는 다양하며 다음은 임상시험 실패의 일반적인 원인들입니다:</p>
<ol type="1">
<li><strong>시험약의 효과가 감소되는 편향이 발생한 경우</strong>: 연구 설계나 실행 과정에서 편향이 발생하면 시험약의 실제 효과가 왜곡되어 나타날 수 있습니다.</li>
<li><strong>시험약의 용량 선정이 잘못된 경우</strong>: 적절한 용량을 선택하지 못하면, 약효가 충분히 나타나지 않거나 안전성 문제가 발생할 수 있습니다. 용량이 너무 낮으면 약효가 줄어들고, 너무 높으면 부작용이 증가할 수 있습니다.</li>
<li><strong>검정력이 부족한 경우</strong>: 충분한 표본 크기를 확보하지 못하면 검정력이 부족하게 되어, 실제로 효과가 있는 경우에도 이를 발견하지 못할 수 있습니다.</li>
<li><strong>환자 모집단을 잘못 선택한 경우</strong>: 시험약이 특정 환자군에서만 효과가 있을 수 있는데, 잘못된 모집단을 선택하면 약효를 제대로 평가하지 못할 수 있습니다.</li>
<li><strong>1 차 유효성 평가 변수를 잘못 선택한 경우</strong>: 적절한 1 차 유효성 평가 변수를 선택하지 못하면, 시험의 주요 목표를 정확히 평가하지 못할 수 있습니다.</li>
<li><strong>우연에 의해 실패한 경우</strong>: 검정력 80% 라는 의미는, 실제로 효과가 있을 때 이를 발견할 확률이 80% 라는 뜻이며, 이는 우연에 의해 실패할 확률이 20% 임을 의미합니다.</li>
<li><strong>시험약의 약효가 없는 경우</strong>: 시험약 자체에 효과가 없으면 임상시험은 실패할 수밖에 없습니다. 이는 시험약의 기전이 잘못 이해되었거나, 예상과 달리 효과가 없는 경우에 해당합니다.</li>
</ol>
<p>이러한 요인들은 임상시험 설계와 실행 단계에서 신중하게 고려되어야 하며, 각 요인을 최소화하기 위한 전략이 필요합니다. 이를 통해 임상시험의 성공 가능성을 높일 수 있습니다.</p>
</section>
</section>
<section id="다기관-임상-시험" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 다기관 임상 시험</h1>
<p>다기관 임상시험은 동일한 임상시험 계획서를 기반으로 여러 기관에서 동시에 수행되는 임상시험입니다. 이러한 시험은 다양한 인구 집단에서의 약효를 평가하고 일반화 가능성을 높이기 위해 설계됩니다.</p>
<section id="기관별-약효의-크기" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="기관별-약효의-크기"><span class="header-section-number">5.1</span> 기관별 약효의 크기</h2>
<p>다기관 임상시험에서 약효가 존재한다고 판단되면, 각 기관별로 약효의 크기에 대한 교호작용 검정을 수행합니다. 이는 각 기관에서의 약효가 일관되게 나타나는지를 평가하는 과정입니다. 교호작용 검정은 특정 기관에서의 약효 차이가 시험의 전반적인 결과에 미치는 영향을 평가해 결과의 해석에 중요한 역할을 합니다.</p>
</section>
<section id="교호-작용-검정" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="교호-작용-검정"><span class="header-section-number">5.2</span> 교호 작용 검정</h2>
<p>교호작용 검정은 통계학적으로 두 변수 간의 상호작용이 존재하는지를 평가하는 방법입니다. 통계학적으로 교호작용이 존재한다면, 이는 두 가지 종류로 나뉩니다:</p>
<ol type="1">
<li><p><strong>양적인 교호작용</strong>: 두 변수 간의 상호작용이 효과의 크기에 영향을 미치지만, 효과의 방향은 동일하게 유지됩니다. 예를 들어, 약물 A 와 B 가 함께 사용될 때 효과가 더 커지지만, 두 약물이 모두 긍정적인 효과를 나타내는 경우입니다.</p></li>
<li><p><strong>질적인 교호작용</strong>: 두 변수 간의 상호작용이 효과의 방향을 변화시킵니다. 예를 들어, 약물 A 가 단독으로는 긍정적인 효과를 나타내지만, 약물 B 와 함께 사용될 때는 부정적인 효과를 나타내는 경우입니다.</p></li>
</ol>
</section>
</section>
<section id="기저치-공변량-보정" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> 기저치 공변량 보정</h1>
<p>기저치 공변량 보정은 임상시험 시작 전에 측정된 환자의 특성 (공변량) 을 고려하여 치료 효과를 분석하는 방법입니다.<sup>13</sup> 보정의 목적은 1 차 유효성 평가변수에 미치는 영향을 조정하고 치료 효과 추정의 정확도 향상시키며 임상시험 결과의 신뢰성 제고하기 위함입니다. 기저치 공변량 보정은 임상 설계 단계와 분석 단계에서 보정을 수행할 수 있습니다.</p>
<section id="임상-설계-단계에서-보정" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="임상-설계-단계에서-보정"><span class="header-section-number">6.1</span> 임상 설계 단계에서 보정</h2>
<p>층화 무작위 배정:<sup>14</sup> - 공변량에 대해 층화하여 무작위 배정을 실시합니다. 이는 치료군과 대조군 간 공변량 분포의 불균형을 줄여 편향을 감소시키며 검정력 향상에도 기여합니다.</p>
</section>
<section id="분석-단계에서-보정" class="level2" data-number="6.2">
<h2 data-number="6.2" class="anchored" data-anchor-id="분석-단계에서-보정"><span class="header-section-number">6.2</span> 분석 단계에서 보정</h2>
<p>기저치 공변량 보정을 주 분석에서 실시했는지 명확히 기술해야 합니다. 탐색적 분석의 결과는 신중하게 해석해야 하며, 이에 근거한 결론은 일반적으로 받아들여지기 어렵습니다. 1 차 유효성 평가변수의 형태에 따라 다른 통계적 방법을 사용합니다.</p>
<ul>
<li>연속형 변수: 공분산분석 (ANCOVA) 을 사용합니다.</li>
<li>이진형 또는 범주형 변수: 로지스틱 회귀분석을 적용합니다.</li>
<li>시간형 변수 (생존시간): Cox 비례위험모형 (proportional hazard mode) 을 활용합니다.</li>
</ul>
</section>
<section id="보정할-기저치-공변량의-기준" class="level2" data-number="6.3">
<h2 data-number="6.3" class="anchored" data-anchor-id="보정할-기저치-공변량의-기준"><span class="header-section-number">6.3</span> 보정할 기저치 공변량의 기준</h2>
<ol type="1">
<li><strong>1 차 유효성 평가변수와의 상관관계</strong>: 1 차 유효성 평가변수와 상관관계가 있는 기저치 공변량을 선택하는 것이 중요합니다.<sup>15</sup></li>
<li><strong>층화 무작위배정 변수</strong>: 층화 무작위배정에 사용된 변수는 보정 대상으로 고려해야 합니다.</li>
<li><strong>무작위 배정 이전 변수</strong>: 무작위 배정 이후에 관찰되는 변수는 보정 대상에서 제외해야 합니다.</li>
<li><strong>교호작용 부재</strong>: 교호작용이 존재하지 않는 변수를 선택하는 것이 바람직합니다.</li>
</ol>
</section>
<section id="무작위-배정-후-관측된-불균형-기저치-공변량-보정" class="level2" data-number="6.4">
<h2 data-number="6.4" class="anchored" data-anchor-id="무작위-배정-후-관측된-불균형-기저치-공변량-보정"><span class="header-section-number">6.4</span> 무작위 배정 후 관측된 불균형 기저치 공변량 보정</h2>
<p>원칙적으로 무작위 배정 후 관측된 불균형 기저치 공변량은 보정하지 않는 것이 바람직합니다. 이에 대한 근거는 다음과 같습니다:</p>
<ol type="1">
<li><strong>편향 가능성</strong>: 사후에 관찰된 불균형을 보정하는 것은 새로운 편향을 도입할 수 있습니다.<sup>16</sup></li>
<li><strong>통계적 타당성</strong>: 원래 사전에 명시되지 않은 공변량을 무작위배정 이후에 보정하는 것은 통계적으로 부적절할 수 있습니다.</li>
<li><strong>연구 계획의 중요성</strong>: 임상시험 계획서의 통계 부분에서 주 분석에 포함될 임상시험대상자 집단을 사전에 정의하는 것이 중요합니다.</li>
<li><strong>객관성 유지</strong>: 무작위 배정 후 관찰된 불균형을 보정하면 연구의 객관성이 훼손될 수 있습니다.</li>
</ol>
</section>
</section>
<section id="ittintention-to-treat-와-ppper-protocol" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> ITT(Intention to treat) 와 PP(per protocol)</h1>
<p>ITT(Intention to Treat) 와 PP(Per Protocol) 분석은 임상시험 결과를 해석하는 두 가지 주요 방법입니다.</p>
<section id="itt-intention-to-treat-분석-16" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="itt-intention-to-treat-분석-16"><span class="header-section-number">7.1</span> ITT (Intention to Treat) 분석 <sup>17</sup></h2>
<ul>
<li>무작위 배정된 모든 참가자를 원래 배정된 그룹대로 분석에 포함시킵니다.</li>
<li>프로토콜 위반, 중도 탈락, 치료 비순응 등에 관계없이 모든 참가자를 포함합니다.</li>
<li>실제 임상 현장의 상황을 더 잘 반영하여 치료의 실제 효과를 추정할 수 있습니다.</li>
<li>무작위 배정의 이점을 유지하고 편향을 최소화합니다.</li>
</ul>
</section>
<section id="pp-per-protocol-분석-17" class="level2" data-number="7.2">
<h2 data-number="7.2" class="anchored" data-anchor-id="pp-per-protocol-분석-17"><span class="header-section-number">7.2</span> PP (Per Protocol) 분석 <sup>18</sup></h2>
<p>PP(Per Protocol) 분석은 임상시험에서 중요한 분석 방법 중 하나입니다. PP 분석의 주요 특징은 다음과 같습니다:</p>
<ul>
<li>PP 분석은 full analysis set(전체 분석 집합) 의 부분집합으로 임상시험계획서를 보다 잘 준수한 피험자들만을 포함하는 분석 집합입니다.</li>
<li>주요 프로토콜 위반, 치료 비순응, 그룹 전환, 측정 누락 등의 사유로 제외된 피험자들은 분석에서 제외됩니다 <sup>19</sup></li>
<li>이상적인 조건에서의 치료 효과를 식별하는 것이 목적이며,” 환자들이 완전히 순응할 경우 효과가 어떻게 나타나는가?” 라는 질문에 답하고자 합니다.<sup>20</sup></li>
</ul>
</section>
<section id="itt-분석과의-차이" class="level2" data-number="7.3">
<h2 data-number="7.3" class="anchored" data-anchor-id="itt-분석과의-차이"><span class="header-section-number">7.3</span> ITT 분석과의 차이</h2>
<ul>
<li>PP 분석은 치료를 완료하지 않은 환자들을 제외하므로 치료 차이를 더 잘 반영할 수 있습니다.</li>
<li>ITT 분석이 두 치료법을 비슷하게 보이게 하는 경향이 있는 반면, PP 분석은 치료 차이를 더 명확히 보여줄 수 있습니다.</li>
<li>ITT 는 보수적인 추정치를 제공하지만, 실제 임상 상황을 더 잘 반영합니다.</li>
<li>PP 는 이상적인 조건에서의 효과를 보여주지만, 선택 편향의 위험이 있습니다.</li>
<li>PP 분석은 임상시험 결과를 해석하는 데 중요한 역할을 하지만, 선택 편향의 위험이 있으므로 ITT 분석과 함께 고려되어야 합니다. 특히 비열등성 시험에서는 ITT 와 PP 분석 모두가 중요하며, 두 분석 결과가 유사한 결론을 도출할 때 연구 결과의 신뢰성이 높아집니다.</li>
<li>ITT 가 일반적으로 우선적으로 권장되는 분석 방법입니다.<sup>21</sup></li>
</ul>
</section>
<section id="임상시험-자료가-불완전해지는-이유" class="level2" data-number="7.4">
<h2 data-number="7.4" class="anchored" data-anchor-id="임상시험-자료가-불완전해지는-이유"><span class="header-section-number">7.4</span> 임상시험 자료가 불완전해지는 이유</h2>
<p>임상시험에서 자료가 불완전해지는 이유는 다양하지만 크게 4 가지 주요 이유에 대해 자세히 살펴보겠습니다:</p>
<section id="선정기준-위반" class="level3" data-number="7.4.1">
<h3 data-number="7.4.1" class="anchored" data-anchor-id="선정기준-위반"><span class="header-section-number">7.4.1</span> 선정기준 위반</h3>
<ul>
<li>일부 피험자가 연구 시작 후 선정기준에 부합하지 않는 것으로 밝혀질 수 있습니다.</li>
<li>이는 초기 스크리닝 과정에서의 오류나 피험자 상태의 변화로 인해 발생할 수 있습니다.</li>
<li>이러한 경우, 해당 피험자의 데이터를 포함시킬지 여부에 대한 결정이 필요합니다.</li>
</ul>
</section>
<section id="윤리적-사유-또는-단순-실수로-인한-치료법-변경" class="level3" data-number="7.4.2">
<h3 data-number="7.4.2" class="anchored" data-anchor-id="윤리적-사유-또는-단순-실수로-인한-치료법-변경"><span class="header-section-number">7.4.2</span> 윤리적 사유 또는 단순 실수로 인한 치료법 변경</h3>
<ul>
<li>피험자의 안전이나 윤리적 고려사항으로 인해 원래 계획된 치료법을 변경해야 할 수 있습니다.</li>
<li>의료진의 실수로 인해 잘못된 치료가 제공될 수도 있습니다.</li>
<li>이러한 변경은 데이터의 일관성을 해치고 결과 해석을 복잡하게 만들 수 있습니다.</li>
</ul>
</section>
<section id="임상시험계획서-위반-또는-낮은-순응도" class="level3" data-number="7.4.3">
<h3 data-number="7.4.3" class="anchored" data-anchor-id="임상시험계획서-위반-또는-낮은-순응도"><span class="header-section-number">7.4.3</span> 임상시험계획서 위반 또는 낮은 순응도</h3>
<ul>
<li>일부 피험자가 임상시험계획서를 정확히 따르지 않거나 처방된 치료에 대한 순응도가 낮을 수 있습니다.</li>
<li>이는 약물 복용 누락, 방문 일정 미준수, 금지된 병용 약물 사용 등의 형태로 나타날 수 있습니다.</li>
<li>이러한 위반은 치료 효과의 정확한 평가를 어렵게 만듭니다.</li>
</ul>
</section>
<section id="차-유효성-평가변수의-결측치-발생" class="level3" data-number="7.4.4">
<h3 data-number="7.4.4" class="anchored" data-anchor-id="차-유효성-평가변수의-결측치-발생"><span class="header-section-number">7.4.4</span> 1 차 유효성 평가변수의 결측치 발생</h3>
<ul>
<li>피험자가 추적 관찰에서 이탈하거나, 특정 검사를 거부하거나, 데이터 수집 과정에서 오류가 발생할 수 있습니다.</li>
<li>결측치는 통계 분석의 정확성과 신뢰성을 저하시킬 수 있습니다.</li>
<li>결측 데이터 처리 방법 (예: 다중 대체법, 마지막 관찰값 전달법 등) 의 선택이 중요해집니다.</li>
</ul>
</section>
</section>
</section>
<section id="다중-검정" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> 다중 검정</h1>
<p>다중 검정은 임상 연구 및 통계 분석에서 자주 발생하는 문제입니다. 다중 검정은 하나의 데이터 세트에 대해 여러 가지 통계적 가설 검정을 수행하는 것입니다. 이는 다음과 같은 상황에서 발생할 수 있습니다:</p>
<ul>
<li>여러 결과 변수를 분석할 때</li>
<li>여러 하위 그룹을 비교할 때</li>
<li>여러 시점에서 데이터를 분석할 때</li>
<li>중간 분석을 수행할 때</li>
</ul>
<p>다중 검정을 인식하고 적절히 대처하는 것은 연구 결과의 신뢰성과 임상적 의미를 보장하는 데 매우 중요합니다.</p>
<section id="다중-검정의-문제" class="level2" data-number="8.1">
<h2 data-number="8.1" class="anchored" data-anchor-id="다중-검정의-문제"><span class="header-section-number">8.1</span> 다중 검정의 문제</h2>
<section id="familywise-type-i-오류율-증가" class="level3" data-number="8.1.1">
<h3 data-number="8.1.1" class="anchored" data-anchor-id="familywise-type-i-오류율-증가"><span class="header-section-number">8.1.1</span> Familywise Type I 오류율 증가</h3>
<ul>
<li>개별 검정의 유의수준을 5% 로 설정하더라도, 여러 검정을 수행하면 전체적인 Type I 오류율 (familywise error rate) 이 5% 이상으로 증가합니다.</li>
<li>이는 실제로 효과가 없는 경우에도 우연히 유의한 결과를 얻을 확률이 높아짐을 의미합니다.</li>
</ul>
</section>
<section id="거짓-양성-결과-증가" class="level3" data-number="8.1.2">
<h3 data-number="8.1.2" class="anchored" data-anchor-id="거짓-양성-결과-증가"><span class="header-section-number">8.1.2</span> 거짓 양성 결과 증가</h3>
<ul>
<li>검정 횟수가 증가할수록 최소한 하나의 거짓 양성 결과를 얻을 확률이 높아집니다.</li>
<li>예를 들어, 20 개의 독립적인 검정을 5% 유의수준에서 수행할 경우, 최소 하나의 거짓 양성 결과를 얻을 확률은 64% 에 달합니다.</li>
</ul>
</section>
<section id="연구-결과의-신뢰성-저하" class="level3" data-number="8.1.3">
<h3 data-number="8.1.3" class="anchored" data-anchor-id="연구-결과의-신뢰성-저하"><span class="header-section-number">8.1.3</span> 연구 결과의 신뢰성 저하</h3>
<ul>
<li>다중 검정으로 인해 우연히 유의한 결과를 얻을 가능성이 높아지면, 연구 결과의 전반적인 신뢰성이 저하됩니다.</li>
</ul>
</section>
<section id="임상적-영향" class="level3" data-number="8.1.4">
<h3 data-number="8.1.4" class="anchored" data-anchor-id="임상적-영향"><span class="header-section-number">8.1.4</span> 임상적 영향</h3>
<ul>
<li>약효가 없는 약물이 시판 허가를 받을 확률이 증가합니다.</li>
<li>이는 환자 안전과 공중 보건에 부정적인 영향을 미칠 수 있습니다.</li>
</ul>
</section>
</section>
<section id="다중-검정-문제의-해결-방법" class="level2" data-number="8.2">
<h2 data-number="8.2" class="anchored" data-anchor-id="다중-검정-문제의-해결-방법"><span class="header-section-number">8.2</span> 다중 검정 문제의 해결 방법</h2>
<p>다중 검정 문제를 해결하는 여러 방법과 그 장단점에 대해 설명하겠습니다.</p>
</section>
<section id="bonferroni-method" class="level2" data-number="8.3">
<h2 data-number="8.3" class="anchored" data-anchor-id="bonferroni-method"><span class="header-section-number">8.3</span> Bonferroni method</h2>
<p><strong>장점:</strong> - 간단하고 직관적인 방법 - FWER(Family-Wise Error Rate) 을 효과적으로 통제</p>
<p><strong>단점:</strong> - 매우 보수적인 방법으로, 가설의 수가 많아지면 개별 검정의 유의수준이 작아져 귀무가설을 잘 기각하지 못함 <sup>22</sup> - Type II 오류 (false negative) 가 증가하여 검정력이 감소함</p>
</section>
<section id="holm-method" class="level2" data-number="8.4">
<h2 data-number="8.4" class="anchored" data-anchor-id="holm-method"><span class="header-section-number">8.4</span> Holm method</h2>
<p><strong>장점:</strong> - Bonferroni 방법보다 덜 보수적 - FWER 을 통제하면서도 더 많은 귀무가설을 기각시킬 수 있음 - Type II 오류를 줄이고 검정력을 증가시킴 <sup>23</sup></p>
<p><strong>단점:</strong> - Bonferroni 방법에 비해 계산이 복잡함</p>
</section>
<section id="hochberg-method" class="level2" data-number="8.5">
<h2 data-number="8.5" class="anchored" data-anchor-id="hochberg-method"><span class="header-section-number">8.5</span> Hochberg method</h2>
<p>이 방법은 Holm 방법과 유사하지만 역순으로 진행됩니다.</p>
<p><strong>장점:</strong> - Holm 방법보다 더 강력한 검정력을 제공할 수 있음 - FWER 을 통제하면서도 더 많은 유의한 결과를 찾을 수 있음</p>
<p><strong>단점:</strong> - 특정 조건 (검정 통계량들이 독립적이거나 양의 의존성을 가질 때) 에서만 FWER 을 정확히 통제함</p>
</section>
<section id="prospective-alpha-allocation-scheme" class="level2" data-number="8.6">
<h2 data-number="8.6" class="anchored" data-anchor-id="prospective-alpha-allocation-scheme"><span class="header-section-number">8.6</span> Prospective alpha allocation scheme</h2>
<p>이 방법은 사전에 각 가설에 대한 유의수준을 할당합니다.</p>
<p><strong>장점:</strong> - 연구자가 각 가설의 중요도에 따라 유의수준을 조정할 수 있음 - 유연한 접근 방식 제공</p>
<p><strong>단점:</strong> - 주관적인 판단이 개입될 수 있음 - 사전 계획이 필요하여 유연성이 제한될 수 있음</p>
</section>
<section id="the-fixed-sequence-method" class="level2" data-number="8.7">
<h2 data-number="8.7" class="anchored" data-anchor-id="the-fixed-sequence-method"><span class="header-section-number">8.7</span> The fixed-sequence method</h2>
<p>이 방법은 사전에 정해진 순서대로 가설을 검정합니다.</p>
<p><strong>장점:</strong> - 중요한 가설을 우선적으로 검정할 수 있음 - FWER 을 효과적으로 통제함</p>
<p><strong>단점:</strong> - 순서가 고정되어 있어 유연성이 떨어짐 - 초기 가설이 기각되지 않으면 후속 가설을 검정할 수 없음</p>
</section>
<section id="the-fallback-method" class="level2" data-number="8.8">
<h2 data-number="8.8" class="anchored" data-anchor-id="the-fallback-method"><span class="header-section-number">8.8</span> The fallback method</h2>
<p>이 방법은 fixed-sequence method 의 변형으로, 이전 가설이 기각되지 않아도 다음 가설을 검정할 수 있습니다.</p>
<p><strong>장점:</strong> - Fixed-sequence method 보다 유연함 - 모든 가설에 대해 검정 기회를 제공함</p>
<p><strong>단점:</strong> - 계산이 복잡할 수 있음 - 초기 가설의 중요성이 여전히 강조됨</p>
</section>
<section id="gate-keeping" class="level2" data-number="8.9">
<h2 data-number="8.9" class="anchored" data-anchor-id="gate-keeping"><span class="header-section-number">8.9</span> Gate keeping</h2>
<p>이 방법은 가설을 그룹으로 나누고, 특정 그룹의 가설이 기각되어야 다음 그룹의 가설을 검정할 수 있게 합니다.</p>
<p><strong>장점:</strong> - 구조화된 접근 방식으로 가설의 우선순위를 반영할 수 있음 - FWER 을 효과적으로 통제함</p>
<p><strong>단점:</strong> - 복잡한 구조를 설계해야 함 - 초기 그룹의 가설이 기각되지 않으면 후속 그룹의 가설을 검정할 수 없음</p>
<p>이러한 다양한 방법들은 각각의 장단점이 있으며, 연구 상황과 목적에 따라 적절한 방법을 선택해야 합니다.</p>
<p>다중 검정 문제를 해결하기 위한 여러 방법이 있습니다:</p>
<ol type="1">
<li>Bonferroni 교정: 유의수준을 검정 횟수로 나누어 조정합니다.</li>
<li>Holm-Bonferroni 방법: 단계적으로 유의수준을 조정합니다.</li>
<li>False Discovery Rate (FDR) 제어: 거짓 발견 비율을 제어합니다.</li>
<li>사전에 주요 결과 변수 지정: 분석 계획 단계에서 주요 결과 변수를 미리 지정합니다.</li>
<li>통합 검정 방법 사용: 여러 결과를 하나의 통계량으로 통합하여 분석합니다.</li>
</ol>
<section id="다중-검정-문제를-해결하는-방법과-각각의-장단점" class="level3" data-number="8.9.1">
<h3 data-number="8.9.1" class="anchored" data-anchor-id="다중-검정-문제를-해결하는-방법과-각각의-장단점"><span class="header-section-number">8.9.1</span> 다중 검정 문제를 해결하는 방법과 각각의 장단점</h3>
<ol type="1">
<li>Bonferroni method: 장단점?</li>
<li>Holm method: 장단점?</li>
<li>Hochberg method:</li>
<li>Prospective alpha allocation scheme</li>
<li>The fixed-sequence method</li>
<li>The fallback method</li>
<li>Gate keeping</li>
</ol>
</section>
</section>
</section>
<section id="하위군-분석" class="level1" data-number="9">
<h1 data-number="9"><span class="header-section-number">9</span> 하위군 분석</h1>
<p>하위군 분석은 임상시험 종료 후 전체 자료를 여러 개의 하위집단으로 나누어 통계 분석을 실시하는 방법입니다. 이는 크게 두 가지 유형으로 나눌 수 있습니다:</p>
<ol type="1">
<li>확증적 하위군 분석</li>
<li>탐색적 하위군 분석</li>
</ol>
<section id="확증적-하위군-분석" class="level2" data-number="9.1">
<h2 data-number="9.1" class="anchored" data-anchor-id="확증적-하위군-분석"><span class="header-section-number">9.1</span> 확증적 하위군 분석</h2>
<p>확증적 하위군 분석은 매우 드문 경우에 수행되며, 다음 두 가지 조건이 임상시험 계획서에 명확히 명시되어 있어야 합니다:</p>
<ol type="1">
<li>분석할 하위군이 사전에 정의되어 있어야 함</li>
<li>다중성 문제를 해결하기 위한 통계적 방법이 명시되어 있어야 함</li>
</ol>
<p>이러한 조건을 충족시키는 확증적 하위군 분석은 신뢰성 있는 결과를 제공할 수 있습니다.</p>
</section>
<section id="탐색적-하위군-분석" class="level2" data-number="9.2">
<h2 data-number="9.2" class="anchored" data-anchor-id="탐색적-하위군-분석"><span class="header-section-number">9.2</span> 탐색적 하위군 분석</h2>
<p>탐색적 하위군 분석은 다음과 같은 특징을 가집니다:</p>
<ul>
<li>시험약의 효능 존재 여부를 직접적으로 검증하지 않습니다.</li>
<li>주로 치료제와 공변량 사이의 교호작용 존재 여부를 판단하는 데 중점을 둡니다.</li>
<li>이 분석은 향후 연구를 위한 가설을 생성하거나 특정 하위군에서의 치료 효과를 탐색하는 데 유용합니다.</li>
</ul>
<p>탐색적 하위군 분석의 결과는 주의해서 해석해야 하며, 일반적으로 확증적 증거로 간주되지 않습니다 [1].</p>
</section>
<section id="주의사항" class="level2" data-number="9.3">
<h2 data-number="9.3" class="anchored" data-anchor-id="주의사항"><span class="header-section-number">9.3</span> 주의사항</h2>
<p>하위군 분석, 특히 탐색적 분석을 수행할 때는 다음 사항에 주의해야 합니다:</p>
<ul>
<li>다중성 문제: 여러 하위군을 동시에 분석할 경우 제 1 종 오류 (false positive) 가능성이 증가합니다.</li>
<li>검정력 감소: 하위군으로 나누면 각 그룹의 표본 크기가 작아져 통계적 검정력이 감소할 수 있습니다.</li>
<li>해석의 주의: 특히 탐색적 분석 결과는 추가 연구의 필요성을 제시하는 정도로 해석해야 합니다 [1].</li>
</ul>
</section>
</section>
<section id="비열등성-임상시험" class="level1" data-number="10">
<h1 data-number="10"><span class="header-section-number">10</span> 비열등성 임상시험</h1>
<p>위약군이 없는 임상시험으로 두가지 서로 다른 목적이 있다. 1. 시험약이 대조약 보다 나쁘지 않음을 증명. 2. 시험약이 위약보다 약효가 우위함을 보여 시판허가 받기 (좀 더 중요한 것)</p>
<section id="assay-sensitivity-의-개념" class="level2" data-number="10.1">
<h2 data-number="10.1" class="anchored" data-anchor-id="assay-sensitivity-의-개념"><span class="header-section-number">10.1</span> Assay sensitivity 의 개념</h2>
<p>변별력있는 시험. 과거 임상 결과의 재현성에 대한 문제를 피하기 위한 선행요건. 3 가지 간접적인 방법이 있다.</p>
<ol type="1">
<li>HESDE</li>
<li>현재 비열등성 임상과 과거 임상의 유효성 입증</li>
<li>현재 비열등성 임상을 높은 수준으로 관리</li>
</ol>
<blockquote class="blockquote">
<p>과거 임상시험의 결과가 재현되지 않을 수도 있는가? 그렇다.</p>
</blockquote>
</section>
<section id="비열등성-마진을-결정하는-방법" class="level2" data-number="10.2">
<h2 data-number="10.2" class="anchored" data-anchor-id="비열등성-마진을-결정하는-방법"><span class="header-section-number">10.2</span> 비열등성 마진을 결정하는 방법</h2>
<p>FDA 권고에 따르면 통계적 마진과 임상적 마진이 있다. 1. 통계적 마진 2. 임상적 마진: 통계적 마진보다 작아야 한다.</p>
</section>
<section id="비열등성-시험은-보통-2-개의-그룹이지만-위약을-쓸-수-있다면-3-개의-그룹으로도-진행할-수-있다" class="level2" data-number="10.3">
<h2 data-number="10.3" class="anchored" data-anchor-id="비열등성-시험은-보통-2-개의-그룹이지만-위약을-쓸-수-있다면-3-개의-그룹으로도-진행할-수-있다"><span class="header-section-number">10.3</span> 비열등성 시험은 보통 2 개의 그룹이지만 위약을 쓸 수 있다면 3 개의 그룹으로도 진행할 수 있다</h2>
<p>비열등성 임상시험은 위약군 없이 진행되며, 두 가지 주요 목적이 있습니다:</p>
<ol type="1">
<li>시험약이 대조약보다 나쁘지 않음을 증명</li>
<li>시험약이 위약보다 약효가 우위에 있음을 보여 시판허가를 받는 것 (더 중요한 목적)</li>
</ol>
</section>
<section id="assay-sensitivity-의-개념-1" class="level2" data-number="10.4">
<h2 data-number="10.4" class="anchored" data-anchor-id="assay-sensitivity-의-개념-1"><span class="header-section-number">10.4</span> Assay sensitivity 의 개념</h2>
<p>Assay sensitivity 는 변별력 있는 시험을 의미하며, 과거 임상 결과의 재현성 문제를 피하기 위한 선행요건입니다. 이를 확보하기 위한 3 가지 간접적인 방법이 있습니다:</p>
<ol type="1">
<li>HESDE (Historical Evidence of Sensitivity to Drug Effects): 과거의 임상시험 데이터를 활용하여 약물 효과에 대한 민감도를 평가하는 방법.</li>
<li>현재 비열등성 임상과 과거 임상의 유효성 입증: 현재 진행 중인 비열등성 임상시험과 과거 임상시험 결과를 비교하는 접근법.</li>
<li>현재 비열등성 임상을 높은 수준으로 관리: 현재 진행 중인 비열등성 임상시험의 품질을 높이는 데 중점</li>
</ol>
<blockquote class="blockquote">
<p>가장 주의할 점은 과거 임상시험의 결과가 다시 재현되지 않을 수도 있다는 것입니다.</p>
</blockquote>
</section>
<section id="비열등성-마진-결정-방법" class="level2" data-number="10.5">
<h2 data-number="10.5" class="anchored" data-anchor-id="비열등성-마진-결정-방법"><span class="header-section-number">10.5</span> 비열등성 마진 결정 방법</h2>
<p>FDA 권고에 따르면 비열등성 마진을 결정하는 데 두 가지 접근 방식이 있습니다:</p>
<ol type="1">
<li>통계적 마진: 과거 임상시험 데이터를 기반으로 통계적 분석을 통해 결정.</li>
<li>임상적 마진: 마진은 임상적 중요성과 실용성을 고려하여 결정되며, 통계적 마진보다 작아야 합니다.</li>
</ol>
</section>
<section id="비열등성-시험에서-주의할-점" class="level2" data-number="10.6">
<h2 data-number="10.6" class="anchored" data-anchor-id="비열등성-시험에서-주의할-점"><span class="header-section-number">10.6</span> 비열등성 시험에서 주의할 점</h2>
<ol type="1">
<li>비열등성 시험에서는 눈가림 (blinding) 이 우월성 시험만큼 편향을 방지하지 못할 수 있습니다.</li>
<li>비열등성 마진을 명시하는 것은 매우 중요하며, 임상시험 계획서에 명확히 정의되어야 합니다.</li>
<li>통계적 처벌 없이 동일한 임상시험에서 비열등성과 우월성을 모두 평가할 수 있습니다. 따라서 가능하다면 임상시험 계획서에 두 가지 가설을 모두 포함하는 것이 좋습니다.<sup>24</sup></li>
<li>비열등성 시험은 일반적으로 2 개의 그룹 (시험약과 대조약) 으로 진행됩니다. 그러나 윤리적으로 허용되고 과학적으로 필요한 경우, 위약을 포함한 3 개의 그룹으로도 진행할 수 있습니다.</li>
</ol>
</section>
</section>
<section id="결측치-처리" class="level1" data-number="11">
<h1 data-number="11"><span class="header-section-number">11</span> 결측치 처리</h1>
<p>결측치는 모든 임상시험에서 불가피하게 발생합니다. 주요 원인으로는 환자의 중도 탈락, 추적 관찰 실패, 데이터 수집 오류, 환자의 비협조 등이 있습니다. 결측치는 단순히 제거하는 대신, 적절한 통계적 방법을 사용하여 처리해야 합니다. 결측치 처리 방법 선택 시 결측 메커니즘, 연구 설계, 규제 요구사항 등을 종합적으로 고려해야 합니다. 이는 임상시험의 타당성을 유지하고, 결과의 신뢰성을 확보하는 데 중요합니다.</p>
<section id="결측치-제거의-문제점" class="level2" data-number="11.1">
<h2 data-number="11.1" class="anchored" data-anchor-id="결측치-제거의-문제점"><span class="header-section-number">11.1</span> 결측치 제거의 문제점</h2>
<p>단순히 결측치를 제거하는 것은 다음과 같은 심각한 문제를 야기할 수 있습니다:</p>
<ol type="1">
<li>ITT(Intent-to-Treat) 원칙 위배: 모든 무작위 배정된 대상자를 분석에 포함해야 함, 결측치 제거는 이 원칙을 위배하여 임상시험의 무작위화 이점을 손상시킴</li>
<li>검정력 감소: 표본 크기 감소로 인한 통계적 검정력 저하, 따라서 중요한 치료 효과를 발견하지 못할 위험 증가.</li>
<li>편향 발생: 결측 데이터가 무작위가 아닌 경우, 남은 데이터가 전체 모집단을 대표하지 못할 수 있으며 따라서 치료 효과 추정치의 왜곡 가능성이 증가.</li>
</ol>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Complete Case Analysis(완전 사례 분석) 는 SAS 에서 가장 간단하게 사용할 수 있는 결측치 처리 방법입니다. FDA 에서 요구하는 기본적인 분석 방법으로 <code>PROC</code> 문에서 <code>NOMISS</code> 옵션을 사용해 사용 가능합니다. 결측치가 있는 관측치를 모두 제외하고 분석하는 것이며 단점으로는 데이터 손실로 인한 검정력 감소와 편향 가능성이 증가합니다.</p>
</div>
</div>
</section>
<section id="결측치의-분류" class="level2" data-number="11.2">
<h2 data-number="11.2" class="anchored" data-anchor-id="결측치의-분류"><span class="header-section-number">11.2</span> 결측치의 분류</h2>
<p>결측치의 유형을 정확히 파악하는 것은 어렵지만, 적절한 처리 방법을 선택하는 데 중요합니다. 결측치는 발생 메커니즘에 따라 3 가지로 분류됩니다:</p>
<ol type="1">
<li>MCAR (Missing Completely At Random): 결측 발생이 완전히 무작위적이며 구별하기 쉽지만 실제 발생 비율은 매우 낮음. 예: 실험실 샘플의 우발적인 파손</li>
<li>MAR (Missing At Random): 결측 발생이 관찰된 다른 변수와 관련되어 있지만, 결측된 변수 자체의 값과는 무관. 예: 특정 연령대에서 설문 응답률이 낮은 경우</li>
<li>MNAR (Missing Not At Random): 결측 발생이 결측된 변수의 값 자체와 관련, 대부분의 임상시험 결측치가 이 범주에 해당. 예: 부작용으로 인한 중도 탈락</li>
</ol>
<blockquote class="blockquote">
<p>MCAR 의 경우 완전 사례 분석을 통해 결측치를 제외하여도 편향되지 않을 수 있지만, MAR 과 MNAR 의 경우 더 복잡한 방법 (예: 다중대체법, 혼합모형 등) 이 필요할 수 있습니다.</p>
</blockquote>
</section>
<section id="결측치-처리방법" class="level2" data-number="11.3">
<h2 data-number="11.3" class="anchored" data-anchor-id="결측치-처리방법"><span class="header-section-number">11.3</span> 결측치 처리방법</h2>
<ol type="1">
<li>LOCF (Last Observation Carried Forward): 마지막 관찰값을 이후 결측치에 대입</li>
<li>BOCF (Baseline Observation Carried Forward): 기준선 관찰값을 결측치에 대입</li>
<li>Unconditional and Conditional Mean Imputation:
<ul>
<li>Unconditional: 전체 평균으로 대체</li>
<li>Conditional: 특정 조건 하의 평균으로 대체</li>
</ul></li>
<li>Best or Worst Case Imputation: 최선 또는 최악의 시나리오 값으로 대체</li>
<li>Regression Method: 회귀 모델을 사용하여 결측치 예측</li>
<li>Hot-deck Imputation: 유사한 특성을 가진 다른 관측치의 값으로 대체</li>
<li>Single Imputation: 단일 값으로 모든 결측치 대체</li>
</ol>
</section>
<section id="marmissing-at-random-의-결측치-처리" class="level2" data-number="11.4">
<h2 data-number="11.4" class="anchored" data-anchor-id="marmissing-at-random-의-결측치-처리"><span class="header-section-number">11.4</span> MAR(Missing At Random) 의 결측치 처리</h2>
<ol type="1">
<li>Multiple Imputation: 여러 번의 대체를 통해 불확실성 반영</li>
<li>Imputation 하지 않는 방법: 혼합 모형 또는 가중 GEE 등 사용</li>
</ol>
<p>MAR 은 결측치가 무작위로 발생하지만, 결측 여부가 다른 관측된 변수와 관련이 있는 경우를 말합니다. MAR 상황에서는 다음과 같은 결측치 처리 방법을 고려할 수 있습니다:</p>
<ol type="1">
<li>다중 대체법 (Multiple Imputation)
<ul>
<li>MAR 가정 하에서 가장 널리 사용되는 방법입니다.</li>
<li>결측치의 불확실성을 고려하여 여러 번 대체를 수행합니다.</li>
<li>3 단계로 진행됩니다:
<ol type="a">
<li>Imputation step: 자료의 분포를 토대로 결측치를 대체</li>
<li>Analysis step: 대체된 데이터셋을 분석</li>
<li>Pooling step: 여러 분석 결과를 종합</li>
</ol></li>
</ul></li>
<li>최대 우도법 (Maximum Likelihood Estimation)
<ul>
<li>관측된 데이터를 기반으로 결측 데이터의 분포를 추정합니다.</li>
<li>EM 알고리즘 등을 사용하여 모수를 추정할 수 있습니다.</li>
</ul></li>
<li>가중치 기반 방법 (Weighted Estimation)
<ul>
<li>결측 확률의 역수를 가중치로 사용하여 편향을 보정합니다.</li>
</ul></li>
<li>핫덱 대체법 (Hot-deck Imputation)
<ul>
<li>유사한 특성을 가진 다른 관측치의 값으로 결측치를 대체합니다.</li>
</ul></li>
<li>회귀 대체법 (Regression Imputation)
<ul>
<li>다른 변수들을 사용하여 결측값을 예측하는 회귀 모델을 구축합니다.</li>
</ul></li>
<li>K-NN 알고리즘
<ul>
<li>가장 유사한 특성을 가진 k 개의 이웃 데이터를 기반으로 결측치를 추정합니다.</li>
</ul></li>
</ol>
<p>MAR 상황에서는 단순한 삭제나 평균 대체 등의 방법보다 위의 방법들이 더 적절할 수 있습니다. 특히 다중 대체법은 MAR 가정 하에서 편향을 줄이고 불확실성을 고려할 수 있어 널리 사용됩니다. 결측치 처리 방법 선택 시에는 데이터의 특성, 결측 메커니즘, 분석 목적 등을 종합적으로 고려해야 합니다.</p>
</section>
<section id="mnar-missing-not-at-random-의-결측치-처리" class="level2" data-number="11.5">
<h2 data-number="11.5" class="anchored" data-anchor-id="mnar-missing-not-at-random-의-결측치-처리"><span class="header-section-number">11.5</span> MNAR (Missing Not At Random) 의 결측치 처리</h2>
<p>MNAR(Missing Not At Random) 상황에서의 결측치 처리는 매우 복잡하고 어려운 문제입니다. MNAR 의 경우 결측 메커니즘이 관찰되지 않은 데이터와 관련이 있어, 단순한 대체 방법으로는 편향된 결과를 초래할 수 있습니다. MNAR 상황에서 고려할 수 있는 결측치 처리 방법은 다음과 같습니다:</p>
<ol type="1">
<li>패턴 혼합 모델 (Pattern Mixture Models)
<ul>
<li>결측 패턴에 따라 데이터를 그룹화하고, 각 그룹에 대해 별도의 모델을 적용합니다.</li>
<li>결측 메커니즘을 명시적으로 모델링할 수 있습니다.</li>
</ul></li>
<li>선택 모델 (Selection Models)
<ul>
<li>결측 확률과 관심 변수 간의 관계를 모델링합니다.</li>
<li>결측 메커니즘에 대한 가정을 명시적으로 포함합니다.</li>
</ul></li>
<li>공유 파라미터 모델 (Shared Parameter Models)
<ul>
<li>결측 과정과 관심 변수를 동시에 모델링합니다.</li>
<li>두 과정 사이의 의존성을 포착할 수 있습니다.</li>
</ul></li>
<li>민감도 분석 (Sensitivity Analysis)
<ul>
<li>다양한 가정 하에서 여러 분석을 수행하여 결과의 안정성을 평가합니다.</li>
<li>MNAR 상황에서 특히 중요한 접근 방법입니다.</li>
</ul></li>
<li>다중 대체법의 변형 (Modified Multiple Imputation)
<ul>
<li>표준 다중 대체법을 수정하여 MNAR 메커니즘을 고려합니다.</li>
<li>대체 모델에 추가적인 파라미터를 포함시킬 수 있습니다.</li>
</ul></li>
<li>보조 변수 활용 (Auxiliary Variables)
<ul>
<li>결측 메커니즘과 관련된 추가 변수를 모델에 포함시켜 MAR 가정에 더 가깝게 만듭니다.</li>
</ul></li>
</ol>
<p>MNAR 상황에서는 단일 방법으로 완벽한 해결책을 제공하기 어렵습니다. 따라서 여러 방법을 조합하고, 결과의 안정성을 평가하는 것이 중요합니다. 또한, 도메인 전문가와의 협력을 통해 결측 메커니즘에 대한 이해를 깊이 있게 하는 것이 필수적입니다.</p>
</section>
<section id="결측치-처리의-최선책" class="level2" data-number="11.6">
<h2 data-number="11.6" class="anchored" data-anchor-id="결측치-처리의-최선책"><span class="header-section-number">11.6</span> 결측치 처리의 최선책</h2>
<ol type="1">
<li>결측치 발생 최소화: 연구 설계 및 수행 단계에서 예방</li>
<li>결측치 처리 방법을 계획서에 명기: 사전에 방법 결정 및 문서화</li>
<li>민감도 분석 수행: 여러 방법으로 분석하여 결과의 견고성 확인</li>
<li>결측치 발생 이유 보고: 결측 패턴 및 원인에 대한 상세한 보고</li>
</ol>
</section>
</section>
<section id="생물학적-동등성-시험" class="level1" data-number="12">
<h1 data-number="12"><span class="header-section-number">12</span> 생물학적 동등성 시험</h1>
<p>생물학적 동등성 시험은 복제약 (제네릭 의약품) 의 시판 허가를 위해 수행하는 시험입니다. 이 시험의 목적은 두 제제 (대조약과 시험약) 의 생체이용률이 통계적으로 동등함을 입증하는 것입니다.<sup>25</sup></p>
<p>주요 특징: - 기존 시판 약물 (대조약) 과 새로운 복제약 (시험약) 의 체내 약물농도와 약효를 비교합니다. - 일반적으로 건강한 성인 지원자를 대상으로 실시합니다. - 신약 개발을 위한 임상시험과는 진행 과정에 차이가 있습니다.</p>
<section id="신뢰구간을-사용해-생동성-입증" class="level2" data-number="12.1">
<h2 data-number="12.1" class="anchored" data-anchor-id="신뢰구간을-사용해-생동성-입증"><span class="header-section-number">12.1</span> 신뢰구간을 사용해 생동성 입증</h2>
<p>생물학적 동등성을 입증하기 위해 주로 TOST(Two One-Sided Test procedure) 를 사용합니다. TOST 는 두 제제의 생체이용률이 통계적으로 동등함을 입증하는 데 특화된 방법으로 명확한 기준 제시합니다 (일반적으로 80-125% 범위의 신뢰구간을 사용하여 동등성 여부를 판단할 수 있어, 결과 해석이 명확). TOST 방법에 대해서 간략히 설명하면 아래와 같습니다.</p>
<ul>
<li>두 제제의 약동학적 파라미터 (예: AUC, Cmax) 의 비율에 대한 90% 신뢰구간을 계산합니다.</li>
<li>일반적으로 이 신뢰구간이 80-125% 범위 내에 들어가면 생물학적 동등성이 입증된 것으로 간주합니다.</li>
</ul>
</section>
<section id="생동성시험에서-이상-발생-사유" class="level2" data-number="12.2">
<h2 data-number="12.2" class="anchored" data-anchor-id="생동성시험에서-이상-발생-사유"><span class="header-section-number">12.2</span> 생동성시험에서 이상 발생 사유</h2>
<ol type="1">
<li>생산과정의 문제
<ul>
<li>제조 공정의 차이</li>
<li>원료 약물의 품질 차이</li>
<li>제형 설계의 문제</li>
</ul></li>
<li>환자 집단에 대한 세부적인 교호작용 존재
<ul>
<li>특정 환자 그룹에서 약물 흡수나 대사의 차이</li>
<li>유전적 다형성에 의한 약물 반응의 차이</li>
<li>식이나 다른 약물과의 상호작용</li>
</ul></li>
</ol>
</section>
</section>
<section id="바이오시밀러와-동등성-검정" class="level1" data-number="13">
<h1 data-number="13"><span class="header-section-number">13</span> 바이오시밀러와 동등성 검정</h1>
<p>바이오시밀러는 이미 허가된 바이오의약품 (오리지널 의약품) 과 품질, 안전성, 유효성이 동등함을 입증한 생물의약품입니다.</p>
<section id="동등성-시험이란" class="level2" data-number="13.1">
<h2 data-number="13.1" class="anchored" data-anchor-id="동등성-시험이란"><span class="header-section-number">13.1</span> 동등성 시험이란?</h2>
<p>동등성 시험은 바이오시밀러가 오리지널 의약품과 임상적으로 의미 있는 차이가 없음을 증명하는 과정입니다.</p>
</section>
<section id="동등성-마진의-결정" class="level2" data-number="13.2">
<h2 data-number="13.2" class="anchored" data-anchor-id="동등성-마진의-결정"><span class="header-section-number">13.2</span> 동등성 마진의 결정</h2>
<p>동등성 마진은 1 차 유효성 평가변수에서 바이오시밀러와 오리지널 의약품 간 허용 가능한 차이의 범위를 나타냅니다. 이 마진 내의 차이는 임상적으로 의미 있지 않다고 간주됩니다. 동등성 마진 결정에 대한 구체적인 기준은 약전에 명확하게 명시되어 있지 않습니다. 그러나:</p>
<ul>
<li>FDA 는 과거 임상 결과를 바탕으로 일반적으로 12% 의 마진을 요구합니다.</li>
<li>마진 설정은 해당 약물의 특성, 적응증, 과거 임상 데이터 등을 종합적으로 고려하여 결정됩니다.</li>
</ul>
</section>
</section>
<section id="임상시험계획서-변경" class="level1" data-number="14">
<h1 data-number="14"><span class="header-section-number">14</span> 임상시험계획서 변경</h1>
<p>적응형 디자인 (Adaptive design) 은 임상시험 진행 중 얻은 데이터를 바탕으로 시험 설계를 유연하게 조정할 수 있는 방법입니다. 임상시험계획서 변경시에는 맹검을 해제해 얻은 중간 결과를 누가 보았는지가 핵심입니다. 임상연구자 및 관련자가 이 정보를 알게 되면 데이터에 편향이 발생할 수 있기 때문에, 제 3 자 독립적 자료 모니터링 위원회에서 중간결과를 확인해야 합니다.</p>
<section id="adaptive-design-의-문제점" class="level2" data-number="14.1">
<h2 data-number="14.1" class="anchored" data-anchor-id="adaptive-design-의-문제점"><span class="header-section-number">14.1</span> Adaptive design 의 문제점</h2>
<ol type="1">
<li>편향발생: 중간 결과에 따른 설계 변경이 연구 결과에 영향을 미칠 수 있습니다.</li>
<li>다중검정: 반복적인 분석으로 인해 제 1 종 오류가 증가할 수 있습니다.</li>
</ol>
</section>
<section id="adaptive-design-의-성공조건" class="level2" data-number="14.2">
<h2 data-number="14.2" class="anchored" data-anchor-id="adaptive-design-의-성공조건"><span class="header-section-number">14.2</span> Adaptive design 의 성공조건</h2>
<ol type="1">
<li>무작위배정 코드를 엄격하게 관리: 배정 정보의 기밀성을 유지합니다.</li>
<li>자료관리 수준을 높인다: 데이터의 품질과 신뢰성을 확보합니다.</li>
<li>독립적 자료모니터 위원회를 통해 운영한다: 객관성과 투명성을 보장합니다.</li>
</ol>
</section>
</section>
<section id="임상-시험을-감시하는-집단" class="level1" data-number="15">
<h1 data-number="15"><span class="header-section-number">15</span> 임상 시험을 감시하는 집단</h1>
<p>임상 시험의 안전성, 윤리성, 과학적 타당성을 보장하기 위해 여러 집단이 감시 역할을 수행합니다. 스폰서 (주로 제약회사) 가 신약 개발을 위해 임상시험을 주도하는 가운데, 다음과 같은 집단들이 감시 기능을 담당합니다:</p>
<ol type="1">
<li>독립적 자료모니터 위원회: 임상시험 중간 결과를 검토하고 시험 지속 여부를 결정합니다.</li>
<li>임상시험심사위원회 (IRB): 연구 계획의 윤리성과 과학적 타당성을 심사하고 승인합니다.</li>
<li>임상시험운영위원회: 전반적인 임상시험 운영을 관리하고 감독합니다.</li>
<li>평가변수 평가위원회: 주요 평가변수의 객관성을 확보하기 위해 독립적으로 평가합니다.</li>
<li>임상모니터링팀: 현장에서 임상시험 진행 상황을 모니터링하고 보고합니다.</li>
<li>시험자: 실제 임상시험을 수행하면서 참여자의 안전을 직접적으로 관리합니다.</li>
</ol>
<p>이러한 다양한 집단의 감시 활동을 통해 임상시험의 신뢰성과 안전성을 확보하고, 참여자의 권리와 복지를 보호합니다.</p>
<section id="독립적-자료-모니터링-위원회" class="level2" data-number="15.1">
<h2 data-number="15.1" class="anchored" data-anchor-id="독립적-자료-모니터링-위원회"><span class="header-section-number">15.1</span> 독립적 자료 모니터링 위원회</h2>
<p>독립적 자료 모니터링 위원회 (Independent Data Monitoring Committee, IDMC) 설립을 통해 임상시험의 객관성과 안전성을 높일 수 있으며, 이는 임상시험 결과의 신뢰도 향상에 기여합니다. 설립 절차는 아래와 같습니다.</p>
<ol type="1">
<li>헌장 작성:
<ul>
<li>IDMC 의 설립 목적, 역할, 책임을 명확히 정의한 헌장을 작성합니다.</li>
<li>대상 임상시험을 구체적으로 명시합니다.</li>
<li>위원회의 구성, 운영 방식, 의사결정 과정 등을 상세히 기술합니다.</li>
</ul></li>
<li>위원 선정:
<ul>
<li>임상시험과 이해관계가 없는 독립적인 전문가들로 구성합니다.</li>
<li>통계학자, 임상의, 윤리 전문가 등 다양한 분야의 전문가를 포함시킵니다.</li>
</ul></li>
<li>운영 절차 수립:
<ul>
<li>회의 주기, 데이터 검토 방법, 보고 체계 등을 명확히 정립합니다.</li>
<li>비밀 유지 및 이해상충 관리 방안을 마련합니다.</li>
</ul></li>
<li>스폰서와의 관계 정립:
<ul>
<li>IDMC 의 독립성을 보장하기 위한 스폰서와의 관계를 명확히 합니다.</li>
<li>데이터 접근 권한, 의사결정의 자율성 등을 보장받습니다.</li>
</ul></li>
<li>규제 기관 승인:
<ul>
<li>필요한 경우, 규제 기관의 승인을 받습니다.</li>
</ul></li>
</ol>
</section>
</section>
<section id="임상에서-대조군-선택의-중요성" class="level1" data-number="16">
<h1 data-number="16"><span class="header-section-number">16</span> 임상에서 대조군 선택의 중요성</h1>
<p>대조군 선택은 임상시험 설계에서 매우 중요한 요소입니다:</p>
<ol type="1">
<li>치료 효과 평가: 대조군은 시험약의 효과를 객관적으로 평가할 수 있는 기준을 제공합니다.</li>
<li>편향 감소: 적절한 대조군 설정은 다양한 편향을 줄이는 데 도움이 됩니다.</li>
<li>윤리적 고려: 대조군 선택은 임상시험의 윤리성과 밀접한 관련이 있습니다.</li>
<li>규제 요구사항 충족: 많은 규제 기관에서 특정 유형의 대조군을 요구합니다.</li>
<li>결과 해석: 대조군의 특성에 따라 임상시험 결과의 해석이 달라질 수 있습니다.</li>
</ol>
<section id="동시-대조군이란" class="level2" data-number="16.1">
<h2 data-number="16.1" class="anchored" data-anchor-id="동시-대조군이란"><span class="header-section-number">16.1</span> 동시 대조군이란?</h2>
<p>동시 대조군은 같은 임상시험 내에서 시험약과 대조약을 각각 다른 그룹에 동시에 투여하는 방식을 말합니다.동시 대조군은 임상시험의 신뢰성과 타당성을 높이는 데 중요한 역할을 합니다.</p>
<p>주요 특징: - 시간적 일치: 시험약 그룹과 대조군 그룹이 동일한 시간대에 임상시험에 참여합니다. - 환경적 동질성: 두 그룹이 동일한 임상 환경에서 시험을 받습니다. - 무작위 배정: 참가자들을 무작위로 시험약 그룹과 대조군 그룹에 배정합니다.</p>
<p>장점: - 시간에 따른 변화 요인을 통제할 수 있습니다. - 두 그룹 간의 직접적인 비교가 가능합니다. - 편향을 최소화할 수 있습니다.</p>
</section>
<section id="대조군의-목적과-필요성" class="level2" data-number="16.2">
<h2 data-number="16.2" class="anchored" data-anchor-id="대조군의-목적과-필요성"><span class="header-section-number">16.2</span> 대조군의 목적과 필요성</h2>
<p>대조군은 시험약에 의해 피험자에게 생긴 결과와 다른 요소에 의한 결과를 구별하기 위해 필요합니다. 주요 목적은 다음과 같습니다:</p>
<ol type="1">
<li>시험약의 실제 효과 평가: 대조군을 통해 시험약의 순수한 효과를 분리하여 평가할 수 있습니다.</li>
<li>편향 감소: 대조군 설정은 다양한 편향을 줄이는 데 도움이 됩니다.</li>
<li>자연치유 효과 구분: 일부 질병은 시간이 지나면 자연적으로 호전될 수 있습니다. 대조군을 통해 이러한 자연치유 효과와 시험약의 효과를 구분할 수 있습니다.</li>
<li>위약효과 고려: 위약효과 (placebo effect) 는 실제 약물 효과가 아닌 심리적 요인에 의한 증상 개선을 말합니다. 대조군을 사용함으로써 이러한 위약효과와 실제 약물 효과를 구분할 수 있습니다.</li>
<li>외부 요인의 영향 평가: 임상시험 기간 동안 발생할 수 있는 환경적 변화나 기타 외부 요인의 영향을 평가할 수 있습니다.</li>
<li>통계적 비교 가능: 대조군은 시험약 그룹과의 통계적 비교를 가능하게 하여, 결과의 유의성을 평가할 수 있게 합니다.</li>
</ol>
</section>
<section id="대조군-선택의-고려사항" class="level2" data-number="16.3">
<h2 data-number="16.3" class="anchored" data-anchor-id="대조군-선택의-고려사항"><span class="header-section-number">16.3</span> 대조군 선택의 고려사항</h2>
<p>임상시험에서 대조군을 선택할 때는 다음 세 가지 주요 사항을 고려해야 합니다:</p>
<ol type="1">
<li>현재 표준치료법이 있는지 여부:
<ul>
<li>표준치료법이 있는 경우: 일반적으로 이를 대조군으로 사용합니다.</li>
<li>표준치료법이 없는 경우: 위약 대조군이나 무처치 대조군을 고려할 수 있습니다.</li>
<li>중요성: 현재의 의료 표준을 반영하여 새로운 치료법의 상대적 효과를 평가할 수 있습니다.</li>
</ul></li>
<li>특정 대조군 선택에 대한 적절성:
<ul>
<li>연구 목적과의 부합성: 선택된 대조군이 연구 질문에 적절히 답할 수 있어야 합니다.</li>
<li>통계적 고려: 대조군은 시험약과의 유의미한 비교를 가능하게 해야 합니다.</li>
<li>실행 가능성: 선택된 대조군이 실제 임상 환경에서 구현 가능해야 합니다.</li>
<li>중요성: 적절한 대조군 선택은 연구 결과의 신뢰성과 해석 가능성을 높입니다.</li>
</ul></li>
<li>윤리적 적절성:
<ul>
<li>위약 사용의 윤리성: 심각한 질병에서 위약 사용이 윤리적으로 적절한지 검토해야 합니다.</li>
<li>최선의 이용 가능한 치료: 대조군 참가자들에게도 최선의 치료가 제공되어야 합니다.</li>
<li>위험 - 이익 균형: 대조군 참가자들에게 과도한 위험이 가해지지 않아야 합니다.</li>
<li>중요성: 윤리적 고려는 참가자의 안전과 권리를 보호하고, 연구의 사회적 수용성을 확보합니다.</li>
</ul></li>
</ol>
</section>
<section id="대조군선택이-영향을-주는-8-가지" class="level2" data-number="16.4">
<h2 data-number="16.4" class="anchored" data-anchor-id="대조군선택이-영향을-주는-8-가지"><span class="header-section-number">16.4</span> 대조군선택이 영향을 주는 8 가지</h2>
<ol type="1">
<li>임상결과 해석: 대조군의 특성에 따라 시험약의 효과를 해석하는 방식이 달라집니다. 예를 들어, 위약 대조군과 비교하면 절대적 효과를, 활성 대조군과 비교하면 상대적 효과를 평가할 수 있습니다.</li>
<li>임상의 윤리성: 특히 중증 질환에서 표준치료가 있는 경우, 위약 대조군 사용은 윤리적 문제를 야기할 수 있습니다. 환자의 안전과 복지를 고려한 대조군 선택이 필요합니다.</li>
<li>분석의 편향 여부: 적절한 대조군 선택은 연구 결과의 편향을 최소화하는 데 중요합니다. 예를 들어, 역사적 대조군 사용은 시간에 따른 변화로 인한 편향을 초래할 수 있습니다.</li>
<li>환자 종류와 모집의 속도: 대조군의 유형에 따라 참여 가능한 환자군이 달라지며, 이는 환자 모집 속도에 영향을 줍니다. 예를 들어, 위약 대조군 사용은 일부 환자의 참여를 제한할 수 있습니다.</li>
<li>연구할 평가 변수의 종류: 대조군 선택은 평가할 수 있는 변수의 범위에 영향을 줍니다. 활성 대조군을 사용하면 안전성 프로필 비교가 가능하지만, 위약 대조군에서는 이러한 비교가 제한적일 수 있습니다.</li>
<li>임상 결과의 신뢰성: 적절한 대조군 선택은 연구 결과의 신뢰성을 높입니다. 예를 들어, 무작위 배정된 동시 대조군은 역사적 대조군보다 더 신뢰할 수 있는 결과를 제공합니다.</li>
<li>시판허가의 여부: 규제 기관의 요구사항에 부합하는 대조군 선택은 시판 허가 획득에 중요합니다. 일부 상황에서는 특정 유형의 대조군 사용이 필수적일 수 있습니다.</li>
<li>잘못된 결론: 부적절한 대조군 선택은 잘못된 결론으로 이어질 수 있습니다. 예를 들어, 활성 대조군의 효과가 일관되지 않은 경우, 비열등성 시험 결과의 해석이 어려워질 수 있습니다.</li>
</ol>
</section>
</section>
<section id="대조군의-종류" class="level1" data-number="17">
<h1 data-number="17"><span class="header-section-number">17</span> 대조군의 종류</h1>
<p>대조군은 임상시험에서 시험약의 효과를 비교하기 위한 환자군입니다.</p>
<section id="치료제에-따른-대조군" class="level3" data-number="17.0.1">
<h3 data-number="17.0.1" class="anchored" data-anchor-id="치료제에-따른-대조군"><span class="header-section-number">17.0.1</span> 치료제에 따른 대조군</h3>
<ol type="1">
<li>위약 (Placebo): 약리학적 효과가 없는 물질, 시험약의 실제 효과를 평가하는 데 유용</li>
<li>무처치 (No treatments): 어떤 치료도 제공하지 않음, 자연적인 시간의 경과를 관찰하는 데 사용</li>
<li>시험약의 용량 혹은 용법: 동일 약물의 다른 용량이나 투여 방법, 용량에 대한 반응 관계 평가에 유용</li>
<li>시험약 이외의 다른 활성 치료제: 기존에 효과가 입증된 약물, 새로운 치료법의 상대적 효과를 평가</li>
</ol>
</section>
<section id="피험자를-대조군에-배정하는-방법" class="level3" data-number="17.0.2">
<h3 data-number="17.0.2" class="anchored" data-anchor-id="피험자를-대조군에-배정하는-방법"><span class="header-section-number">17.0.2</span> 피험자를 대조군에 배정하는 방법</h3>
<ol type="1">
<li>무작위 배정: 편향을 최소화하고 통계적 신뢰성을 높임, 현재 가장 선호되는 방법</li>
<li>외부 대조군 또는 과거 대조군: 별도의 집단이나 과거 데이터를 대조군으로 사용하는 방법, 윤리적 문제나 실행 가능성 때문에 사용될 수 있음</li>
</ol>
</section>
<section id="위약-동시-대조군" class="level2" data-number="17.1">
<h2 data-number="17.1" class="anchored" data-anchor-id="위약-동시-대조군"><span class="header-section-number">17.1</span> 위약 동시 대조군</h2>
<p>위약 동시 대조군은 임상시험에서 시험약의 효과를 객관적으로 평가하기 위해 사용되는 중요한 대조군으로 치료 효과가 없는 위약 (시험약과 물리적으로 동일하지만 유효성분이 없는 약물) 을 투여하는 환자군입니다. 시험약 그룹과 위약 그룹이 같은 임상시험 기간 동안 동시에 평가되며 참가자들은 무작위로 시험약 그룹 또는 위약 그룹에 배정됩니다. 또한 이중맹검 (참가자와 연구자 모두 누가 위약을 받는지 모르는 상태) 으로 진행됩니다.</p>
</section>
<section id="무처치-no-treatment-동시-대조군" class="level2" data-number="17.2">
<h2 data-number="17.2" class="anchored" data-anchor-id="무처치-no-treatment-동시-대조군"><span class="header-section-number">17.2</span> 무처치 (no-treatment) 동시 대조군</h2>
<ul>
<li>어떠한 치료도 받지 않는 대조군으로 자연 경과를 관찰하는 데 유용합니다. 다만 윤리적 문제로 사용이 제한될 수 있습니다.</li>
</ul>
</section>
<section id="용량반응-동시대조군" class="level2" data-number="17.3">
<h2 data-number="17.3" class="anchored" data-anchor-id="용량반응-동시대조군"><span class="header-section-number">17.3</span> 용량반응 동시대조군</h2>
<ul>
<li>피험자들이 다양한 용량에 무작위 배정됨</li>
<li>약물의 최적 용량을 찾는 데 도움</li>
<li>용량 - 반응 관계를 평가할 수 있음</li>
</ul>
</section>
<section id="활성동시대조군" class="level2" data-number="17.4">
<h2 data-number="17.4" class="anchored" data-anchor-id="활성동시대조군"><span class="header-section-number">17.4</span> 활성동시대조군</h2>
<ul>
<li>이미 효과가 입증된 표준 치료를 받는 대조군</li>
<li>새로운 치료법의 상대적 효과를 평가</li>
<li>윤리적 문제를 최소화할 수 있음</li>
</ul>
</section>
<section id="외부-대조군" class="level2" data-number="17.5">
<h2 data-number="17.5" class="anchored" data-anchor-id="외부-대조군"><span class="header-section-number">17.5</span> 외부 대조군</h2>
<ul>
<li>현재 진행 중인 임상시험 외부의 대조군</li>
<li>과거 데이터나 다른 연구의 대조군 사용</li>
<li>비용 효율적이지만 편향 위험이 높음</li>
</ul>
</section>
<section id="다중-대조군" class="level2" data-number="17.6">
<h2 data-number="17.6" class="anchored" data-anchor-id="다중-대조군"><span class="header-section-number">17.6</span> 다중 대조군</h2>
<ul>
<li>여러 유형의 대조군을 동시에 사용</li>
<li>다양한 관점에서 치료 효과를 평가</li>
<li>복잡하지만 포괄적인 결과를 얻을 수 있음</li>
</ul>
</section>
</section>
<section id="단일군-전후-비교" class="level1" data-number="18">
<h1 data-number="18"><span class="header-section-number">18</span> 단일군 전후 비교</h1>
<p>단일군 전후 비교는 하나의 그룹에 대해 중재 전후의 결과를 비교하는 연구 설계입니다. 그러나 이 방법은 여러 편향이 발생할 수 있어 적절한 디자인은 아닙니다.</p>
<section id="시간의-경과에-따른-질병의-변화" class="level2" data-number="18.1">
<h2 data-number="18.1" class="anchored" data-anchor-id="시간의-경과에-따른-질병의-변화"><span class="header-section-number">18.1</span> 시간의 경과에 따른 질병의 변화</h2>
<p>발생할 수 있는 편향: 시간이 지남에 따라 자연적으로 발생하는 질병의 변화가 중재 효과로 오인될 수 있습니다.</p>
</section>
<section id="평균으로의-회귀" class="level2" data-number="18.2">
<h2 data-number="18.2" class="anchored" data-anchor-id="평균으로의-회귀"><span class="header-section-number">18.2</span> 평균으로의 회귀</h2>
<p>발생할 수 있는 편향: 극단적인 측정값이 후속 측정에서 평균으로 회귀하는 현상으로, 이를 중재 효과로 잘못 해석할 수 있습니다.</p>
<p>여러 편향이 시험군과 위약군에 모두 같은 양으로 발생 –&gt; 군간 비교만 편향을 제외한 효과를 추정할 수 있는 방법</p>
<p>이는 대조군을 포함한 연구 설계의 중요성을 강조합니다. 대조군이 있으면 이러한 편향들이 양 군에 동일하게 작용하므로, 군간 비교를 통해 실제 중재 효과를 더 정확히 추정할 수 있습니다.</p>
</section>
<section id="항암제-임상-시험에서-단일군-전후-비교-디자인" class="level2" data-number="18.3">
<h2 data-number="18.3" class="anchored" data-anchor-id="항암제-임상-시험에서-단일군-전후-비교-디자인"><span class="header-section-number">18.3</span> 항암제 임상 시험에서 단일군 전후 비교 디자인</h2>
<p>항암제 개발의 초기 단계에서는 윤리적 문제나 실행 가능성 때문에 단일군 전후 비교가 사용될 수 있습니다. 그러나 이는 예비적인 결과로 간주되며, 후속 연구에서는 보다 엄격한 연구 설계가 필요합니다.</p>
</section>
</section>
<section id="다지역임상시험" class="level1" data-number="19">
<h1 data-number="19"><span class="header-section-number">19</span> 다지역임상시험</h1>
<p>다지역임상시험은 하나의 국가이거나 여러 국가들의 집합에서 동시에 진행되는 임상시험을 의미합니다. 이는 글로벌 시장을 목표로 하는 신약 개발에서 중요한 전략입니다.</p>
<section id="가교시험" class="level2" data-number="19.1">
<h2 data-number="19.1" class="anchored" data-anchor-id="가교시험"><span class="header-section-number">19.1</span> 가교시험</h2>
<p>가교시험은 다른 지역에서 이미 시판허가를 받은 신약을 새로운 지역에 도입할 때 수행하는 소규모 임상시험입니다. 주요 목적은 다음과 같습니다:</p>
<ol type="1">
<li>새로운 지역의 인구집단에 대한 약물의 안전성과 유효성 확인</li>
<li>기존 임상 데이터의 외삽 가능성 평가</li>
<li>지역 특이적 요인 (유전적, 환경적, 문화적 차이 등) 의 영향 평가</li>
</ol>
</section>
<section id="다지역-임상시험의-장점과-단점" class="level2" data-number="19.2">
<h2 data-number="19.2" class="anchored" data-anchor-id="다지역-임상시험의-장점과-단점"><span class="header-section-number">19.2</span> 다지역 임상시험의 장점과 단점</h2>
<p>장점: 1. 시간 단축: 여러 지역에서 동시에 진행되어 전체 개발 기간 단축 2. 비용 효율성: 한 번의 대규모 시험으로 여러 지역의 승인 가능 3. 다양한 인구집단 포함: 결과의 일반화 가능성 증가</p>
<p>단점: 1. 복잡한 관리: 여러 국가의 규제 요구사항 충족 필요 2. 지역 간 차이로 인한 해석의 어려움 3. 높은 초기 비용</p>
</section>
<section id="다지역-임상시험에서-발생하는-통계적-이슈" class="level2" data-number="19.3">
<h2 data-number="19.3" class="anchored" data-anchor-id="다지역-임상시험에서-발생하는-통계적-이슈"><span class="header-section-number">19.3</span> 다지역 임상시험에서 발생하는 통계적 이슈</h2>
<ol type="1">
<li>지역 간 이질성: 치료 효과의 일관성 평가 필요</li>
<li>표본 크기 산정: 전체 및 지역별 적절한 표본 크기 결정</li>
<li>하위그룹 분석: 지역별 효과 차이 분석</li>
<li>통계적 방법론 선택: 지역 간 차이를 고려한 적절한 분석 방법 선택</li>
</ol>
</section>
<section id="효과가-각-지역에서-일정한지-확인하는-통계" class="level2" data-number="19.4">
<h2 data-number="19.4" class="anchored" data-anchor-id="효과가-각-지역에서-일정한지-확인하는-통계"><span class="header-section-number">19.4</span> 효과가 각 지역에서 일정한지 확인하는 통계</h2>
<ol type="1">
<li>기술통계: 각 지역별 효과 크기, 표준편차 등 기본적인 통계량을 제공합니다.</li>
<li>Forest plot: 각 지역의 효과 크기와 신뢰구간을 시각적으로 표현하여 지역 간 차이를 쉽게 파악할 수 있게 합니다.</li>
<li>공변량 보정을 포함하는 모형에 기반한 추정: 지역 외 다른 요인들의 영향을 고려하여 더 정확한 지역별 효과를 추정합니다.</li>
<li>치료제와 지역간의 교호작용 검정: 치료 효과가 지역에 따라 유의미하게 다른지 통계적으로 검증합니다.</li>
</ol>
</section>
<section id="각-지역에-피험자-할당-방법" class="level2" data-number="19.5">
<h2 data-number="19.5" class="anchored" data-anchor-id="각-지역에-피험자-할당-방법"><span class="header-section-number">19.5</span> 각 지역에 피험자 할당 방법</h2>
<ol type="1">
<li>비례할당: 각 지역의 인구 비율에 따라 피험자를 할당합니다. 대표성을 확보할 수 있습니다.</li>
<li>균등할당: 모든 지역에 동일한 수의 피험자를 할당합니다. 지역 간 비교가 용이합니다.</li>
<li>시험약 효과의 일부 보존: 전체 효과의 일정 비율을 각 지역에서 입증할 수 있도록 할당합니다.</li>
<li>지역유의성: 각 지역에서 독립적으로 통계적 유의성을 확보할 수 있도록 할당합니다.</li>
</ol>
</section>
</section>
<section id="희귀의약품" class="level1" data-number="20">
<h1 data-number="20"><span class="header-section-number">20</span> 희귀의약품</h1>
<p>약 7000 가지의 희귀질환중에 약 5% 의 치료제만 존재한다. 환자수 모집이 어렵다. 1. 임상 디자인또는 통계분석의 효율을 증가 시킬수 있는 방법 - <strong>적응적 임상시험 설계</strong> : FDA 에서 권장하는 유연성 있는 디자인 임상시험 (Adaptive Design Clinical Trials) 을 활용하여 초기 임상에서부터 실용적이고 효율적인 시험을 진행할 수 있습니다. - <strong>다군 시험 (Multi-cohort Trials)</strong> : 하나의 임상시험 프로토콜로 여러 결과를 얻을 수 있는 다군 시험을 실시하여 신약에 대한 정보를 더 빠르고 많이 얻을 수 있습니다. - <strong>베이지안 방법론</strong> : 특히 항암제 개발에서 베이지안 방법 (Bayesian Methodology) 을 도입하여 효율성을 높일 수 있습니다. 2. 위의 방법을 사용할 수 없는 경우 - <strong>강화전략 (Enrichment strategy)</strong> : FDA 에서 발간한 강화전략 프로그램을 활용하여 약의 효능 확인이 용이한 환자군을 선별함으로써 성공률을 높일 수 있습니다 - <strong>단일군 시험</strong> : 대조군 설정이 어려운 경우, 단일군 시험을 통해 치료 전후를 비교할 수 있습니다. - <strong>실제 임상 데이터 활용</strong> : 실제 임상 데이터 (Real-World Data) 를 보조적 증거로 활용하여 임상시험 결과를 보완할 수 있습니다</p>
<section id="증거의-수준" class="level2" data-number="20.1">
<h2 data-number="20.1" class="anchored" data-anchor-id="증거의-수준"><span class="header-section-number">20.1</span> 증거의 수준</h2>
<p>시험약 효과에 대한 신뢰구간은 치료 효과의 불확실성을 나타내는 중요한 지표입니다. 희귀질환의 경우, 환자 수가 적어 넓은 신뢰구간이 허용될 수 있으나, 임상적 의미를 신중히 해석해야 합니다.</p>
<p>희귀질환 임상시험에서의 주요 고려사항에 대해 설명하겠습니다.</p>
</section>
<section id="약리적-고려" class="level2" data-number="20.2">
<h2 data-number="20.2" class="anchored" data-anchor-id="약리적-고려"><span class="header-section-number">20.2</span> 약리적 고려</h2>
<p>희귀질환 치료제 개발에서는 질병의 특성과 약물의 작용 기전을 세밀히 고려해야 합니다. 희귀질환의 병태생리학적 특성을 반영한 맞춤형 약리 연구가 필요하며, 약물 상호작용과 부작용에 대한 면밀한 관찰이 중요합니다.</p>
</section>
<section id="평가변수의-선택" class="level2" data-number="20.3">
<h2 data-number="20.3" class="anchored" data-anchor-id="평가변수의-선택"><span class="header-section-number">20.3</span> 평가변수의 선택</h2>
<p>희귀질환의 특성을 반영하는 적절한 평가변수 선택이 중요합니다. 질병 특이적 바이오마커나 환자 보고 결과 (PRO) 를 활용할 수 있습니다. 또한, 대리 평가변수 (surrogate endpoint) 를 사용하여 시험 기간을 단축하고 효율성을 높일 수 있습니다.</p>
</section>
<section id="대조군의-선택" class="level2" data-number="20.4">
<h2 data-number="20.4" class="anchored" data-anchor-id="대조군의-선택"><span class="header-section-number">20.4</span> 대조군의 선택</h2>
<p>희귀질환의 특성상 위약 대조군 설정이 윤리적 문제를 야기할 수 있습니다. 따라서 표준 치료군이나 역사적 대조군 사용을 고려할 수 있습니다. 경우에 따라 환자 자신을 대조군으로 사용하는 N-of-1 시험 설계도 가능합니다.</p>
</section>
<section id="방법론-및-통계학적-고려사항" class="level2" data-number="20.5">
<h2 data-number="20.5" class="anchored" data-anchor-id="방법론-및-통계학적-고려사항"><span class="header-section-number">20.5</span> 방법론 및 통계학적 고려사항</h2>
<ul>
<li><strong>유연한 유의수준 적용</strong>: 전통적인 0.05 유의수준 대신 더 유연한 기준을 적용할 수 있습니다. FDA 에서는 희귀질환 임상시험에서 p-value 0.05 이상도 고려할 수 있다고 언급하고 있습니다.</li>
<li><strong>적응적 임상시험 설계</strong>: 중간 분석 결과에 따라 시험 설계를 조정하는 적응적 설계를 통해 효율성을 높일 수 있습니다. 이는 FDA 에서도 권장하는 방법입니다.</li>
<li><strong>베이지안 접근법</strong>: 사전 정보를 활용하여 적은 표본으로도 의미 있는 결론을 도출할 수 있는 베이지안 통계 방법을 고려할 수 있습니다. 특히 항암제 개발에서 이 방법론의 도입이 증가하고 있습니다.</li>
<li><strong>다중 평가변수 분석</strong>: 여러 평가변수를 종합적으로 분석하여 치료 효과를 평가하는 방법을 고려할 수 있습니다. 이는 희귀질환의 복잡한 특성을 반영하는 데 도움이 될 수 있습니다.</li>
</ul>
</section>
</section>
<section id="안전성-자료분석" class="level1" data-number="21">
<h1 data-number="21"><span class="header-section-number">21</span> 안전성 자료분석</h1>
<p>안전성 자료분석은 임상시험 중 발생한 이상반응과 약물 이상반응을 체계적으로 평가하고 분석하는 과정입니다. 이는 의약품의 안전성 프로파일을 확립하고 잠재적 위험을 식별하는 데 중요한 역할을 합니다.</p>
<section id="용어-정리" class="level2" data-number="21.1">
<h2 data-number="21.1" class="anchored" data-anchor-id="용어-정리"><span class="header-section-number">21.1</span> 용어 정리</h2>
<ul>
<li><strong>이상반응</strong>: 시험약과의 연관성을 반드시 규명할 수 없거나, 피험자에 발생한 예상치 못한 의학적 발생을 말합니다. 이는 임상시험 중 관찰된 모든 바람직하지 않은 의학적 사건을 포함합니다.</li>
<li><strong>약물 이상반응</strong>: 의약품과 인과관계가 있다고 의심되는 유해하고 의도하지 않은 반응을 의미합니다. 이는 시험약과의 연관성이 있다고 판단되는 이상반응을 지칭합니다.</li>
<li><strong>예상하지 못한 약물이상반응</strong>: 의약품의 허가사항이나 임상시험계획서에 기술되지 않은 성질이나 중증도의 이상반응을 말합니다. 이는 새로운 안전성 정보로 간주될 수 있습니다.</li>
<li><strong>중대한 이상반응 또는 이상약물 반응</strong>: 사망, 생명을 위협하는 상황, 입원 또는 입원 기간 연장, 지속적인 장애나 기능 저하, 선천적 기형 등을 초래하는 반응을 의미합니다. 이는 즉각적인 보고와 평가가 필요한 중요한 안전성 정보입니다.</li>
</ul>
</section>
<section id="시험약의-안전성을-평가하는데-필요한-표본의-크기" class="level2" data-number="21.2">
<h2 data-number="21.2" class="anchored" data-anchor-id="시험약의-안전성을-평가하는데-필요한-표본의-크기"><span class="header-section-number">21.2</span> 시험약의 안전성을 평가하는데 필요한 표본의 크기</h2>
<p>시험약의 안전성 평가를 위한 표본 크기 결정은 매우 중요한 과정으로 아래 두 가지 참고할 만한 규칙이 있습니다. 다만 이런 규칙은 임상시험 설계 시 필요한 최소 표본 크기에 도움을 주는 것이며 실제 임상시험에서는 더 많은 요인들을 고려하여 표본 크기를 결정해야 합니다.</p>
<ul>
<li><strong>rule of 3</strong>: 이 규칙은 드문 이상반응을 탐지하는 데 유용합니다. 어떤 약물 이상반응의 실제 발생률이 n 명 중 한 명일 때, 3n 명의 환자를 관찰하면 적어도 95% 의 확률로 한 명 이상에서 해당 이상반응을 관찰할 수 있다는 것입니다. 이는 드문 이상반응의 발생 가능성을 추정하는 데 도움이 됩니다.<sup>26</sup></li>
<li><strong>300 명 규칙</strong>: 300 명에게 시험약을 투여했을 때 특정 약물 이상반응이 관찰되지 않았다면, 95% 의 신뢰도로 해당 이상반응의 실제 발생률이 1% 미만이라고 말할 수 있습니다. 이는 상대적으로 흔하지 않은 이상반응의 발생률 상한을 추정하는 데 유용합니다.</li>
</ul>
</section>
<section id="개별-환자에서의-인과관계" class="level2" data-number="21.3">
<h2 data-number="21.3" class="anchored" data-anchor-id="개별-환자에서의-인과관계"><span class="header-section-number">21.3</span> 개별 환자에서의 인과관계</h2>
<p>개별 환자에서 약물 이상반응과 시험약 간의 인과관계를 평가할 때는 다음 조건들을 고려합니다. 이 조건들이 많이 만족될수록 인과관계의 가능성이 높아집니다:</p>
<ol type="1">
<li><strong>시간적 연관성</strong>: 약물 투여와 이상반응 발생 사이의 시간적 관계가 적절한지 평가합니다.</li>
<li><strong>용량관계</strong>: 약물 용량 증가에 따라 이상반응의 심각도나 빈도가 증가하는지 확인합니다.</li>
<li><strong>시험약 재투여 혹은 투여중지</strong>: 약물 중단 시 이상반응이 사라지거나, 재투여 시 다시 나타나는지 관찰합니다.</li>
<li><strong>생물학적 개연성</strong>: 약물의 작용 기전과 이상반응 발생 사이에 생물학적으로 설명 가능한 연관성이 있는지 검토합니다.</li>
<li><strong>특이성</strong>: 해당 이상반응이 특정 약물에 특징적인 것인지 평가합니다.</li>
<li><strong>일치성</strong>: 다른 연구나 보고에서도 유사한 이상반응이 관찰되었는지 확인합니다.</li>
<li><strong>설명 방법이 없는 경우</strong>: 다른 요인으로는 이상반응을 설명할 수 없는 경우, 약물과의 인과관계 가능성이 높아집니다.</li>
</ol>
</section>
<section id="안전성-자료-평가법" class="level2" data-number="21.4">
<h2 data-number="21.4" class="anchored" data-anchor-id="안전성-자료-평가법"><span class="header-section-number">21.4</span> 안전성 자료 평가법</h2>
<p>안전성 자료 평가는 임상시험에서 수집된 안전성 정보를 체계적으로 분석하고 해석하는 과정입니다. 주요 평가 방법은 다음과 같습니다:</p>
<ul>
<li><strong>빈도 분석</strong> : 이상반응의 발생 빈도를 계산하고 비교합니다. 치료군과 대조군 간의 이상반응 발생률 차이를 통계적으로 분석합니다.</li>
<li><strong>중증도 평가</strong> : 이상반응의 중증도를 등급화하여 분석합니다. 일반적으로 CTCAE(Common Terminology Criteria for Adverse Events) 기준을 사용합니다.</li>
<li><strong>시간 - 사건 분석</strong> : Kaplan-Meier 곡선이나 Cox 비례위험모형을 이용하여 이상반응 발생까지의 시간을 분석합니다.</li>
<li><strong>인과관계 평가</strong> : 개별 이상반응과 시험약 간의 인과관계를 평가합니다. 앞서 언급한 7 가지 기준 (시간적 연관성, 용량관계 등) 을 고려합니다.</li>
<li><strong>하위그룹 분석</strong> : 연령, 성별, 기저질환 등 환자 특성에 따른 안전성 프로파일 차이를 분석합니다.</li>
<li><strong>누적 분석</strong> : 장기 안전성을 평가하기 위해 이상반응의 누적 발생률을 분석합니다.</li>
<li><strong>비교 위험도 분석</strong> : 상대위험도 (Relative Risk) 나 오즈비 (Odds Ratio) 를 계산하여 치료군과 대조군의 위험을 비교합니다.</li>
<li><strong>신호 탐지</strong> : 예상치 못한 이상반응 패턴을 식별하기 위해 데이터 마이닝 기법을 사용할 수 있습니다.</li>
</ul>
</section>
</section>
<section id="자주-쓰이는-통계-기법" class="level1" data-number="22">
<h1 data-number="22"><span class="header-section-number">22</span> 자주 쓰이는 통계 기법</h1>
<section id="임상에서-통계" class="level2" data-number="22.1">
<h2 data-number="22.1" class="anchored" data-anchor-id="임상에서-통계"><span class="header-section-number">22.1</span> 임상에서 통계</h2>
<ol type="1">
<li><strong>전수조사와 표본 조사</strong>: 전수조사는 모든 대상을 조사하는 방법이지만 현실적으로 어려워 일부만 조사하는 표본 조사를 주로 사용합니다.</li>
<li><strong>추정</strong>:
<ul>
<li>점추정: 단일 값으로 모수를 추정합니다.</li>
<li>구간추정 (신뢰구간): 모수가 속할 것으로 예상되는 구간을 제시합니다.</li>
</ul></li>
<li><strong>가설검정</strong>: 귀무가설의 기각 여부를 통계적으로 판단합니다.</li>
<li><strong>제 1 종 오류, 2 종 오류, 검정력</strong>:
<ul>
<li>제 1 종 오류: 귀무가설이 참일 때 이를 기각할 확률</li>
<li>제 2 종 오류: 대립가설이 참일 때 귀무가설을 기각하지 못할 확률</li>
<li>검정력: 1 - 제 2 종 오류 확률</li>
</ul></li>
</ol>
</section>
<section id="어떤-통계검정방법이-가장-좋은-방법인가" class="level2" data-number="22.2">
<h2 data-number="22.2" class="anchored" data-anchor-id="어떤-통계검정방법이-가장-좋은-방법인가"><span class="header-section-number">22.2</span> 어떤 통계검정방법이 가장 좋은 방법인가?</h2>
<p>제 1 종 오류를 5% 이하로 유지하면서 검정력을 최대화하는 방법이 가장 좋은 방법으로 간주됩니다.</p>
</section>
<section id="양측-검정과-단측검정" class="level2" data-number="22.3">
<h2 data-number="22.3" class="anchored" data-anchor-id="양측-검정과-단측검정"><span class="header-section-number">22.3</span> 양측 검정과 단측검정</h2>
<ol type="1">
<li><strong>양측검정</strong>: 효과의 방향성을 모를 때 사용합니다.</li>
<li><strong>단측검정</strong>: 효과의 방향성을 예측할 수 있을 때 사용합니다. 예를 들어, 시험약이 위약보다 우월한 경우를 검정할 때 사용합니다.</li>
</ol>
</section>
<section id="통계적-유의성과-임상정-유의성" class="level2" data-number="22.4">
<h2 data-number="22.4" class="anchored" data-anchor-id="통계적-유의성과-임상정-유의성"><span class="header-section-number">22.4</span> 통계적 유의성과 임상정 유의성</h2>
<ol type="1">
<li><strong>통계적 유의성만 있는 경우</strong>: 효과가 작아도 표본 크기가 큰 경우 발생할 수 있습니다.</li>
<li><strong>임상적 유의성만 있는 경우</strong>: 효과가 크더라도 통계적으로 유의하지 않을 수 있습니다.</li>
</ol>
</section>
<section id="임상결과해석에-신뢰구간이-더-중요한-이유" class="level2" data-number="22.5">
<h2 data-number="22.5" class="anchored" data-anchor-id="임상결과해석에-신뢰구간이-더-중요한-이유"><span class="header-section-number">22.5</span> 임상결과해석에 신뢰구간이 더 중요한 이유</h2>
<p>신뢰구간은 통계적 유의성과 임상적 유의성을 동시에 평가할 수 있어 가설검정보다 더 많은 정보를 제공합니다.</p>
</section>
<section id="표준편차와-표준오차의-차이" class="level2" data-number="22.6">
<h2 data-number="22.6" class="anchored" data-anchor-id="표준편차와-표준오차의-차이"><span class="header-section-number">22.6</span> 표준편차와 표준오차의 차이</h2>
<ul>
<li><strong>표준편차</strong>: 자료의 퍼짐 정도를 나타내는 지표입니다.</li>
<li><strong>표준오차</strong>: 추정량의 정확도를 나타내는 지표로, 여러 공식이 존재할 수 있습니다.</li>
</ul>
</section>
<section id="실험계획법" class="level2" data-number="22.7">
<h2 data-number="22.7" class="anchored" data-anchor-id="실험계획법"><span class="header-section-number">22.7</span> 실험계획법</h2>
<ol type="1">
<li><strong>무작위 배정</strong>: 편향을 줄이기 위해 사용합니다.</li>
<li><strong>반복</strong>: 정확도를 높이기 위해 사용합니다.</li>
<li><strong>블록화</strong>: 외부 요인의 영향을 통제하기 위해 사용합니다.</li>
</ol>
</section>
<section id="two-sample-t-test" class="level2" data-number="22.8">
<h2 data-number="22.8" class="anchored" data-anchor-id="two-sample-t-test"><span class="header-section-number">22.8</span> Two-sample t-test</h2>
<p>두 독립적인 집단의 평균을 비교하는 방법입니다. 이 검정은 두 집단이 서로 독립적이며, 각 집단의 데이터가 정규분포를 따른다고 가정합니다. 검정 통계량은 두 집단의 평균 차이를 표준오차로 나눈 값으로 계산됩니다.<sup>27</sup> 예시: 새로운 혈압 강하제의 효과를 평가하기 위해, 치료군과 대조군의 혈압 감소 정도를 비교합니다.</p>
</section>
<section id="paired-t-test" class="level2" data-number="22.9">
<h2 data-number="22.9" class="anchored" data-anchor-id="paired-t-test"><span class="header-section-number">22.9</span> Paired t-test</h2>
<p>동일한 대상의 전후 비교 등에 사용되는 방법입니다. 이 검정은 각 개체에 대해 두 번의 측정이 이루어질 때 사용됩니다. 예를 들어, 치료 전후의 효과를 비교할 때 유용합니다. 두 측정값의 차이가 정규분포를 따른다고 가정합니다.<sup>28</sup> 예시: 동일한 환자 그룹에서 특정 약물 복용 전후의 콜레스테롤 수치 변화를 비교합니다.</p>
</section>
<section id="one-way-anova" class="level2" data-number="22.10">
<h2 data-number="22.10" class="anchored" data-anchor-id="one-way-anova"><span class="header-section-number">22.10</span> One-way ANOVA</h2>
<p>세 개 이상의 집단을 비교할 때 사용하는 방법으로, 사후 검정 방법에는 Scheffe, Tukey-Kramer, Dunnett’s 방법 등이 있습니다. 이 방법은 분산분석 (ANOVA) 의 한 형태로, 여러 집단 간의 평균 차이를 동시에 비교할 수 있습니다.<sup>29</sup> 예시: 세 가지 다른 용량 (저용량, 중간용량, 고용량) 의 약물 효과를 비교하여 최적의 용량을 결정합니다.</p>
</section>
<section id="공분산-분석" class="level2" data-number="22.11">
<h2 data-number="22.11" class="anchored" data-anchor-id="공분산-분석"><span class="header-section-number">22.11</span> 공분산 분석</h2>
<p>공변량의 영향을 보정하여 집단 간 차이를 분석하는 방법입니다. 이 방법은 실험 처리 효과와 함께 연속형 변수 (공변량) 의 영향을 동시에 고려할 수 있어, 더 정확한 처리 효과 추정이 가능합니다. 예시: 새로운 당뇨병 치료제의 효과를 평가할 때, 환자의 나이와 체중을 공변량으로 고려하여 분석합니다.</p>
</section>
<section id="랜덤화-블록-설계" class="level2" data-number="22.12">
<h2 data-number="22.12" class="anchored" data-anchor-id="랜덤화-블록-설계"><span class="header-section-number">22.12</span> 랜덤화 블록 설계</h2>
<p>임상 시험의 효율을 높이기 위해 사용되는 실험 설계 방법입니다. 이 방법은 알려진 변동 요인을 블록으로 구분하여 처리하므로, 처리 효과를 더 정확히 추정할 수 있습니다. 예시: 항암제 임상시험에서 환자의 암 병기를 블록으로 사용하여 각 병기 내에서 치료군과 대조군에 균등하게 배정합니다.</p>
</section>
<section id="회귀분석" class="level2" data-number="22.13">
<h2 data-number="22.13" class="anchored" data-anchor-id="회귀분석"><span class="header-section-number">22.13</span> 회귀분석</h2>
<p>변수 간의 관계를 모델링하는 방법입니다. 독립변수와 종속변수 간의 관계를 수학적 모델로 표현하여, 변수 간의 관계를 이해하고 예측에 활용할 수 있습니다. 예시: 환자의 나이, 체중, 운동량 등이 혈압에 미치는 영향을 모델링합니다.</p>
</section>
<section id="범주형-자료-분석" class="level2" data-number="22.14">
<h2 data-number="22.14" class="anchored" data-anchor-id="범주형-자료-분석"><span class="header-section-number">22.14</span> 범주형 자료 분석</h2>
<p>카테고리 데이터를 분석하는 방법입니다. 주로 카이제곱 검정, Fisher 의 정확 검정 등이 사용되며, 범주형 변수 간의 관계나 분포의 차이를 분석합니다. 예시: 흡연 여부 (흡연자/비흡연자) 와 폐암 발생 (있음/없음) 사이의 관계를 분석합니다.</p>
</section>
<section id="오즈비-odds-ratio" class="level2" data-number="22.15">
<h2 data-number="22.15" class="anchored" data-anchor-id="오즈비-odds-ratio"><span class="header-section-number">22.15</span> 오즈비 (odds ratio)</h2>
<p>두 사건의 발생 확률의 비율을 나타내는 지표입니다. 주로 case-control 연구에서 위험 요인과 질병 발생의 관련성을 평가하는 데 사용됩니다. 예시: 특정 유전자 변이가 있는 사람이 없는 사람에 비해 특정 질병에 걸릴 확률이 몇 배 높은지 계산합니다.</p>
</section>
<section id="로지스틱-회귀분석" class="level2" data-number="22.16">
<h2 data-number="22.16" class="anchored" data-anchor-id="로지스틱-회귀분석"><span class="header-section-number">22.16</span> 로지스틱 회귀분석</h2>
<p>이진 결과변수에 대한 회귀분석 방법으로, 오즈비 계산이 가능합니다. 종속변수가 이진형 (예: 성공/실패) 일 때 사용되며, 독립변수와 종속변수의 확률 간의 관계를 모델링합니다. 예시: 환자의 나이, 성별, 혈압 등의 요인이 심장병 발생 확률에 미치는 영향을 모델링합니다.</p>
</section>
<section id="생존분석" class="level2" data-number="22.17">
<h2 data-number="22.17" class="anchored" data-anchor-id="생존분석"><span class="header-section-number">22.17</span> 생존분석</h2>
<p>특정 사건 (예: 사망, 재발) 까지의 시간을 분석하는 방법입니다. Kaplan-Meier 곡선과 Log-rank 검정이 자주 사용됩니다. 예시: 새로운 항암제 치료를 받은 환자군과 기존 치료를 받은 환자군의 5 년 생존율을 비교합니다.</p>
<ol type="1">
<li>생존함수와 위험함수: 생존함수는 특정 시점까지 사건이 발생하지 않을 확률을, 위험함수는 특정 시점에서의 순간적인 사건 발생 확률을 나타냅니다. 위험함수가 커지면 사망 가능성이 높아집니다.</li>
<li>Kaplan-Meier 곡선: 시간에 따른 생존 확률을 그래프로 나타내는 방법으로, 중도 탈락한 데이터를 처리할 수 있어 자주 사용됩니다.</li>
<li>Log-rank test: 두 개 이상의 생존함수가 통계적으로 유의한 차이가 있는지 검정하는 방법입니다. 전체 관찰 기간에 걸친 생존 기간을 비교합니다.<sup>30</sup></li>
</ol>
</section>
</section>
<section id="reference" class="level1" data-number="23">
<h1 data-number="23"><span class="header-section-number">23</span> Reference</h1>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>https://m.medigatenews.com/news/3671926126↩︎</p></li>
<li id="fn2"><p>http://www.jcr.kr/Upload/Post_Case/1450158131_phpkvoj7J_-2.pdf↩︎</p></li>
<li id="fn3"><p>http://www.docdocdoc.co.kr/news/articleView.html?idxno=1062297↩︎</p></li>
<li id="fn4"><p>https://pipetcpt.github.io/book-stat/analysis.html↩︎</p></li>
<li id="fn5"><p>https://pipetcpt.github.io/book-stat/design.html↩︎</p></li>
<li id="fn6"><p>https://support.minitab.com/ko-kr/minitab/help-and-how-to/statistics/equivalence-tests/how-to/2-sample-equivalence-test/before-you-start/example/↩︎</p></li>
<li id="fn7"><p>http://www.kmdianews.com/news/articleView.html?idxno=28425↩︎</p></li>
<li id="fn8"><p>https://ko.wikipedia.org/wiki/%EC%9E%84%EC%83%81%EC%8B%9C%ED%97%98↩︎</p></li>
<li id="fn9"><p>https://pipetcpt.github.io/book-stat/design.html↩︎</p></li>
<li id="fn10"><p>http://www.hitnews.co.kr/news/articleView.html?idxno=46635↩︎</p></li>
<li id="fn11"><p>https://ko.wikipedia.org/wiki/%EC%9E%84%EC%83%81%EC%8B%9C%ED%97%98↩︎</p></li>
<li id="fn12"><p>https://ekja.org/upload/pdf/kjae-68-106_ko.pdf↩︎</p></li>
<li id="fn13"><p>https://pipetcpt.github.io/book-stat/analysis.html↩︎</p></li>
<li id="fn14"><p>https://3months.tistory.com/506↩︎</p></li>
<li id="fn15"><p>https://rimint02.tistory.com/m/153↩︎</p></li>
<li id="fn16"><p>https://blog.naver.com/PostView.naver?blogId=julcho&amp;isHttpsRedirect=true&amp;logNo=40207295594↩︎</p></li>
<li id="fn17"><p>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5654877/↩︎</p></li>
<li id="fn18"><p>https://en.wikipedia.org/wiki/Intention-to-treat_analysis↩︎</p></li>
<li id="fn19"><p>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159210/↩︎</p></li>
<li id="fn20"><p>https://www.clinfo.eu/itt-vs-pp↩︎</p></li>
<li id="fn21"><p>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159210/↩︎</p></li>
<li id="fn22"><p>https://greatjoy.tistory.com/78↩︎</p></li>
<li id="fn23"><p>https://syj9700.tistory.com/6↩︎</p></li>
<li id="fn24"><p>http://www.kmdianews.com/news/articleView.html?idxno=28425↩︎</p></li>
<li id="fn25"><p>http://www.mediclic.co.kr/info/bio↩︎</p></li>
<li id="fn26"><p>https://pipetcpt.github.io/book-stat/design.html↩︎</p></li>
<li id="fn27"><p>https://www.statology.org/two-sample-t-test/↩︎</p></li>
<li id="fn28"><p>https://en.wikipedia.org/wiki/Student’s_t-test↩︎</p></li>
<li id="fn29"><p>https://www.jmp.com/en_ca/statistics-knowledge-portal/t-test/two-sample-t-test.html)↩︎</p></li>
<li id="fn30"><p>https://www.graphpad.com/quickcalcs/ttest1/↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Clinical trial</category>
  <category>Statistics</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Stat_clinical_trial.html</guid>
  <pubDate>Fri, 25 Oct 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>인과 관계 추론을 위한 기본 규칙</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/causal_inference_rules.html</link>
  <description><![CDATA[ 




<p>현실 데이터에서 인과 관계를 관찰할 수 있는 연관성 및 상관관계에 대한 기본 규칙에 대해 알아봅니다. 각각의 규칙을 최대한 쉽게 이해할 수 있도록 간단하게 설명한다음 매우 간단한 파이썬 코드를 사용해 어떻게 작동하는지 살펴봅니다.</p>
<p>먼저 네 가지 기본 인과 관계 구조를 살펴보고 이후에 기본 규칙에 대해서 알아보겠습니다. 실제로 데이터를 분석할때에는 여기서 살펴본 규칙들을 복합적으로 사용해야 합니다. 따라서 인과 관계 추론에 하여 배우려면 <a href="https://pedermisager.org/blog/seven_basic_rules_for_causal_inference/?utm_source=substack&amp;utm_medium=email#ref-Hernan2020">Hernán과 Robins의 책</a> 과 HarvardX 의 <a href="https://www.edx.org/learn/data-analysis/harvard-university-causal-diagrams-draw-your-assumptions-before-your-conclusions?index=product&amp;queryID=a52aac6e59e1576c59cb528002b59be0&amp;position=1&amp;linked_from=autocomplete&amp;c=autocomplete">인과 관계 추론 과정</a>을 배우는 것을 추천드립니다.</p>
<section id="네-가지-기본-인과-관계-구조" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 네 가지 기본 인과 관계 구조</h1>
<p>인과 그래프는 변수 간의 인과 메커니즘을 나타내는 그림입니다. 그래프에서 변수 (노드) 는 원 (때로는 사각형) 으로 그려지고, 변수 간의 인과 관계 (경로) 는 원인에서 결과를 가리키는 화살표 (→) 로 그려집니다.</p>
<p>따라서 아무리 복잡한 인과 관계 그래프라도 네 가지 기본 구성 요소로 나눌 수 있습니다. 블록은 변수 간에 추적할 수 있는 경로의 유형에 따라 정의됩니다. 아래에서 설명할 모든 규칙은 이러한 구성 요소 중 하나 이상을 다루므로, 먼저 이러한 구성 요소를 명시하고 설명하는 것이 유용합니다. 주어진 인스턴스에서 어떤 블록을 다루고 있는지 인식하면 어떤 인과 관계 추론 규칙이 적합한지 알 수 있습니다.</p>
<section id="완전한-독립" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="완전한-독립"><span class="header-section-number">1.1</span> 완전한 독립</h2>
<p>A 와 B 사이에는 경로를 추적할 수 없습니다.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    A~~~B
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</section>
<section id="체인-chain" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="체인-chain"><span class="header-section-number">1.2</span> 2. 체인; Chain</h2>
<p>인과 관계 사슬에서 모든 화살표가 A 에서 B 를 가리키는 방향 경로를 추적할 수 있습니다. 사슬 경로는 “열린 경로”라고도 하며, 이러한 유형의 그래프는 A 와 B 사이의 상관 관계를 전달합니다 (규칙 2 참조). 체인에 세 개 이상의 변수가 포함된 경우, A 와 B 를 연결하는 변수 M 을 매개변수라고 부르기도 합니다.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    A--&gt;B
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</section>
<section id="포크-fork" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="포크-fork"><span class="header-section-number">1.3</span> 3. 포크; Fork</h2>
<p>인과관계 포크에서 방향이 없는 경로 (모든 화살표가 같은 방향으로 달리지 않음) 는 공통의 인과관계 조상인 C 를 통해 A 에서 B 로 추적할 수 있으며, C 를 종종 교란 변수라고 부릅니다. 포크 경로는 “개방형”이며 A 와 B 사이의 상관관계를 전달합니다 (규칙 3 참조).</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    C--&gt;A
    C--&gt;B
    A~~~B
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</section>
<section id="콜라이더-collider" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="콜라이더-collider"><span class="header-section-number">1.4</span> 4. 콜라이더; Collider</h2>
<p>인과관계 콜라이더에서는 방향이 지정되지 않은 경로 (모든 화살표가 같은 방향으로 달리는 것은 아님) 가 인과관계의 하위 항목 D 를 통해 A 에서 B 로 추적될 수 있으며, D 를 흔히 콜라이더 변수라고 부릅니다. 콜라이더 경로는 “닫힌” 경로이며 A 와 B 사이의 상관관계를 전달하지 않습니다 (규칙 1 참조).</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    A~~~B
    B--&gt;D
    A--&gt;D
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</section>
</section>
<section id="인과-관계-추론의-기본-규칙" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 인과 관계 추론의 기본 규칙</h1>
<section id="중요한-가정" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="중요한-가정"><span class="header-section-number">2.1</span> 중요한 가정</h2>
<ul>
<li>위의 규칙은 몇 가지 중요한 가정이 충족되는 경우에만 적용되며, 아래에 나열하지만 자세히 설명하지는 않겠습니다</li>
<li>허위 상관관계가 없습니다: 상관관계는 무작위적인 우연에 의해 발생하는 것이 아닙니다. 큰 수의 법칙에 따르면 데이터가 많을수록 이 가정은 더 신뢰할 수 있습니다.</li>
<li>일관성: 사용자가 보는 A의 값은 A의 실제 값, 즉 비교 대상인 치료의 값이 데이터의 치료 버전과 일치하는 잘 정의된 개입에 해당합니다.</li>
<li>교환 가능성: 연구자가 결정하지는 않았지만 모든 치료 가치를 받을 수 있는 조건부 확률은 측정된 공변인에 의해서만 달라집니다.</li>
<li>양성: L에 대한 조건부 치료의 모든 값을 받을 확률은 0보다 큰 양수입니다.</li>
<li>충실성: 인과 효과는 데이터에서 평균을 0으로 만드는 방식으로 그룹에 따라 달라지지 않습니다. A가 50%는 긍정적인 영향을 미치고 50%는 똑같이 강력한 부정적인 영향을 미치지 않으며, 이 경우 전체 인구에서 평균적으로 0의 영향을 미칩니다.</li>
</ul>
<p>이러한 가정 중 하나가 충족되지 않으면 이러한 규칙에서 설명하는 인과 효과와 관찰 데이터 간의 관계가 잠재적으로 깨질 수 있습니다.</p>
</section>
<section id="규칙-1-독립-변수는-상관관계가-없음" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="규칙-1-독립-변수는-상관관계가-없음"><span class="header-section-number">2.2</span> 규칙 1: 독립 변수는 상관관계가 없음</h2>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    A~~~B
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>A 와 B 가 인과적으로 독립적이라면 데이터에서 서로 연관되지 않습니다.</p>
<div id="cell-3" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> stats</span>
<span id="cb1-4"></span>
<span id="cb1-5">plt.style.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rule 1</span></span>
<span id="cb1-8">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of data points</span></span>
<span id="cb1-9">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A is a random variable</span></span>
<span id="cb1-10">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># B is a random variable</span></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate correlation</span></span>
<span id="cb1-13">correlation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(a, b)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create scatter plot</span></span>
<span id="cb1-16">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb1-17">plt.scatter(a, b, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add title and labels</span></span>
<span id="cb1-20">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>)</span>
<span id="cb1-21">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add correlation text to the plot</span></span>
<span id="cb1-24">plt.text(</span>
<span id="cb1-25">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>,</span>
<span id="cb1-26">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>,</span>
<span id="cb1-27">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Correlation: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>correlation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.5f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb1-28">    transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.gca().transAxes,</span>
<span id="cb1-29">    verticalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,</span>
<span id="cb1-30">    bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"boxstyle"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facecolor"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alpha"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>},</span>
<span id="cb1-31">)</span>
<span id="cb1-32"></span>
<span id="cb1-33">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="causal_inference_rules_files/figure-html/cell-2-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/causal_inference_rules_files/figure-html/cell-2-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    A~~~B
    B--&gt;D
    A--&gt;D
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>A 와 B 는 인과적 자손 (인과적 충돌자) 을 공유하더라도 인과적으로 독립적이며, D. 공유된 자손의 두 독립적 원인은 서로 상관관계가 없습니다 (규칙 7 은은 제외).</p>
</section>
<section id="규칙-2-인과적-영향은-상관관계를-생성합니다" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="규칙-2-인과적-영향은-상관관계를-생성합니다"><span class="header-section-number">2.3</span> 규칙 2: 인과적 영향은 상관관계를 생성합니다</h2>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    A--&gt;B
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>A 가 B 의 원인인 경우 또는 B 가 A 의 원인인 경우 데이터에서 A 와 B 는 상관관계가 있습니다.</p>
<div id="cell-6" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rule 2</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of data points</span></span>
<span id="cb2-4">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A is a random variable</span></span>
<span id="cb2-5">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># B is a random variable</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate correlation</span></span>
<span id="cb2-8">correlation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(a, b)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create scatter plot</span></span>
<span id="cb2-11">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb2-12">plt.scatter(a, b, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add title and labels</span></span>
<span id="cb2-15">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>)</span>
<span id="cb2-16">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add correlation text to the plot</span></span>
<span id="cb2-19">plt.text(</span>
<span id="cb2-20">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>,</span>
<span id="cb2-21">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>,</span>
<span id="cb2-22">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Correlation: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>correlation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.5f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb2-23">    transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.gca().transAxes,</span>
<span id="cb2-24">    verticalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,</span>
<span id="cb2-25">    bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"boxstyle"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facecolor"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alpha"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>},</span>
<span id="cb2-26">)</span>
<span id="cb2-27"></span>
<span id="cb2-28">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="causal_inference_rules_files/figure-html/cell-3-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://tomorrow-lab.github.io/posts/ipynb/causal_inference_rules_files/figure-html/cell-3-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>이런 인과관계는 A가 M을 유발하고 M이 다시 B를 유발하는 (중계하는)경우에도 적용됩니다.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    A--&gt;M
    M--&gt;B

</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<div id="cell-8" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rule 2 (mediation)</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of data points</span></span>
<span id="cb3-4">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A is a random variable</span></span>
<span id="cb3-5">m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># M is a function of A</span></span>
<span id="cb3-6">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># B is a function of M</span></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate correlation</span></span>
<span id="cb3-9">correlation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(a, b)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create scatter plot</span></span>
<span id="cb3-12">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb3-13">plt.scatter(a, b, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add title and labels</span></span>
<span id="cb3-16">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>)</span>
<span id="cb3-17">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb3-18"></span>
<span id="cb3-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add correlation text to the plot</span></span>
<span id="cb3-20">plt.text(</span>
<span id="cb3-21">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>,</span>
<span id="cb3-22">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>,</span>
<span id="cb3-23">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Correlation: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>correlation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.5f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb3-24">    transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.gca().transAxes,</span>
<span id="cb3-25">    verticalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,</span>
<span id="cb3-26">    bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"boxstyle"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facecolor"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alpha"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>},</span>
<span id="cb3-27">)</span>
<span id="cb3-28"></span>
<span id="cb3-29">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="causal_inference_rules_files/figure-html/cell-4-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://tomorrow-lab.github.io/posts/ipynb/causal_inference_rules_files/figure-html/cell-4-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="규칙-3-교락은-상관-관계를-만듭니다." class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="규칙-3-교락은-상관-관계를-만듭니다."><span class="header-section-number">2.4</span> 규칙 3: 교락은 상관 관계를 만듭니다.</h2>
<p>A와 B가 공통 조상 C(인과적 포크)를 공유하는 경우, A와 B는 데이터에서 상관관계가 생깁니다. 이러한 현상을 흔히 교락 또는 ’제3의 변수 문제’라고 합니다.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    C--&gt;A
    A~~~B
    C--&gt;B

</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<div id="cell-10" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rule 3</span></span>
<span id="cb4-2">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of data points</span></span>
<span id="cb4-3">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  C is a random variable</span></span>
<span id="cb4-4">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A is a function of C</span></span>
<span id="cb4-5">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># B is a function of C</span></span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate correlation</span></span>
<span id="cb4-8">correlation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(a, b)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create scatter plot</span></span>
<span id="cb4-11">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb4-12">plt.scatter(a, b, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add title and labels</span></span>
<span id="cb4-15">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>)</span>
<span id="cb4-16">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb4-17"></span>
<span id="cb4-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add correlation text to the plot</span></span>
<span id="cb4-19">plt.text(</span>
<span id="cb4-20">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>,</span>
<span id="cb4-21">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>,</span>
<span id="cb4-22">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Correlation: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>correlation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.5f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb4-23">    transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.gca().transAxes,</span>
<span id="cb4-24">    verticalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,</span>
<span id="cb4-25">    bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"boxstyle"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facecolor"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alpha"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>},</span>
<span id="cb4-26">)</span>
<span id="cb4-27"></span>
<span id="cb4-28">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="causal_inference_rules_files/figure-html/cell-5-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4"><img src="https://tomorrow-lab.github.io/posts/ipynb/causal_inference_rules_files/figure-html/cell-5-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>이 규칙은 C가 A 또는 B에 미치는 영향이 다른 변수를 통해 매개되는 경우에도 적용됩니다.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    C--&gt;M
    M--&gt;A
    A~~~N
    C--&gt;N
    N--&gt;B

</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</section>
<section id="규칙-4-무작위-조작은-인과적-영향으로부터-변수를-보호합니다." class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="규칙-4-무작위-조작은-인과적-영향으로부터-변수를-보호합니다."><span class="header-section-number">2.5</span> 규칙 4: 무작위 조작은 인과적 영향으로부터 변수를 보호합니다.</h2>
<p>A가 조작 변수인 무작위 대조 실험에서처럼 A의 값을 무작위로 할당할 수 있는 경우 다른 변수가 A에 영향을 줄 수 없습니다.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    C1--xA["do(A)"]
    C2--xA
    C3--xA

</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>do(A) 표기는 A의 값을 무작위화하는 것을 의미합니다. 달리 말하면, 완전한 실험 통제와 무작위화를 통해 어떤 변수도 A의 값에 영향을 미치지 못하도록 하는 것입니다.</p>
</section>
<section id="규칙-5-교란-요인에-대한-통제는-해당-교란-요인으로-인해-발생하는-상관관계를-차단합니다." class="level2" data-number="2.6">
<h2 data-number="2.6" class="anchored" data-anchor-id="규칙-5-교란-요인에-대한-통제는-해당-교란-요인으로-인해-발생하는-상관관계를-차단합니다."><span class="header-section-number">2.6</span> 규칙 5: 교란 요인에 대한 통제는 해당 교란 요인으로 인해 발생하는 상관관계를 차단합니다.</h2>
<p>A와 B가 공통 조상 C(인과적 포크)를 공유하는 경우, C를 제어하면 C에 의해 생성된 A와 B 간의 교란 상관관계(규칙 3)가 제거됩니다.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    C{"if(C)"}--&gt;A
    A~~~B
    C--&gt;B
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<div id="cell-13" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rule 5</span></span>
<span id="cb5-2">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of data points</span></span>
<span id="cb5-3">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># C is a random variable</span></span>
<span id="cb5-4">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A is a function of C</span></span>
<span id="cb5-5">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># B is a function of C</span></span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform linear regression</span></span>
<span id="cb5-8">slope_a, intercept_a, _, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.linregress(c, a)</span>
<span id="cb5-9">slope_b, intercept_b, _, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.linregress(c, b)</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate residuals</span></span>
<span id="cb5-12">residuals_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (slope_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> intercept_a)</span>
<span id="cb5-13">residuals_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (slope_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> intercept_b)</span>
<span id="cb5-14"></span>
<span id="cb5-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create scatter plot of residuals</span></span>
<span id="cb5-16">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb5-17">plt.scatter(residuals_a, residuals_b, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb5-18">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scatter Plot of Residuals(Rule 5)"</span>)</span>
<span id="cb5-19">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals of A ~ C"</span>)</span>
<span id="cb5-20">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals of B ~ C"</span>)</span>
<span id="cb5-21"></span>
<span id="cb5-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate and display correlation of residuals</span></span>
<span id="cb5-23">correlation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(residuals_a, residuals_b)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb5-24">plt.text(</span>
<span id="cb5-25">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>,</span>
<span id="cb5-26">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>,</span>
<span id="cb5-27">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Correlation of Residuals: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>correlation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb5-28">    transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.gca().transAxes,</span>
<span id="cb5-29">    verticalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,</span>
<span id="cb5-30">    bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"boxstyle"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facecolor"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alpha"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>},</span>
<span id="cb5-31">)</span>
<span id="cb5-32"></span>
<span id="cb5-33">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="causal_inference_rules_files/figure-html/cell-6-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-5"><img src="https://tomorrow-lab.github.io/posts/ipynb/causal_inference_rules_files/figure-html/cell-6-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="규칙-6-매개자를-통제하면-매개된-인과-효과로-인해-발생하는-상관관계가-차단됩니다." class="level2" data-number="2.7">
<h2 data-number="2.7" class="anchored" data-anchor-id="규칙-6-매개자를-통제하면-매개된-인과-효과로-인해-발생하는-상관관계가-차단됩니다."><span class="header-section-number">2.7</span> 규칙 6: 매개자를 통제하면 매개된 인과 효과로 인해 발생하는 상관관계가 차단됩니다.</h2>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    A--&gt;M
    M--&gt;B 
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>A가 M의 원인이고 M이 B의 원인인 경우, M을 통제하면 매개 인과 효과(규칙 2)에 의해 생성된 A와 B 간의 상관관계가 제거됩니다.</p>
<div id="cell-15" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rule 6</span></span>
<span id="cb6-2">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of data points</span></span>
<span id="cb6-3">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A is a random variable</span></span>
<span id="cb6-4">m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># M is a function of A</span></span>
<span id="cb6-5">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># B is a function of M</span></span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform linear regression</span></span>
<span id="cb6-8">slope_a, intercept_a, _, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.linregress(m, a)</span>
<span id="cb6-9">slope_b, intercept_b, _, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.linregress(m, b)</span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate residuals</span></span>
<span id="cb6-12">residuals_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (slope_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> intercept_a)</span>
<span id="cb6-13">residuals_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (slope_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> intercept_b)</span>
<span id="cb6-14"></span>
<span id="cb6-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create scatter plot of residuals</span></span>
<span id="cb6-16">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb6-17">plt.scatter(residuals_a, residuals_b, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb6-18">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scatter Plot of Residuals (Rule 6)"</span>)</span>
<span id="cb6-19">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals of A ~ M"</span>)</span>
<span id="cb6-20">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals of B ~ M"</span>)</span>
<span id="cb6-21"></span>
<span id="cb6-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate and display correlation of residuals</span></span>
<span id="cb6-23">correlation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(residuals_a, residuals_b)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb6-24">plt.text(</span>
<span id="cb6-25">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>,</span>
<span id="cb6-26">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>,</span>
<span id="cb6-27">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Correlation of Residuals: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>correlation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb6-28">    transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.gca().transAxes,</span>
<span id="cb6-29">    verticalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,</span>
<span id="cb6-30">    bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"boxstyle"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facecolor"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alpha"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>},</span>
<span id="cb6-31">)</span>
<span id="cb6-32"></span>
<span id="cb6-33">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb6-34">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="causal_inference_rules_files/figure-html/cell-7-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-6"><img src="https://tomorrow-lab.github.io/posts/ipynb/causal_inference_rules_files/figure-html/cell-7-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="규칙-7-콜라이더를-제어하면-상관-관계로-이어짐" class="level2" data-number="2.8">
<h2 data-number="2.8" class="anchored" data-anchor-id="규칙-7-콜라이더를-제어하면-상관-관계로-이어짐"><span class="header-section-number">2.8</span> 규칙 7: 콜라이더를 제어하면 상관 관계로 이어짐</h2>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    A~~~B
    B--&gt;D
    A--&gt;D 
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>A와 B가 인과 관계의 하위 항목(콜라이더) D를 공유하고 D를 제어하면 데이터에서 A와 B가 상관 관계를 갖게 됩니다. 이를 흔히 “콜라이더에 대한 조건부” 또는 콜라이더 편향이라고 합니다.</p>
<div id="cell-17" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rule 7</span></span>
<span id="cb7-2">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of data points</span></span>
<span id="cb7-3">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A is a random variable</span></span>
<span id="cb7-4">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># B is a random variable</span></span>
<span id="cb7-5">d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># D is a function of A and B</span></span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform linear regression</span></span>
<span id="cb7-8">slope_a, intercept_a, _, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.linregress(d, a)</span>
<span id="cb7-9">slope_b, intercept_b, _, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.linregress(d, b)</span>
<span id="cb7-10"></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate residuals</span></span>
<span id="cb7-12">residuals_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (slope_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> intercept_a)</span>
<span id="cb7-13">residuals_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (slope_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> intercept_b)</span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create scatter plot of residuals</span></span>
<span id="cb7-16">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb7-17">plt.scatter(residuals_a, residuals_b, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb7-18">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scatter Plot of Residuals (Rule 7)"</span>)</span>
<span id="cb7-19">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals of A ~ D"</span>)</span>
<span id="cb7-20">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals of B ~ D"</span>)</span>
<span id="cb7-21"></span>
<span id="cb7-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate and display correlation of residuals</span></span>
<span id="cb7-23">correlation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(residuals_a, residuals_b)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb7-24">plt.text(</span>
<span id="cb7-25">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>,</span>
<span id="cb7-26">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>,</span>
<span id="cb7-27">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Correlation of Residuals: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>correlation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb7-28">    transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.gca().transAxes,</span>
<span id="cb7-29">    verticalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,</span>
<span id="cb7-30">    bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"boxstyle"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facecolor"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alpha"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>},</span>
<span id="cb7-31">)</span>
<span id="cb7-32"></span>
<span id="cb7-33">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-34">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="causal_inference_rules_files/figure-html/cell-8-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-7"><img src="https://tomorrow-lab.github.io/posts/ipynb/causal_inference_rules_files/figure-html/cell-8-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="규칙-8-인과-관계에-있는-자손에-대한-제어는-조상에-대한-부분적-제어입니다." class="level2" data-number="2.9">
<h2 data-number="2.9" class="anchored" data-anchor-id="규칙-8-인과-관계에-있는-자손에-대한-제어는-조상에-대한-부분적-제어입니다."><span class="header-section-number">2.9</span> 규칙 8: 인과 관계에 있는 자손에 대한 제어는 조상에 대한 (부분적) 제어입니다.</h2>
<p>B가 A의 자손이고 B가 제어되는 경우, A도 (부분적으로) 제어됩니다.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    A--&gt;B
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>B를 통제할 때 A를 통제하는 정도는 일반적으로 A가 B를 얼마나 확실하게 유발하는지에 따라 달라집니다.</p>
<p>아래 예에서 C는 A와 B의 교란 변수이지만 CM을 통제하면 교란 영향을 부분적으로 차단할 수 있습니다.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart LR
    C--&gt;A
    A~~~B
    C--&gt;B
    C--&gt;D["CM"]
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>CM이 C의 약간 신뢰할 수 있는 측정값인 경우 CM을 통제하면 A와 B 간의 상관관계가 일부 제거되지만 C를 통제할 때만큼은 아닙니다:</p>
<div id="cell-19" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rule ?</span></span>
<span id="cb8-2">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of data points</span></span>
<span id="cb8-3">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># C is a random variable</span></span>
<span id="cb8-4">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A is a function of C</span></span>
<span id="cb8-5">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># B is a function of C</span></span>
<span id="cb8-6">cm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CM is a function of C</span></span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform linear regressions</span></span>
<span id="cb8-9">slope_ac, intercept_ac, _, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.linregress(c, a)</span>
<span id="cb8-10">slope_bc, intercept_bc, _, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.linregress(c, b)</span>
<span id="cb8-11">slope_acm, intercept_acm, _, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.linregress(cm, a)</span>
<span id="cb8-12">slope_bcm, intercept_bcm, _, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.linregress(cm, b)</span>
<span id="cb8-13"></span>
<span id="cb8-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate residuals</span></span>
<span id="cb8-15">residuals_ac <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (slope_ac <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> intercept_ac)</span>
<span id="cb8-16">residuals_bc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (slope_bc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> intercept_bc)</span>
<span id="cb8-17">residuals_acm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (slope_acm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> cm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> intercept_acm)</span>
<span id="cb8-18">residuals_bcm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (slope_bcm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> cm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> intercept_bcm)</span>
<span id="cb8-19"></span>
<span id="cb8-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create subplots</span></span>
<span id="cb8-21">fig, (ax1, ax2, ax3) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb8-22"></span>
<span id="cb8-23"></span>
<span id="cb8-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to add correlation text to plot</span></span>
<span id="cb8-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_correlation_text(ax, x, y):</span>
<span id="cb8-26">    corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(x, y)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb8-27">    ax.text(</span>
<span id="cb8-28">        <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>,</span>
<span id="cb8-29">        <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>,</span>
<span id="cb8-30">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Correlation: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>corr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb8-31">        transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax.transAxes,</span>
<span id="cb8-32">        verticalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,</span>
<span id="cb8-33">        bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"boxstyle"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facecolor"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alpha"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>},</span>
<span id="cb8-34">    )</span>
<span id="cb8-35"></span>
<span id="cb8-36"></span>
<span id="cb8-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot 1: No control</span></span>
<span id="cb8-38">ax1.scatter(a, b, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb8-39">ax1.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No control"</span>)</span>
<span id="cb8-40">ax1.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>)</span>
<span id="cb8-41">ax1.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb8-42">add_correlation_text(ax1, a, b)</span>
<span id="cb8-43"></span>
<span id="cb8-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot 2: Controlling for CM</span></span>
<span id="cb8-45">ax2.scatter(residuals_acm, residuals_bcm, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb8-46">ax2.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Controlling for CM"</span>)</span>
<span id="cb8-47">ax2.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals of A ~ CM"</span>)</span>
<span id="cb8-48">ax2.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals of B ~ CM"</span>)</span>
<span id="cb8-49">add_correlation_text(ax2, residuals_acm, residuals_bcm)</span>
<span id="cb8-50"></span>
<span id="cb8-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot 3: Controlling for C</span></span>
<span id="cb8-52">ax3.scatter(residuals_ac, residuals_bc, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb8-53">ax3.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Controlling for C"</span>)</span>
<span id="cb8-54">ax3.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals of A ~ C"</span>)</span>
<span id="cb8-55">ax3.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residuals of B ~ C"</span>)</span>
<span id="cb8-56">add_correlation_text(ax3, residuals_ac, residuals_bc)</span>
<span id="cb8-57"></span>
<span id="cb8-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust layout and display</span></span>
<span id="cb8-59">plt.tight_layout()</span>
<span id="cb8-60">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="causal_inference_rules_files/figure-html/cell-9-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-8"><img src="https://tomorrow-lab.github.io/posts/ipynb/causal_inference_rules_files/figure-html/cell-9-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<div class="{callout-note}">
<p>상관관계가 반드시 선형적 상관관계를 의미하는 것은 아닙니다.</p>
<p>이 글에서는 “상관관계”라는 용어를 많이 사용합니다. 많은 사람들에게 상관관계라는 용어는 선형적 상관관계와 동의어입니다. 하지만 제가 의미하는 바는 그렇지 않습니다. 여기서 “상관관계”는 단순히 “상호 관계”, “연관성” 또는 “상호 정보”를 의미합니다. A와 B가 상관관계가 있다는 것은 A에 어떤 일이 발생하면 B에도 체계적으로 어떤 일이 발생한다는 의미일 뿐입니다.</p>
<p>예를 들어, 규칙 2는 A가 B를 유발할 때 A와 B가 선형적으로 상관관계가 있다는 것을 의미하는 것이 아니라, A가 변하면 B가 어떤 식으로든 체계적으로 변한다는 것을 의미합니다.</p>
<p>간단하게 설명하기 위해 모든 예제 R 코드에서 선형 상관관계를 사용했습니다. 그러나 실제 생활에서 우리가 기대하는 상관 관계/연관 관계/상호 정보의 패턴은 전적으로 관련된 인과 관계의 기능적 형태에 따라 달라집니다.</p>
</div>
</section>
</section>
<section id="references" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> References</h1>
<ul>
<li>Hernán, Miguel, and James Robins. 2020. Causal Inference: What If. Boca Raton: Chapman &amp; Hall/CRC.</li>
<li>https://pedermisager.org/blog/seven_basic_rules_for_causal_inference/?utm_source=substack&amp;utm_medium=email</li>
</ul>


</section>

 ]]></description>
  <category>Python</category>
  <category>Causal inference</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/causal_inference_rules.html</guid>
  <pubDate>Sat, 19 Oct 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>scRNA-seq 소개</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Primer_of_scRNAseq.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Primer_of_scRNAseq.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Primer_of_scRNAseq.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>얼마전 뉴욕 타임즈에 <a href="https://www.nytimes.com/2024/03/10/science/ai-learning-biology.html">A.I. Is Learning What It Means to Be Alive</a> 라는 제목의 기사가 공개되었습니다. 해당 기사에서 에 <code>scRNA-seq</code> 기초 모델이 단일 세포 RNA 시퀀싱 (scRNA) 데이터를 해석, 사용, 적용하는 방식을 어떻게 변화시킬 수 있는지에 대한 이야기가 있었는데 이 포스팅에서 더 깊이 파고들어 살펴보고자 합니다.</p>
<div class="callout-warnning">
<p>이 글은 <a href="https://www.owlposting.com/p/the-lore-behind-scrna-seq-foundation-models?utm_source=substack&amp;utm_medium=email#footnote-anchor-2-143614943">A primer on scRNA-seq foundation models (owlposting.com)</a>를 번역 및 요약한 글입니다. 단일 세포 생물학은 최신의 기술로 많은 부분에서 뜨거운 논쟁이 벌어지고 있습니다. 따라서 이 글의 일부는 다른 사람의 의견과 다를 수 있다는 점을 기억하세요.</p>
</div>
<section id="scrna-seq-이란-무엇인가" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> scRNA-seq 이란 무엇인가?</h1>
<p>먼저 모든 세포의 세포 정체성 (cellular identity) 을 알고 싶다는 생각을 해봅시다. 그러면 가장 먼저 드는 질문은 ” 세포의 정체성이란 정확히 무엇일까요?” 입니다. 세포 유형(cell types) 일까요?</p>
<p>뇌와 같은 장기를 생각해 보면 뇌에는 뉴런, 신경교세포, 희돌기아교세포 등 다양한 유형의 세포들이 있을 것입니다. 그렇다면 이런 세포들 간의 기능적 차이는 무엇이며, 과학자들은 어떤 기준에 따라 세포의 유형(cell type)을 명명했을까요?</p>
<p>가장 흔한 방법은 세포 내에 존재하는 단백질, 세포 표면에 존재하는 단백질, 세포가 분비하는 단백질 등을 통해 명명하는 것입니다. 동일한 단백질을 많이 공유하는 세포를 묶어서 세포의 정체성을 나타내었습니다. 실제로 단백질은 세포가 주변 세포와 소통하는 방법이며 자원을 섭취하고 자극에 반응하는등 수많은 과정에 관여합니다. 다만 단백질이 실제로 진정한 세포의 분화 요소는 아니며 대사산물이나 후성유전학적 변형이 더 중요하다는 주장도 있습니다. 하지만 <strong>세포 상태는 세포가 가지고 있는 단백질로 가장 잘 이해할 수 있다</strong> 는 가정을 하고 다음으로 넘어가죠.</p>
<p>그렇다면 세포 안의 단백질량을 정확히 측정할 수 있을까요? 물론 지금도 계속 사용되지만 과거에는 아래와 같은 방법들이 많이 사용되었습니다.</p>
<ol type="1">
<li>면역세포화학법 (Immunocytochemistry): 기본 원리는 단백질에 달라붙도록 특정 파장의 빛을 비추면 켜지는 작은 형광체가 부착된 항체를 사용하는 것입니다. 세포를 채취해 그 위에 이 항체를 뿌리면 형광 현미경으로 세포를 관찰할 수 있습니다. 예를 들어 목적 단백질이 주로 세포 표면에 있는 경우 각 세포 주변에 밝은 윤곽선을 볼 수 있습니다.</li>
<li>유세포 분석법 (Flow Cytometry): 이 기술은 특정 단백질을 검출하기 위해 항체를 사용한다는 점에서 면역세포화학법과 유사합니다. 그러나 유세포 분석은 현미경으로 세포를 보는 대신 유세포 분석기라는 특수 기기를 사용하여 세포를 하나씩 분석합니다. 분석기 내부에서 세포는 한 번에 하나씩 채널을 통과하며 세포가 통과할 때마다 레이저를 쏩니다. 세포가 형광 항체로 표지된 경우 유세포 분석기는 방출된 형광을 감지해 세포에 존재하는 단백질의 양을 정량화합니다.</li>
<li>질량 분석법 (Mass spectrometry): 기본적으로 세포를 가져다가 분해한 다음 그 안에 있는 모든 단백질을 분석하여 어떤 단백질이 있었는지를 파악하는 방법입니다. 먼저 효소를 사용하여 세포 단백질을 작은 조각으로 자릅니다. 이렇게 만들어진 펩타이드 조각은 일반적으로 약 10~20 개의 아미노산 길이입니다. 이 펩타이드 조각이 질량 분석기 내부로 들어가 질량 대 전하비 (m/z) 에 따라 분리되어 데이터를 얻을 수 있습니다. 그런 다음 이 데이터를 처리해 어떤 펩타이드가 존재했는지, 더 나아가 그 펩타이드가 어떤 단백질에서 유래했는지 식별합니다. 확인된 펩타이드를 단백질 데이터베이스와 비교해 어떤 단백질이 존재했는지 확인하고 정량화할 수 있습니다.</li>
</ol>
<p>이런 방법들은 물론 좋은 분석법이지만 인체의 모든 세포의 단백질 지형을 파악하려는 원대한 목표에는 적절하지 않았습니다. 면역세포화학법은 시간이 많이 걸리고, 알려진 단백질에 결합하는 알려진 항체가 필요하며 (모든 단백질에 있는 것은 아닙니다!) 처리량이 매우 낮습니다 (세포 천개를 측정하는 것도 어렵습니다.). 유세포 분석은 처리량은 높지만 마찬가지로 알려진 항체에 의존하며, 뇌 조직이나 지방 조직과 같이 쉽게 현탁할 수 없는 조직에는 적용하기 어렵습니다. 마지막질량 분석법은 알려진 항체에 의존하지는 않지만 단백질 함량을 정확하게 판독하려면 엄청난 수의 세포가 필요하고, 희귀한 단백질을 놓칠 수 있으며 가장 시간이 많이 소요되는 방법입니다.</p>
<p>그러면 이제 어떻게 해야 할까요? 안타깝게도 세포의 단백질 지형을 학습하는 것은 지금까지 해결되지 않은 문제입니다. 그 문제를 해결하기 위한 접근법 중 하나가 RNA-seq 입니다. RNA-seq 은 간단히 말하면 세포내의 모든 mRNA 를 분리해 분석하는 방법입니다. mRNA 는 세포의 DNA 에서 전사 (Translation) 되어 리보솜으로 운반되며, mRNA 의 코돈 조각 (3 개의 염기서열이 1 개의 코돈) 을 해석해 단일 아미노산이 합성되어 사슬로 연결합니다. 예를 들면 mRNA 가 <code>UUU-GUA-CCA</code> 로 구성된 경우, 이는 아미노산 <code>Phe-Val-Pro</code> 의 단백질로 매핑됩니다.</p>
<p>그렇다면 특정 시점의 모든 mRNA 를 측정하면 간접적인 단백질의 발현량도 알 수 있지 않을까요? 글쎄요, 그렇게 간단하지는 않습니다.</p>
<p>먼저, 모든 mRNA 가 동일한 속도나 효율로 단백질로 번역되는 것은 아닙니다. 일부 안정적인 mRNA 가 존재하기는 하지만 대체로 mRNA 는 세포안에서 빠르게 분해됩니다. 즉, 리보솜에 의해 해당 단백질이 많이 만들어지기도 하고 한 번만 만들어지거나 만들어지지 않을 수도 있습니다. 다시 말해 세포 내 mRNA 의 양이 항상 단백질의 양과 완전 일치하지 않습니다.</p>
<p>또한 단백질 반감기가 다양하기 때문에 현재 세포에 풍부한 단백질은 mRNA 가 분해되었더라도 아직 존재할 수 있습니다. 반대로 mRNA 의 양이 늘어났지만 아직 단백질이 번역되지 않아 검출이 불가능한 경우도 있습니다.</p>
<p>마지막으로 mRNA 는 단백질에 완벽하게 일대일 매핑되지 않는데 많은 단백질이 PTM(post transcriptional modification) 을 거치므로 특정 환경에서는 같은 서열이어도 다른 구조를 가질 수 있기 때문입니다.</p>
<p>이런 mRNA 와 단백질 발현의 관계의 문제에 대해 2016 년 Cell에 실린 <a href="https://www.cell.com/cell/pdf/S0092-8674(16)30270-7.pdf">On the Dependency of Cellular Protein Levels on mRNA Abundance</a> 논문에서는 다음과 같이 말했습니다.</p>
<blockquote class="blockquote">
<p>정상 상태에서는 mRNA 수준이 단백질 수준을 설명합니다. 세포의 ’ 정상 상태 ’ 라는 것을 정의하는 것이 어렵지만 일반적으로 실험에 사용되는 세포의 평균 단백질 및/또는 mRNA 수준이 몇 시간정도 안정적으로 유지되면 정상 상태로 간주합니다. 지난 15 년 동안 발표된 수많은 연구에 따르면 이러한 상황에서 단백질 수준의 유전자 간 변화는 주로 각각의 mRNA 수준에 의해 결정됩니다.</p>
</blockquote>
<p>또 <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2413246/">다른 연구</a> 에 따르면 mRNA 와 단백질 발현 수준간의 관계에 대한 분산이 조직에 따라 46-68% 로 알려져 있습니다. 그러니 전반적으로 mRNA 전사체 데이터가 세포 정체성의 근사치라고 할 수 있습니다.</p>
</section>
<section id="세포-지도-cell-atlas-란-무엇인가" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 세포 지도 (Cell Atlas) 란 무엇인가?</h1>
<p>세포 지도는 수백 개의 기관과 수천 명의 과학자가 참여하는 테라바이트 크기의 데이터베이스입니다. 여기에는 다양한 조직의 수십만 개의 개별 세포의 전사체 데이터가 포함되어 있습니다. 즉, 여러 당사자가 ’ 전사체 지도 ’ 를 서로 공유하고 데이터를 결합 하려는 노력입니다. 이 글을 쓰는 현재 <a href="https://tabula-sapiens-portal.ds.czbiohub.org/">사람</a>,&nbsp;<a href="https://tabula-muris.ds.czbiohub.org/">생쥐</a>,&nbsp;<a href="https://www.science.org/doi/10.1126/science.aam8940">선충</a>,&nbsp;<a href="https://www.nature.com/articles/s41586-022-04587-3">영장류</a>,&nbsp;<a href="https://www.frontiersin.org/articles/10.3389/fcell.2021.743421/full">제브라피쉬</a>,&nbsp;<a href="https://www.science.org/doi/10.1126/science.abk2432">초파리</a> 등에 대한 세포 지도가 만들어져 있으며 그 중 상당수는 특정 질병에 대한 정보도 포함하고 있습니다.</p>
<p>사람의 세포 지도는 서두에서 언급한 목표인 “모든 세포에 대한 세포 정체성을 알아내는 것” 을 해결하려는 시도 중 하나입니다. 과학자들은 관심 있는 조직에서 병든 세포 상태와 건강한 세포 상태가 어떻게 다른지 이해하고, 약물 반응을 예측하고, 새로운 단백질/유전자/세포 유형을 완전히 밝혀내는 데 사용할 수 있기를 바라고 있죠.</p>
</section>
<section id="scrna-seq-데이터의-잠재적인-문제" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> scRNA-seq 데이터의 잠재적인 문제</h1>
<p>방대한 양의 scRNA-seq 데이터를 생성하는 것은 점점 쉬워지고 있지만 이를 검증하는 것은 더 어려워 지고 있습니다. 그것은 scRNA-seq 데이터가 가지고 있는 잠재적인 두 가지 문제가 있기 때문입니다.</p>
<ol type="1">
<li>배치 통합 (Batch integration) 문제: scRNA-seq 데이터에는 실험자의 작업 방식에 약간의 차이로 인해 고유한 이상 현상이 발생합니다. 이것을 배치 효과라 합니다. 그래서 서로 다른 데이터 세트간의 결합이 어렵습니다. 배치 효과를 제거하는 방법은 많이 알려져 있지만 아직까지는 모델 수준입니다.</li>
<li>세포 유형 주석 (Cell annotation) 문제: 일반적으로 세포 유형은 특정 마커 유전자 (예: Treg 세포의 경우 FOXP3) 의 발현 여부에 따라 주석을 달고, 마커가 없거나 여러 개의 마커를 가진 세포의 경우 보다 명확하게 정의된 유형을 가진 세포와의 전사체 근접성을 비교해 주석을 답니다. 그런데 세포를 비교하는 기준은 세포 유형에 따라 달라지는 경우가 많고 희귀하거나 잘 알려지지 않은 세포 유형에 대해서는 신뢰할 수 있는 결과를 얻기 어렵습니다.</li>
</ol>
<p>이 두 가지 문제가 해결되면 scRNA-seq 데이터는 훨씬 더 유용해 질 것 입니다. 특히 만약 전사체를 동일한 수치 공간으로 변환할 수 있도록 일반화된 모델을 만들어낸다면 단순히 세포 유형을 예측하는 것 뿐만 아니라 세포에 대해 훨씬 더 많이 이해할 수 있을 것입니다. 예를 들면 제 2 형 당뇨병 환자 샘플을 통해 과도한 당분이 세포에 어떤 변화를 일으키는지 알 수 있을 것이고 세포가 어떻게 변화되는지 이해할 수 있을 것입니다. 또한 기반 모델은 학습된 데이터를 뛰어넘어 특정 약물이 세포 상태를 어떻게 변화시킬지 예측하고 종양 발생 궤적을 이해하거나 생검이 불가능한 희귀 질환 환자의 전사체를 예측할 수도 있을 겁니다.</p>
</section>
<section id="scrna-기반-모델" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> scRNA 기반 모델</h1>
<section id="역사" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="역사"><span class="header-section-number">4.1</span> 역사</h2>
<p>기반 모델 (Foundation Models) 은 일반적으로 광범위한 데이터에 대해 학습된 모델로 다양한 다운스트림 분석을 적용 (예: 미세 조정) 할 수 있는 모델입니다. 이런 기술은 자연어 처리 분야에서 가장 널리 사용되지만 최근에는 이미지 (DALL-E), 오디오 (MusicGen), 심지어 아미노산 서열 (ESM2) 등 다양한 분야로 확장되었습니다.</p>
<p>거의 모든 다른 개념과 마찬가지로 임베딩 개념은 2010 년대 초까지 거슬러 올라가는 등 이전에도 광범위하게 시도되어 왔으며 기반 모델이 임베딩 개념을 처음 고안한 것은 아닙니다. 하지만 단순한 선형 임베딩 방식에 의존하거나 훈련된 정확한 섭동에 국한되거나 비교적 작은 데이터 세트에 대해 훈련되는 등 그 범위는 제한적이었습니다. <a href="https://markovbio.github.io/scaling-laws-of-agency/">마크오브바이오의 블로그 게시물</a> 에서 이런 단점에 대해 자세히 설명합니다. <a href="https://www.nature.com/articles/s41592-018-0229-2">scVI</a> 와 같이 다양한 데이터 세트에서 훈련된 비선형 데이터 변환을 다룬 논문이 몇 편 있었지만, 그 결과는 논문으로서 흥미롭기는 하지만 실제로 유용하기에는 여전히 모호한 영역에 머물러 있었습니다.</p>
<p>하지만 혁신적인 <a href="https://arxiv.org/abs/1706.03762">Attention Is All You Need</a> 논문에 의해 거대 모델과 방대한 양의 데이터가 특별한 모델을 만들 수 있다는 믿음이 점점 커지면서 생물학자들은 자체적인 scRNA-seq 기반 모델을 구축하기 시작했습니다. 2024 년 3 월 현재, <a href="https://www.biorxiv.org/content/10.1101/2022.11.20.517285v1">scFormer</a>,&nbsp;<a href="https://www.biorxiv.org/content/10.1101/2023.05.29.542705v1">scFoundation</a>,&nbsp;<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC10949956/">GeneFormer</a>,&nbsp;<a href="https://www.nature.com/articles/s42256-022-00534-z">scBERT</a>,&nbsp;<a href="https://www.nature.com/articles/s41592-024-02201-0">scGPT</a>,&nbsp;<a href="https://www.biorxiv.org/content/10.1101/2023.11.28.568918v1">Universal Cell Embeddings</a> 등 여러 가지의 기반 모델이 공개되었습니다. 이런 모델들이 만들어질 수 있었던 원동력은 앞서 이야기한 바 있는 세포 지도입니다. 각각의 모델은 지난 10 년 동안 모아왔던 여러 개의 세포 지도 데이터를 학습 데이터로 사용해 그 어떤 모델보다 세포 상태를 더 잘 이해할 수 있게 되었습니다.</p>
</section>
<section id="universal-cell-embeddings" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="universal-cell-embeddings"><span class="header-section-number">4.2</span> Universal Cell Embeddings</h2>
<p>UCE 는 2023 년 11 월에 공개되었으며 scRNA-seq 데이터를 분석하는 사람들에게 정말 중요한 도구가 될 것으로 보입니다. 아래와 같은 특징이 있기 때문이죠.</p>
<ol type="1">
<li>다른 기반 모델들은 인간 세포에 한정된 반면에 UCE 모델은 인간, 생쥐, 여우원숭이, 제브라피쉬, 돼지, 붉은털원숭이, 필리핀원숭이 (cynomolgus monkey), 발톱개구리등의 총 8 가지 종의 데이터셋을 학습에 사용하였습니다.</li>
<li>UCE 모델은 미세 조정이 필요 없는 유일한 모델입니다. 즉, 추가적인 학습없이도 103 개의 조직 및 다양한 종의 세포를 분류 할 수 있습니다.</li>
<li><a href="https://www.czbiohub.org/">Chan Zuckerberg Biohub Network</a> 의 지원을 받고 있습니다. Chan Zuckerberg Biohub Network 은 <a href="https://tabula-sapiens-portal.ds.czbiohub.org/">타불라 사피엔스</a>, <a href="https://tabula-muris.ds.czbiohub.org/">타불라 무리스</a>, <a href="https://github.com/czbiohub-sf/tabula-muris-senis">타불라 무리스 세니스</a>, <a href="https://tabula-microcebus.ds.czbiohub.org/">타불라 마이크로세버스</a>, <a href="https://cellxgene.cziscience.com/">CellXGene</a> 등 <code>scRNA-seq</code> 데이터를 가장 많이 생성하고 공개하는 곳입니다.</li>
<li>다른 기반 모델보다 성능이 뛰어납니다.</li>
<li>완전히 새로운 종에서 수집한 세포의 임베딩을 UMAP 으로 그려볼 수 있습니다. UCE 는 종간의 정보도 학습했기 때문에 (물론 임베딩 플롯은 항상 약간의 논란이 있을 수 있지만) 영장류와 닭 세포 유형을 분리할 수도 있습니다. <a href="https://www.nature.com/articles/s41592-024-02191-z">자세한 알아보기</a>.</li>
<li>새로운 세포 유형을 찾을 수 있습니다. 희귀한 세포 유형이 포함된 scRNA 데이터셋을 통해 제로 샷 임베딩을 수행하면 새로운 세포 유형을 구분하는 간단한 이진 분류기를 만들 수 있습니다. 이 분류기를 사용하면 그동안 데이터 세트에 흩어져 있는 세포들을 찾아 낼 수 있는 것입니다.</li>
<li>마지막으로 암조직(COPD 및 IPF)과 정상 조직의 유전자 발현 차이를 조사할 수 도 있습니다. 여기서 흥미로운 점은 이 유전자 발현의 차이가 새롭게 발견한 희귀 세포 유형에서 발생했다는 것입니다.</li>
</ol>
<p>3 년이 지난 후에도 여전히 강세를 보이는 알파폴드 같은 모델처럼 UCE 가 기반 모델의 승자가 될까요? 아직 확신하긴 어렵습니다. 다만 UCE이 현재 가장 좋은 성능을 보이는 모델이라는 것은 확실해 보입니다.</p>
</section>
</section>
<section id="앞으로는-어떻게-될까" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 앞으로는 어떻게 될까?</h1>
<p>scRNA-seq 기술이 발전하면서 앞으로 더 크고 많은 데이터를 모으게 될 것입니다. 그러면 이런 기반 모델이 더 이상 RNA-seq에만 적용되는 것이 아니라 대사체학, 단백질체학, 후성유전체학, 그리고 공간 전사체학 등 세포와 관련된 모든 데이터에 적용되는 세상이 올 것입니다. 그리고 이미 <a href="https://www.biorxiv.org/content/10.1101/2023.09.24.559168v1">ATAC-seq에서 수집한 전사 영역을 학습하기 위해 염색질 접근성 데이터를 사용하는 기초 모델에 대한 논문</a>과 <a href="https://www.science.org/doi/10.1126/science.ade2574">UCE 사전 학습의 일부를 사용해 단백질 구조를 예측한 논문</a>등이 나오고 있습니다. 모든 생물학 데이터들을 기계학습에 활용하는 것은 시간 문제입니다. 가까운 미래에 더욱 흥미로운 모델과 활용법이 우리를 놀랍게 할 것입니다.</p>


</section>

 ]]></description>
  <category>scRNA-seq</category>
  <category>Bioinformatics</category>
  <category>Tip</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Primer_of_scRNAseq.html</guid>
  <pubDate>Wed, 16 Oct 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>사보타지 매뉴얼</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/How_sabotage.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="How_sabotage.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/How_sabotage.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>2008 년에 CIA 에서 공개한 <a href="https://www.cia.gov/static/5c875f3ec660e092cf893f60b4a288df/SimpleSabotage.pdf">Simple Sabotage Field Manual</a> 의 번역본입니다. 문서가 1944 년도에 작성된 것이다보니 현재와는 맞지 않는 내용이 많습니다. 그래도 읽다보면 재치 있는 부분도 있고 읽어볼 가치가 있는 팁들인 것 같습니다. 특히 직장에 관련된 내용은 그때나 지금이나 별반 차이가 없는 것 처럼 보입니다.</p>
<section id="목차" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 목차</h1>
<ol type="1">
<li>[소개][#소개]</li>
<li>기대효과</li>
<li>사보타지 동기부여</li>
<li>도구,목표,그리고 타이밍</li>
<li>사보타지를 위한 안내</li>
</ol>
</section>
<section id="소개" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 소개</h1>
<p>이 문서의 목적은 단순한 사보타지에 대해 특징 짓고, 가능한 효과를 대략적으로 그리며, 선동 및 실행을 위한 제안 사항을 제시하기 위함이다.</p>
<p>사보타지는 정교한 계획과 특수 훈련을 받은 요원이 수행하는 고도의 기술적 쿠데타에서부터 일반 시민이 할 수 있는 수많은 단순한 행위까지 다양하게 존재한다. 이 문서는 주로 후자의 단순한 사보타지에 초점을 맞추고 있다. 단순한 사보타지는 특별한 도구나 장비를 필요로 하지 않으며, 개인 또는 다수의 일반 시민이 수행할 수 있다. 또한 조직된 그룹과의 긴밀한 협력 없이도 가능하며, 부상, 발각, 보복의 위험을 최소화하는 방식으로 이루어진다.</p>
<p>파괴 공작에서 시민 사보타지 행위자가 사용할 수 있는 무기는 소금, 못, 촛불, 조약돌, 실 같은 단순한 물건들이나, 가정이나 직장에서 흔히 구할 수 있는 것들이다. 부엌 찬장, 쓰레기 더미, 일상적인 도구와 생활용품들이 바로 무기고가 될 수 있다. 사보타지의 목표물은 평소 눈에 띄지 않게 매일 접하는 익숙한 것들이다.</p>
<p>두 번째 유형의 단순한 사보타지는 어떤 파괴적인 도구도 필요로 하지 않으며, 물리적 피해를 가하더라도 매우 간접적인 방식으로 이루어진다. 이 방식은 잘못된 결정을 내리거나 비협조적인 태도를 취하고, 다른 사람들도 이를 따르게 하는 등 다양한 기회를 통해 실현된다. 예를 들어, 있어야 할 도구를 엉뚱한 곳에 두는 것 같은 단순한 실수가 잘못된 결정이 될 수 있다. 비협조적인 태도는 동료들 사이에 불편함을 조성하거나, 말싸움에 끼어들고, 무뚝뚝하게 행동하며 멍청한 척하는 것으로 나타날 수 있다.</p>
<p>이러한 행동은 “인간 요소” 라고 불리며, 일상적인 상황에서도 종종 사고, 지연, 기타 장애 요소의 원인이 된다. 잠재적인 사보타지 행위자는 어떤 종류의 잘못된 결정과 행동이 존재하는지 파악해,” 오류로 인한 피해 ” 를 극대화할 수 있도록 자신만의 사보타지를 고안해야 한다.</p>
</section>
<section id="기대효과" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 기대효과</h1>
<p>단순한 사보타지는 전 세계 곳곳에서 벌어지고 있다. 수천 명의 시민들이 행하는 이런 사보타지는 적에 맞서는 강력한 무기가 될 수 있다. 그러니 효율을 높이고 발각될 가능성을 줄이며, 규모를 확대하기 위해 노력해야 한다.</p>
<p>대규모로 일어나는 단순한 사보타지는 적의 전쟁 노력에 지속적이고 눈에 띄는 방해 요소가 된다. 예를 들면 타이어를 터뜨리거나 연료 탱크에 구멍을 내고, 불을 지르고, 싸움을 일으키고, 바보처럼 행동하며, 전자 시스템을 쇼트시키거나 기계 부품을 마모시키는 행위는 물자와 인력, 시간을 낭비 시킨다.</p>
<p>이런 사보타지들은 상당한 부수적인 효과도 가져온다. 예를 들면 적의 관리자와 경찰을 괴롭혀 사기를 저하시키고, 사보타지 행위자는 성공 경험을 통해 점점 더 대담해져 동료들을 설득해 더 다양한 형태의 사보타지를 실행할 수 있게 된다.</p>
<p>마지막으로, 적국이나 점령지의 원주민이 수행하는 사보타지는 UN 의 전쟁 억제 노력에 동참하고 연합국의 반격에 지원할 수 있도록 독려할 수 있다.</p>
</section>
<section id="사보타지-동기부여" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 사보타지 동기부여</h1>
<p>시민들이 사보타지를 적극적으로 실행하고 지속적으로 이어가도록 동기를 부여하는 것은 매우 중요하다. 단순한 사보타지는 주로 개인의 성향에 따라 이루어지는데 사보타지를 주도하는 사람에게 직접적인 이익을 주지 않고, 평소 물건을 아끼고 보존하려는 태도와는 정반대일 수 있기 때문이다. 뿐만아니라 일부러 바보 같은 행동을 한다는 것은 인간 본성에 반하는 일이고 그래서 사보타지를 실행하려면 때로는 압박이나 자극, 확신, 정보 제공, 그리고 구체적인 제안이 필요할 수 있다.</p>
<section id="개인적-동기" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="개인적-동기"><span class="header-section-number">4.1</span> 개인적 동기</h2>
<ol type="a">
<li><p>일반 시민에게는 사보타지를 수행할 직접적이고 개인적인 동기가 없을 가능성이 높다. 그러니 적의 퇴각이나 통치 정부 조직의 붕괴 등을 통해 간접적인 개인적 이득을 기대하도록 해야 한다. 예를 들면 사보타지 행위는 X 위원장과 그의 대리인 Y 와 Z 가 쫓겨나는 날, 특히 불쾌한 법령과 제한이 폐지되는 날, 식량이 도착하는 날 등 해당 분야에 대한 이득을 가능한 한 구체적으로 명시한다. 개인의 자유, 언론의 자유 등에 대한 추상적인 표현은 전 세계 대부분의 지역에서 설득력을 얻지 못할 것이며 많은 지역의 시민들은 이해조차 할 수 없을 것이다.</p></li>
<li><p>개별적인 행동은 그 효과가 제한적이기 때문에 사보타지 행위자가 자신이 조직의 일원이라는 느낌을 갖지 못하면 용기를 잃게 될 수 있다. 이런 감정은 특정 사보타지가 성공했다는 소식을 듣거나 읽음으로써 간접적으로 얻을 수도 있다. 비록 그 사보타지가 자신의 주변에서는 적용되지 않을지라도 다른 사람의 성공은 유사한 행동을 시도할 용기를 줄 수 있기 때문이다. 이는 사보타지의 효과를 칭송하는 메시지를 방송함으로써 직접적으로 전달될 수도 있다. 따라서 성공적인 사보타지는 참여하는 인구 비율에 대한 추정치가 방송으로 널리 퍼지고 지속적으로 행위자가 늘어나는 것이다.</p></li>
<li><ol type="a">
<li>나 (b) 보다 더 중요한 것은 시민 사보타지 행위자가 책임감을 느끼고 다른 사람에게 사보타지를 교육하기 시작하는 상황을 만드는 것이다.</li>
</ol></li>
</ol>
</section>
<section id="파괴-장려" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="파괴-장려"><span class="header-section-number">4.2</span> 파괴 장려</h2>
<p>상황이 적절한 경우 방해 행위자에게 그가 적에 대한 정당방위 또는 다른 파괴 행위에 대한 보복으로 행동하고 있음을 강조해야 한다. 사보타지에 대한 제안을 제시할 때 유머를 적절히 섞으면 공포의 긴장을 완화할 수 있다.</p>
<ol type="a">
<li><p>사보타지 행위자는 생각을 바꿔 이전에는 도구를 날카롭게 유지했다면 이제는 무뎌지게 내버려 두어야 한다. 이전에는 윤활유를 바른 표면에 이제 샌딩을 해야 하며 평소 부지런했다면 이제 게으르고 부주의하게 행동해야 한다. 자신과 일상 생활의 사물에 대해 거꾸로 생각하도록 격려하면 행위자는 가까운 환경에서 많은 사보타지 기회를 보게 될 것이다.다시 말해 무엇이든 방해할 수 있다는 마음가짐을 갖도록 격려해야 한다.</p></li>
<li><p>물리적 파괴에 가담할 수 있는 잠재적 시민 사보타지 행위자들 중에는 두 가지 극단적인 유형이 있다. 첫번째는 기술적으로 훈련받지 않고 고용된 사람이다. 이런 사람들은 자신이 파괴할 수 있는 대상과 파괴해야 하는 대상에 대한 구체적인 정보가 필요하다.</p></li>
<li><p>다른 극단적인 유형에는 선반 작업자나 자동차 정비공과 같은 기술자들이 있다. 이 사람들은 구체적인 정보 없이도 시설에 적합한 사보타지 방법을 고안해낼 수 있다.</p></li>
<li><p>사보타지에 관한 제안과 정보를 전파하기 위해 다양한 매체가 사용될 수 있다. 즉각적인 상황에 따라 사용할 수 있는 매체로는 방송국이나 라디오 방송 또는 전단지가 있으며 특정 지역 또는 직업군을 대상으로 할 수 있다.</p></li>
</ol>
</section>
<section id="안전-조치" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="안전-조치"><span class="header-section-number">4.3</span> 안전 조치</h2>
<ol type="a">
<li>사보타지 행위자의 활동량은 그가 가진 기회뿐만 아니라 그가 느끼는 위험의 정도에 따라 결정된다. 사보타지 행위자가 너무 많이 체포되면 나쁜 소식은 빠르게 전파되어 사보타지 행위가 억제된다.</li>
<li>사보타지 행위자가 탐지 및 보복을 당하지 않도록 무기, 시간, 표적 선택에 대한 준비하는 것은 어렵지 않다. 다음과 같은 예시가 있다:</li>
</ol>
<ul>
<li><ol type="1">
<li>무해한 것으로 보이는 도구를 사용하라. 칼이나 톱은 다용도 도구이므로 쉽게 휴대할 수 있다. 성냥, 자갈, 머리카락, 소금, 못 및 기타 수십 가지의 파괴 도구들은 의심을 받지 않고 휴대하거나 거주지에 보관할 수 있다. 또한 특정 업종에서 일하는 하는 경우 렌치, 망치등을 쉽게 휴대하고 보관할 수 있습을 것이다.</li>
</ol></li>
<li><ol start="2" type="1">
<li>책임을 회피 할 수 있는 행위를 시도하라. 예를 들어 공장의 중앙 화재 상자에 있는 배선을 끊는 행위는 실수로 그럴 수 있기 때문에 책임을 회피 할 수 있다. 또는 다른 사람들의 눈을 피해 군용 차량이나 트럭을 대상으로 저지르는 사보타지 행위도 있다.</li>
</ol></li>
<li><ol start="3" type="1">
<li>전날 잠을 설쳐서 너무 졸려 전기 회로에 렌치를 떨어뜨렸다 같은 그럴듯한 핑계가 있다면 비난받을 수 있는 행동을 하는 것도 두려워하지 마라. 항상 사과를 충분히 하고, 어리석음, 무지를 가장해 그러한 사보타지를 ‘빠져나갈’ 수 있는 경우가 많다.</li>
</ol></li>
<li><ol start="4" type="1">
<li>사보타지를 저지른 후에 무슨 일이 일어나는지 확인하고 싶은 유혹을 뿌리쳐야 한다. 괜히 주위를 배회하면 의심을 불러온다. 물론 바로 퇴근하는 것이 의심스러운 상황도 있을 수 있으니 업무방해 행위를 저지른 경우라면 얼마간 직장에 남아 있어야 한다.</li>
</ol></li>
</ul>
</section>
</section>
<section id="도구목표-그리고-타이밍" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 도구,목표 그리고 타이밍</h1>
<p>시민 사보타지 행위자는 철저히 통제할 수 없다. 또한 구체적인 군사 상황의 요건에 따라 특정 표적에 사보타지를 정밀하게 하는 것도 어렵다. 더욱이 군사 상황의 변화에 따라 사보타지를 통제하려는 시도는 적에게 가치가 있는 정보를 제공할 위험이 있다.</p>
<p>물론 사보타지는 실행할 지역에 맞게 조정되어야 하며 일반적인 상황에서 사보타지의 목표는 언론, 방송국, 선전 기관을 우선으로 해야 한다.</p>
<section id="평상시" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="평상시"><span class="header-section-number">5.1</span> 평상시</h2>
<ol type="a">
<li><p>단순한 사보타지는 악의적인 장난 그 이상이며, 항상 적의 물자와 인력에 해를 끼칠 수 있는 행위로 구성되어야 합니다.</p></li>
<li><p>사보타지는 일상적인 장비를 독창적으로 사용해야 합니다. 주변을 다른 시각으로 바라보면 온갖 종류의 무기가 나타날 것입니다.</p></li>
<li><p>사보타지는 자신의 능력이나 도구의 용량을 넘어서는 목표물을 공격해서는 안 됩니다. 예를 들어 경험이 없는 사람은 폭발물을 사용하려고 시도해서는 안 되며 성냥이나 기타 익숙한 도구를 사용해야 합니다.</p></li>
<li><p>사보타지는 적이 사용 중이거나 적이 조기에 사용할 예정인 것으로 알려진 물체와 재료만 손상하려고 시도해야 합니다. 중공업의 거의 모든 제품 그리고 연료와 윤활유는 적이 사용할 것이라고 가정할 수 있으나 특별한 지식이 없는 사람이 식량 작물이나 식료품의 파괴 행위를 시도하는 것은 바람직하지 않습니다.</p></li>
<li><p>시민 사보타지 행위자는 군용 물자에 접근할 수 있는 경우가 드물지만 이러한 물자를 우선적으로 파괴하는 것을 고려해야 합니다.</p></li>
</ol>
</section>
<section id="전시전" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="전시전"><span class="header-section-number">5.2</span> 전시전</h2>
<p>군사적 의미에서 평온한 시기에는 적에게 자재와 장비의 흐름을 줄이기 위해 산업 생산 공정의 사보타지에 집중합니다. 예를 들면 군용 트럭의 고무 타이어를 찢는 것은 가치 있는 행위보다 생산 공장의 타이어를 망치는 것은 훨씬 더 가치 있는 행위입니다.</p>
</section>
<section id="전시중" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="전시중"><span class="header-section-number">5.3</span> 전시중</h2>
<ol type="a">
<li>전투 작전 지역이거나 곧 전투 작전 지역이 될 예정인 지역에 대한 가장 중대한 사보타지는 그 효과가 직접적이고 즉각적인 것입니다. 비록 그 영향이 상대적으로 경미하고 국지적이더라도 이런 유형의 사보타지는 그 영향이 광범위하지만 간접적이고 지연되는 활동보다 선호되어야 합니다.</li>
</ol>
<ul>
<li><ol type="1">
<li>사보타지는 모든 종류의 교통 시설을 공격하도록 장려해야 합니다. 이러한 시설에는 도로, 철도, 자동차, 트럭, 오토바이, 자전거, 기차, 트램 등이 포함됩니다.</li>
</ol></li>
<li><ol start="2" type="1">
<li>당국이 지시나 사기 진작 자료를 전송하는 데 사용할 수 있는 모든 통신 시설은 사보타지의 대상이 되어야 합니다. 여기에는 전화, 전신 및 전력 시스템, 라디오, 신문, 현수막이 포함됩니다.</li>
</ol></li>
<li><ol start="3" type="1">
<li>그 자체로 가치가 있거나 교통 및 통신의 효율적인 기능에 필요한 중요 물자도 사보타지의 표적이 되어야 합니다. 여기에는 석유, 휘발유, 타이어, 음식, 물 등이 포함될 수 있습니다.</li>
</ol></li>
</ul>
</section>
</section>
<section id="사보타지를-위한-안내" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> 사보타지를 위한 안내</h1>
<p>단순한 사보타지의 정의에 포함되는 개별 행위와 결과를 구체적으로 염두에 두지 않고는 특정 영역에서 사보타지의 바람직성을 평가하는 것은 불가능합니다.</p>
<p>다음은 대상의 유형에 따라 분류된 구체적인 행위 목록입니다. 이 목록은 단순 사보타지의 방법에 대한 완전한 개요라기보다는 점점 늘어나는 추세에 따라 제시된 것입니다. 새로운 기법이 개발되거나 새로운 분야가 개척됨에 따라 이 목록은 확장될 것입니다.</p>
<section id="건물" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="건물"><span class="header-section-number">6.1</span> 건물</h2>
<p>창고, 병영, 사무실, 호텔 및 공장 건물은 사보타지의 탁월한 목표입니다. 이들은 특히 화재 피해에 극히 취약하며 관리인, 청소부 및 일반 방문객과 같은 훈련 받지 않은 사람도 시도가 가능합니다. 또, 피해를 입었을 시에는 적에게 상대적으로 큰 피해를 주게 됩니다.</p>
<section id="화재" class="level3" data-number="6.1.1">
<h3 data-number="6.1.1" class="anchored" data-anchor-id="화재"><span class="header-section-number">6.1.1</span> 화재</h3>
<p>화재는 가연성 물질이 쌓여있는 곳 어디에서든지 시작될 수 있습니다. 창고가 명백히 좋은 목표이겠으나 화재 사보타지가 거기에만 국한될 필요는 없을 것입니다.</p>
<ol type="1">
<li>가능하면 장소를 떠난 상태에서 불이 시작하도록 준비하세요. 예를 들면 양초와 종이를 함께 사용하여 태우려는 가연성 물질에 최대한 가깝게 놓습니다: 종이에서 3~4 센티미터 너비의 띠를 찢어 양초 바닥에 두세 번 감습니다. 종이를 더 꼬아서 느슨한 끈으로 만들어 양초 바닥에 감습니다. 양초 불꽃이 감싸고 있는 띠에 도달하면 양초에 불이 붙고 주변 종이에 차례로 불이 붙을 겁니다.</li>
<li>이런 종류의 방화는 인화성 물질에 적합합니다. 인화성이 없는 물질에 불을 붙이려고 시도하지 마세요. 만약 인화성이 없는 물질에 불을 붙이려면 양초와 휘발유에 적신 종이를 단단히 말거나 꼬아서 사용하세요.</li>
<li>간이 도화선을 만들려면 끈의 한쪽 끝을 기름에 담급니다. 기름기가 묻은 끈과 깨끗한 끈이 만나는 부분에 화약을 넉넉히 묻혀서 문지릅니다. 그런 다음 깨끗한 끈의 끝부분에 불을 붙입니다. 기름과 화약이 닿을 때까지 불꽃 없이 천천히 타다가 (담배가 타는 것과 거의 같은 방식) 갑자기 타오를 것입니다. 그러면 그리스로 처리된 끈이 불꽃과 함께 연소됩니다. 그리스와 화약 대신 성냥을 사용해도 같은 효과를 얻을 수 있습니다. 끈이 눌리거나 매듭이 생기지 않도록 주의하면서 성냥 머리 위로 끈을 통과시키세요. 이 역시 갑작스러운 불꽃을 일으킬 수 있습니다. 이 유형의 도화선은 끈이 정해진 속도로 연소한다는 장점이 있습니다. 선택한 끈의 길이와 두께에 따라 불의 시간을 정할 수 있습니다.</li>
<li>위에서 제안한 도화선을 사용하여 근무 시간 이후에 사무실에서 불을 피우세요. 기록 및 기타 유형의 문서를 파괴하는 것은 적에게 심각한 손해를 끼칠 수 있습니다.</li>
<li>폐기물을 보관하는 지하실에 기름기가 많은 폐기물을 쌓아두는 경우 때때로 자연 발화하기도 하지만 담배나 성냥으로 쉽게 불이 붙을 수 있습니다. 당신이 야간 근무를 하는 청소부라면 화재를 가장 먼저 신고할 수도 있지만 너무 빨리 신고하지는 말아야합니다.</li>
<li>깨끗한 공장은 화재에 취약하지 않지만 더러운 공장은 화재에 취약합니다. 작업자는 쓰레기를 함부로 버리고 청소부는 청소에 똑바로 하지 않음으로 더럽게 할 수 있습니다. 만약 먼지와 쓰레기가 충분히 쌓이면 내화 건물이 인화성이 될 수 있습니다.</li>
<li>야간에 비어 있는 방에서 조명용 가스를 사용하는 경우 창문을 단단히 닫고 가스를 켜고 촛불을 켜둔 채로 두세요. 시간이 지나면 가스가 폭발하여 화재가 발생할 수도 있고 그렇지 않을 수도 있습니다.</li>
</ol>
</section>
<section id="물-및-기타" class="level3" data-number="6.1.2">
<h3 data-number="6.1.2" class="anchored" data-anchor-id="물-및-기타"><span class="header-section-number">6.1.2</span> 물 및 기타</h3>
<ol type="1">
<li>스프링쿨러 시스템을 작동시켜 창고 속의 물품들을 못쓰게 만듭니다. 스프링클러 헤드를 망치로 세게 두드리거나 그 아래에 성냥을 대면 됩니다.</li>
<li>화장실에 휴지를 비치하지 말고 휴지, 머리카락, 기타 장애물을 단단히 말아서 화장실에 넣습니다. 스펀지에 두꺼운 전분 또는 설탕 용액을 적신뒤 꽉 짜서 끈으로 감싸고 말립니다. 완전히 마르면 끈을 제거합니다. 이제 스펀지는 단단하고 단단한 공 모양이 될 것입니다. 그것을 하수구에 넣으면 스펀지가 서서히 정상 크기로 팽창하여 하수 시스템을 막습니다.</li>
<li>낮에 공공건물의 전구 아래에 동전을 넣어두면 밤에 조명이 켜지면 퓨즈가 끊어집니다. 퓨즈 뒤에 동전을 넣거나 무거운 전선을 넣으면 퓨즈 자체가 무력화될 수 있습니다. 그러면 합선으로 인해 화재가 발생하거나 변압기가 손상되거나 넓은 지역으로 전기 공급이 중단될 수 있습니다.</li>
<li>경비원이 없는 공공건물의 모든 출입문 자물쇠에 종이, 나무 조각, 머리핀 등 들어갈 수 있는 모든 것을 끼워 넣으세요.</li>
</ol>
</section>
</section>
<section id="공업-생산-제조" class="level2" data-number="6.2">
<h2 data-number="6.2" class="anchored" data-anchor-id="공업-생산-제조"><span class="header-section-number">6.2</span> 공업 생산: 제조</h2>
<section id="도구" class="level3" data-number="6.2.1">
<h3 data-number="6.2.1" class="anchored" data-anchor-id="도구"><span class="header-section-number">6.2.1</span> 도구</h3>
<ol type="1">
<li>절삭 도구들이 무뎌지게 합니다. 그러면 효율 떨어져 생산성이 떨어지면 다른 자재와 부품에 손상을 줄 수 있습니다.</li>
<li>사용하지 않는 톱은 약간 뒤틀리게 보관하면 사용하게 될 때 잘 부서집니다.</li>
<li>줄날을 사용할 때 아주 빠르게 움직이면 강한 압력을 줄 수 있습니다.</li>
<li>줄날은 바이스나 공작물에 두드려서 청소하세요. 이렇게 하면 쉽게 부러집니다.</li>
<li>비트와 드릴은 옆쪽에서 강한 압력을 받으면 부러지기 쉽습니다.</li>
<li>프레스 펀치에 정해진 것보다 많은 재료 (예: 블랭크 1 개가 아닌 2 개) 를 넣으면 펀치가 고장날 수 있습니다.</li>
<li>공압 드릴, 리벳터 등과 같은 동력 구동 공구는 더러워지면 효율이 떨어집니다. 윤활과 전기 접점에 먼지가 쌓이게 두고 이물질을 넣어 오염시킵니다.</li>
</ol>
</section>
<section id="기름-및-윤활유" class="level3" data-number="6.2.2">
<h3 data-number="6.2.2" class="anchored" data-anchor-id="기름-및-윤활유"><span class="header-section-number">6.2.2</span> 기름 및 윤활유</h3>
<p>오일 및 윤활 시스템은 쉽게 파괴될 수 있을 뿐만 아니라 움직이는 부품이 있는 모든 기계에서 중요합니다. 오일 및 윤활 시스템을 방해하면 산업 공정의 주요 지점에서 생산 속도가 느려지거나 작업이 완전히 중단될 수 있습니다.</p>
<ol type="1">
<li>금속 먼지나 고운 모래, 유리 가루, 연마제 및 이와 유사한 단단하고 거친 물질을 윤활 시스템에 직접 넣습니다. 이러한 물질은 매끄러운 표면을 긁어 피스톤, 실린더 벽, 샤프트 및 베어링을 망가뜨릴 수 있습니다. 모터가 과열되어 멈추게 되면 광범위한 수리가 필요합니다.</li>
<li>필터 시스템을 열어 연필이나 기타 날카로운 물체로 필터 망을 찌른 다음 다시 덮으면 기계가 마모될 수 있습니다. 또는 신속하게 처리할 수 있다면 필터를 제거하세요.</li>
<li>윤활 시스템이나 필터에 직접 접근할 수 없는 경우, 보관 중에 오일을 희석하여 오일의 효과를 줄일 수 있습니다. 이 경우 거의 모든 액체가 오일을 묽게 만들 수 있습니다. 소량의 황산, 광택제, 물 또는 아마씨유가 특히 효과적입니다.</li>
<li>중유가 필요한 곳에 묽은 오일을 사용하면 기계가 고장 나거나 움직이는 축이 가열되어 멈출 수 있습니다.</li>
<li>막히는 물질을 윤활 시스템에 넣거나 떠다니는 경우 보관 중인 오일에 넣습니다. 머리카락, 노끈 조각, 죽은 곤충 및 기타 여러 가지 일반적인 물체를 꼬아서 빗으면 공급 라인과 필터를 통한 오일의 흐름을 막거나 방해하는 데 효과적입니다.</li>
<li>일부 상황에서는 윤활 시스템에서 마개를 제거하거나 오일이 저장된 드럼과 캔에 구멍을 뚫어 오일의 효과를 방해하는 대신 완전히 파괴할 수 있습니다.</li>
</ol>
</section>
<section id="냉각-시스템" class="level3" data-number="6.2.3">
<h3 data-number="6.2.3" class="anchored" data-anchor-id="냉각-시스템"><span class="header-section-number">6.2.3</span> 냉각 시스템</h3>
<ol type="1">
<li>수냉식 냉각 시스템에 쌀이나 밀과 같은 딱딱한 곡물을 몇 꼬집 넣으면 엔진이나 모터가 상당히 손상되어 상당히 짧은 시간 내에 작동을 멈출 수 있습니다. 그들은 부풀어 오르고 물의 순환을 막아 방해물을 제거하기 위해 냉각 시스템을 분해해야합니다. 톱밥이나 머리카락도 수냉 시스템을 막는 데 사용될 수 있습니다.</li>
<li>과열된 모터의 냉각 시스템에 매우 차가운 물을 빠르게 주입하면 엔진 하우징에 수축과 상당한 변형이 발생합니다. 이러한 처리를 몇 번 반복하면 균열과 심각한 손상이 발생할 수 있습니다.</li>
<li>흡기 또는 배기 밸브에 먼지와 폐기물이 막히면 공기 냉각 시스템의 효율을 떨어뜨릴 수 있습니다. 벨트로 작동하는 팬을 시스템에 사용하는 경우 벨트의 절반 이상을 들쭉날쭉하게 자르면 벨트가 미끄러져 결국 부하를 받아 분리되고 모터가 과열될 수 있습니다.</li>
</ol>
</section>
<section id="가솔린-및-기름-연료" class="level3" data-number="6.2.4">
<h3 data-number="6.2.4" class="anchored" data-anchor-id="가솔린-및-기름-연료"><span class="header-section-number">6.2.4</span> 가솔린 및 기름 연료</h3>
<p>연료 탱크와 연료 공급 엔진은 일반적으로 접근이 용이하고 쉽게 열 수 있습니다. 따라서 간단한 사보타지 활동에 매우 취약한 표적이 될 수 있습니다.</p>
<ol type="1">
<li>가솔린 엔진의 연료 탱크에 톱밥이나 쌀이나 밀과 같은 딱딱한 곡물을 몇 꼬집 넣습니다. 입자가 공급 라인을 막아서 엔진이 멈추게 됩니다. 문제의 원인을 찾으려면 시간이 좀 걸릴 수 있습니다. 구하기는 어렵지만 오래된 고무줄이나 연필 지우개에서 찾을 수 있는 천연 고무 부스러기도 효과적입니다.</li>
<li>설탕을 모을 수 있다면 휘발유 엔진의 연료 탱크에 넣으세요. 휘발유와 함께 타면서 끈적끈적한 덩어리로 변해 엔진을 완전히 망가뜨리고 대대적인 청소와 수리가 필요하게 됩니다. 꿀과 당밀은 설탕만큼 좋습니다. 휘발유 10 갤런당 약 75~100 그램을 사용하세요.</li>
<li>휘발유에 다른 불순물이 유입되면 엔진이 빠르게 마모되고 결국 고장을 일으킬 수 있습니다. 부석, 모래, 분쇄 유리 및 금속 먼지의 미세 입자는 휘발유 탱크에 쉽게 유입될 수 있습니다. 입자가 매우 미세해야 카뷰레터를 통과할 수 있습니다.</li>
<li>물, 소변, 와인 또는 기타 비교적 많은 양의 간단한 액체는 실린더에서 연소가 일어나지 않고 엔진이 움직이지 않을 정도로 휘발유를 희석시킬 수 있습니다. 휘발유 1 파인트에서 20 갤런이면 충분합니다. 소금물을 사용하면 부식과 영구적인 모터 손상의 원인이 됩니다.</li>
<li>디젤 엔진의 경우 인화점이 낮은 오일을 연료 탱크에 넣으면 엔진이 작동하지 않습니다. 잘못된 종류의 오일을 넣었을 때 이미 탱크에 적절한 오일이 있는 경우 엔진이 흔들리며 헛도는 현상만 발생합니다.<br>
</li>
<li>가솔린 및 오일 엔진의 연료 라인은 배기관을 자주 통과합니다. 기계가 정지해 있을 때 연료 라인에 작은 구멍을 뚫고 왁스로 구멍을 막으면 됩니다. 엔진이 작동하고 배기관이 뜨거워지면 왁스가 녹아 연료가 배기관으로 떨어지고 불꽃이 시작됩니다.</li>
<li>휘발유가 보관된 방에 접근할 수 있는 경우, 촛불을 켜둔 채로 방에 들어가면 밀폐된 방에 축적된 유증기가 시간이 지나면 폭발할 수 있다는 점을 기억하세요. 그러나 휘발유 통에서 실내 공기 중으로 상당한 양의 증발이 일어나야 합니다. 통의 윗부분을 제거해도 충분한 양의 휘발유가 공기 중에 노출되지 않으면 칼또는 송곳으로 통에 구멍을 뚫습니다. 이렇게 하면 증발 속도가 크게 빨라집니다. 촛불에 불을 붙이기 전에 창문을 닫고 방을 최대한 밀폐해야 합니다. 옆 방의 창문이 활짝 열려 있으면 휘발유뿐만 아니라 주변의 모든 것을 파괴하는 큰 불이 날 수 있습니다.</li>
</ol>
</section>
<section id="전기-모터" class="level3" data-number="6.2.5">
<h3 data-number="6.2.5" class="anchored" data-anchor-id="전기-모터"><span class="header-section-number">6.2.5</span> 전기 모터</h3>
<p>전기 모터는 전문가가 아니라면 망가트리기 쉽지 않고 비숙련자는 부상의 위험이 있습니다.</p>
<ol type="1">
<li>모든 유형의 전기 모터에서 가변 저항기를 높은 저항 지점으로 설정하세요. 과열되어 화재가 발생할 수 있습니다.</li>
<li>과부하 릴레이를 모터의 용량을 초과하는 매우 높은 값으로 조정하세요. 그런 다음 모터가 과열되어 고장날 정도로 과부하를 가하세요.</li>
<li>먼지, 흙, 수분은 전자 장비의 적이라는 것을 기억하세요. 전기 모터의 전선이 종단과 연결되는 부분과 절연되어 있는 부분에 먼지와 흙을 흘리면 전류가 비효율적으로 흐르거나, 쇼트가 발생할 것입니다.</li>
<li>전선의 피복을 손상시키고, 연결 부위의 너트를 헐겁게 하고, 전선의 땜과 연결 부위를 엉망으로 처리하여 전류를 낭비하고 전기 모터의 출력을 저하시키세요.</li>
<li>고정자가 손상되면 직류 모터의 출력이 감소하거나 단락이 발생할 수 있습니다: 고정자 고정 링을 풀거나 제거합니다. 고정자에 탄소, 흑연 또는 금속 먼지를 뿌립니다. 고정자 접촉부에 그리스나 오일을 약간 발라줍니다. 고정자 막대가 서로 가까이 있는 경우 금속 가루로 막대 사이의 간격을 메우거나 끌로 가장자리를 톱질하여 인접한 막대의 톱니가 만나거나 거의 만나 전류가 한 막대에서 다른 막대로 흐를 수 있도록 합니다.</li>
<li>회전하는 브러시를 마모시킬 수 있는 곳에 우표 크기의 절반 정도의 고운 입자의 사포를 놓습니다. 그러면 모터가 화재로 인해 파괴됩니다.</li>
<li>슬립 링에 탄소, 흑연 또는 금속 가루를 뿌려 전류가 누설되거나 단락이 발생할 수 있습니다. 모터가 유휴 상태일 때는 끌로 슬립링에 흠집을 내세요.</li>
<li>전기자 표면에 그리스가 섞인 먼지가 묻으면 접촉이 제대로 이루어지지 않아 모터가 멈추거나 효율이 떨어집니다.</li>
<li>전기 모터를 과열시키려면 모래와 진한 그리스를 섞어 고정자와 회전자 사이에 바르거나 얇은 금속 조각을 그 사이에 끼워 넣으십시오. 전류가 효율적으로 생성되지 않도록 기름, 타르 또는 페인트를 넣으십시오.</li>
<li>3 상 전류를 사용하는 모터의 경우, 기계가 정지한 상태에서 인입선 중 하나에 칼이나 줄로 깊게 상처를 내거나 퓨즈 3 개 중 하나를 끊어진 퓨즈로 교체합니다. 첫 번째 경우에는 모터가 잠시 작동한 후 멈추고 두 번째 경우에는 시동이 걸리지 않습니다.</li>
</ol>
</section>
<section id="변압기" class="level3" data-number="6.2.6">
<h3 data-number="6.2.6" class="anchored" data-anchor-id="변압기"><span class="header-section-number">6.2.6</span> 변압기</h3>
<ol type="1">
<li>오일 충전식 변압기는 오일 탱크에 물이나 소금을 부으면 고장이 날 수 있습니다.</li>
<li>공랭식 변압기의 경우, 주변에 잔해를 쌓아 통풍을 막아주세요.</li>
<li>모든 유형의 변압기의 경우 외부 부싱 및 기타 노출된 전기 부품에 탄소, 흑연 또는 금속 먼지를 뿌려 주세요.</li>
</ol>
</section>
<section id="터빈" class="level3" data-number="6.2.7">
<h3 data-number="6.2.7" class="anchored" data-anchor-id="터빈"><span class="header-section-number">6.2.7</span> 터빈</h3>
<p>대부분의 터빈은 무겁고 견고하게 제작되어 있으며 망가트리기 어렵습니다.</p>
<ol type="1">
<li>수력 터빈을 점검하거나 수리한 후에는 커버가 날아가서 발전소에 물이 넘치지 않도록 커버를 단단히 고정하세요. 증기 터빈의 덮개가 느슨하면 누수가 발생하고 속도가 느려집니다.</li>
<li>수력 터빈에서는 펜 스톡 헤드의 스크리닝 바로 너머에 큰 고철 조각을 삽입하여 물이 손상된 재료를 플랜트 장비로 운반 할 수 있도록합니다.</li>
<li>수리를 위해 터빈의 증기 라인을 열면 고철 조각을 넣어 증기가 다시 올라올 때 터빈 기계에 분사되도록 합니다.</li>
<li>터빈의 연료 공급 라인에 구멍을 뚫어 뜨거운 증기 파이프에 떨어진 기름으로 불이 나도록 하세요.</li>
</ol>
</section>
<section id="보일러" class="level3" data-number="6.2.8">
<h3 data-number="6.2.8" class="anchored" data-anchor-id="보일러"><span class="header-section-number">6.2.8</span> 보일러</h3>
<ol type="1">
<li>가능한 모든 방법으로 증기 보일러의 효율을 줄이세요. 물을 너무 많이 넣어서 시동이 느리게 걸리게 하거나 불을 낮게 유지하여 비효율적으로 만듭니다. 증기 보일러가 마르지 않은 상태에서 불을 올리면 금이 가고 망가질 수 있습니다. 특히 좋은 방법은 석회석이나 석회가 포함된 물을 보일러에 계속 넣으면 바닥과 측면에 석회가 쌓이는 것입니다. 이 침전물은 열에 대해 매우 우수한 단열 효과를 제공하며 충분히 쌓이면 보일러는 완전히 쓸모없어집니다.</li>
</ol>
</section>
</section>
<section id="생산.-금속" class="level2" data-number="6.3">
<h2 data-number="6.3" class="anchored" data-anchor-id="생산.-금속"><span class="header-section-number">6.3</span> 생산. 금속</h2>
<section id="철과-강철" class="level3" data-number="6.3.1">
<h3 data-number="6.3.1" class="anchored" data-anchor-id="철과-강철"><span class="header-section-number">6.3.1</span> 철과 강철</h3>
<ol type="1">
<li>용광로는 수리를 위해 자주 가동을 중단해야 하는 상태로 유지합니다. 용광로 내부 라이닝용 내화벽돌을 만들 때는 타르의 비율을 늘려서 빨리 마모되고 지속적으로 라이닝을 다시 하도록 합니다.</li>
<li>주조용 코어에 기포가 가득 차 불완전한 주조 결과가 나오도록 코어를 만듭니다.</li>
<li>금형의 코어가 제대로 지지되지 않아 코어의 위치가 잘못되어 코어가 흘러내리거나 주물이 손상되게 합니다.</li>
<li>철이나 강철을 열처리할 때 과도한 열을 가하여 철근과 강괴의 품질을 낮추세요.</li>
</ol>
</section>
<section id="다른-금속" class="level3" data-number="6.3.2">
<h3 data-number="6.3.2" class="anchored" data-anchor-id="다른-금속"><span class="header-section-number">6.3.2</span> 다른 금속</h3>
<ol type="1">
<li>가능한 제안 사항이 없습니다.</li>
</ol>
</section>
<section id="생산-채광-및-광물-추출" class="level3" data-number="6.3.3">
<h3 data-number="6.3.3" class="anchored" data-anchor-id="생산-채광-및-광물-추출"><span class="header-section-number">6.3.3</span> 생산: 채광 및 광물 추출</h3>
</section>
<section id="탄광" class="level3" data-number="6.3.4">
<h3 data-number="6.3.4" class="anchored" data-anchor-id="탄광"><span class="header-section-number">6.3.4</span> 탄광</h3>
<ol type="1">
<li>오일 램프를 꺼버리세요, 오일램프를 다시 켜려면 눅눅하지 않은 곳을 찾아야 하기 때문에 오랜 시간이 필요합니다.</li>
<li>공압식 픽을 만들때 픽을 제대로 굳히지 않으면 금방 무뎌집니다.</li>
<li>공압식 픽은 쉽게 고장날 수 있습니다. 오일 레버에 소량의 물을 부으면 픽이 작동을 멈춥니다. 석탄 먼지와 부적절한 윤활도 고장을 일으킬 수 있습니다.</li>
<li>석탄을 운반하는 버킷 컨베이어를 당기는 체인을 약화시키세요. 픽이나 삽으로 때리면 체인이 정상적인 힘에도 끊어질 수 있습니다.</li>
<li>레일과 전환 지점에 장애물을 설치해 광산 차량이 탈선하도록 만듭니다.</li>
<li>석탄에 돌이나 다른 쓸모없는 물건을 섞어 보내세요.</li>
</ol>
</section>
<section id="생산-농업" class="level3" data-number="6.3.5">
<h3 data-number="6.3.5" class="anchored" data-anchor-id="생산-농업"><span class="header-section-number">6.3.5</span> 생산: 농업</h3>
</section>
<section id="기계류" class="level3" data-number="6.3.6">
<h3 data-number="6.3.6" class="anchored" data-anchor-id="기계류"><span class="header-section-number">6.3.6</span> 기계류</h3>
<ol type="1">
<li>공업 생산: 제조 &gt; 가솔린 및 기름 연료, 전기 모터, 작물과 가축 항목 참고.</li>
</ol>
</section>
<section id="작물과-가축" class="level3" data-number="6.3.7">
<h3 data-number="6.3.7" class="anchored" data-anchor-id="작물과-가축"><span class="header-section-number">6.3.7</span> 작물과 가축</h3>
<p>농작물과 가축은 식량 공급이 많거나 적이 식량을 요구하는 것으로 알려진 곳에서만 파괴해야 합니다.</p>
<ol type="1">
<li>가축에게 농작물을 먹이십시오. 농작물을 너무 일찍 또는 늦게 수확하세요. 저장된 곡물, 과일, 채소를 물에 담가 썩게 합니다. 과일과 채소를 햇볕에 방치하여 상하게 합니다.</li>
</ol>
</section>
</section>
<section id="교통-수단-철도" class="level2" data-number="6.4">
<h2 data-number="6.4" class="anchored" data-anchor-id="교통-수단-철도"><span class="header-section-number">6.4</span> 교통 수단: 철도</h2>
<section id="승객" class="level3" data-number="6.4.1">
<h3 data-number="6.4.1" class="anchored" data-anchor-id="승객"><span class="header-section-number">6.4.1</span> 승객</h3>
<ol type="1">
<li>열차 여행이 되도록 불편하도록 만드세요. 티켓을 잘못 발행하고 여정의 일부를 빼먹도록 하세요. 열차의 한 자리에 두 개의 티켓을 발급하여 다툼이 발생하게 만들고 열차가 떠날 때까지 시간을 지연시키세요. 열차의 출발 및 도착을 알리는 알림을 고의로 잘못되게 만드세요.</li>
<li>목적지를 향해 가고 있는 열차에서 승무원들은 음식을 특별히 맛없게 만들고 한밤중에 티켓을 확인하는등 손님을 최대한 귀찮게 만들어야 합니다.</li>
<li>짐이 잘못 놓여지거나 다른 역에 내려지게 하세요.</li>
<li>열차 운전자는 열차를 고의로 지연시키거나 예정에 없던 정차를 하게 만들어야 합니다.</li>
</ol>
</section>
<section id="스위치-신호-및-라우팅" class="level3" data-number="6.4.2">
<h3 data-number="6.4.2" class="anchored" data-anchor-id="스위치-신호-및-라우팅"><span class="header-section-number">6.4.2</span> 스위치, 신호 및 라우팅</h3>
<ol type="1">
<li>신호기와 스위치가 포함된 배전반의 전선이 잘못된 단자에 연결되지 않도록 교환합니다.</li>
<li>신호 암이 작동하지 않도록 푸시 막대를 풀고, 신호등을 고장내고, 적색 및 녹색 신호등의 컬러 렌즈를 교환합니다.</li>
<li>선로에서 스위치 지점이 움직이지 않도록 펼쳐서 고정하거나 스위치 지점 사이에 돌이나 흙더미를 놓습니다.</li>
<li>스위치 포인트의 전기 연결부와 인근 바닥에 소금을 충분히 뿌립니다. 비가 오면 스위치가 단락될 수 있습니다.</li>
<li>차량이 잘못된 열차에 투입되도록 수리가 필요한 차량의 표지를 떼어내고 차량과 차량 사이의 커플링은 가능한 느슨하게 유지합니다.</li>
</ol>
</section>
<section id="선로" class="level3" data-number="6.4.3">
<h3 data-number="6.4.3" class="anchored" data-anchor-id="선로"><span class="header-section-number">6.4.3</span> 선로</h3>
<ol type="1">
<li>곡선에서 외부 레일 섹션에 연결되는 연결 플레이트에서 볼트를 빼고 연결 조인트의 양쪽에서 자갈, 콘크리트 또는 흙을 몇 피트 정도 퍼냅니다.</li>
<li>조인트에서 연결 플레이트를 분리하고 양쪽의 침목 못을 풀면 레일이 서로 벌려집니다.</li>
</ol>
</section>
<section id="기름과-윤활유" class="level3" data-number="6.4.4">
<h3 data-number="6.4.4" class="anchored" data-anchor-id="기름과-윤활유"><span class="header-section-number">6.4.4</span> 기름과 윤활유</h3>
<ol type="1">
<li>공업 생산: 제조 &gt; 가솔린과 기름 연료 참고</li>
<li>윤활 파이프를 집게로 꽉 쥐거나 망치로 찌그러뜨려 오일의 흐름이 막히게 합니다.</li>
</ol>
</section>
<section id="냉각-시스템-1" class="level3" data-number="6.4.5">
<h3 data-number="6.4.5" class="anchored" data-anchor-id="냉각-시스템-1"><span class="header-section-number">6.4.5</span> 냉각 시스템</h3>
<ol type="1">
<li>공업 생산: 제조 &gt; 냉각 시스템 참고.</li>
</ol>
</section>
<section id="가솔린-및-기름-연료-1" class="level3" data-number="6.4.6">
<h3 data-number="6.4.6" class="anchored" data-anchor-id="가솔린-및-기름-연료-1"><span class="header-section-number">6.4.6</span> 가솔린 및 기름 연료</h3>
<ol type="1">
<li>공업 생산: 제조 &gt; 가솔린 및 기름연료 참고.</li>
</ol>
</section>
<section id="전기-모터-1" class="level3" data-number="6.4.7">
<h3 data-number="6.4.7" class="anchored" data-anchor-id="전기-모터-1"><span class="header-section-number">6.4.7</span> 전기 모터</h3>
<ol type="1">
<li>공업 생산: 제조 &gt; 냉각 시스템 및 가솔린 및 기름 연료 참고.</li>
</ol>
</section>
<section id="보일러-1" class="level3" data-number="6.4.8">
<h3 data-number="6.4.8" class="anchored" data-anchor-id="보일러-1"><span class="header-section-number">6.4.8</span> 보일러</h3>
<ol type="1">
<li>공업 생산: 제조 &gt; 보일러 참고</li>
<li>검사 후 엔진의 보일러에 중유 또는 타르를 넣거나 비누 0.5 킬로그램을 물에 넣으십시오.</li>
</ol>
</section>
<section id="브레이크-및-기타" class="level3" data-number="6.4.9">
<h3 data-number="6.4.9" class="anchored" data-anchor-id="브레이크-및-기타"><span class="header-section-number">6.4.9</span> 브레이크 및 기타</h3>
<ol type="1">
<li>일부러 고속으로 주행하고 커브길과 내리막길에서는 브레이크를 과도하게 사용해 엔진에 과부하를 줍니다.</li>
<li>에어 브레이크 밸브 또는 급수관에 구멍을 뚫습니다.</li>
<li>여객 열차의 마지막 칸이나 화물의 앞칸에서는 저널 박스의 솜을 제거하고 기름 묻은 헝겊으로 교체합니다.</li>
</ol>
</section>
</section>
<section id="교통-수단-자동차" class="level2" data-number="6.5">
<h2 data-number="6.5" class="anchored" data-anchor-id="교통-수단-자동차"><span class="header-section-number">6.5</span> 교통 수단: 자동차</h2>
<section id="도로" class="level3" data-number="6.5.1">
<h3 data-number="6.5.1" class="anchored" data-anchor-id="도로"><span class="header-section-number">6.5.1</span> 도로</h3>
<p>도로에 가하는 사보타지는 시간이 오래 걸리기 때문에 작전 당일에 하는 것은 비효율적입니다.</p>
<ol type="1">
<li>교차로와 갈림길의 표지판을 변경합니다. 적이 잘못된 길로 가면 실수를 발견하기까지 수 킬로미터가 걸릴 수 있습니다.</li>
<li>길을 물어보면 잘못된 길을 알려줍니다.</li>
<li>통행량이 많은 도로를 손상시키면 지나가는 차량과 자연이 나머지를 처리해 줍니다. 비포장 도로는 삽으로 파낼 수도 있습니다. 작은 개울이 흘러 도로를 잠식하게 하면 도로를 손상시키는 데 몇 분 밖에 걸리지 않을 것입니다.</li>
<li>깨진 유리, 못, 날카로운 돌을 도로에 뿌려 타이어를 펑크 낼 수 있습니다.</li>
</ol>
</section>
<section id="승객-1" class="level3" data-number="6.5.2">
<h3 data-number="6.5.2" class="anchored" data-anchor-id="승객-1"><span class="header-section-number">6.5.2</span> 승객</h3>
<ol type="1">
<li>버스기사는 적이 내리길 원하는 정류장을 지나칠 수 있습니다. 택시기사는 적의 목적지로 가는 가장 먼 경로를 선택하여 적의 시간과 돈을 낭비하게 할 수 있습니다.</li>
</ol>
</section>
<section id="기름-및-윤활유-1" class="level3" data-number="6.5.3">
<h3 data-number="6.5.3" class="anchored" data-anchor-id="기름-및-윤활유-1"><span class="header-section-number">6.5.3</span> 기름 및 윤활유</h3>
<ol type="1">
<li>공업 생산: 제조 &gt; 냉각 시스템 참고</li>
<li>윤활유 펌프를 끊어버리면 80km 를 운행하기 전에 베어링이 망가질 것입니다.</li>
</ol>
</section>
<section id="레디에이터" class="level3" data-number="6.5.4">
<h3 data-number="6.5.4" class="anchored" data-anchor-id="레디에이터"><span class="header-section-number">6.5.4</span> 레디에이터</h3>
<ol type="1">
<li>공업 생산: 제조 &gt; 냉각 시스템 참고</li>
</ol>
</section>
<section id="연료" class="level3" data-number="6.5.5">
<h3 data-number="6.5.5" class="anchored" data-anchor-id="연료"><span class="header-section-number">6.5.5</span> 연료</h3>
<ol type="1">
<li>공업 생산: 제조 &gt; 가솔린 및 기름 연료 참고</li>
</ol>
</section>
<section id="배터리-및-점화" class="level3" data-number="6.5.6">
<h3 data-number="6.5.6" class="anchored" data-anchor-id="배터리-및-점화"><span class="header-section-number">6.5.6</span> 배터리 및 점화</h3>
<ol type="1">
<li>점화 잠금장치에 나무 조각을 끼우거나 배전반 뒤의 연결부를 풀고 점화 플러그에 먼지를 넣어서 손상 시킬 수 있습니다.</li>
<li>주차된 차량의 조명을 켜서 배터리가 방전되도록 합니다.</li>
<li>기계공은 여러 가지 방법으로 교모하게 배터리를 망칠 수 있습니다: 베터리 셀에서 밸브 캡을 떼어내고 드라이버를 비스듬히 밀어 넣어 셀의 판을 깨뜨리면 밖에서는 손상이 보이지 않습니다. 베터리 셀에 철이나 구리를 넣으면 셀의 수명이 크게 단축됩니다. 특히 각 베터리 셀에 식초를 조금 넣으면 배터리 수명이 크게 줄어듭니다.</li>
</ol>
</section>
<section id="기어" class="level3" data-number="6.5.7">
<h3 data-number="6.5.7" class="anchored" data-anchor-id="기어"><span class="header-section-number">6.5.7</span> 기어</h3>
<ol type="1">
<li>변속기 및 기타 기어에서 윤활유를 제거하거나 가벼운 윤활유를 넣으세요.</li>
<li>트럭, 트랙터 및 기타 무거운 기어가 장착된 기계의 경우 기어 케이스가 불안정하게 고정되도록 볼트 구멍의 절반에만 볼트를 끼우세요. 사용 중 기어가 심하게 흔들려 곧 수리가 필요할 수 있습니다.</li>
</ol>
</section>
<section id="타이어" class="level3" data-number="6.5.8">
<h3 data-number="6.5.8" class="anchored" data-anchor-id="타이어"><span class="header-section-number">6.5.8</span> 타이어</h3>
<ol type="1">
<li>방치된 차량의 타이어에 구멍을 내거나 펑크를 내세요. 성냥갑이나 기타 작은 상자 안에 못을 넣고 정지된 자동차의 뒷바퀴 앞에 수직으로 세워두면 자동차가 출발할 때 못이 타이어를 깔끔하게 뚫을 수 있습니다.</li>
<li>타이어 수리점은 타이어를 손상시키기 쉽습니다: 펑크 수리 시 유리, 가성소다 등을 안에 흘리면 튜브에 금방 구멍이 나거나 부식될 수 있습니다. 또는 펑크 난 타이어를 수리할 때 펑크를 일으킨 물체를 그대로 두면 됩니다.</li>
<li>수리 후 타이어를 조립할 때는 타이어 림과 휠 림 사이에 이물질이 끼게 만드세요.</li>
<li>타이어에 공기를 넣을 때는 정상 공기압보다 낮게 유지하세요. 타이어가 더 많이 마모될 수 있습니다. 양쪽 바퀴에 타이어를 채울 때는 안쪽 타이어에 바깥쪽 타이어보다 훨씬 높은 압력으로 공기를 넣어야 하며, 이렇게 하면 두 타이어 모두 더 빨리 마모됩니다. 바퀴의 정렬이 잘못되면 타이어도 빨리 마모되므로 바퀴를 조정하기 위해 들어올 때 정렬이 맞지 않은 상태로 둡니다.</li>
<li>타이어 재고가 많이 있는 경우 휘발유 등을 타이어에 흘려서 타이어를 경화되게 할 수 있습니다. 다만 합성 고무는 이러한 화학 물질에 덜 민감합니다.</li>
</ol>
</section>
</section>
<section id="교통-수단-물" class="level2" data-number="6.6">
<h2 data-number="6.6" class="anchored" data-anchor-id="교통-수단-물"><span class="header-section-number">6.6</span> 교통 수단: 물</h2>
<section id="항해" class="level3" data-number="6.6.1">
<h3 data-number="6.6.1" class="anchored" data-anchor-id="항해"><span class="header-section-number">6.6.1</span> 항해</h3>
<ol type="1">
<li>바지선 및 선박 항해사는 이동하는 수로의 상태에 대한 잘못된 소문을 퍼뜨립니다. 다른 바지선 및 보트 선장에게 시간이 더 걸리거나 운하를 우회해야 하는 수로를 따라가라고 알립니다.</li>
<li>바지선 및 선박의 항해사는 다리 근처에서는 시간을 낭비하고 대기해야 하는 다른 선박의 시간을 낭비합니다. 또한 선박이 ‘실수로’ 좌초되는 것도 매우 효율적인 시간 낭비가 됩니다.</li>
<li>도개교에 근무하는 직원은 실수로 다리를 올렸다가 내렸다 하며 다리 위나 아래 수로의 교통을 지연시킬 수 있습니다.</li>
<li>화물선의 나침반에 자성을 망가트립니다. 나침반의 자성을 제거하거나 나침반 근처에 큰 철근이나 철을 숨겨서 나침반이 잘못 작동되도록 합니다.</li>
</ol>
</section>
<section id="화물" class="level3" data-number="6.6.2">
<h3 data-number="6.6.2" class="anchored" data-anchor-id="화물"><span class="header-section-number">6.6.2</span> 화물</h3>
<ol type="1">
<li>화물을 적재하거나 하역할 때 부주의하게 취급하면 화물이 손상될 수 있습니다. 가장 약하고 가벼운 상자와 상자가 화물칸 바닥에 있고 가장 무거운 상자가 그 위에 오도록 화물을 적치합니다. 비와 갑판 세척으로 인해 화물이 손상되도록 커버와 타포린은 허술하게 씌웁니다.</li>
</ol>
</section>
</section>
<section id="통신" class="level2" data-number="6.7">
<h2 data-number="6.7" class="anchored" data-anchor-id="통신"><span class="header-section-number">6.7</span> 통신</h2>
<section id="전화" class="level3" data-number="6.7.1">
<h3 data-number="6.7.1" class="anchored" data-anchor-id="전화"><span class="header-section-number">6.7.1</span> 전화</h3>
<ol type="1">
<li>사무실, 호텔, 교환실에서 적의 전화 연결을 지연시키거나, 잘못된 번호를 알려주거나, 실수로 끊거나, 회선을 다시 사용할 수 없도록 계속 연결을 시도합니다.</li>
<li>적 본부에 하루에 한 번 이상 전화를 걸어 공식 업무, 특히 군사 업무를 방해하고, 전화를 받으면 잘못된 번호를 받았다고 말합니다. 군대나 경찰서에 전화하여 익명으로 다음과 같은 허위 신고를 합니다. 화재, 공습, 폭탄에 대해 익명으로 허위 신고합니다.</li>
<li>적이 사용하는 사무실과 건물에서는 전화기의 수화기를 망가트립니다. 전기 기술자와 전화 수리공은 연결 상태가 좋지 않고 절연이 손상되어 혼신 및 기타 종류의 전기 간섭을 만들어 통화가 어렵거나 불가능하게 만들 수 있습니다.</li>
<li>자동 교환기의 배터리는 못, 또는 동전으로 손상시킬 수 있습니다. 이런 식으로 배터리의 절반을 처리할 수 있다면 교환기의 작동이 중단됩니다.</li>
</ol>
</section>
<section id="전신" class="level3" data-number="6.7.2">
<h3 data-number="6.7.2" class="anchored" data-anchor-id="전신"><span class="header-section-number">6.7.2</span> 전신</h3>
<ol type="1">
<li>전보 전달을 고의로 지연시킵니다.</li>
<li>적지로의 전보를 왜곡하여 다른 전보를 보내거나 장거리 통화를 해야만 하는 상황으로 만듭니다. 예를 들어, “최소”를 “최대”로 변경하여 전보를 받는 사람이 “최소” 인지 “최대” 인지 알 수 없도록 하는 등 단어의 한 글자를 변경하여 이를 수행할 수 있는 경우도 있습니다.</li>
</ol>
</section>
<section id="전화선" class="level3" data-number="6.7.3">
<h3 data-number="6.7.3" class="anchored" data-anchor-id="전화선"><span class="header-section-number">6.7.3</span> 전화선</h3>
<ol type="1">
<li>전화 및 전신 통신선을 자르고 피복을 망가뜨려 간섭을 발생시키세요.</li>
</ol>
</section>
<section id="우편" class="level3" data-number="6.7.4">
<h3 data-number="6.7.4" class="anchored" data-anchor-id="우편"><span class="header-section-number">6.7.4</span> 우편</h3>
<ol type="1">
<li>우체국 직원은 적의 우편을 잘못된 행낭에 넣는 등의 행위를 통해 우편이 하루 이상 지연되도록 할 수 있습니다.</li>
</ol>
</section>
<section id="영화" class="level3" data-number="6.7.5">
<h3 data-number="6.7.5" class="anchored" data-anchor-id="영화"><span class="header-section-number">6.7.5</span> 영화</h3>
<ol type="1">
<li>영사기 관리자는 초점을 흐리거나 필름을 빠르게 또는 종종 멈추게 함으로써 뉴스와 적의 선전 영화를 망칠 수 있습니다.</li>
<li>관객들은 박수를 쳐 연사의 말을 묻히게 하거나, 큰 소리로 잡담을 함으로써 적의 선전 영화를 망칠 수 있습니다.</li>
<li>나방 20 ~ 30 마리를 종이백에 넣어 감으로써 적 선전 영화의 상영을 중단시킬 수 있습니다. 종이백을 가지고 들어가 영화관의 빈 바닥에 내려놓은 뒤 열어두면 나방들이 튀어나와 영사기의 빛으로 몰려들어 펄럭거리는 그림자로 화면을 뒤덮을 것입니다.</li>
</ol>
</section>
<section id="라디오" class="level3" data-number="6.7.6">
<h3 data-number="6.7.6" class="anchored" data-anchor-id="라디오"><span class="header-section-number">6.7.6</span> 라디오</h3>
<ol type="1">
<li>방송국 기술자들은 목소리 송출을 과다 변조함으로써 손쉽게 적의 선전 방송이나 지시사항이 마치 물속에서 말하는 것처럼 들리게 할 수 있습니다.</li>
<li>자신의 아파트 건물에서는 적이 모든 사람이 듣기를 원할 때 라디오 수신을 방해할 수 있습니다. 전등 코드 끝에서 전등 플러그를 뽑고, 코드에서 전선을 꺼내 2구 플러그의 두 단자 또는 4구 플러그의 세 단자에 묶습니다. 그런 다음 전선을 가지고 다니면서 벽이나 바닥에 있는 콘센트에 최대한 많이 꽂아보세요. 플러그를 새 회로에 꽂을 때마다 퓨즈가 끊어지고 새 퓨즈로 교체할 때까지 모든 무전기가 고장 상태가 됩니다.</li>
<li>어떤 전자 장비이든 절연체를 손상시킴으로써 이웃집, 거대 발전기, 네온사인, 형광등, 엑스레이 장치 및 송전선 등에 무선 간섭을 일으킬 수 있습니다. 만약 작업자가 적 비행장 근처 고압선의 절연체를 손상시킬 수 있다면 지상에서 비행기로의 무선 통신이 장시간동안 어려워질 것입니다.</li>
</ol>
</section>
</section>
<section id="전력" class="level2" data-number="6.8">
<h2 data-number="6.8" class="anchored" data-anchor-id="전력"><span class="header-section-number">6.8</span> 전력</h2>
<section id="터빈-전기-모터-변압기" class="level3" data-number="6.8.1">
<h3 data-number="6.8.1" class="anchored" data-anchor-id="터빈-전기-모터-변압기"><span class="header-section-number">6.8.1</span> 터빈, 전기 모터, 변압기</h3>
<ol type="1">
<li>공업 생산: 제조 &gt; 전기모터, 변압기, 터빈 참고</li>
</ol>
</section>
<section id="송전-선로" class="level3" data-number="6.8.2">
<h3 data-number="6.8.2" class="anchored" data-anchor-id="송전-선로"><span class="header-section-number">6.8.2</span> 송전 선로</h3>
<ol type="1">
<li>전선 작업자는 절연체를 느슨하게 하고 더러워지게 하여 고의로 누전을 일으킬 수 있습니다. 두 개의 평행한 송전선 사이에 매우 무거운 끈을 여러 번 앞뒤로 묶어 매번 전선 주위를 여러 바퀴 감는 것도 매우 쉬울 것입니다. 미리 끈을 소금으로 심하게 절인뒤 감습니다. 그러면 비가 오면 줄이 도체가 되어 단락이 발생할 수 있습니다.</li>
</ol>
</section>
</section>
<section id="조직-전반적인-사보타지" class="level2" data-number="6.9">
<h2 data-number="6.9" class="anchored" data-anchor-id="조직-전반적인-사보타지"><span class="header-section-number">6.9</span> 조직 전반적인 사보타지</h2>
<section id="회의" class="level3" data-number="6.9.1">
<h3 data-number="6.9.1" class="anchored" data-anchor-id="회의"><span class="header-section-number">6.9.1</span> 회의</h3>
<ol type="1">
<li>모든 일은 절차를 통해 하자고 주장합니다. 신속한 결정을 하기 위한 절차는 절대 허용하지 않습니다.</li>
<li>회의 시간에는 연설을 하세요. 가능한 자주 그리고 굉장히 길게 일화와 개인 경험담에 대한 이야기를 하므로 요점을 찾을 수 없도록 하세요. 특히 적절한 “애국적” 코멘트를 추가하는 것을 중요합니다.</li>
<li>항상 ” 추가적인 고려 ” 를 위해 위원회를 만들어 내용을 검토하세요. 위원회는 5 인 이상으로 가능한 크게 만들어야 합니다.</li>
<li>무의미한 이슈를 가능한 자주 끌어 들입니다.</li>
<li>보도문, 의사록, 결의안에 대한 표현을 계속 검토하고 수정하세요.</li>
<li>지난 회의에서 결정된 사항을 되돌아보고 그 결정의 타당성에 대해 다시 의문을 제기하세요.</li>
<li>“조심” 하자고 주장하고 다른 회의 참석자들에게도 “합리적” 으로 생각하며 서두르지 않아야 나중에 당황하지 않는다고 말하세요.</li>
<li>어떤 결정이든 그 타당성에 대해 걱정하세요. 그 결정이 조직 내에서 숙고된 것인지 아니면 다른 상위 조직의 정책과 상충되지는 않는지 계속 의문을 제기하세요.</li>
</ol>
</section>
<section id="관리자-및-감독자" class="level3" data-number="6.9.2">
<h3 data-number="6.9.2" class="anchored" data-anchor-id="관리자-및-감독자"><span class="header-section-number">6.9.2</span> 관리자 및 감독자</h3>
<ol type="1">
<li>항상 서면으로 된 주문서를 요구하세요.</li>
<li>주문서의 내용을 의도적으로 오해합니다. 그러한 주문서에 대해 끝 없이 질문을 할 수 있고 긴 서신을 서로 주고 받을 수 있습니다. 그리고 아주 애매한 용어를 사용합니다.</li>
<li>주문서 전달을 지연시킵니다. 주문서 일부가 완성되었어도 전체가 준비될 때까지는 전달하지 마세요.</li>
<li>주문을 이행하는 중 조금의 지연도 전체 중단으로 이어질 수 있도록 현재 재고를 거의 다 써버릴 때까지 새로운 작업 재료를 주문하지 마세요.</li>
<li>확보하기 어려운 자재를 주문하세요. 저급한 자재는 저급한 산출물로 이어진다고 따지세요.</li>
<li>작업 할당 시에는 항상 중요하지 않은 작업부터 나눠주세요. 중요한 작업은 실력 없는 노동자에게 할당 하세요.</li>
<li>상대적으로 덜 중요한 제품에 완벽한 작업이 필요하다고 고집 부리세요. 눈에 보이는 결함이 있는 것은 다시 보완하도록 돌려보내고 맨 눈으로는 볼 수 없는 결함을 가진 부품은 통과시키세요.</li>
<li>부품과 자재가 공장 내의 잘못된 곳으로 보내지도록 잘못된 경로로 보내세요.</li>
<li>새로운 노동자를 훈련시킬 때는 불완전하거나 잘못된 지시를 하세요.</li>
<li>사기를 낮춰 생산량을 감소시키기 위해 실력 없는 노동자를 부적절하게 승진시키세요. 실력 있는 노동자는 차별하고 작업물에 대해 불평하세요.</li>
<li>더 중요한 일이 있을 때는 새로운 회의를 개최하세요.</li>
<li>그럴 듯한 방법으로 서류 작업을 늘리세요.</li>
<li>지침 발행, 수표 발행 등과 관련된 절차와 허가를 늘리고 한 명이면 됐을 모든 일을 세 명이 승인해야 하게 만드세요.</li>
<li>모든 규정을 빼놓지 않고 다 적용하세요.</li>
</ol>
</section>
<section id="회사원" class="level3" data-number="6.9.3">
<h3 data-number="6.9.3" class="anchored" data-anchor-id="회사원"><span class="header-section-number">6.9.3</span> 회사원</h3>
<ol type="1">
<li>주문을 받아 적을 때 자재의 수량을 잘 못적으세요. 그리고 비슷한 이름들은 서로 헷갈리게 적고 잘못된 주소를 사용하세요.</li>
<li>정부 기관과의 의사소통이 길어지게 하세요.</li>
<li>중요 문서를 잘못되게 정리하세요.</li>
<li>사본을 만들 때는 하나를 덜 만들어서 추후에 복사 작업이 추가로 필요하게 만드세요.</li>
<li>상관에게 중요한 전화가 오면 바쁘거나 통화 중이라고 말하세요.</li>
<li>다음 번 수거 때까지 우편물을 보내지 말고 보관하고 있으세요.</li>
<li>내부 정보처럼 위장된 흉흉한 소문을 퍼뜨리세요.</li>
</ol>
</section>
<section id="종업원" class="level3" data-number="6.9.4">
<h3 data-number="6.9.4" class="anchored" data-anchor-id="종업원"><span class="header-section-number">6.9.4</span> 종업원</h3>
<ol type="1">
<li>천천히 일하세요. 작업할때 필요한 동작의 수를 늘리세요. 예를 들면 무거운 망치 대신 가벼운 망치를 쓰거나, 큰 렌치가 필요할 때 작은 렌치를 사용하거나, 충분한 힘이 필요할 때 힘을 거의 쓰지 않는다거나 등등이 있습니다.</li>
<li>일할 때 가능한 많은 중단이 발생하도록 하세요. 선반이나 펀치머신 위에서 작업 중 자재를 바꿔야할 때, 쓸 데 없이 많은 시간을 들이세요. 절단 작업 또는 치수 작업 중이라면, 필요한 것보다 두 배 더 자주 수치를 확인하세요. 화장실을 갈 경우 쓸 데 없이 더 길게 다녀오세요. 항상 도구를 잃어버리고 다니도록 하세요.</li>
<li>실제로는 이해하더라도 외국어로 된 지시사항은 못알아 듣는 척하세요.</li>
<li>지시사항이 이해하기 어려운 척 하여 한 번 이상 더 반복하도록 물어보세요. 또는 특별히 걱정이 많은 척 하여 쓸데 없는 질문으로 관리자를 훼방 놓으세요.</li>
<li>작업을 엉망으로 한 뒤 나쁜 도구, 기계, 또는 장비 탓을 하세요. 그리고 일을 제대로 할 수 없다고 불평하세요.</li>
<li>신입 노동자에게 기술과 경험을 전수하지 마세요.</li>
<li>가능한 모든 방법으로 관리를 어렵게 하세요. 문서의 양식을 이해하기 어렵게 작성하여 실수를 하거나 필수 정보를 빼놓아서 다시 작성하게 만드세요.</li>
<li>가능하다면 직원의 고충을 관리자에게 보고하는 조직에 가입하거나 만드세요. 보고 절차가 관리자를 불편하게 하는지, 각 보고에 많은 수의 직원이 참여하는지 고충에 대해 최소 하나 이상의 회의를 수반하는지 등등을 확인하세요.</li>
<li>주문 받은 자재를 잘못 납품하세요.</li>
<li>정상 부품들을 불량 부품들과 함께 섞어 놓으세요.</li>
</ol>
</section>
</section>
<section id="조직의-사기를-낮추고-혼란을-일으키는-행동들" class="level2" data-number="6.10">
<h2 data-number="6.10" class="anchored" data-anchor-id="조직의-사기를-낮추고-혼란을-일으키는-행동들"><span class="header-section-number">6.10</span> 조직의 사기를 낮추고 혼란을 일으키는 행동들</h2>
<ol type="1">
<li>질문에 대해 불필요하게 복잡하고 모호하게 답변하기</li>
<li>근거 없는 위협이나 위험을 당국에 신고하기</li>
<li>의도적으로 무지한 척 행동하기</li>
<li>법적 문제를 일으키지 않는 선에서 타인을 불편하게 만들기</li>
<li>공공 서비스나 규정을 고의로 잘못 해석하기</li>
<li>사소한 일에도 과도하게 불만을 표출하기</li>
<li>특정 국적이나 배경을 가진 사람들을 공개적으로 차별하기</li>
<li>특정인의 등장 시 대화를 갑자기 중단하기</li>
<li>상황에 맞지 않게 과도한 감정 표현하기</li>
<li>공식 매체나 문화 행사를 의도적으로 외면하기</li>
<li>공동체 활동에 비협조적인 태도 보이기</li>
</ol>


</section>
</section>

 ]]></description>
  <category>Productivity</category>
  <category>Tip</category>
  <guid>https://tomorrow-lab.github.io/posts/md/How_sabotage.html</guid>
  <pubDate>Mon, 07 Oct 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>.DS_Store 파일 관리</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/How_Ds_Store.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="How_Ds_Store.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/How_Ds_Store.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p><code>.DS_Store</code> 파일은 다른 OS 로 데이터를 공유하는 과정에서 전달되는 경우가 많고 불필요한 정보까지 옮겨 질 수 있습니다. 그래서 아래와 같이 삭제해서 데이터를 옮기거나 자동 생성을 방지하는 작업이 필요합니다.</p>
<p><code>.DS_Store</code>(Desktop Services Store) 는 애플에서 정의한 파일 포맷으로, macOS 에서 아래와 같은 역할을 합니다.<sup>1</sup></p>
<ul>
<li>macOS 의 Finder 가 폴더에 접근할 때 자동으로 생성되며 해당 폴더의 메타데이터 (디렉토리 특성, 구조 등) 를 저장합니다.<sup>2</sup></li>
<li>윈도우의 <code>thumb.db</code> 파일과 유사한 기능을 합니다.</li>
</ul>
<section id="삭제법" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 삭제법</h1>
<p>터미널에서 다음 명령어를 실행합니다:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> find . <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-type</span> f <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-name</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.DS_Store'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-print</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-delete</span></span></code></pre></div>
</section>
<section id="생성-방지" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 생성 방지</h1>
<p><code>.DS_Store</code> 파일 자동 생성을 막으려면 다음 명령어를 사용합니다:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">defaults</span> write com.apple.desktopservices DSDontWriteNetworkStores true</span></code></pre></div>
<blockquote class="blockquote">
<p>다시 생성하려면 명령어 마지막을 <code>false</code> 로 변경합니다.</p>
</blockquote>
</section>
<section id="git-저장소에서-관리" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Git 저장소에서 관리</h1>
<p>Git repo 에도 자주 올라와 있는 경우를 보게 됩니다. 그럴 때는 프로젝트 폴더에서 아래와 같이 처리하면 됩니다.</p>
<ol type="1">
<li>먼저 <code>.DS_Store</code> 파일을 Git 저장소에서 제거합니다:</li>
</ol>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">find</span> . <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-name</span> .DS_Store <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-print0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xargs</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-0</span> git rm <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--ignore-unmatch</span></span></code></pre></div>
<ol start="2" type="1">
<li><code>.gitignore</code> 파일에 <code>.DS_Store</code> 를 추가하여 향후 추적을 방지합니다:</li>
</ol>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> .DS_Store <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> .gitignore</span></code></pre></div>
<ol start="3" type="1">
<li>변경사항을 스테이징 영역에 추가합니다:</li>
</ol>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .gitignore</span></code></pre></div>
<ol start="4" type="1">
<li>변경사항을 커밋합니다:</li>
</ol>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Remove .DS_Store files and add to .gitignore"</span></span></code></pre></div>
<ol start="5" type="1">
<li>변경사항을 원격 저장소에 푸시합니다:</li>
</ol>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>branch-name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>이를 통해 <code>.DS_Store</code> 파일을 프로젝트에서 제거하고, 향후 이 파일을 추적하지 않도록 설정할 수 있습니다.<sup>3</sup></p>
</section>
<section id="reference" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Reference</h1>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>https://chanhhh.tistory.com/209↩︎</p></li>
<li id="fn2"><p>https://jonhyuk0922.tistory.com/116↩︎</p></li>
<li id="fn3"><p>https://wooono.tistory.com/251↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Productivity</category>
  <category>Tip</category>
  <category>MacOS</category>
  <category>Git</category>
  <guid>https://tomorrow-lab.github.io/posts/md/How_Ds_Store.html</guid>
  <pubDate>Mon, 07 Oct 2024 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
