<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>tomorrow-lab</title>
<link>https://tomorrow-lab.github.io/</link>
<atom:link href="https://tomorrow-lab.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>The future of scientific discovery lies at the convergence of computational power and biological complexity. Our mission is to provide a platform where enthusiasts, researchers, and professionals can learn about and contribute to the rapidly evolving fields of bioinformatics, computational biology, and systems biology.</description>
<generator>quarto-1.7.31</generator>
<lastBuildDate>Sat, 31 May 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>프로그래밍을 위한 고정폭 폰트</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Font_monospace.html</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Font_monospace.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Font_monospace.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>프로그래머라면 코드 에디터를 열 때마다 어떤 폰트를 사용할지 고민해 본 적이 있을 것입니다. 일반적으로 문서 작성에는 가변폭(proportional) 폰트가 많이 쓰이지만, 프로그래밍에서는 대부분 고정폭(monospaced) 폰트를 사용합니다. 그 이유는 무엇일까요?</p>
<blockquote class="blockquote">
<p>고정폭 폰트는 모든 글자의 가로 길이가 동일한 글꼴을 의미합니다. 예를 들어, 영어 알파벳 ’i’와 ’m’의 폭이 같습니다. 반대로 가변폭 폰트는 글자마다 가로 길이가 다릅니다. ’i’는 좁고, ’m’은 넓죠.</p>
</blockquote>
<section id="고정폭-폰트가-필요한-이유" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 고정폭 폰트가 필요한 이유</h1>
<ul>
<li>코드 정렬의 일관성<br>
프로그래밍에서는 들여쓰기(indentation)와 코드 블록, 주석 등이 중요한 역할을 합니다. 고정폭 폰트를 사용하면 모든 문자가 동일한 폭을 차지하므로 코드가 정확하게 정렬되어 가독성이 크게 향상됩니다. 들여쓰기, 줄 맞춤, 표 형식의 데이터 등에서 혼선이 없습니다<sup>1</sup>.</li>
<li>특수문자와 숫자 구분<br>
코드에는 ‘0’과 ‘O’, ‘1’과 ‘l’, ’I’와 ’|’처럼 헷갈릴 수 있는 문자들이 자주 등장합니다. 고정폭 폰트는 이런 문자들을 명확하게 구분할 수 있도록 설계되어 있어 실수할 확률을 줄여줍니다[1]<sup>2</sup>.</li>
<li>가독성과 피로감 감소<br>
장시간 코드를 읽어야 하는 개발자들에게 가독성이 좋은 폰트는 매우 중요합니다. 고정폭 폰트는 작은 크기에서도 글자가 잘 구분되고, 눈의 피로도를 줄여줍니다<sup>3</sup>.</li>
</ul>
</section>
<section id="대표적-프로그래밍용-폰트" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 대표적 프로그래밍용 폰트</h1>
<p>검색해보면 프로그래밍용 고정폭 폰트는 아주 많습니다. 아래 목록은 아주 일부분일 뿐입니다.</p>
<ul>
<li><a href="https://font.download/font/menlo">Menlo</a>, <a href="https://font.download/font/sf-mono">SF Mono</a>:
<ul>
<li>맥 환경에서 많이 쓰입니다.</li>
</ul></li>
<li><a href="https://font.download/font/source-code-pro">Source Code Pro</a>, <a href="https://font.download/font/fira-code-2">Fira Code</a>, <a href="https://font.download/font/jetbrains-mono">JetBrain mono</a>:
<ul>
<li>오픈소스 및 다양한 환경에서 인기 있는 폰트입니다.</li>
</ul></li>
</ul>
</section>
<section id="한글이-지원되는-고정폭-폰트" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 한글이 지원되는 고정폭 폰트</h1>
<blockquote class="blockquote">
<p>대부분의 프로그래밍용 폰트들은 한글 글리프가 포함되어 있지 않습니다. 그래서 한글은 다른 글씨체로 표현되는 경우가 많습니다.</p>
</blockquote>
<p>한글은 기본적으로 전각(정사각형) 또는 장체(직사각형) 형태로 한 글자가 일정한 폭을 차지하도록 설계된 경우가 많지만, 실제로는 글자별로 폭이 다를 수 있는 가변폭 설계가 더 자연스럽고 가독성이 높아집니다. 코딩용 고정폭 폰트에 한글까지 적용하려면 매우 까다로운 설계와 대량의 한글 글리프(글자 모양)가 필요합니다. 그 결과 제작 비용은 높고 수요는 적어, 한글을 지원하는 고정폭 폰트는 많지 않습니다. 대표적인 예로 아래와 같은 폰트가 있습니다.</p>
<ul>
<li><a href="https://github.com/naver/d2codingfont">D2Coding</a>:
<ul>
<li>나눔바른고딕 기반의 한글 코딩용 고정폭 폰트.</li>
</ul></li>
<li><a href="https://github.com/be5invis/Sarasa-Gothic">Sarasa Gothic</a>:
<ul>
<li><a href="https://github.com/rsms/inter">Inter</a>,<a href="https://github.com/be5invis/Iosevka">Iosevka</a>과 <a href="https://github.com/adobe-fonts/source-han-sans">Source Han Sans</a>를 조합한 고정폭 코딩용 폰트.</li>
</ul></li>
<li><a href="https://github.com/y-kim/monoplex">Monoplex KR</a>:
<ul>
<li><a href="https://github.com/IBM/plex">IBM Plex Mono</a>에 <a href="https://github.com/IBM/plex">IBM Plex Sans KR</a>의 글자를 조합한 코딩용 폰트.</li>
</ul></li>
</ul>
<section id="끝없는-폰트-욕심" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="끝없는-폰트-욕심"><span class="header-section-number">3.1</span> 끝없는 폰트 욕심</h2>
<p>폰트는 취향을 많이 타다보니 저도 그동안 위의 여러 폰트를 시도해보았습니다. 그럼에도 만족하지 못하고 틈나면 폰트를 변경하던 중 최근 JetBrains Mono와 D2Coding을 결합한 폰트인 <a href="https://github.com/Jhyub/JetBrainsMonoHangul">JetBrainsMonoHangul</a>을 찾았고 fork해 약간의 수정을 거쳐 사용하고 있습니다<sup>4</sup>. 이 블로그에서도 웹폰트로 사용하고 있는데 상당히 만족스럽습니다.</p>
<p>물론 서로 다른 글리프를 임의 결합한 것이다보니 스타일이 조금 다르다는 단점이 있습니다. 이 문제를 해결하려면 폰트 디자인을 공부해 한글 글리프를 (대략 2,500개) 수정해야 합니다. 쉽지 않은 일이지요.</p>
</section>
</section>
<section id="결론" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 결론</h1>
<p>프로그래밍을 할 때 고정폭 폰트를 사용하는 것은 코드의 가독성과 정확한 정렬, 문자 구분등 실질적인 이유에서 필수적입니다. 여러분도 자신만의 취향에 맞는 고정폭 폰트를 찾아보는 것을 추천드리며 <a href="https://github.com/partrita/JBD2/">JBD2</a>도 한번 써보세요!</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>https://steemit.com/kr/<span class="citation" data-cites="jwsohn/8-fixed-width-font">@jwsohn/8-fixed-width-font</span>↩︎</p></li>
<li id="fn2"><p>https://html4silver.tistory.com/152↩︎</p></li>
<li id="fn3"><p>https://slowalk.com/2195↩︎</p></li>
<li id="fn4"><p>https://github.com/partrita/JBD2/↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Productivity</category>
  <category>Tip</category>
  <category>Font</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Font_monospace.html</guid>
  <pubDate>Sat, 31 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>일상에 필요한 통계학 개념</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/STAT_4Life.html</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="STAT_4Life.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/STAT_4Life.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>이 글의 목적은 통계의 “철학”을 우리 삶에서 실제로 적용하는 방법을 소개하고 통계가 작동하는 방식을 더 명확하게 설명 하는 것입니다. 글을 읽고 나면 생각보다 실생활에 통계가 많이 사용된 다는 것을 알게 될 것입니다.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>들어가기 전에 이글은 <a href="https://barbierjoseph.com/blog/statistics-in-our-daily-life">원문</a>을 번역하고 요약한 글입니다. 자세한 것은 원문을 확인하세요.</p>
</div>
</div>
<section id="추정estimation-근사치-구하기" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 추정(Estimation): 근사치 구하기</h1>
<p>통계에서 무언가를 “추정”하는 것은 일반적입니다. 학생들의 평균 체질량 지수를 추정할 수도 있고 더 복잡한 예로 여러 변수 간의 회귀를 가장 잘 나타내는 계수 벡터등을 추정합니다.</p>
<p>추정에서의 중요한 사실은 우리가 진정한 추정량을 결코 알 수 없다는 사실입니다. 예를 들어 시험 전에 학생들이 공부하는 평균 시간을 알고 싶다고 가정해 봅시다. 이를 추정하는 방법은 수업 중에 여러 학생에게 물어보고 평균을 계산하는 것입니다. 그러나 전 세계 모든 학생을 동시에 조사하는 것은 불가능합니다.</p>
<p>그렇다면 우리가 얻은 추정량이 충분히 좋은지 여부는 어떻게 우리의 목표와 관련이 있는지 어떻게 알 수 있을까요? 우리는 아래와 같이 편향과 분산을 통해 추정 값에 대하여 판단합니다.</p>
<section id="편향되지-않은-추정" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="편향되지-않은-추정"><span class="header-section-number">1.1</span> 편향되지 않은 추정</h2>
<p>편향의 정의는 단순히 원래 목표로부터의 벗어남을 의미 합니다. 연구된 매개변수의 기대값(즉, 무한한 수의 학생을 인터뷰할 수 있다면 얻어야 할 값)과 <strong>실제</strong>(또는 진정한) 매개변수 간의 차이가 0이면 추정량은 편향되지 않은 것으로 간주될 수 있습니다. 하지만 우리의 추정량이 편향되었는지 아닌지를 아는 것은 쉽지 않습니다.</p>
<p>예를 들어 수업에 출석한 학생에게만 평균 공부 시간을 질문하는 것은 수업에 출석하지 않은 학생은 우리의 질문에 답하지 않을 것이라는 것을 의미합니다. 그리고 수업에 가지 않는 학생들은 시험 공부를 덜 할 가능성이 있습니다.</p>
</section>
<section id="낮은-분산을-가진-추정" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="낮은-분산을-가진-추정"><span class="header-section-number">1.2</span> 낮은 분산을 가진 추정</h2>
<p>분산은 측정 값의 퍼짐의 정도를 나타냅니다. 다시 말해 표본의 사람들이 평균에서 얼마나 벗어나는 경향이 있는지 알려줍니다. 반대로 분산이 0이라는 것은 모든 사람이 동일한 값을 갖는 것입니다.</p>
<p>이것은 중요합니다. 왜냐하면 편향되지 않은 추정량이 낮은 분산을 갖는다면 일반화할 수 있다고 확신할 수 있다는 것을 의미하기 때문입니다. 예를 들어 학생이 시험 전에 평균 4시간 동안 공부한다고 추정하고 이 추정이 편향되지 않고 낮은 분산을 갖는다는 것을 증명한다면 <strong>진정한 추정량</strong>은 4시간 근처일 가능성이 높습니다.</p>
</section>
<section id="추론inferences-예측하기" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="추론inferences-예측하기"><span class="header-section-number">1.3</span> 추론(Inferences): 예측하기</h2>
<p>모든 추정의 목적은 추론을 하는 것입니다. 앞서 말했듯이 당신은 세상의 모든 정보를 가지고 있지 않고 적은 수의 데이터를 기반으로 일반화할 수 있는지 여부를 알고 싶습니다. 이때 통계학은 일반적으로 <code>p-value</code>을 계산하는 방법을 적용합니다.</p>
<p>예를 들어 약물이 LDL 콜레스테롤을 낮추는 데 효과적인지 알고 싶다고 가정합니다. 그렇다면 높은 LDL을 가진 사람들에게 그 약물을 투여하고 일주일 후에 높은 LDL을 가지고 있지만 약물을 복용하지 않은 사람들과의 차이를 비교합니다. 약물이 효과가 없다고 가정하면 우리가 얻은 결과(예: 약물을 복용한 사람들은 LDL이 10포인트 감소했고 위약을 복용한 사람들은 4포인트만 감소했습니다)를 얻을 확률을 계산할 수 있습니다.</p>
<p>만약 이 확률이 매우 낮다면 우리의 초기 가설이 사실이 아닐 수 있다고 추론할 수 있습니다. 즉, 약물이 LDL 콜레스테롤을 낮추는 데 효과적일 수 있다는 것입니다.</p>
<p>여기서 확률이 낮다는 것은 일반적으로 5%로 사용합니다. <img src="https://latex.codecogs.com/png.latex?10%20-%204%20=%206">의 차이가 발생할 확률이 5% 미만이라면 우리는 결과가 약물이 효과가 없다는 가설(귀무가설)을 받아들일 수 없고 반대로 약물이 효과적이라고 말합니다.</p>
<p><code>p-value</code>이 5% 미만이라는 것은 실제로는 효과가 없더라도 효과가 있다고 결론(False positive) 내릴 5%의 위험을 가져간다는 것과 같습니다. 거짓 양성과 거짓 음성은 서로 반대로 움직이기 때문에 중간 절충점으로 5%를 사용하는 것입니다. 임상 분야에서는 아픈 사람에게 아무 이상이 없다고 말할 확률(False negative)을 최소화하는 것을 선호하기에 <code>p-value</code> 5%이 적절한지에 대한 큰 이견은 없습니다.</p>
</section>
</section>
<section id="베이지안주의-불확실성에-대한-이해" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 베이지안주의: 불확실성에 대한 이해</h1>
<p>베이지안주의는 <strong>확률을 주관적인 믿음의 분포</strong>로 간주하며 새로운 정보가 들어올 때 그 믿음을 업데이트하는 사고방식입니다. 예를 들어, <em>보르도는 일요일마다 비가 온다</em>고 믿었지만 최근 날씨가 화창했다면 자신의 기존 믿음을 현실에 맞게 조정해야 합니다. 이전에 일요일 95% 확률로 비가 온다고 생각했다면 새로운 정보에 따라 이 확률은 70%로 낮아질 수 있습니다.</p>
<p>베이지안 통계도 이와 비슷하게 작동합니다. 특정 약물이 혈당을 평균 3단위 낮춘다고 알려져 있었지만 최근 임상시험에서 평균 2단위의 효과만 보였다면 우리는 이 약물의 진짜 효과가 그 중간인 2.6일 가능성이 있다고 추정할 수 있습니다. 이러한 방식의 사고는 아래와 같은 일상 곳곳에서 유용하게 쓰입니다.</p>
<ul>
<li>학생들의 결석률 추정</li>
<li>통증의 원인 분석</li>
<li>건강에 대한 믿음을 과학적 연구로 조정</li>
</ul>
<p>여기서 핵심은 <strong>새로운 정보가 생기면 믿음을 수정하라</strong>는 것입니다. 모든 정보를 같은 무게로 받아들이는 것이 아니라, 믿을 만한 출처(예: 논문 vs SNS 댓글)에 따라 가중치를 다르게 주면 됩니다. 이 방법론은 더 개방적이고 유연한 사고를 가능하게 해줍니다.</p>
</section>
<section id="마치며" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 마치며</h1>
<p>우리는 일상에서 어디서 주차 자리를 찾을 수 있을지, 어떤 대학이 당신에게 가장 적합한지등 언제나 추정을 합니다. 알고 있는 것을 바탕으로 근사치를 만드는 것은 자주 있는 일인 것입니다. 따라서 더 나은 추정을 하는 가장 좋은 방법은 당신의 추정에 있을 수 있는 편향과 분산 수준을 생각하는 것입니다. 자연스럽게 항상 추정 하고 있다는 것을 명심하는 것이 중요합니다.</p>
<p>이 글의 목표는 정확성이 아닌 통계적 방법에 대한 직관을 제공하는 것입니다. 이제 통계학에 대한 더 나은 이해를 갖게 되었길 바라며 당신에게 유용한 몇 가지 통계 개념을 배웠기를 바랍니다.</p>
<p>실생활의 문제에 통계적인 개념을 적용하는 것은 훌륭한 인식론적 습관입니다. 저는 우리의 대부분의 믿음이 우리의 인식론적 습관, 즉 매일매일의 습관에 기반하여 정보를 접근하는 방식에서 비롯된다고 믿습니다. 따라서 통계학은 당신에게 더 열린 사고와 명확한 표현 그리고 타인에게서 배우는 능력을 길러줄 것입니다.</p>


</section>

 ]]></description>
  <category>Statistic</category>
  <category>Tip</category>
  <category>Productivity</category>
  <guid>https://tomorrow-lab.github.io/posts/md/STAT_4Life.html</guid>
  <pubDate>Sat, 17 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>미루기를 멈추기 위한 간단한 방법들</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Start_doing.html</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Start_doing.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Start_doing.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:80.0%"></a></p>
</figure>
</div>
<p>미루는 습관을 완전히 없애려고 처음부터 너무 애쓰기보다는 새로운 습관에 익숙해지듯 차근차근 그 정도를 줄여나가는 것이 효과적입니다. 마치 단숨에 높은 벽을 넘을 수 없듯이 오랫동안 굳어진 습관을 바꾸는 데에도 섬세한 접근 방식이 필요합니다. 다음은 미루는 습관을 극복하고 행동력을 키우는 데 도움이 되는 방법들입니다.</p>
<ol type="1">
<li><p>막연하고 포괄적인 목표 대신 관찰 가능하고 구체적인 행동 목표를 설정하세요.</p>
<ul>
<li>“나는 미루는 습관을 멈추고 싶다.” ❌</li>
<li>“나는 9월 1일까지 차고를 정리하고 정돈하고 싶다.” ✅</li>
</ul></li>
<li><p>현실적인 목표를 설정하세요. 거창한 목표보다는 작은 목표를 생각하고, 이상적인 목표보다는 최소한으로 수용 가능한 목표를 선택하세요. 그리고 한 번에 하나의 목표에만 집중하세요!</p>
<ul>
<li>“나는 다시는 미루지 않을 거야!” ❌</li>
<li>“나는 매일 수학 공부에 한 시간씩 투자할 거야.” ✅</li>
</ul></li>
<li><p>목표를 작고 구체적인 하위 목표로 나누세요. 각 하위 목표는 큰 목표보다 달성하기 쉽습니다.</p>
<ul>
<li>“나는 보고서를 쓸 거야.” ❌</li>
<li>“오늘 밤에는 스프레드시트 계획을 세우는 데 30분을 쓸 거야. 내일은 데이터를 입력하는 데 30분을 쓰고, 그다음 날에는 그 데이터를 바탕으로 보고서를 쓰는 데 한 시간을 쓸 거야.” ✅</li>
</ul></li>
<li><p>시간에 대해 (희망적으로 생각하기보다는) 현실적으로 생각하세요. 스스로에게 물어보세요: 그 작업에 실제로 얼마나 많은 시간이 걸릴까? 내가 실제로 사용할 수 있는 시간은 얼마나 될까?</p>
<ul>
<li>“내일은 시간이 충분해.” ❌</li>
<li>“언제 시작할 수 있는지 달력을 확인하는 게 좋겠어. 지난번에는 생각보다 오래 걸렸어.” ✅</li>
</ul></li>
<li><p>일단 시작하세요! 전체 프로젝트를 한 번에 끝내려고 하지 말고 “천 리 길도 한 걸음부터.”를 기억하세요.</p>
<ul>
<li>“한 번에 다 끝내야 해.” ❌</li>
<li>“내가 취할 수 있는 첫 번째 작은 단계는 무엇일까?” ✅</li>
</ul></li>
<li><p>포모도로 기법을 활용하세요. 타이머를 25분 동안 맞춰놓고 작업에 집중하세요.</p>
<ul>
<li>“겨우 25분밖에 없는데, 뭘 해.” ❌</li>
<li>“다음 25분 동안 이 작업의 어떤 부분을 할 수 있을까?” ✅</li>
</ul></li>
<li><p>장애물과 일정 지연을 예상하세요. 첫 번째 (또는 두 번째, 세 번째) 장애물에 부딪히자마자 포기하지 마세요. 장애물은 해결해야 할 문제일 뿐 당신의 가치나 능력에 대한 반영이 아닙니다.</p>
<ul>
<li>“교수님이 연구실에 안 계시니, 논문을 쓸 수 없어. 영화나 보러 가야겠다.” ❌</li>
<li>“교수님이 안 계시더라도, 돌아오실 때까지 개요를 작성할 수 있어.” ✅</li>
</ul></li>
<li><p>가능하다면 그 작업을 위임하거나 하지마세요! 정말 당신만이 이 일을 할 수 있는 유일한 사람인지, 정말로 반드시 해야 할 일인지를 생각해보세요. 아무도 모든 것을 다 할 수는 없다는 것을 기억하세요.</p>
<ul>
<li>“이 일을 정확하게 할 수 있는 사람은 나밖에 없어.” ❌</li>
<li>“더 중요한 프로젝트를 위해 이 작업을 맡길 적임자를 찾아볼 거야.” ✅</li>
</ul></li>
<li><p>당신의 시간을 보호하세요. 거절하는 법을 배우세요. 불필요하거나 추가적인 프로젝트를 맡지 마세요. 중요한 일에 집중하기 위해 “긴급한” 일에 응답하지 않도록 해야 합니다.</p>
<ul>
<li>“나를 필요로 하는 사람은 누구든 도와줘야 해.” ❌</li>
<li>“일하는 동안에는 전화를 받을 필요가 없어. 메시지를 확인하고 나중에 일이 끝나면 다시 전화할게.” ✅</li>
</ul></li>
<li><p>당신의 변명을 미루는 이유로 사용하지 말고 신호로 사용하세요. 또는 어떤 업무를 완료한 것에 대한 보상으로 사용하세요.</p>
<ul>
<li>“피곤해 (우울해/배고파/바빠/혼란스러워 등등). 나중에 할 거야.” ❌</li>
<li>“피곤하니까, 보고서 작업에 25분만 투자할 거야. 그러고 나서 낮잠을 자야겠다.” ✅</li>
</ul></li>
<li><p>결과보다는 노력에 집중하세요. 진행 상황에 따라 조금씩 보상하세요. 작은 진전이라도 진전된 것입니다!</p>
<ul>
<li>“다 끝낼 때까지 기분이 좋을 수 없어.” ❌</li>
<li>“몇 단계를 거쳤고 열심히 일했어. 기분이 좋다. 이제 영화를 봐야겠다.” ✅</li>
</ul></li>
<li><p>당신의 미루는 행동을 신호로 활용하세요. 멈추고 스스로에게 물어보세요: “나의 미루는 행동은 나에게 어떤 메시지를 보내고 있는 걸까?”</p>
<ul>
<li>“또 미루고 있어. 내가 정말 싫어.” ❌</li>
<li>“또 미루고 있네. 지금 어떤 기분이 들지? 이건 뭘 의미하는 걸까? 뭘 배울 수 있을까?” ✅</li>
</ul></li>
</ol>
<p>다음을 기억하세요.</p>
<ul>
<li>당신에게는 선택권이 있습니다. 미룰 수도 있고, 행동할 수도 있습니다.</li>
<li>과거의 잘못이 현재 당신을 통제할 필요는 없습니다.</li>
<li>배우고 성장하고 스스로에게 도전하는 삶이 즐거움을 줍니다.</li>
<li>완벽할 필요는 없습니다.</li>
</ul>
<p><strong>출처</strong></p>
<ul>
<li>Jane B. Burka and Lenora M. Yuen, PROCRASTINATION, Why You Do It, What to Do About It Now, Da Capo Press, 2008</li>
</ul>



 ]]></description>
  <category>Procrastination</category>
  <category>Productivity</category>
  <category>Tip</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Start_doing.html</guid>
  <pubDate>Fri, 02 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>파이썬을 사용한 각종 Bioinformatic 시각화 스니펫</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/python_Biotite.html</link>
  <description><![CDATA[ 





<p>생명과학 연구는 방대한 데이터 분석과 복잡한 계산을 요구합니다. 특히 유전체, 단백질체, 전사체 데이터 등 생물학적 데이터의 폭발적인 증가로 인해, 프로그래밍을 활용한 효율적인 데이터 처리 및 분석은 필수적인 역량이 되었습니다. 이러한 어려움을 극복하고 연구 효율성을 높이기 위해 파이썬 기반의 강력한 생물정보학 라이브러리인 Biotite와 Biopython을 활용하는 것은 매우 효과적인 방법입니다. 이 두 라이브러리의 주요 기능과 함께 실제 연구에 유용한 코드 스니펫을 알아보겠습니다.</p>
<section id="설치하기" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 설치하기</h1>
<section id="biopython" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="biopython"><span class="header-section-number">1.1</span> Biopython</h2>
<p>Biopython은 생물학적 서열을 다루고 분석하는 데 특화된 파이썬 라이브러리입니다. FASTA, GenBank, PDB 등 다양한 생물학적 데이터 포맷을 파싱하고, 서열 정렬, 계통 발생 분석, 단백질 구조 분석 등 광범위한 기능을 제공합니다. Biopython은 오랜 역사를 가지고 있으며, 방대한 사용자 커뮤니티와 잘 정리된 문서 덕분에 초보자부터 전문가까지 쉽게 접근할 수 있다는 장점이 있습니다.</p>
</section>
<section id="biotite" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="biotite"><span class="header-section-number">1.2</span> Biotite</h2>
<p>Biotite는 생물정보학 분야에서 자주 사용되는 다양한 도구와 기능을 제공하는 포괄적인 파이썬 패키지입니다. 주요 특징은 다음과 같습니다.</p>
<ul>
<li>다양한 서열 데이터 분석: DNA, RNA, 단백질 서열을 읽고 쓰고 조작하는 것은 물론, 서열 정렬, 모티프 검색, 계통 발생 분석 등 고급 분석 기능까지 제공합니다.</li>
<li>분자 3D 구조 탐색 및 시각화: 단백질, 핵산 등의 분자 구조 데이터를 로드하고 분석하며, 시각화 도구와의 연동을 통해 3차원 구조를 효과적으로 탐색할 수 있도록 지원합니다.</li>
<li>주요 생물학 데이터베이스 접근: NCBI Entrez, UniProt 등 주요 생물학 데이터베이스에 프로그래밍 방식으로 접근하여 필요한 정보를 손쉽게 다운로드하고 활용할 수 있습니다.</li>
<li>외부 생물정보학 소프트웨어 통합: Autodock, BLAST, Clustal Omega와 같은 널리 사용되는 생물정보학 소프트웨어를 Biotite 환경 내에서 직접 실행하고 결과를 분석할 수 있도록 통합 기능을 제공하여 워크플로우를 간소화합니다.</li>
</ul>
</section>
<section id="pixi-패키지-관리자로-설치하기" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="pixi-패키지-관리자로-설치하기"><span class="header-section-number">1.3</span> pixi 패키지 관리자로 설치하기</h2>
<p>Biotite와 Biopython은 pip를 통해서도 설치할 수 있지만, pixi는 좀 더 편리한 의존성 관리 기능을 제공합니다. pixi 패키지 관리자를 통해 매우 간단하게 처리할 수 있습니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> add biopython</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> add biotite</span></code></pre></div>
<section id="추가로-필요한-도구-설치하기" class="level3" data-number="1.3.1">
<h3 data-number="1.3.1" class="anchored" data-anchor-id="추가로-필요한-도구-설치하기"><span class="header-section-number">1.3.1</span> 추가로 필요한 도구 설치하기</h3>
<p>Biotite, Biopython과 함께 사용하면 연구 효율성을 더욱 높일 수 있는 유용한 외부 도구들을 설치합니다.</p>
<section id="clustal-omega-다중-서열-정렬-도구" class="level4" data-number="1.3.1.1">
<h4 data-number="1.3.1.1" class="anchored" data-anchor-id="clustal-omega-다중-서열-정렬-도구"><span class="header-section-number">1.3.1.1</span> Clustal-Omega: 다중 서열 정렬 도구</h4>
<p>Clustal-Omega는 다중 서열 정렬을 수행하는 강력한 명령줄 프로그램입니다. 운영체제별 설치 방법이 다르지만, pixi를 사용하면 다음과 같이 간단하게 설치할 수 있습니다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> project channel add bioconda <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 바이오콘다 채널이 필요</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> add clustalo</span></code></pre></div>
</section>
<section id="abnumber-항체-서열-분석-라이브러리" class="level4" data-number="1.3.1.2">
<h4 data-number="1.3.1.2" class="anchored" data-anchor-id="abnumber-항체-서열-분석-라이브러리"><span class="header-section-number">1.3.1.2</span> AbNumber: 항체 서열 분석 라이브러리</h4>
<p>AbNumber는 항체 서열 분석을 위한 파이썬 라이브러리로, 넘버링, 가변 영역 식별 등 다양한 기능을 제공합니다. pixi로 간편하게 설치할 수 있습니다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> add abnumber</span></code></pre></div>
</section>
</section>
<section id="흔히-발생하는-오류와-해결-방법" class="level3" data-number="1.3.2">
<h3 data-number="1.3.2" class="anchored" data-anchor-id="흔히-발생하는-오류와-해결-방법"><span class="header-section-number">1.3.2</span> 흔히 발생하는 오류와 해결 방법</h3>
<p>Biotite를 처음 사용하거나 환경을 업데이트하는 과정에서 다음과 같은 ValueError가 발생할 수 있습니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ValueError:</span> numpy.ufunc size changed, may indicate binary incompatibility.</span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ValueError:</span> numpy.ndarray size changed, may indicate binary incompatibility.</span></code></pre></div>
<p>이 오류는 Biotite가 현재 시스템에 설치된 NumPy 버전과 호환되지 않게 빌드되었을 가능성이 높다는 것을 의미합니다. 일반적으로 Biotite가 이미 설치된 상태에서 NumPy를 업데이트했을 때 발생합니다.</p>
<p>이 문제를 해결하는 가장 효과적인 방법은 NumPy와 Biotite를 모두 최신 버전으로 업데이트하는 것입니다. pixi를 사용하는 경우 다음 명령어를 실행하여 업데이트를 시도해 보세요.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> update numpy biotite</span></code></pre></div>
<p>이제 실제 코드 예시를 살펴보겠습니다. 다음 섹션에서는 Biopython과 Biotite를 활용하여 생물학적 데이터를 다루는 간단하면서도 유용한 코드 스니펫을 제공할 예정입니다.</p>
<div id="cell-2" class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용한 biotite 버전 확인</span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Bio</span>
<span id="cb6-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite</span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Biotite 버전: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>biotite<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>__version__<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Biopython 버전: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Bio<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>__version__<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Biotite 버전: 1.1.0
Biopython 버전: 1.85</code></pre>
</div>
</div>
</section>
</section>
</section>
<section id="dna-분석-관련" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> DNA 분석 관련</h1>
<section id="플라스미드-맵-그리기" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="플라스미드-맵-그리기"><span class="header-section-number">2.1</span> 플라스미드 맵 그리기</h2>
<p>아래 코드는 AddGene에서 pET15 플라스미드의 GenBank 파일을 다운로드해서 플라스미드 맵을 그리는 방법입니다.</p>
<div id="cell-4" class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite</span>
<span id="cb8-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.graphics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> graphics</span>
<span id="cb8-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.io.genbank <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gb</span>
<span id="cb8-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb8-5"></span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> read_genbank_file(file_path):</span>
<span id="cb8-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""GenBank 파일을 읽고 주석 정보를 추출합니다."""</span></span>
<span id="cb8-9">    gb_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gb.GenBankFile.read(file_path)</span>
<span id="cb8-10">    annotation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gb.get_annotation(</span>
<span id="cb8-11">        gb_file,</span>
<span id="cb8-12">        include_only<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb8-13">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"promoter"</span>,</span>
<span id="cb8-14">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"terminator"</span>,</span>
<span id="cb8-15">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein_bind"</span>,</span>
<span id="cb8-16">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RBS"</span>,</span>
<span id="cb8-17">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CDS"</span>,</span>
<span id="cb8-18">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rep_origin"</span>,</span>
<span id="cb8-19">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"primer_bind"</span>,</span>
<span id="cb8-20">        ],</span>
<span id="cb8-21">    )</span>
<span id="cb8-22">    _, seq_length, _, _, _, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gb.get_locus(gb_file)</span>
<span id="cb8-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> annotation, seq_length</span>
<span id="cb8-24"></span>
<span id="cb8-25"></span>
<span id="cb8-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> custom_feature_formatter(feature):</span>
<span id="cb8-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""각 유전자 요소의 시각화 스타일을 Nord 테마의 Aurora 색상으로 정의합니다."""</span></span>
<span id="cb8-28">    label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> feature.qual.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>)</span>
<span id="cb8-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Nord Aurora 색상 정의</span></span>
<span id="cb8-30">    nord_aurora <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb8-31">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nord11"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#BF616A"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 빨간색</span></span>
<span id="cb8-32">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nord12"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#D08770"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 주황색</span></span>
<span id="cb8-33">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nord13"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EBCB8B"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 노란색</span></span>
<span id="cb8-34">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nord14"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A3BE8C"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 초록색</span></span>
<span id="cb8-35">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nord15"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#B48EAD"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 보라색</span></span>
<span id="cb8-36">    }</span>
<span id="cb8-37">    style_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb8-38">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"promoter"</span>: (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, nord_aurora[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nord14"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, label),</span>
<span id="cb8-39">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"terminator"</span>: (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, nord_aurora[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nord11"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, label),</span>
<span id="cb8-40">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein_bind"</span>: (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, nord_aurora[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nord15"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, label),</span>
<span id="cb8-41">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RBS"</span>: (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, nord_aurora[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nord13"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, label),</span>
<span id="cb8-42">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CDS"</span>: (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, nord_aurora[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nord12"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, label),</span>
<span id="cb8-43">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rep_origin"</span>: (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, nord_aurora[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nord15"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, label),</span>
<span id="cb8-44">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"primer_bind"</span>: (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, nord_aurora[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nord14"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, label),</span>
<span id="cb8-45">    }</span>
<span id="cb8-46">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> style_map.get(feature.key, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, label))</span>
<span id="cb8-47"></span>
<span id="cb8-48"></span>
<span id="cb8-49"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_plasmid_map(annotation, seq_length, file_name, figsize):</span>
<span id="cb8-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""플라스미드 맵을 그립니다."""</span></span>
<span id="cb8-51">    fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize)</span>
<span id="cb8-52">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span>, projection<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"polar"</span>)</span>
<span id="cb8-53">    graphics.plot_plasmid_map(</span>
<span id="cb8-54">        ax,</span>
<span id="cb8-55">        annotation,</span>
<span id="cb8-56">        plasmid_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seq_length,</span>
<span id="cb8-57">        label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>file_name,</span>
<span id="cb8-58">        feature_formatter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>custom_feature_formatter,</span>
<span id="cb8-59">        tick_step<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>,</span>
<span id="cb8-60">    )</span>
<span id="cb8-61">    fig.tight_layout()</span>
<span id="cb8-62">    plt.show()</span>
<span id="cb8-63"></span>
<span id="cb8-64"></span>
<span id="cb8-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 메인 실행 부분</span></span>
<span id="cb8-66">file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/input/pET15-MHL.gbk"</span></span>
<span id="cb8-67">file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pET15-MHL"</span></span>
<span id="cb8-68"></span>
<span id="cb8-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GenBank 파일 읽기 및 주석 추출</span></span>
<span id="cb8-70">annotation, seq_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> read_genbank_file(file_path)</span>
<span id="cb8-71"></span>
<span id="cb8-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 플라스미드 맵 그리기</span></span>
<span id="cb8-73">plot_plasmid_map(annotation, seq_length, file_name, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-3-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-3-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="abi-트레이스-시각화" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="abi-트레이스-시각화"><span class="header-section-number">2.2</span> ABI 트레이스 시각화</h2>
<p>아래 코드는 Sanger법을 통한 DNA sequencing 결과 중 ABI 트레이스 파일을 검사하기 위해 작성되었습니다. 이미 다른 소프트웨어들이 있지만 사용하기 어려운 경우 Biopython을 사용해 아래와 같이 간단하게 작업할 수 있습니다.</p>
<div id="cell-6" class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> defaultdict</span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb9-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb9-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> Bio <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SeqIO</span>
<span id="cb9-6"></span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_abi_trace_subplots(</span>
<span id="cb9-9">    file_path,</span>
<span id="cb9-10">    channels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb9-11">    start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb9-12">    end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb9-13">    points_per_subplot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb9-14">    figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),</span>
<span id="cb9-15">    legend_labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb9-16">):</span>
<span id="cb9-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb9-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    ABI 파일의 trace 데이터를 읽어 subplot을 사용하여 여러 행으로 나누어 시각화하고,</span></span>
<span id="cb9-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    하나의 범례를 상단 오른쪽에 표시합니다. 각 subplot의 x축 레이블은 제거되고,</span></span>
<span id="cb9-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    제목은 왼쪽으로 정렬됩니다.</span></span>
<span id="cb9-21"></span>
<span id="cb9-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb9-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        file_path (str): ABI 파일 경로.</span></span>
<span id="cb9-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        channels (list, optional): 플롯할 채널 목록. None이면 모든 채널을 플롯합니다.</span></span>
<span id="cb9-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        start (int, optional): 플롯할 데이터의 시작 인덱스.</span></span>
<span id="cb9-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        end (int, optional): 플롯할 데이터의 끝 인덱스.</span></span>
<span id="cb9-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        points_per_subplot (int, optional): 각 subplot에 표시할 데이터 포인트 수. 기본값은 1000입니다.</span></span>
<span id="cb9-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        figsize (tuple, optional): 전체 플롯 크기 (가로, 세로). 기본값은 (14, 10)입니다.</span></span>
<span id="cb9-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        legend_labels (list, optional): 범례에 표시할 레이블 목록. None이면 채널 이름을 사용합니다.</span></span>
<span id="cb9-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb9-31">    record <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SeqIO.read(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abi"</span>)</span>
<span id="cb9-32"></span>
<span id="cb9-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> channels <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb9-34">        channels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATA9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATA10"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATA11"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATA12"</span>]</span>
<span id="cb9-35"></span>
<span id="cb9-36">    trace <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> defaultdict(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>)</span>
<span id="cb9-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> channels:</span>
<span id="cb9-38">        data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> record.annotations[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abif_raw"</span>][c]</span>
<span id="cb9-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> start <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> end <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb9-40">            data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[start:end]</span>
<span id="cb9-41">        trace[c] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data</span>
<span id="cb9-42"></span>
<span id="cb9-43">    num_points <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(trace[channels[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> trace <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> trace[channels[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb9-44">    num_subplots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(np.ceil(num_points <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> points_per_subplot))</span>
<span id="cb9-45"></span>
<span id="cb9-46">    fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(</span>
<span id="cb9-47">        num_subplots, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize, sharex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb9-48">    )  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sharex를 False로 유지</span></span>
<span id="cb9-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num_subplots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb9-50">        axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [axes]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># axes가 하나의 subplot인 경우 리스트로 감싸줍니다.</span></span>
<span id="cb9-51"></span>
<span id="cb9-52">    pastel_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#a8ddb5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#fec44f"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#80b1d3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e78ac3"</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파스텔 톤 색상</span></span>
<span id="cb9-53">    lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb9-54">    labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> legend_labels <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> legend_labels <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> channels</span>
<span id="cb9-55"></span>
<span id="cb9-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(channels):</span>
<span id="cb9-57">        color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pastel_colors[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pastel_colors)]</span>
<span id="cb9-58">        (line,) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot([], [], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>labels[i])</span>
<span id="cb9-59">        lines.append(line)</span>
<span id="cb9-60"></span>
<span id="cb9-61">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, ax <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(axes):</span>
<span id="cb9-62">        start_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> points_per_subplot</span>
<span id="cb9-63">        end_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>((i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> points_per_subplot, num_points)</span>
<span id="cb9-64">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(start_index, end_index)</span>
<span id="cb9-65"></span>
<span id="cb9-66">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j, c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(channels):</span>
<span id="cb9-67">            data_segment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> trace[c][start_index:end_index]</span>
<span id="cb9-68">            ax.plot(x, data_segment, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pastel_colors[j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pastel_colors)])</span>
<span id="cb9-69"></span>
<span id="cb9-70">        ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Intensity"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb9-71">        ax.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"both"</span>, which<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"major"</span>, labelsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb9-72">        ax.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"both"</span>, which<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"minor"</span>, labelsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb9-73">        ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb9-74"></span>
<span id="cb9-75">    fig.suptitle(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"ABI Trace: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.28</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 제목 왼쪽 정렬</span></span>
<span id="cb9-76">    fig.legend(</span>
<span id="cb9-77">        handles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lines,</span>
<span id="cb9-78">        labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>labels,</span>
<span id="cb9-79">        loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upper right"</span>,</span>
<span id="cb9-80">        bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>),</span>
<span id="cb9-81">        ncol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(channels),</span>
<span id="cb9-82">    )</span>
<span id="cb9-83">    fig.tight_layout(rect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 제목과 범례 공간 확보 및 조정</span></span>
<span id="cb9-84">    plt.subplots_adjust(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 제목 위치 추가 조정</span></span>
<span id="cb9-85">    plt.show()</span>
<span id="cb9-86"></span>
<span id="cb9-87"></span>
<span id="cb9-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예시 사용:</span></span>
<span id="cb9-89">file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../input/250407_L234AL235A_R.ab1"</span></span>
<span id="cb9-90"></span>
<span id="cb9-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전체 데이터 플롯을 1000 포인트씩 끊어서 여러 subplot으로 표시하고, 하나의 범례를 상단 오른쪽에 배치</span></span>
<span id="cb9-92">plot_abi_trace_subplots(</span>
<span id="cb9-93">    file_path,</span>
<span id="cb9-94">    points_per_subplot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb9-95">    figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>),</span>
<span id="cb9-96">    legend_labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T"</span>],</span>
<span id="cb9-97">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-4-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-4-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="코돈-사용-빈도를-통한-코돈-최적화" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="코돈-사용-빈도를-통한-코돈-최적화"><span class="header-section-number">2.3</span> 코돈 사용 빈도를 통한 코돈 최적화</h2>
<p>아래 코드는 대장균 K-12 균주의 코돈 사용 빈도 표를 생성합니다. 코돈 사용 빈도는 아미노산을 코딩하는 코돈들의 빈도를 나타냅니다. 이 빈도는 해당 생물체 내 tRNA의 양을 반영할 것으로 예상됩니다. 코돈 사용 빈도는 종마다 다릅니다. 따라서 코돈 최적화 등의 응용에서는 관심 있는 생물체의 코돈 사용 빈도를 살펴보는 것이 중요합니다.</p>
<p>코돈 사용 빈도 계산을 위해 주석이 달린 대장균 K-12 게놈을 살펴보겠습니다. 이 스크립트는 게놈에서 모든 코딩 서열(CDS)을 추출하고 이 서열들에서 각 코돈의 총 개수를 세어 냅니다. 그런 다음 각 코돈의 총 출현 횟수를 해당 아미노산의 총 출현 횟수로 나누어 상대 빈도를 계산합니다. 성능 향상을 위해 이 스크립트는 주로 기호 자체 대신 기호 코드를 사용합니다.</p>
<p>먼저 NCBI Entrez 데이터베이스에서 게놈(Accession: U00096)을 GenBank 파일로 가져와 AnnotatedSequence로 파싱합니다. 그런 다음 나중에 총 코돈 빈도를 저장할 딕셔너리를 만듭니다. 앞서 언급했듯이, 이 스크립트는 기호 코드로 작동합니다. 따라서 딕셔너리의 각 코돈은 3개의 문자 대신 3개의 정수로 표현됩니다.</p>
<p>코돈 사용 빈도 표는 목표 단백질의 DNA 서열을 코돈 사용 빈도에 맞춰 설계함으로써 재조합 단백질 발현을 최적화하는 데 사용될 수 있습니다. 이를 코돈 최적화라고 합니다. 하지만 코돈 최적화를 위한 다양한 알고리즘이 존재합니다. 간단히 하기 위해 이 예제에서는 각 아미노산에 대해 항상 가장 빈번하게 나타나는 코돈을 사용하는 방식을 채택합니다. 그런 다음 대장균 K-12에서의 발현을 위해 코돈 최적화된 DNA 서열을 출력해 보겠습니다.</p>
<div id="cell-8" class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> itertools</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tempfile</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.database.entrez <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> entrez</span>
<span id="cb10-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> seq</span>
<span id="cb10-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.io.fasta <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> fasta</span>
<span id="cb10-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.io.genbank <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gb</span>
<span id="cb10-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb10-9"></span>
<span id="cb10-10"></span>
<span id="cb10-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> fetch_genome_data(genome_id):</span>
<span id="cb10-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""NCBI에서 게놈 데이터를 가져옵니다."""</span></span>
<span id="cb10-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb10-14">        gb_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gb.GenBankFile.read(</span>
<span id="cb10-15">            entrez.fetch(genome_id, tempfile.gettempdir(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gb"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nuccore"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gb"</span>)</span>
<span id="cb10-16">        )</span>
<span id="cb10-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> gb.get_annotated_sequence(gb_file, include_only<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CDS"</span>])</span>
<span id="cb10-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb10-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">RuntimeError</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"게놈 데이터를 가져오는 중 오류 발생: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb10-20"></span>
<span id="cb10-21"></span>
<span id="cb10-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> initialize_codon_counter(genome):</span>
<span id="cb10-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""코돈 카운터를 초기화합니다."""</span></span>
<span id="cb10-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>.fromkeys(itertools.product(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>([<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(genome.sequence.alphabet))] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb10-25"></span>
<span id="cb10-26"></span>
<span id="cb10-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> count_codons(genome, codon_counter):</span>
<span id="cb10-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""CDS 영역에서 코돈을 카운트합니다."""</span></span>
<span id="cb10-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> cds <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> genome.annotation:</span>
<span id="cb10-30">        cds_seq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> genome[cds]</span>
<span id="cb10-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(cds_seq) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb10-32">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb10-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(cds_seq), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb10-34">            codon_code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>(cds_seq.code[i : i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb10-35">            codon_counter[codon_code] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb10-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> codon_counter</span>
<span id="cb10-37"></span>
<span id="cb10-38"></span>
<span id="cb10-39"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calculate_relative_frequencies(codon_counter, codon_table):</span>
<span id="cb10-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""코돈의 상대 빈도를 계산합니다."""</span></span>
<span id="cb10-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> amino_acid_code <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>):</span>
<span id="cb10-42">        codon_codes_for_aa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> codon_table[amino_acid_code]</span>
<span id="cb10-43">        total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(codon_counter[codon_code] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> codon_code <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> codon_codes_for_aa)</span>
<span id="cb10-44">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb10-45">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb10-46">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> codon_code <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> codon_codes_for_aa:</span>
<span id="cb10-47">            codon_counter[codon_code] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> total</span>
<span id="cb10-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> codon_counter</span>
<span id="cb10-49"></span>
<span id="cb10-50"></span>
<span id="cb10-51"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calculate_codon_usage(genome_id, codon_table_id):</span>
<span id="cb10-52">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""주어진 게놈에 대한 코돈 사용을 계산합니다."""</span></span>
<span id="cb10-53">    genome <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fetch_genome_data(genome_id)</span>
<span id="cb10-54">    codon_counter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> initialize_codon_counter(genome)</span>
<span id="cb10-55">    codon_counter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count_codons(genome, codon_counter)</span>
<span id="cb10-56">    codon_table <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seq.CodonTable.load(codon_table_id)</span>
<span id="cb10-57">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> calculate_relative_frequencies(codon_counter, codon_table)</span>
<span id="cb10-58"></span>
<span id="cb10-59"></span>
<span id="cb10-60"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> find_optimal_codons(codon_counter, codon_table):</span>
<span id="cb10-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""각 아미노산에 대한 최적의 코돈을 찾습니다."""</span></span>
<span id="cb10-62">    optimal_codons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb10-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> amino_acid_code <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>):</span>
<span id="cb10-64">        codon_codes_for_aa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> codon_table[amino_acid_code]</span>
<span id="cb10-65">        optimal_codons[amino_acid_code] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(</span>
<span id="cb10-66">            codon_codes_for_aa, key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> c: codon_counter.get(c, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb10-67">        )</span>
<span id="cb10-68">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> optimal_codons</span>
<span id="cb10-69"></span>
<span id="cb10-70"></span>
<span id="cb10-71"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> optimize_codon_for_protein_string(</span>
<span id="cb10-72">    codon_counter, codon_table_id, protein_name, protein_sequence_str</span>
<span id="cb10-73">):</span>
<span id="cb10-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""주어진 단백질 서열에 대해 코돈 사용을 최적화합니다."""</span></span>
<span id="cb10-75">    codon_table <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seq.CodonTable.load(codon_table_id)</span>
<span id="cb10-76">    optimal_codons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> find_optimal_codons(codon_counter, codon_table)</span>
<span id="cb10-77"></span>
<span id="cb10-78">    protein_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seq.ProteinSequence(protein_sequence_str)</span>
<span id="cb10-79">    dna_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seq.NucleotideSequence()</span>
<span id="cb10-80">    dna_sequence.code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate(</span>
<span id="cb10-81">        [optimal_codons[amino_acid_code] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> amino_acid_code <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> protein_sequence.code]</span>
<span id="cb10-82">    )</span>
<span id="cb10-83">    dna_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> seq.NucleotideSequence(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TAA"</span>)</span>
<span id="cb10-84"></span>
<span id="cb10-85">    fasta_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta.FastaFile()</span>
<span id="cb10-86">    fasta_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Codon_optimized_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>protein_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb10-87">    fasta_output[fasta_name] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(dna_sequence)</span>
<span id="cb10-88">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> fasta_output</span>
<span id="cb10-89"></span>
<span id="cb10-90"></span>
<span id="cb10-91"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> parse_fasta(fasta_string):</span>
<span id="cb10-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""FASTA 문자열을 파싱합니다."""</span></span>
<span id="cb10-93">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [</span>
<span id="cb10-94">        (entry.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].strip(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(entry.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]).strip())</span>
<span id="cb10-95">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> entry <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> fasta_string.strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;"</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]</span>
<span id="cb10-96">    ]</span>
<span id="cb10-97"></span>
<span id="cb10-98"></span>
<span id="cb10-99">genome_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"U00096"</span></span>
<span id="cb10-100">codon_table_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span></span>
<span id="cb10-101">codon_counter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calculate_codon_usage(genome_id, codon_table_id)</span>
<span id="cb10-102"></span>
<span id="cb10-103">fasta_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb10-104"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;CBK51939</span></span>
<span id="cb10-105"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQGISSWLAWYQQKPEKAPKSLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQYYSYPRTFGQGTKVEIK</span></span>
<span id="cb10-106"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7WSL_L</span></span>
<span id="cb10-107"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQLTQSPSFLSAYVGDRVTITCKASQDVGTAVAWYQQKPGKAPKLLIYWASTLHTGVPSRFSGSGSGTEFTLTISSLQPEDFATYYCQHYSSYPWTFGQGTKLEIK</span></span>
<span id="cb10-108"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb10-109"></span>
<span id="cb10-110">fasta_entries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parse_fasta(fasta_string)</span>
<span id="cb10-111"></span>
<span id="cb10-112"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> protein_name, protein_sequence <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> fasta_entries:</span>
<span id="cb10-113">    optimized_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> optimize_codon_for_protein_string(</span>
<span id="cb10-114">        codon_counter, codon_table_id, protein_name, protein_sequence</span>
<span id="cb10-115">    )</span>
<span id="cb10-116">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(optimized_sequence)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&gt;Codon_optimized_CBK51939
GATATTCAGATGACCCAGAGCCCGAGCAGCCTGAGCGCGAGCGTGGGCGATCGCGTGACCATTACCTGCCGCGCGAGCCA
GGGCATTAGCAGCTGGCTGGCGTGGTATCAGCAGAAACCGGAAAAAGCGCCGAAAAGCCTGATTTATGCGGCGAGCAGCC
TGCAGAGCGGCGTGCCGAGCCGCTTTAGCGGCAGCGGCAGCGGCACCGATTTTACCCTGACCATTAGCAGCCTGCAGCCG
GAAGATTTTGCGACCTATTATTGCCAGCAGTATTATAGCTATCCGCGCACCTTTGGCCAGGGCACCAAAGTGGAAATTAA
ATAA
&gt;Codon_optimized_7WSL_L
GATATTCAGCTGACCCAGAGCCCGAGCTTTCTGAGCGCGTATGTGGGCGATCGCGTGACCATTACCTGCAAAGCGAGCCA
GGATGTGGGCACCGCGGTGGCGTGGTATCAGCAGAAACCGGGCAAAGCGCCGAAACTGCTGATTTATTGGGCGAGCACCC
TGCATACCGGCGTGCCGAGCCGCTTTAGCGGCAGCGGCAGCGGCACCGAATTTACCCTGACCATTAGCAGCCTGCAGCCG
GAAGATTTTGCGACCTATTATTGCCAGCATTATAGCAGCTATCCGTGGACCTTTGGCCAGGGCACCAAACTGGAAATTAA
ATAA</code></pre>
</div>
</div>
</section>
<section id="왓슨-크릭-염기쌍-시각화" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="왓슨-크릭-염기쌍-시각화"><span class="header-section-number">2.4</span> 왓슨-크릭 염기쌍 시각화</h2>
<p>제임스 왓슨과 프랜시스 크릭은 DNA 구조를 밝히는 과정에서 DNA 내의 염기들이 무작위로 쌍을 이루는 것이 아니라, 특정한 규칙에 따라 쌍을 이룬다는 것을 발견했습니다. 이 규칙을 <strong>왓슨-크릭 염기쌍 규칙</strong>이라고 하며, 다음과 같습니다.</p>
<ul>
<li>아데닌(Adenine, A)은 항상 티민(Thymine, T)과 두 개의 수소 결합을 통해 쌍을 이룹니다.</li>
<li>구아닌(Guanine, G)은 항상 사이토신(Cytosine, C)과 세 개의 수소 결합을 통해 쌍을 이룹니다.</li>
</ul>
<p>아래 코드는 실제 DNA 3차 구조에서 가져온 아데닌-티민 염기쌍과 구아닌-사이토신 염기쌍을 시각적으로 보여줍니다. 이를 통해 우리는 다음과 같은 점들을 더 명확하게 이해할 수 있습니다.</p>
<ul>
<li>염기들의 공간적인 배열: 각 염기가 이중 나선 내에서 어떤 방향으로 놓여 있는지, 서로 어떻게 마주보고 있는지 등을 확인할 수 있습니다.</li>
<li>수소 결합의 위치와 개수: 아데닌과 티민 사이의 두 개, 구아닌과 사이토신 사이의 세 개 수소 결합의 정확한 위치와 방향을 시각적으로 파악할 수 있습니다. 이 수소 결합들이 염기쌍을 안정화시키는 중요한 역할을 한다는 것을 직접적으로 이해할 수 있습니다.</li>
</ul>
<div id="cell-10" class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.database.rcsb <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> rcsb</span>
<span id="cb12-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.structure <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> struc</span>
<span id="cb12-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.structure.graphics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> graphics</span>
<span id="cb12-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.structure.io.pdbx <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pdbx</span>
<span id="cb12-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb12-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb12-7"></span>
<span id="cb12-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DNA 이중 나선 구조 데이터 가져오기</span></span>
<span id="cb12-9">pdbx_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pdbx.BinaryCIFFile.read(rcsb.fetch(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1qxb"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bcif"</span>))</span>
<span id="cb12-10">structure <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pdbx.get_structure(pdbx_file, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, include_bonds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb12-11">nucleotides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> structure[struc.filter_nucleotides(structure)]</span>
<span id="cb12-12"></span>
<span id="cb12-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 아데닌-티민과 구아닌-시토신 염기쌍 선택</span></span>
<span id="cb12-14">base_pairs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> struc.base_pairs(nucleotides)</span>
<span id="cb12-15"></span>
<span id="cb12-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 구아닌-시토신 염기쌍 찾기</span></span>
<span id="cb12-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> base_pairs:</span>
<span id="cb12-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (nucleotides.res_name[i], nucleotides.res_name[j]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DG"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DC"</span>):</span>
<span id="cb12-19">        guanine, cytosine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb12-20">            nucleotides[mask] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> mask <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> struc.get_residue_masks(nucleotides, [i, j])</span>
<span id="cb12-21">        ]</span>
<span id="cb12-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb12-23"></span>
<span id="cb12-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 아데닌-티민 염기쌍 찾기</span></span>
<span id="cb12-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> base_pairs:</span>
<span id="cb12-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (nucleotides.res_name[i], nucleotides.res_name[j]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DT"</span>):</span>
<span id="cb12-27">        adenine, thymine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb12-28">            nucleotides[mask] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> mask <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> struc.get_residue_masks(nucleotides, [i, j])</span>
<span id="cb12-29">        ]</span>
<span id="cb12-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb12-31"></span>
<span id="cb12-32">pairs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(guanine, cytosine), (adenine, thymine)]</span>
<span id="cb12-33"></span>
<span id="cb12-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 설정</span></span>
<span id="cb12-35">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0</span>))</span>
<span id="cb12-36">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span>, projection<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3d"</span>)</span>
<span id="cb12-37"></span>
<span id="cb12-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 염기 배열</span></span>
<span id="cb12-39"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, (purine, pyrimidine) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(pairs):</span>
<span id="cb12-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 피리미딘 염기의 주요 원자 좌표 추출</span></span>
<span id="cb12-41">    n1, n3, c5, c6 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb12-42">        pyrimidine[pyrimidine.atom_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> name][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C6"</span>)</span>
<span id="cb12-43">    ]</span>
<span id="cb12-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 피리미딘 N3-C6 축을 x축에 정렬</span></span>
<span id="cb12-45">    purine, pyrimidine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb12-46">        struc.align_vectors(base, n3.coord <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> c6.coord, np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]))</span>
<span id="cb12-47">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> base <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (purine, pyrimidine)</span>
<span id="cb12-48">    ]</span>
<span id="cb12-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 좌표 업데이트</span></span>
<span id="cb12-50">    n1, n3, c4, c5 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb12-51">        pyrimidine[pyrimidine.atom_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> name][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C5"</span>)</span>
<span id="cb12-52">    ]</span>
<span id="cb12-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 피리미딘 염기 평면 법선 벡터를 z축에 정렬하고 염기 간 거리 설정</span></span>
<span id="cb12-54">    purine, pyrimidine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb12-55">        struc.align_vectors(</span>
<span id="cb12-56">            base,</span>
<span id="cb12-57">            np.cross(n3.coord <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n1.coord, c5.coord <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n1.coord),</span>
<span id="cb12-58">            np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]),</span>
<span id="cb12-59">            origin_position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>struc.centroid(purine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pyrimidine),</span>
<span id="cb12-60">            target_position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 10 Å 간격으로 염기쌍 분리</span></span>
<span id="cb12-61">        )</span>
<span id="cb12-62">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> base <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (purine, pyrimidine)</span>
<span id="cb12-63">    ]</span>
<span id="cb12-64">    pairs[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (purine, pyrimidine)</span>
<span id="cb12-65"></span>
<span id="cb12-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 염기쌍 그리기</span></span>
<span id="cb12-67">atoms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pairs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pairs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pairs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pairs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb12-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원소별 색상 지정</span></span>
<span id="cb12-69">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((atoms.array_length(), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb12-70">colors[atoms.element <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 밝은 회색 (파스텔 톤)</span></span>
<span id="cb12-71">colors[atoms.element <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연한 회색 (파스텔 톤)</span></span>
<span id="cb12-72">colors[atoms.element <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연한 파란색 (파스텔 톤)</span></span>
<span id="cb12-73">colors[atoms.element <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연한 빨간색 (파스텔 톤)</span></span>
<span id="cb12-74">colors[atoms.element <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연한 초록색 (파스텔 톤)</span></span>
<span id="cb12-75">graphics.plot_atoms(ax, atoms, colors, line_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, background_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, zoom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>)</span>
<span id="cb12-76"></span>
<span id="cb12-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 수소 결합 그리기</span></span>
<span id="cb12-78"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> purine, pyrimidine <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pairs:</span>
<span id="cb12-79">    pair <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> purine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pyrimidine</span>
<span id="cb12-80">    bonds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> struc.hbond(pair)</span>
<span id="cb12-81">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> donor, hydrogen, acceptor <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> bonds:</span>
<span id="cb12-82">        hydrogen_coord <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pair.coord[hydrogen]</span>
<span id="cb12-83">        acceptor_coord <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pair.coord[acceptor]</span>
<span id="cb12-84">        x, y, z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(hydrogen_coord, acceptor_coord)</span>
<span id="cb12-85">        ax.plot(x, y, z, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gold"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb12-86"></span>
<span id="cb12-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 무거운 원자 라벨링</span></span>
<span id="cb12-88">heavy_atoms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> atoms[atoms.element <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>]</span>
<span id="cb12-89"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name, coord <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(heavy_atoms.atom_name, heavy_atoms.coord):</span>
<span id="cb12-90">    coord <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coord <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb12-91">    ax.text(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>coord, name, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>)</span>
<span id="cb12-92"></span>
<span id="cb12-93"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 염기 라벨링</span></span>
<span id="cb12-94"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> pair <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pairs:</span>
<span id="cb12-95">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> base <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pair:</span>
<span id="cb12-96">        label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> base.res_name[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb12-97">        ring_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> struc.centroid(</span>
<span id="cb12-98">            base[np.isin(base.atom_name, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C6"</span>])]</span>
<span id="cb12-99">        )</span>
<span id="cb12-100">        x, y, z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ring_center</span>
<span id="cb12-101">        ax.text(x, y, z, label, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)</span>
<span id="cb12-102"></span>
<span id="cb12-103"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 표시</span></span>
<span id="cb12-104">fig.tight_layout()</span>
<span id="cb12-105">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-6-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-6-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="단백질-분석-관련" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 단백질 분석 관련</h1>
<section id="protpram-분석-결과" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="protpram-분석-결과"><span class="header-section-number">3.1</span> Protpram 분석 결과</h2>
<p>ProtParam은 Expasy Proteomics Server에서 개발된 생물정보학 도구로 단백질의 아래와 같이 다양한 물리적 및 화학적 특성을 계산합니다.</p>
<ul>
<li><strong>분자량</strong><br>
</li>
<li><strong>이론적 등전점(pI)</strong><br>
</li>
<li><strong>아미노산 조성</strong><br>
</li>
<li><strong>소광 계수(Extinction coefficient)</strong><br>
</li>
<li><strong>불안정성 지수(Instability index)</strong>: 단백질 안정성을 예측하며, 값이 40 미만일 경우 안정적임을 나타냅니다.<br>
</li>
<li><strong>지방족 지수(Aliphatic index)</strong>: 지방족 아미노산을 기반으로 열 안정성을 반영합니다.<br>
</li>
<li><strong>평균 소수성 지수(GRAVY)</strong>: 소수성(양수 값) 또는 친수성(음수 값)을 측정합니다.</li>
</ul>
<p>Biopython을 사용해 protpram분석을 하고 데이터 프레임으로 만들어보겠습니다.</p>
<div id="cell-13" class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> io <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StringIO</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb13-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> Bio <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SeqIO</span>
<span id="cb13-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> Bio.SeqUtils.ProtParam <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ProteinAnalysis</span>
<span id="cb13-6"></span>
<span id="cb13-7"></span>
<span id="cb13-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calculate_molecular_formula(sequence):</span>
<span id="cb13-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""주어진 서열의 분자식을 계산합니다."""</span></span>
<span id="cb13-10">    amino_acid_atoms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb13-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>},</span>
<span id="cb13-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Q"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"K"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>},</span>
<span id="cb13-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"F"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-26">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-27">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-28">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"W"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-29">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-30">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"V"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>},</span>
<span id="cb13-31">    }</span>
<span id="cb13-32"></span>
<span id="cb13-33">    protein_analysis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ProteinAnalysis(sequence)</span>
<span id="cb13-34">    amino_acid_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> protein_analysis.count_amino_acids()</span>
<span id="cb13-35"></span>
<span id="cb13-36">    carbon_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb13-37">    hydrogen_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb13-38">    oxygen_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb13-39">    nitrogen_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb13-40">    sulfur_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb13-41">    peptide_bonds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb13-42"></span>
<span id="cb13-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> amino_acid, count <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> amino_acid_counts.items():</span>
<span id="cb13-44">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> amino_acid <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> amino_acid_atoms:</span>
<span id="cb13-45">            atoms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> amino_acid_atoms[amino_acid]</span>
<span id="cb13-46">            peptide_bonds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> count</span>
<span id="cb13-47">            carbon_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> atoms[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>]</span>
<span id="cb13-48">            hydrogen_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> atoms[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>]</span>
<span id="cb13-49">            oxygen_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> atoms[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>]</span>
<span id="cb13-50">            nitrogen_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> atoms[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>]</span>
<span id="cb13-51">            sulfur_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> atoms[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"S"</span>]</span>
<span id="cb13-52"></span>
<span id="cb13-53">    peptide_bonds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-54">    hydrogen_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> peptide_bonds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb13-55">    oxygen_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> peptide_bonds</span>
<span id="cb13-56"></span>
<span id="cb13-57">    molecular_formula <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb13-58">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"C</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>carbon_total<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">H</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>hydrogen_total<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">N</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>nitrogen_total<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">O</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>oxygen_total<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">S</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sulfur_total<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb13-59">    )</span>
<span id="cb13-60">    total_atoms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> carbon_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> hydrogen_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> nitrogen_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> oxygen_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sulfur_total</span>
<span id="cb13-61">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> molecular_formula, total_atoms</span>
<span id="cb13-62"></span>
<span id="cb13-63"></span>
<span id="cb13-64"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> analyze_protein_sequence(fasta_string):</span>
<span id="cb13-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""FASTA 형식의 단백질 서열 문자열을 분석하고 pandas DataFrame으로 반환합니다."""</span></span>
<span id="cb13-66"></span>
<span id="cb13-67">    fasta_records <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SeqIO.parse(StringIO(fasta_string.strip()), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fasta"</span>)</span>
<span id="cb13-68">    results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb13-69"></span>
<span id="cb13-70">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> record <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> fasta_records:</span>
<span id="cb13-71">        protein_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(record.seq)</span>
<span id="cb13-72">        protein_analysis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ProteinAnalysis(protein_sequence)</span>
<span id="cb13-73">        molecular_weight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> protein_analysis.molecular_weight()</span>
<span id="cb13-74">        protein_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> record.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb13-75">        total_amino_acids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(protein_sequence)</span>
<span id="cb13-76"></span>
<span id="cb13-77">        molecular_formula, total_atoms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calculate_molecular_formula(protein_sequence)</span>
<span id="cb13-78">        extinction_coefficients <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> protein_analysis.molar_extinction_coefficient()</span>
<span id="cb13-79"></span>
<span id="cb13-80">        results.append(</span>
<span id="cb13-81">            {</span>
<span id="cb13-82">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Name"</span>: protein_id,</span>
<span id="cb13-83">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Molecular Weight (Dalton)"</span>: molecular_weight,</span>
<span id="cb13-84">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total Amino Acids"</span>: total_amino_acids,</span>
<span id="cb13-85">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chemical Formula"</span>: molecular_formula,</span>
<span id="cb13-86">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total Atoms"</span>: total_atoms,</span>
<span id="cb13-87">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Extinction Coefficient (Reduced)"</span>: extinction_coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb13-88">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Extinction Coefficient (Non-Reduced)"</span>: extinction_coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb13-89">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reduced Abs 0.1% (g/L)"</span>: extinction_coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> molecular_weight,</span>
<span id="cb13-90">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Non-Reduced Abs 0.1% (g/L)"</span>: extinction_coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> molecular_weight,</span>
<span id="cb13-91">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Theoretical pI"</span>: protein_analysis.isoelectric_point(),</span>
<span id="cb13-92">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Aromaticity (%)"</span>: protein_analysis.aromaticity() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb13-93">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GRAVY"</span>: protein_analysis.gravy(),</span>
<span id="cb13-94">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Instability Index"</span>: protein_analysis.instability_index(),</span>
<span id="cb13-95">            }</span>
<span id="cb13-96">        )</span>
<span id="cb13-97"></span>
<span id="cb13-98">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pd.DataFrame(results)</span>
<span id="cb13-99"></span>
<span id="cb13-100"></span>
<span id="cb13-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example Usage</span></span>
<span id="cb13-102">fasta_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb13-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;CBK51939</span></span>
<span id="cb13-104"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQGISSWLAWYQQKPEKAPKSLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQYYSYPRTFGQGTKVEIK</span></span>
<span id="cb13-105"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7WSL_L</span></span>
<span id="cb13-106"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQLTQSPSFLSAYVGDRVTITCKASQDVGTAVAWYQQKPGKAPKLLIYWASTLHTGVPSRFSGSGSGTEFTLTISSLQPEDFATYYCQHYSSYPWTFGQGTKLEIK</span></span>
<span id="cb13-107"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;8AS0_C</span></span>
<span id="cb13-108"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQSISSYLNWYQQKPGKAPKLLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQDYGLPFTFGQGTKVEIK</span></span>
<span id="cb13-109"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7CGW_B</span></span>
<span id="cb13-110"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIVMTQSPDSLAVSLGERATINCKSSESVSNDVAWYQQKPGQPPKLLINYAFHRFTGVPDRFSGSGYGTDFTLTISSLQAEDVAVYYCHQAYSSPYTFGQGTKLEIK</span></span>
<span id="cb13-111"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5JXE_C</span></span>
<span id="cb13-112"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb13-113"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5B8C_A</span></span>
<span id="cb13-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb13-115"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb13-116"></span>
<span id="cb13-117">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> analyze_protein_sequence(fasta_string)</span>
<span id="cb13-118">df</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Name</th>
<th data-quarto-table-cell-role="th">Molecular Weight (Dalton)</th>
<th data-quarto-table-cell-role="th">Total Amino Acids</th>
<th data-quarto-table-cell-role="th">Chemical Formula</th>
<th data-quarto-table-cell-role="th">Total Atoms</th>
<th data-quarto-table-cell-role="th">Extinction Coefficient (Reduced)</th>
<th data-quarto-table-cell-role="th">Extinction Coefficient (Non-Reduced)</th>
<th data-quarto-table-cell-role="th">Reduced Abs 0.1% (g/L)</th>
<th data-quarto-table-cell-role="th">Non-Reduced Abs 0.1% (g/L)</th>
<th data-quarto-table-cell-role="th">Theoretical pI</th>
<th data-quarto-table-cell-role="th">Aromaticity (%)</th>
<th data-quarto-table-cell-role="th">GRAVY</th>
<th data-quarto-table-cell-role="th">Instability Index</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>CBK51939</td>
<td>11708.8783</td>
<td>107</td>
<td>C519H796N136O167S3</td>
<td>1621</td>
<td>21430</td>
<td>21555</td>
<td>1.830235</td>
<td>1.840911</td>
<td>8.620213</td>
<td>12.149533</td>
<td>-0.419626</td>
<td>55.086916</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>7WSL_L</td>
<td>11795.0749</td>
<td>107</td>
<td>C537H806N134O162S2</td>
<td>1641</td>
<td>26930</td>
<td>27055</td>
<td>2.283156</td>
<td>2.293754</td>
<td>7.955350</td>
<td>14.018692</td>
<td>-0.276636</td>
<td>38.553271</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>8AS0_C</td>
<td>11575.7706</td>
<td>107</td>
<td>C513H793N133O166S3</td>
<td>1608</td>
<td>14440</td>
<td>14565</td>
<td>1.247433</td>
<td>1.258232</td>
<td>7.952062</td>
<td>11.214953</td>
<td>-0.305607</td>
<td>58.362617</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>7CGW_B</td>
<td>11778.9694</td>
<td>107</td>
<td>C526H798N136O166S3</td>
<td>1629</td>
<td>15930</td>
<td>16055</td>
<td>1.352410</td>
<td>1.363022</td>
<td>5.517384</td>
<td>12.149533</td>
<td>-0.338318</td>
<td>40.328972</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>5JXE_C</td>
<td>11997.3292</td>
<td>111</td>
<td>C538H832N140O167S2</td>
<td>1679</td>
<td>15930</td>
<td>16055</td>
<td>1.327796</td>
<td>1.338215</td>
<td>6.997187</td>
<td>10.810811</td>
<td>-0.189189</td>
<td>42.244144</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>5B8C_A</td>
<td>11997.3292</td>
<td>111</td>
<td>C538H832N140O167S2</td>
<td>1679</td>
<td>15930</td>
<td>16055</td>
<td>1.327796</td>
<td>1.338215</td>
<td>6.997187</td>
<td>10.810811</td>
<td>-0.189189</td>
<td>42.244144</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="cell-14" class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> io <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StringIO</span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb14-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb14-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> Bio <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SeqIO</span>
<span id="cb14-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> Bio.SeqUtils.ProtParam <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ProteinAnalysis</span>
<span id="cb14-7"></span>
<span id="cb14-8"></span>
<span id="cb14-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_protein_charge_vs_ph(fasta_string, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)):</span>
<span id="cb14-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""FASTA 형식의 단백질 서열 문자열에서 각 단백질의 pH에 따른 전하 변화를 그래프로 표시합니다.</span></span>
<span id="cb14-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    netcharge가 0이 되는 x축 값을 annotation으로 추가합니다.</span></span>
<span id="cb14-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb14-13"></span>
<span id="cb14-14">    fasta_records <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SeqIO.parse(StringIO(fasta_string.strip()), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fasta"</span>)</span>
<span id="cb14-15"></span>
<span id="cb14-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> record <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> fasta_records:</span>
<span id="cb14-17">        protein_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> record.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb14-18">        protein_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(record.seq)</span>
<span id="cb14-19">        protein_analysis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ProteinAnalysis(protein_sequence)</span>
<span id="cb14-20">        isoelectric_point <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> protein_analysis.isoelectric_point()</span>
<span id="cb14-21"></span>
<span id="cb14-22">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb14-23">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> protein_analysis.charge_at_pH(x)</span>
<span id="cb14-24"></span>
<span id="cb14-25">        fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 크기 조정</span></span>
<span id="cb14-26"></span>
<span id="cb14-27">        ax.plot(x, y)</span>
<span id="cb14-28">        ax.axhline(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"k"</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb14-29">        ax.axvline(isoelectric_point, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"k"</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb14-30"></span>
<span id="cb14-31">        ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Buffer pH"</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb14-32">        ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Net charge"</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb14-33">        ax.set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Net charge prediction of </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>protein_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb14-34"></span>
<span id="cb14-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># netcharge가 0이 되는 x축 값 (등전점)에 대한 annotation 추가</span></span>
<span id="cb14-36">        ax.annotate(</span>
<span id="cb14-37">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"pI: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>isoelectric_point<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb14-38">            xy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(isoelectric_point, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb14-39">            xytext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(isoelectric_point <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 위치 조정</span></span>
<span id="cb14-40">            fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb14-41">        )</span>
<span id="cb14-42"></span>
<span id="cb14-43">        plt.tight_layout()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 요소들이 겹치지 않게 자동 조정</span></span>
<span id="cb14-44">        plt.show()</span>
<span id="cb14-45"></span>
<span id="cb14-46"></span>
<span id="cb14-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example Usage</span></span>
<span id="cb14-48">fasta_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb14-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;CBK51939</span></span>
<span id="cb14-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQGISSWLAWYQQKPEKAPKSLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQYYSYPRTFGQGTKVEIK</span></span>
<span id="cb14-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7WSL_L</span></span>
<span id="cb14-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQLTQSPSFLSAYVGDRVTITCKASQDVGTAVAWYQQKPGKAPKLLIYWASTLHTGVPSRFSGSGSGTEFTLTISSLQPEDFATYYCQHYSSYPWTFGQGTKLEIK</span></span>
<span id="cb14-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb14-54"></span>
<span id="cb14-55">plot_protein_charge_vs_ph(fasta_string, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-8-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-8-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-8-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-5"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-8-output-2.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="화학적-변형-가능-위치potential-sites-of-chemical-modification-예측" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="화학적-변형-가능-위치potential-sites-of-chemical-modification-예측"><span class="header-section-number">3.2</span> 화학적 변형 가능 위치(Potential sites of chemical modification) 예측</h2>
<p>이 섹션에서는 순수 서열 분석을 기반으로 단백질에 일어나는 화학적 변형 위치를 예측해보겠습니다. 대부분의 단백질은 합성 과정에서 당화(glycosylation)라는 과정을 거칩니다. 단백질 당화 패턴은 약물의 반감기, 안정성, 안전성, 그리고 약효에 큰 영향을 미치는 것으로 알려져 있습니다.</p>
<blockquote class="blockquote">
<p>단백질의 당화는 크게 O-결합 및 N-결합 글라이칸의 두 가지가 있으며 O-결합 당화는 산소 원자를 매개로 올리고당이 세린 또는 트레오닌 아미노산 잔기에 결합하는 과정이며, N-결합 당화는 질소 원자를 매개로 올리고당이 아스파라긴 아미노산 잔기에 결합하는 과정입니다.</p>
</blockquote>
<section id="탈아미드화deamidation-가능-위치" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="탈아미드화deamidation-가능-위치"><span class="header-section-number">3.2.1</span> 탈아미드화(deamidation) 가능 위치</h3>
<p>아스파라긴(N) 및 글루타민(Q) 잔기는 서열 내에서 작은 측쇄를 가진 아미노산이 뒤따라 중간 펩타이드 그룹이 더 노출될 때 특히 탈아미드화되기 쉽습니다. 민감한 아미노산 뒤에 펩타이드 그룹이 공격받기 쉽도록 글리신과 같은 작고 유연한 잔기가 오는 경우 탈아미드화가 훨씬 빠르게 진행됩니다.</p>
<p>검색 패턴: ASN/GLN-ALA/GLY/SER/THR</p>
</section>
<section id="o-결합-글리코실화-가능-위치" class="level3" data-number="3.2.2">
<h3 data-number="3.2.2" class="anchored" data-anchor-id="o-결합-글리코실화-가능-위치"><span class="header-section-number">3.2.2</span> O-결합 글리코실화 가능 위치</h3>
<p>세린 및 트레오닌 잔기의 O-연결 글리코실화는 서열 내에서 특히 2-1 및 +3 위치에 하나 이상의 프롤린 잔기가 근처에 존재하는 것에 민감한 것으로 알려져 있습니다.</p>
<p>검색 패턴: PRO-SER/THR 검색 패턴: SER/THR-X-X-PRO</p>
</section>
<section id="n-결합-글리코실화-가능-위치" class="level3" data-number="3.2.3">
<h3 data-number="3.2.3" class="anchored" data-anchor-id="n-결합-글리코실화-가능-위치"><span class="header-section-number">3.2.3</span> N-결합 글리코실화 가능 위치</h3>
<p>기본적인 N-글리코실화 부위를 찾는 패턴은 다음과 같습니다.</p>
<p>검색 패턴: ASN-X-SER/THR (X에서 프롤린 제외)</p>
<blockquote class="blockquote">
<p>주의 사항: PTM은 서열 외에도 단백질의 3차원 구조 주변 환경 등 다양한 요인의 영향을 받습니다. 따라서, 정규 표현식만으로는 가능성을 100% 정확하게 예측할 수 없습니다. 따라서 추가적인 실험적 검증을 통해 예측 결과를 확인하는 것이 좋습니다.</p>
</blockquote>
<div id="cell-16" class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb15-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> io <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StringIO</span>
<span id="cb15-3"></span>
<span id="cb15-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb15-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> Bio <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SeqIO</span>
<span id="cb15-6"></span>
<span id="cb15-7"></span>
<span id="cb15-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> find_modification_sites(fasta_string):</span>
<span id="cb15-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""FASTA 형식의 단백질 서열 문자열에서 변형 부위를 찾아 DataFrame으로 반환합니다."""</span></span>
<span id="cb15-10"></span>
<span id="cb15-11">    fasta_records <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SeqIO.parse(StringIO(fasta_string.strip()), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fasta"</span>)</span>
<span id="cb15-12">    results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb15-13"></span>
<span id="cb15-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> record <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> fasta_records:</span>
<span id="cb15-15">        protein_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> record.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb15-16">        protein_sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(record.seq)</span>
<span id="cb15-17"></span>
<span id="cb15-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 탈아미드화 가능 위치 찾기</span></span>
<span id="cb15-19">        deamidation_pattern <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(N|Q)(A|G|S|T)"</span></span>
<span id="cb15-20">        deamidation_matches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(re.finditer(deamidation_pattern, protein_sequence))</span>
<span id="cb15-21">        deamidation_sites <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>start() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>group()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>end()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> deamidation_matches]</span>
<span id="cb15-22"></span>
<span id="cb15-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># O-연결 글리코실화 가능 위치 (PRO-SER/THR) 찾기</span></span>
<span id="cb15-24">        o_glycosylation_pattern1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P(S|T)"</span></span>
<span id="cb15-25">        o_glycosylation_matches1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(re.finditer(o_glycosylation_pattern1, protein_sequence))</span>
<span id="cb15-26">        o_glycosylation_sites1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb15-27">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>start() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>group()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>end()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> o_glycosylation_matches1</span>
<span id="cb15-28">        ]</span>
<span id="cb15-29"></span>
<span id="cb15-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># O-연결 글리코실화 가능 위치 (SER/THR-X-X-PRO) 찾기</span></span>
<span id="cb15-31">        o_glycosylation_pattern2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(S|T)[A-Z]</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{2}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">P"</span></span>
<span id="cb15-32">        o_glycosylation_matches2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(re.finditer(o_glycosylation_pattern2, protein_sequence))</span>
<span id="cb15-33">        o_glycosylation_sites2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb15-34">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>start() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>group()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>end()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> o_glycosylation_matches2</span>
<span id="cb15-35">        ]</span>
<span id="cb15-36"></span>
<span id="cb15-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># N-연결 글리코실화 가능 위치 찾기</span></span>
<span id="cb15-38">        N_glycosylation_pattern <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N[^P][ST]"</span></span>
<span id="cb15-39">        N_glycosylation_matches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(re.finditer(N_glycosylation_pattern, protein_sequence))</span>
<span id="cb15-40">        N_glycosylation_sites <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb15-41">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>start() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>group()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>end()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> N_glycosylation_matches</span>
<span id="cb15-42">        ]</span>
<span id="cb15-43"></span>
<span id="cb15-44">        results.append(</span>
<span id="cb15-45">            {</span>
<span id="cb15-46">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Protein ID"</span>: protein_id,</span>
<span id="cb15-47">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Deamidation Sites"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>.join(deamidation_sites) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> deamidation_sites <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"None"</span>,</span>
<span id="cb15-48">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O-Glycosylation Sites (PRO-SER/THR)"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>.join(o_glycosylation_sites1)</span>
<span id="cb15-49">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> o_glycosylation_sites1</span>
<span id="cb15-50">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"None"</span>,</span>
<span id="cb15-51">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O-Glycosylation Sites (SER/THR-X-X-PRO)"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>.join(o_glycosylation_sites2)</span>
<span id="cb15-52">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> o_glycosylation_sites2</span>
<span id="cb15-53">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"None"</span>,</span>
<span id="cb15-54">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N-Glycosylation Sites (ASN-X-SER/THR)"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>.join(N_glycosylation_sites)</span>
<span id="cb15-55">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> N_glycosylation_sites</span>
<span id="cb15-56">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"None"</span>,</span>
<span id="cb15-57">            }</span>
<span id="cb15-58">        )</span>
<span id="cb15-59"></span>
<span id="cb15-60">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pd.DataFrame(results)</span>
<span id="cb15-61"></span>
<span id="cb15-62"></span>
<span id="cb15-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example Usage</span></span>
<span id="cb15-64">fasta_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb15-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;CBK51939</span></span>
<span id="cb15-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQNSPSSLSASVGDRVTITCRASQGISSWLAWYQQKPEKAPKSLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQYYSYPRTFGQGTKVEIK</span></span>
<span id="cb15-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7WSL_L</span></span>
<span id="cb15-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQLTQSPSFLSAYVGDRVTITCKASQDVGTAVAWYQQKPGKAPKLLIYWASTLHTGVPSRFSGSGSGTEFTLTISSLQPEDFATYYCQHYSSYPWTFGQGTKLEIK</span></span>
<span id="cb15-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;8AS0_C</span></span>
<span id="cb15-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQSISSYLNWYQQKPGKAPKLLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQDYGLPFTFGQGTKVEIK</span></span>
<span id="cb15-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7CGW_B</span></span>
<span id="cb15-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIVMTQSPDSLAVSLGERATINCKSSESVSNDVAWYQQKPGQPPKLLINYAFHRFTGVPDRFSGSGYGTDFTLTISSLQAEDVAVYYCHQAYSSPYTFGQGTKLEIK</span></span>
<span id="cb15-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5JXE_C</span></span>
<span id="cb15-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb15-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5B8C_A</span></span>
<span id="cb15-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb15-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb15-78"></span>
<span id="cb15-79">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> find_modification_sites(fasta_string)</span>
<span id="cb15-80">df</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Protein ID</th>
<th data-quarto-table-cell-role="th">Deamidation Sites</th>
<th data-quarto-table-cell-role="th">O-Glycosylation Sites (PRO-SER/THR)</th>
<th data-quarto-table-cell-role="th">O-Glycosylation Sites (SER/THR-X-X-PRO)</th>
<th data-quarto-table-cell-role="th">N-Glycosylation Sites (ASN-X-SER/THR)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>CBK51939</td>
<td>7-NS-8, 28-QG-29, 56-QS-57, 101-QG-102</td>
<td>9-PS-10, 60-PS-61</td>
<td>57-SGVP-60, 78-SLQP-81</td>
<td>None</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>7WSL_L</td>
<td>6-QS-7, 100-QG-101</td>
<td>8-PS-9, 59-PS-60</td>
<td>5-TQSP-8, 56-TGVP-59, 77-SLQP-80, 92-SSYP-95</td>
<td>None</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>8AS0_C</td>
<td>6-QS-7, 27-QS-28, 55-QS-56, 100-QG-101</td>
<td>8-PS-9, 59-PS-60</td>
<td>5-TQSP-8, 56-SGVP-59, 77-SLQP-80</td>
<td>None</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>7CGW_B</td>
<td>6-QS-7, 79-QA-80, 90-QA-91, 100-QG-101</td>
<td>None</td>
<td>5-TQSP-8, 56-TGVP-59</td>
<td>None</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>5JXE_C</td>
<td>6-QS-7, 46-QA-47</td>
<td>None</td>
<td>5-TQSP-8, 12-SLSP-15, 60-SGVP-63, 81-SLEP-84</td>
<td>None</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>5B8C_A</td>
<td>6-QS-7, 46-QA-47</td>
<td>None</td>
<td>5-TQSP-8, 12-SLSP-15, 60-SGVP-63, 81-SLEP-84</td>
<td>None</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
</section>
<section id="계통수-관련" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="계통수-관련"><span class="header-section-number">3.3</span> 계통수 관련</h2>
<section id="아미노산-유사도에-대한-계통수-그리기" class="level3" data-number="3.3.1">
<h3 data-number="3.3.1" class="anchored" data-anchor-id="아미노산-유사도에-대한-계통수-그리기"><span class="header-section-number">3.3.1</span> 아미노산 유사도에 대한 계통수 그리기</h3>
<p>이 예제에서는 아미노산 유성을 나타내는 BLOSUM62 행렬의 정보를 통해 계통수를 시각화 합니다.</p>
<div id="cell-18" class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> seq</span>
<span id="cb16-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.align <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> align</span>
<span id="cb16-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.graphics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> graphics</span>
<span id="cb16-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.phylo <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> phylo</span>
<span id="cb16-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb16-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb16-7"></span>
<span id="cb16-8"></span>
<span id="cb16-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> visualize_amino_acid_distances(substitution_matrix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb16-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb16-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    아미노산 간의 거리를 계산하고 덴드로그램으로 시각화합니다.</span></span>
<span id="cb16-12"></span>
<span id="cb16-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb16-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        substitution_matrix (align.SubstitutionMatrix, optional): 사용할 치환 행렬.</span></span>
<span id="cb16-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            기본값은 BLOSUM62입니다.</span></span>
<span id="cb16-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb16-17"></span>
<span id="cb16-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. 치환 행렬 준비 (BLOSUM62 또는 사용자 지정)</span></span>
<span id="cb16-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> substitution_matrix <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb16-20">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> align.SubstitutionMatrix.std_protein_matrix()</span>
<span id="cb16-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 불명확한 기호나 정지 신호 제거</span></span>
<span id="cb16-22">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> align.SubstitutionMatrix(</span>
<span id="cb16-23">            seq.Alphabet(matrix.get_alphabet1().get_symbols()[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]),</span>
<span id="cb16-24">            seq.Alphabet(matrix.get_alphabet2().get_symbols()[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]),</span>
<span id="cb16-25">            matrix.score_matrix()[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],</span>
<span id="cb16-26">        )</span>
<span id="cb16-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb16-28">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> substitution_matrix</span>
<span id="cb16-29"></span>
<span id="cb16-30">    similarities <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> matrix.score_matrix()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 유사도 행렬</span></span>
<span id="cb16-31"></span>
<span id="cb16-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. 거리 계산 함수 정의</span></span>
<span id="cb16-33">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calculate_distance(similarity_matrix, i, j):</span>
<span id="cb16-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""두 아미노산 간의 거리를 계산합니다."""</span></span>
<span id="cb16-35">        max_similarity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (similarity_matrix[i, i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> similarity_matrix[j, j]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb16-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> max_similarity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> similarity_matrix[i, j]</span>
<span id="cb16-37"></span>
<span id="cb16-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. 거리 행렬 생성</span></span>
<span id="cb16-39">    num_amino_acids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> similarities.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb16-40">    distances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((num_amino_acids, num_amino_acids))</span>
<span id="cb16-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(num_amino_acids):</span>
<span id="cb16-42">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(num_amino_acids):</span>
<span id="cb16-43">            distances[i, j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calculate_distance(similarities, i, j)</span>
<span id="cb16-44"></span>
<span id="cb16-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. UPGMA 알고리즘으로 계통수 생성</span></span>
<span id="cb16-46">    tree <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> phylo.upgma(distances)</span>
<span id="cb16-47"></span>
<span id="cb16-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5. 덴드로그램 시각화</span></span>
<span id="cb16-49">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb16-50">    amino_acid_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb16-51">        seq.ProteinSequence.convert_letter_1to3(letter).capitalize()</span>
<span id="cb16-52">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> letter <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> matrix.get_alphabet1()</span>
<span id="cb16-53">    ]</span>
<span id="cb16-54">    graphics.plot_dendrogram(ax, tree, orientation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>, labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>amino_acid_labels)</span>
<span id="cb16-55">    ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distance"</span>)</span>
<span id="cb16-56">    ax.yaxis.grid(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgray"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그리드 추가</span></span>
<span id="cb16-57">    plt.show()</span>
<span id="cb16-58"></span>
<span id="cb16-59"></span>
<span id="cb16-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 아미노산 거리 시각화 (기본 BLOSUM62 사용)</span></span>
<span id="cb16-61">visualize_amino_acid_distances()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-10-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-6"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-10-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="단백질간-계통수dendrogram-그리기" class="level3" data-number="3.3.2">
<h3 data-number="3.3.2" class="anchored" data-anchor-id="단백질간-계통수dendrogram-그리기"><span class="header-section-number">3.3.2</span> 단백질간 계통수(Dendrogram) 그리기</h3>
<p>이 예제는 서로 다른 단백질들 서열로 간단한 계통수를 그립니다. 계통수를 그리는 알고리즘으로는 UPGMA을 사용합니다.</p>
<div id="cell-20" class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> io</span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.application.clustalo <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> clustalo</span>
<span id="cb17-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.align <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> align</span>
<span id="cb17-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.graphics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> graphics</span>
<span id="cb17-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.io.fasta <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> fasta</span>
<span id="cb17-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.phylo <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> phylo</span>
<span id="cb17-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb17-9"></span>
<span id="cb17-10"></span>
<span id="cb17-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> build_and_plot_phylogenetic_tree(fasta_string, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sequence deviation"</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)):</span>
<span id="cb17-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb17-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    주어진 FASTA 문자열로부터 계통수를 생성하고 시각화합니다.</span></span>
<span id="cb17-14"></span>
<span id="cb17-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb17-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        fasta_string (str): FASTA 형식의 서열 문자열.</span></span>
<span id="cb17-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        title (str, optional): 플롯 제목. 기본값은 "Sequence deviation".</span></span>
<span id="cb17-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb17-19"></span>
<span id="cb17-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FASTA 문자열을 시퀀스 딕셔너리로 변환</span></span>
<span id="cb17-21">    fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> io.StringIO(fasta_string)</span>
<span id="cb17-22">    fasta_sequences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta.FastaFile.read(fasta_file)</span>
<span id="cb17-23">    sequences_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta.get_sequences(fasta_sequences)</span>
<span id="cb17-24"></span>
<span id="cb17-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다중 서열 정렬 (MSA) 생성</span></span>
<span id="cb17-26">    alignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clustalo.ClustalOmegaApp.align(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(sequences_dict.values()))</span>
<span id="cb17-27"></span>
<span id="cb17-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 서열 동일성 기반의 거리 행렬 생성</span></span>
<span id="cb17-29">    distances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> align.get_pairwise_sequence_identity(alignment, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shortest"</span>)</span>
<span id="cb17-30"></span>
<span id="cb17-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># UPGMA 알고리즘을 사용하여 계통수 생성</span></span>
<span id="cb17-32">    tree <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> phylo.upgma(distances)</span>
<span id="cb17-33"></span>
<span id="cb17-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 계통수 플롯</span></span>
<span id="cb17-35">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize)</span>
<span id="cb17-36">    graphics.plot_dendrogram(</span>
<span id="cb17-37">        ax,</span>
<span id="cb17-38">        tree,</span>
<span id="cb17-39">        orientation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="cb17-40">        labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(sequences_dict.keys()),</span>
<span id="cb17-41">        show_distance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb17-42">        linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb17-43">    )</span>
<span id="cb17-44"></span>
<span id="cb17-45">    ax.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb17-46">    ax.set_xticks([])</span>
<span id="cb17-47">    ax.set_title(title)</span>
<span id="cb17-48">    plt.show()</span>
<span id="cb17-49"></span>
<span id="cb17-50"></span>
<span id="cb17-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FASTA 문자열</span></span>
<span id="cb17-52">fasta_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb17-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;CBK51939</span></span>
<span id="cb17-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQGISSWLAWYQQKPEKAPKSLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQYYSYPRTFGQGTKVEIK</span></span>
<span id="cb17-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7WSL_L</span></span>
<span id="cb17-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQLTQSPSFLSAYVGDRVTITCKASQDVGTAVAWYQQKPGKAPKLLIYWASTLHTGVPSRFSGSGSGTEFTLTISSLQPEDFATYYCQHYSSYPWTFGQGTKLEIK</span></span>
<span id="cb17-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;8AS0_C</span></span>
<span id="cb17-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQSISSYLNWYQQKPGKAPKLLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQDYGLPFTFGQGTKVEIK</span></span>
<span id="cb17-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7CGW_B</span></span>
<span id="cb17-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIVMTQSPDSLAVSLGERATINCKSSESVSNDVAWYQQKPGQPPKLLINYAFHRFTGVPDRFSGSGYGTDFTLTISSLQAEDVAVYYCHQAYSSPYTFGQGTKLEIK</span></span>
<span id="cb17-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5JXE_C</span></span>
<span id="cb17-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb17-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5B8C_A</span></span>
<span id="cb17-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb17-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb17-66"></span>
<span id="cb17-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 함수 호출</span></span>
<span id="cb17-68">build_and_plot_phylogenetic_tree(fasta_string, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sequence deviation of LC"</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-11-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-7"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-11-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="단백질-패밀리간의-계통수" class="level3" data-number="3.3.3">
<h3 data-number="3.3.3" class="anchored" data-anchor-id="단백질-패밀리간의-계통수"><span class="header-section-number">3.3.3</span> 단백질 패밀리간의 계통수</h3>
<p>이 예제에서는 다양한 G-단백질 연결 수용체(GPCR)의 진화를 나타내는 비뿌리 계통수를 그립니다. GPCR의 UniProt ID와 유전자 이름은 해당 키워드를 통해 얻고 관련된 서열을 다운로드해 정렬합니다. 다중 서열 정렬에서 쌍별 서열 유사성을 기반으로 이웃-결합(neighbor-joining) 방법을 사용하여 계통수를 생성합니다. 마지막으로 <code>NetworkX</code> 패키지의 그래프 기능을 활용해 시각화합니다.</p>
<div id="cell-22" class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb18-2"></span>
<span id="cb18-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.application.clustalo <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> clustalo</span>
<span id="cb18-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.database.uniprot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> uniprot</span>
<span id="cb18-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> seq</span>
<span id="cb18-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.align <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> align</span>
<span id="cb18-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.io.fasta <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> fasta</span>
<span id="cb18-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.phylo <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> phylo</span>
<span id="cb18-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb18-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> networkx <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nx</span>
<span id="cb18-11"></span>
<span id="cb18-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 인간 GPCR을 연구합니다</span></span>
<span id="cb18-13">SPECIES <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Human"</span></span>
<span id="cb18-14"></span>
<span id="cb18-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># UniProt 데이터베이스에서 인간 GPCR 단백질 검색</span></span>
<span id="cb18-16">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb18-17">    uniprot.SimpleQuery(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reviewed"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span>)</span>
<span id="cb18-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> uniprot.SimpleQuery(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"organism_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Homo sapiens"</span>)</span>
<span id="cb18-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> uniprot.SimpleQuery(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keyword"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KW-0491"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MHC II 키워드 ID</span></span>
<span id="cb18-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># uniprot.SimpleQuery("protein_name", "prion proteins")</span></span>
<span id="cb18-21">)</span>
<span id="cb18-22">ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uniprot.search(query)</span>
<span id="cb18-23"></span>
<span id="cb18-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시퀀스 파일 다운로드 및 시퀀스 읽기</span></span>
<span id="cb18-25">genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb18-26">sequences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb18-27">gene_name_pattern <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb18-28">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(?&lt;=GN=)[0-9A-Za-z]+"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FASTA 헤더에서 유전자 이름을 추출하기 위한 정규표현식 패턴</span></span>
<span id="cb18-29">)</span>
<span id="cb18-30"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> uniprot.fetch(ids, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fasta"</span>):</span>
<span id="cb18-31">    fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta.FastaFile.read(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb18-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> header, seq_str <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> fasta_file.items():</span>
<span id="cb18-33">        genes.append(re.search(gene_name_pattern, header).group(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb18-34">        sequences.append(seq.ProteinSequence(seq_str))</span>
<span id="cb18-35"></span>
<span id="cb18-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clustal Omega를 사용하여 다중 서열 정렬 생성</span></span>
<span id="cb18-37">alignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clustalo.ClustalOmegaApp.align(sequences)</span>
<span id="cb18-38"></span>
<span id="cb18-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 트리 계산에 필요한 거리 측정: 두 시퀀스에서 동일하지 않은 아미노산의 비율</span></span>
<span id="cb18-40">distances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> align.get_pairwise_sequence_identity(alignment, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shortest"</span>)</span>
<span id="cb18-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이웃 결합 방법을 통해 트리 생성</span></span>
<span id="cb18-42">tree <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> phylo.neighbor_joining(distances)</span>
<span id="cb18-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NetworkX 그래프로 변환 (그래프 시각화를 위해 간선 방향은 불필요)</span></span>
<span id="cb18-44">graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tree.as_graph().to_undirected()</span>
<span id="cb18-45"></span>
<span id="cb18-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 시각화</span></span>
<span id="cb18-47">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb18-48">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.gca()</span>
<span id="cb18-49">ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb18-50">pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.kamada_kawai_layout(graph)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프에서 노드 위치 계산</span></span>
<span id="cb18-51">node_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(ids)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 노드에 ID를 이름으로 할당</span></span>
<span id="cb18-52">nx.draw_networkx_edges(graph, pos, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax)</span>
<span id="cb18-53">nx.draw_networkx_labels(</span>
<span id="cb18-54">    graph,</span>
<span id="cb18-55">    pos,</span>
<span id="cb18-56">    ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax,</span>
<span id="cb18-57">    labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>node_labels,</span>
<span id="cb18-58">    font_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb18-59">    bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pad"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>},  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 가독성을 위해 라벨 뒤에 흰색 배경 추가</span></span>
<span id="cb18-60">)</span>
<span id="cb18-61">fig.tight_layout()</span>
<span id="cb18-62"></span>
<span id="cb18-63">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-12-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-8"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-12-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="단백질-서열-정렬" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="단백질-서열-정렬"><span class="header-section-number">3.4</span> 단백질 서열 정렬</h2>
<p>Clustal Omega를 사용하여 서열 정렬을 수행하고 시각화합니다.</p>
<div id="cell-24" class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> io</span>
<span id="cb19-2"></span>
<span id="cb19-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.align <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> align</span>
<span id="cb19-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.graphics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> graphics</span>
<span id="cb19-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.io.fasta <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> fasta</span>
<span id="cb19-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb19-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> biotite.application.clustalo <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ClustalOmegaApp</span>
<span id="cb19-8"></span>
<span id="cb19-9"></span>
<span id="cb19-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> align_and_visualize_sequences(fasta_string, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)):</span>
<span id="cb19-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb19-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    주어진 FASTA 형식의 문자열로부터 서열을 정렬하고 시각화합니다.</span></span>
<span id="cb19-13"></span>
<span id="cb19-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb19-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        fasta_string (str): FASTA 형식의 서열 문자열.</span></span>
<span id="cb19-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb19-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 문자열을 파일 객체로 변환</span></span>
<span id="cb19-18">    fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> io.StringIO(fasta_string)</span>
<span id="cb19-19"></span>
<span id="cb19-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FastaFile 객체 생성</span></span>
<span id="cb19-21">    fasta_sequences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta.FastaFile.read(fasta_file)</span>
<span id="cb19-22"></span>
<span id="cb19-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시퀀스 가져오기</span></span>
<span id="cb19-24">    sequences_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta.get_sequences(fasta_sequences)</span>
<span id="cb19-25"></span>
<span id="cb19-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 딕셔너리 값들의 리스트로 변환</span></span>
<span id="cb19-27">    sequences_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(sequences_dict.values())</span>
<span id="cb19-28"></span>
<span id="cb19-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 서열 개수에 따라 정렬 방법 선택</span></span>
<span id="cb19-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sequences_list) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb19-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pairwise alignment</span></span>
<span id="cb19-32">        alignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> align.align_global_gaps(sequences_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], sequences_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb19-33">        alignments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> align.Alignment(sequences_list, alignment.trace)</span>
<span id="cb19-34">        order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb19-35"></span>
<span id="cb19-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb19-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ClustalOmega 실행</span></span>
<span id="cb19-38">        app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ClustalOmegaApp(sequences_list)</span>
<span id="cb19-39">        app.start()</span>
<span id="cb19-40">        app.join()</span>
<span id="cb19-41">        alignments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> app.get_alignment()</span>
<span id="cb19-42">        order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> app.get_alignment_order()</span>
<span id="cb19-43"></span>
<span id="cb19-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화</span></span>
<span id="cb19-45">    fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize)</span>
<span id="cb19-46">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span>)</span>
<span id="cb19-47"></span>
<span id="cb19-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시퀀스 이름 리스트 생성</span></span>
<span id="cb19-49">    sequence_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(sequences_dict.keys())</span>
<span id="cb19-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 정렬 순서에 맞게 시퀀스 이름 재정렬</span></span>
<span id="cb19-51">    ordered_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [sequence_names[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> order]</span>
<span id="cb19-52"></span>
<span id="cb19-53">    graphics.plot_alignment_type_based(</span>
<span id="cb19-54">        ax,</span>
<span id="cb19-55">        alignments[:, order.tolist()],</span>
<span id="cb19-56">        labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ordered_names,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시퀀스 이름을 레이블로 사용</span></span>
<span id="cb19-57">        show_numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb19-58">        color_scheme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flower"</span>,</span>
<span id="cb19-59">    )</span>
<span id="cb19-60">    fig.tight_layout()</span>
<span id="cb19-61">    plt.show()</span>
<span id="cb19-62"></span>
<span id="cb19-63"></span>
<span id="cb19-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예시 FASTA 문자열</span></span>
<span id="cb19-65">fasta_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb19-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;CBK51939</span></span>
<span id="cb19-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQGISSWLAWYQQKPEKAPKSLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQYYSYPRTFGQGTKVEIK</span></span>
<span id="cb19-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7WSL_L</span></span>
<span id="cb19-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQLTQSPSFLSAYVGDRVTITCKASQDVGTAVAWYQQKPGKAPKLLIYWASTLHTGVPSRFSGSGSGTEFTLTISSLQPEDFATYYCQHYSSYPWTFGQGTKLEIK</span></span>
<span id="cb19-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;8AS0_C</span></span>
<span id="cb19-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQSISSYLNWYQQKPGKAPKLLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQDYGLPFTFGQGTKVEIK</span></span>
<span id="cb19-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7CGW_B</span></span>
<span id="cb19-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIVMTQSPDSLAVSLGERATINCKSSESVSNDVAWYQQKPGQPPKLLINYAFHRFTGVPDRFSGSGYGTDFTLTISSLQAEDVAVYYCHQAYSSPYTFGQGTKLEIK</span></span>
<span id="cb19-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5JXE_C</span></span>
<span id="cb19-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb19-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5B8C_A</span></span>
<span id="cb19-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb19-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb19-79"></span>
<span id="cb19-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 함수 호출</span></span>
<span id="cb19-81">align_and_visualize_sequences(fasta_string, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-13-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-9"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-13-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<section id="서열이-다른-부분만-강조하기" class="level3" data-number="3.4.1">
<h3 data-number="3.4.1" class="anchored" data-anchor-id="서열이-다른-부분만-강조하기"><span class="header-section-number">3.4.1</span> 서열이 다른 부분만 강조하기</h3>
<div id="cell-26" class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> io</span>
<span id="cb20-2"></span>
<span id="cb20-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.align <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> align</span>
<span id="cb20-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.graphics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> graphics</span>
<span id="cb20-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.io.fasta <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> fasta</span>
<span id="cb20-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb20-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> biotite.application.clustalo <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ClustalOmegaApp</span>
<span id="cb20-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib.colors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LinearSegmentedColormap</span>
<span id="cb20-9"></span>
<span id="cb20-10"></span>
<span id="cb20-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> visualize_sequence_alignment(fasta_string, annotations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)):</span>
<span id="cb20-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb20-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    주어진 FASTA 형식의 문자열로부터 서열을 정렬하고 시각화합니다.</span></span>
<span id="cb20-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    서열이 2개인 경우와 3개 이상인 경우를 모두 처리합니다.</span></span>
<span id="cb20-15"></span>
<span id="cb20-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb20-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        fasta_string (str): FASTA 형식의 서열 문자열.</span></span>
<span id="cb20-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        annotations (list, optional): 시각화에 추가할 주석 목록.</span></span>
<span id="cb20-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            각 주석은 (x_position, y_position, symbol, color) 튜플로 표현됩니다.</span></span>
<span id="cb20-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb20-21"></span>
<span id="cb20-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FASTA 문자열을 파일 객체로 변환하고 시퀀스 가져오기</span></span>
<span id="cb20-23">    fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> io.StringIO(fasta_string)</span>
<span id="cb20-24">    fasta_sequences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta.FastaFile.read(fasta_file)</span>
<span id="cb20-25">    sequences_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta.get_sequences(fasta_sequences)</span>
<span id="cb20-26">    sequences_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(sequences_dict.values())</span>
<span id="cb20-27">    sequence_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(sequences_dict.keys())</span>
<span id="cb20-28"></span>
<span id="cb20-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 서열 개수에 따라 정렬 방법 선택</span></span>
<span id="cb20-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sequences_list) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb20-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 두 개의 서열인 경우 ungapped alignment</span></span>
<span id="cb20-32">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> align.SubstitutionMatrix.std_protein_matrix()</span>
<span id="cb20-33">        alignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> align.align_ungapped(sequences_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], sequences_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], matrix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>matrix)</span>
<span id="cb20-34">        alignments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> align.Alignment(sequences_list[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], alignment.trace)</span>
<span id="cb20-35">        order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb20-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb20-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 세 개 이상의 서열인 경우 ClustalOmega 사용</span></span>
<span id="cb20-38">        app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ClustalOmegaApp(sequences_list)</span>
<span id="cb20-39">        app.start()</span>
<span id="cb20-40">        app.join()</span>
<span id="cb20-41">        alignments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> app.get_alignment()</span>
<span id="cb20-42">        order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> app.get_alignment_order()</span>
<span id="cb20-43"></span>
<span id="cb20-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 유사도 기반의 색상 맵 생성 (낮은 유사도는 빨간색, 높은 유사도는 흰색)</span></span>
<span id="cb20-45">    cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LinearSegmentedColormap.from_list(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"custom"</span>, [(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>), (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)])</span>
<span id="cb20-46"></span>
<span id="cb20-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 주석 추가 함수</span></span>
<span id="cb20-48">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_annotation(ax, position, sequence_index, symbol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>):</span>
<span id="cb20-49">        y_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (sequence_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 수직 위치 조절</span></span>
<span id="cb20-50">        ax.text(</span>
<span id="cb20-51">            position,</span>
<span id="cb20-52">            y_pos,</span>
<span id="cb20-53">            symbol,</span>
<span id="cb20-54">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="cb20-55">            ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb20-56">            va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb20-57">            fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>,</span>
<span id="cb20-58">        )</span>
<span id="cb20-59"></span>
<span id="cb20-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화</span></span>
<span id="cb20-61">    fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize)</span>
<span id="cb20-62">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span>)</span>
<span id="cb20-63"></span>
<span id="cb20-64">    graphics.plot_alignment_similarity_based(</span>
<span id="cb20-65">        ax,</span>
<span id="cb20-66">        alignments,</span>
<span id="cb20-67">        matrix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>align.SubstitutionMatrix.std_protein_matrix(),</span>
<span id="cb20-68">        symbols_per_line<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb20-69">        labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[sequence_names[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> order],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 정렬 순서에 맞게 레이블 설정</span></span>
<span id="cb20-70">        show_numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb20-71">        cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cmap,</span>
<span id="cb20-72">        symbol_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb20-73">        show_line_position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb20-74">    )</span>
<span id="cb20-75"></span>
<span id="cb20-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 주석 추가</span></span>
<span id="cb20-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> annotations:</span>
<span id="cb20-78">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> pos, seq_idx, sym, col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> annotations:</span>
<span id="cb20-79">            add_annotation(ax, pos, seq_idx, sym, col)</span>
<span id="cb20-80"></span>
<span id="cb20-81">    fig.tight_layout()</span>
<span id="cb20-82">    plt.show()</span>
<span id="cb20-83"></span>
<span id="cb20-84"></span>
<span id="cb20-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FASTA 문자열</span></span>
<span id="cb20-86">fasta_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb20-87"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;CBK51939</span></span>
<span id="cb20-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQGISSWLAWYQQKPEKAPKSLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQYYSYPRTFGQGTKVEIK</span></span>
<span id="cb20-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7WSL_L</span></span>
<span id="cb20-90"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQLTQSPSFLSAYVGDRVTITCKASQDVGTAVAWYQQKPGKAPKLLIYWASTLHTGVPSRFSGSGSGTEFTLTISSLQPEDFATYYCQHYSSYPWTFGQGTKLEIK</span></span>
<span id="cb20-91"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;8AS0_C</span></span>
<span id="cb20-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQSISSYLNWYQQKPGKAPKLLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQDYGLPFTFGQGTKVEIK</span></span>
<span id="cb20-93"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7CGW_B</span></span>
<span id="cb20-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIVMTQSPDSLAVSLGERATINCKSSESVSNDVAWYQQKPGQPPKLLINYAFHRFTGVPDRFSGSGYGTDFTLTISSLQAEDVAVYYCHQAYSSPYTFGQGTKLEIK</span></span>
<span id="cb20-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5JXE_C</span></span>
<span id="cb20-96"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb20-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5B8C_A</span></span>
<span id="cb20-98"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb20-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb20-100"></span>
<span id="cb20-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 함수 호출</span></span>
<span id="cb20-102">visualize_sequence_alignment(fasta_string, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-14-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-10"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-14-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="돌연변이-서열만-표시하기" class="level3" data-number="3.4.2">
<h3 data-number="3.4.2" class="anchored" data-anchor-id="돌연변이-서열만-표시하기"><span class="header-section-number">3.4.2</span> 돌연변이 서열만 표시하기</h3>
<div id="cell-28" class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> io <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StringIO</span>
<span id="cb21-2"></span>
<span id="cb21-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb21-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> biotite.sequence <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GeneralSequence</span>
<span id="cb21-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> biotite.sequence.align <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Alignment</span>
<span id="cb21-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> biotite.sequence.alphabet <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LetterAlphabet</span>
<span id="cb21-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> biotite.sequence.graphics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plot_alignment_similarity_based</span>
<span id="cb21-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> biotite.sequence.io.fasta <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> FastaFile</span>
<span id="cb21-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib.axes <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Axes</span>
<span id="cb21-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib.figure <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Figure</span>
<span id="cb21-11"></span>
<span id="cb21-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용자 정의 알파벳 생성 (기본 알파벳 + '.') - 전역 또는 함수 내에서 정의</span></span>
<span id="cb21-13">CUSTOM_ALPHABET: LetterAlphabet <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LetterAlphabet(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ACDEFGHIKLMNPQRSTVWY."</span>)</span>
<span id="cb21-14"></span>
<span id="cb21-15"></span>
<span id="cb21-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> parse_fasta(</span>
<span id="cb21-17">    fasta_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, custom_alphabet: LetterAlphabet</span>
<span id="cb21-18">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[GeneralSequence], <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]]:</span>
<span id="cb21-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb21-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    FASTA 문자열을 파싱하여 GeneralSequence 객체 리스트와 헤더 리스트를 반환합니다.</span></span>
<span id="cb21-21"></span>
<span id="cb21-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb21-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        fasta_string: FASTA 형식의 문자열.</span></span>
<span id="cb21-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        custom_alphabet: 시퀀스에 사용할 LetterAlphabet 객체.</span></span>
<span id="cb21-25"></span>
<span id="cb21-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb21-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        GeneralSequence 객체의 리스트와 헤더 문자열의 리스트를 담은 튜플.</span></span>
<span id="cb21-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb21-29">    fasta_io <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StringIO(fasta_string)</span>
<span id="cb21-30">    fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FastaFile.read(fasta_io)</span>
<span id="cb21-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fasta_file.values()는 시퀀스 문자열(str)을 반환</span></span>
<span id="cb21-32">    sequences: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[GeneralSequence] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb21-33">        GeneralSequence(custom_alphabet, seq) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> seq <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> fasta_file.values()</span>
<span id="cb21-34">    ]</span>
<span id="cb21-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fasta_file.keys()는 헤더 문자열(str)을 반환</span></span>
<span id="cb21-36">    labels: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(fasta_file.keys())</span>
<span id="cb21-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> sequences, labels</span>
<span id="cb21-38"></span>
<span id="cb21-39"></span>
<span id="cb21-40"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> create_alignment(sequences: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[GeneralSequence]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Alignment:</span>
<span id="cb21-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb21-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    GeneralSequence 객체 리스트를 기반으로 Alignment 객체를 생성합니다.</span></span>
<span id="cb21-43"></span>
<span id="cb21-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb21-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        sequences: GeneralSequence 객체의 리스트.</span></span>
<span id="cb21-46"></span>
<span id="cb21-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb21-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        생성된 Alignment 객체.</span></span>
<span id="cb21-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb21-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seq.symbols는 시퀀스의 심볼 표현(보통 문자열과 유사)을 반환</span></span>
<span id="cb21-51">    trace <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Alignment.trace_from_strings(</span>
<span id="cb21-52">        [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(seq) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> seq <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sequences]</span>
<span id="cb21-53">    )  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .symbols 대신 str() 사용 권장</span></span>
<span id="cb21-54">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> Alignment(sequences, trace)</span>
<span id="cb21-55"></span>
<span id="cb21-56"></span>
<span id="cb21-57"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> replace_matches_with_dot(</span>
<span id="cb21-58">    alignment: Alignment, custom_alphabet: LetterAlphabet, wt_index: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb21-59">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[GeneralSequence]:</span>
<span id="cb21-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb21-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    WT 서열과 동일한 위치의 문자를 '.'으로 변경한 새로운 GeneralSequence 리스트를 반환합니다.</span></span>
<span id="cb21-62"></span>
<span id="cb21-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb21-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        alignment: 원본 Alignment 객체.</span></span>
<span id="cb21-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        custom_alphabet: 변환된 시퀀스에 사용할 LetterAlphabet 객체.</span></span>
<span id="cb21-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        wt_index: WT 서열의 인덱스 (기본값: 0).</span></span>
<span id="cb21-67"></span>
<span id="cb21-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb21-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        변환된 GeneralSequence 객체의 리스트.</span></span>
<span id="cb21-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb21-71">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> alignment.sequences:</span>
<span id="cb21-72">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> []  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 빈 얼라인먼트 처리</span></span>
<span id="cb21-73"></span>
<span id="cb21-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># alignment.sequences[wt_index]는 GeneralSequence 객체</span></span>
<span id="cb21-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># str()을 사용하여 문자열 표현 얻기</span></span>
<span id="cb21-76">    wt_sequence_str: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(alignment.sequences[wt_index])</span>
<span id="cb21-77">    modified_sequence_strs: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [wt_sequence_str]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># WT 서열은 변경 없이 문자열로 추가</span></span>
<span id="cb21-78"></span>
<span id="cb21-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># alignment.sequences[1:] 또한 GeneralSequence 객체 리스트</span></span>
<span id="cb21-80">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> current_seq <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> alignment.sequences[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># F402 오류 방지</span></span>
<span id="cb21-81">        modified_seq_chars: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb21-82">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># str() 안의 변수 이름도 'current_seq'로 변경</span></span>
<span id="cb21-83">        seq_str: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(current_seq)</span>
<span id="cb21-84">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> wt_char, mut_char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(wt_sequence_str, seq_str):</span>
<span id="cb21-85">            modified_seq_chars.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> wt_char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> mut_char <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> mut_char)</span>
<span id="cb21-86">        modified_sequence_strs.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(modified_seq_chars))</span>
<span id="cb21-87"></span>
<span id="cb21-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환된 문자열 리스트로부터 GeneralSequence 객체 리스트 생성</span></span>
<span id="cb21-89">    modified_sequences: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[GeneralSequence] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb21-90">        GeneralSequence(custom_alphabet, seq_str) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> seq_str <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> modified_sequence_strs</span>
<span id="cb21-91">    ]</span>
<span id="cb21-92">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> modified_sequences</span>
<span id="cb21-93"></span>
<span id="cb21-94"></span>
<span id="cb21-95"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_alignment(</span>
<span id="cb21-96">    modified_alignment: Alignment,</span>
<span id="cb21-97">    labels: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>],</span>
<span id="cb21-98">    figsize: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>),</span>
<span id="cb21-99">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb21-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb21-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Alignment 객체를 기반으로 시각화를 수행합니다.</span></span>
<span id="cb21-102"></span>
<span id="cb21-103"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb21-104"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        modified_alignment: 시각화할 Alignment 객체.</span></span>
<span id="cb21-105"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        labels: 각 시퀀스의 라벨 리스트.</span></span>
<span id="cb21-106"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        figsize: 그래프의 크기 (너비, 높이) 튜플 (기본값: (8.0, 3.0)).</span></span>
<span id="cb21-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb21-108">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.subplots()는 Figure와 Axes(또는 Axes 배열) 객체를 반환</span></span>
<span id="cb21-109">    fig: Figure</span>
<span id="cb21-110">    ax: Axes</span>
<span id="cb21-111">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize)</span>
<span id="cb21-112">    fig.patch.set_facecolor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Figure 배경색 설정</span></span>
<span id="cb21-113">    ax.patch.set_facecolor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Axes 배경색 설정</span></span>
<span id="cb21-114"></span>
<span id="cb21-115">    plot_alignment_similarity_based(</span>
<span id="cb21-116">        axes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Axes 객체 전달</span></span>
<span id="cb21-117">        alignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>modified_alignment,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Alignment 객체 전달</span></span>
<span id="cb21-118">        symbols_per_line<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb21-119">        show_numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb21-120">        labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>labels,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 문자열 리스트 전달</span></span>
<span id="cb21-121">        label_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb21-122">        color_symbols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb21-123">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 색상 이름(str) 전달</span></span>
<span id="cb21-124">    )</span>
<span id="cb21-125"></span>
<span id="cb21-126">    plt.tight_layout()</span>
<span id="cb21-127">    plt.show()</span>
<span id="cb21-128"></span>
<span id="cb21-129"></span>
<span id="cb21-130"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> run_alignment_pipeline(fasta_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, figsize: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb21-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb21-132"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    전체 정렬 및 시각화 파이프라인을 실행합니다.</span></span>
<span id="cb21-133"></span>
<span id="cb21-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb21-135"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        fasta_string: FASTA 형식의 문자열.</span></span>
<span id="cb21-136"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        figsize: 플롯의 크기 (너비, 높이) 튜플 (기본값: (8.0, 3.0)).</span></span>
<span id="cb21-137"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb21-138">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FASTA 파싱 및 Alignment 생성</span></span>
<span id="cb21-139">    sequences: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[GeneralSequence]</span>
<span id="cb21-140">    labels: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]</span>
<span id="cb21-141">    sequences, labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parse_fasta(fasta_string, CUSTOM_ALPHABET)</span>
<span id="cb21-142"></span>
<span id="cb21-143">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> sequences:</span>
<span id="cb21-144">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error: No sequences found in the FASTA string."</span>)</span>
<span id="cb21-145">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시퀀스가 없으면 종료</span></span>
<span id="cb21-146"></span>
<span id="cb21-147">    original_alignment: Alignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_alignment(sequences)</span>
<span id="cb21-148"></span>
<span id="cb21-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 서열 변환 실행 (첫 번째 서열이 WT)</span></span>
<span id="cb21-150">    modified_sequences: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[GeneralSequence] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> replace_matches_with_dot(</span>
<span id="cb21-151">        original_alignment, custom_alphabet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>CUSTOM_ALPHABET, wt_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb21-152">    )</span>
<span id="cb21-153"></span>
<span id="cb21-154">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> modified_sequences:</span>
<span id="cb21-155">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error: Could not modify sequences."</span>)</span>
<span id="cb21-156">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환 실패 시 종료</span></span>
<span id="cb21-157"></span>
<span id="cb21-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환된 서열로 Alignment 재생성</span></span>
<span id="cb21-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create_alignment 함수는 GeneralSequence 리스트를 받으므로 그대로 사용 가능</span></span>
<span id="cb21-160">    modified_alignment: Alignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_alignment(modified_sequences)</span>
<span id="cb21-161"></span>
<span id="cb21-162">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 플롯 생성</span></span>
<span id="cb21-163">    plot_alignment(modified_alignment, labels, figsize)</span>
<span id="cb21-164"></span>
<span id="cb21-165"></span>
<span id="cb21-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FASTA 문자열 정의 (첫 번째 서열이 WT)</span></span>
<span id="cb21-167">fasta_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb21-168"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;WT</span></span>
<span id="cb21-169"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EVQLLESGGGLVQPGGSLRLSCAASGFTFRSFGMSWVRQAPGKGPEWVSSISGSGSDTLYADSVKGRFTISRDNSKNTLYLQMNSLRPEDTAVYYCTIGGSLSRSSQGTLVTVSS</span></span>
<span id="cb21-170"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;F27K</span></span>
<span id="cb21-171"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EVQLLESGGGLVQPGGSLRLSCAASGKTFRSFGMSWVRQAPGKGPEWVSSISGSGSDTLYADSVKGRFTISRDNSKNTLYLQMNSLRPEDTAVYYCTIGGSLSRSSQGTLVTVSS</span></span>
<span id="cb21-172"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;L59S</span></span>
<span id="cb21-173"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EVQLLESGGGLVQPGGSLRLSCAASGFTFRSFGMSWVRQAPGKGPEWVSSISGSGSDTSYADSVKGRFTISRDNSKNTLYLQMNSLRPEDTAVYYCTIGGSLSRSSQGTLVTVSS</span></span>
<span id="cb21-174"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;I98A</span></span>
<span id="cb21-175"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EVQLLESGGGLVQPGGSLRLSCAASGFTFRSFGMSWVRQAPGKGPEWVSSISGSGSDTLYADSVKGRFTISRDNSKNTLYLQMNSLRPEDTAVYYCTAGGSLSRSSQGTLVTVSS</span></span>
<span id="cb21-176"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb21-177"></span>
<span id="cb21-178">run_alignment_pipeline(fasta_string, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-15-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-11"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-15-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="항체-cdr-영역-시각화" class="level3" data-number="3.4.3">
<h3 data-number="3.4.3" class="anchored" data-anchor-id="항체-cdr-영역-시각화"><span class="header-section-number">3.4.3</span> 항체 CDR 영역 시각화</h3>
<p><a href="https://github.com/prihoda/AbNumber">AbNumber</a>는 <a href="https://github.com/oxpig/ANARCI">ANARCI</a>(항원 수용체 번호 매기기 및 수용체 분류)를 사용하여 항체 번호 매기기와 정렬을 단순화하는 Python API입니다. 이는 번호 매기기, 정렬 및 인간화를 위한 도구를 제공함으로써 항체 연구 및 개발을 간소화합니다.</p>
<div id="cell-30" class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb22-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> abnumber <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Chain</span>
<span id="cb22-3"></span>
<span id="cb22-4"></span>
<span id="cb22-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> parse_fasta(fasta_string):</span>
<span id="cb22-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""FASTA 문자열 파싱."""</span></span>
<span id="cb22-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [</span>
<span id="cb22-8">        (entry.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].strip(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(entry.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]).strip())</span>
<span id="cb22-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> entry <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> fasta_string.strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;"</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]</span>
<span id="cb22-10">    ]</span>
<span id="cb22-11"></span>
<span id="cb22-12"></span>
<span id="cb22-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> extract_cdr_data(chain_seq):</span>
<span id="cb22-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""주어진 시퀀스에서 CDR 데이터 추출."""</span></span>
<span id="cb22-15">    chain_imgt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Chain(chain_seq, scheme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imgt"</span>, cdr_definition<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imgt"</span>, assign_germline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb22-16">    chain_kabat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Chain(chain_seq, scheme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kabat"</span>, cdr_definition<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kabat"</span>)</span>
<span id="cb22-17"></span>
<span id="cb22-18">    chain_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb22-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Heavy"</span></span>
<span id="cb22-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> chain_imgt.is_heavy_chain()</span>
<span id="cb22-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kappa_light"</span></span>
<span id="cb22-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> chain_imgt.is_kappa_light_chain()</span>
<span id="cb22-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lambda_light"</span></span>
<span id="cb22-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> chain_imgt.is_lambda_light_chain()</span>
<span id="cb22-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"None"</span></span>
<span id="cb22-26">    )</span>
<span id="cb22-27"></span>
<span id="cb22-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {</span>
<span id="cb22-29">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>: chain_imgt.species,</span>
<span id="cb22-30">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chain"</span>: chain_type,</span>
<span id="cb22-31">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"germline"</span>: chain_imgt.v_gene,</span>
<span id="cb22-32">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imgt_CDR1"</span>: chain_imgt.cdr1_seq,</span>
<span id="cb22-33">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imgt_CDR2"</span>: chain_imgt.cdr2_seq,</span>
<span id="cb22-34">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imgt_CDR3"</span>: chain_imgt.cdr3_seq,</span>
<span id="cb22-35">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kabat_CDR1"</span>: chain_kabat.cdr1_seq,</span>
<span id="cb22-36">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kabat_CDR2"</span>: chain_kabat.cdr2_seq,</span>
<span id="cb22-37">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kabat_CDR3"</span>: chain_kabat.cdr3_seq,</span>
<span id="cb22-38">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"full_sequence"</span>: chain_seq,</span>
<span id="cb22-39">    }</span>
<span id="cb22-40"></span>
<span id="cb22-41"></span>
<span id="cb22-42">fasta_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;CBK51939</span></span>
<span id="cb22-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQGISSWLAWYQQKPEKAPKSLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQYYSYPRTFGQGTKVEIK</span></span>
<span id="cb22-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7WSL_L</span></span>
<span id="cb22-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQLTQSPSFLSAYVGDRVTITCKASQDVGTAVAWYQQKPGKAPKLLIYWASTLHTGVPSRFSGSGSGTEFTLTISSLQPEDFATYYCQHYSSYPWTFGQGTKLEIK</span></span>
<span id="cb22-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;8AS0_C</span></span>
<span id="cb22-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQSISSYLNWYQQKPGKAPKLLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQDYGLPFTFGQGTKVEIK</span></span>
<span id="cb22-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7CGW_B</span></span>
<span id="cb22-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIVMTQSPDSLAVSLGERATINCKSSESVSNDVAWYQQKPGQPPKLLINYAFHRFTGVPDRFSGSGYGTDFTLTISSLQAEDVAVYYCHQAYSSPYTFGQGTKLEIK</span></span>
<span id="cb22-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5JXE_C</span></span>
<span id="cb22-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb22-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5B8C_A</span></span>
<span id="cb22-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb22-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-56"></span>
<span id="cb22-57">seq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parse_fasta(fasta_string)</span>
<span id="cb22-58">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>: seq_id, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>extract_cdr_data(chain_seq)} <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> seq_id, chain_seq <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> seq]</span>
<span id="cb22-59">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(data)</span>
<span id="cb22-60">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">id</th>
<th data-quarto-table-cell-role="th">species</th>
<th data-quarto-table-cell-role="th">chain</th>
<th data-quarto-table-cell-role="th">germline</th>
<th data-quarto-table-cell-role="th">imgt_CDR1</th>
<th data-quarto-table-cell-role="th">imgt_CDR2</th>
<th data-quarto-table-cell-role="th">imgt_CDR3</th>
<th data-quarto-table-cell-role="th">kabat_CDR1</th>
<th data-quarto-table-cell-role="th">kabat_CDR2</th>
<th data-quarto-table-cell-role="th">kabat_CDR3</th>
<th data-quarto-table-cell-role="th">full_sequence</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>CBK51939</td>
<td>human</td>
<td>Kappa_light</td>
<td>IGKV1D-16*01</td>
<td>QGISSW</td>
<td>AAS</td>
<td>QQYYSYPRT</td>
<td>RASQGISSWLA</td>
<td>AASSLQS</td>
<td>QQYYSYPRT</td>
<td>DIQMTQSPSSLSASVGDRVTITCRASQGISSWLAWYQQKPEKAPKS...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>7WSL_L</td>
<td>human</td>
<td>Kappa_light</td>
<td>IGKV1-9*01</td>
<td>QDVGTA</td>
<td>WAS</td>
<td>QHYSSYPWT</td>
<td>KASQDVGTAVA</td>
<td>WASTLHT</td>
<td>QHYSSYPWT</td>
<td>DIQLTQSPSFLSAYVGDRVTITCKASQDVGTAVAWYQQKPGKAPKL...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>8AS0_C</td>
<td>human</td>
<td>Kappa_light</td>
<td>IGKV1-39*01</td>
<td>QSISSY</td>
<td>AAS</td>
<td>QQDYGLPFT</td>
<td>RASQSISSYLN</td>
<td>AASSLQS</td>
<td>QQDYGLPFT</td>
<td>DIQMTQSPSSLSASVGDRVTITCRASQSISSYLNWYQQKPGKAPKL...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>7CGW_B</td>
<td>human</td>
<td>Kappa_light</td>
<td>IGKV4-1*01</td>
<td>ESVSND</td>
<td>YAF</td>
<td>HQAYSSPYT</td>
<td>KSSESVSNDVA</td>
<td>YAFHRFT</td>
<td>HQAYSSPYT</td>
<td>DIVMTQSPDSLAVSLGERATINCKSSESVSNDVAWYQQKPGQPPKL...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>5JXE_C</td>
<td>human</td>
<td>Kappa_light</td>
<td>IGKV3-11*01</td>
<td>KGVSTSGYSY</td>
<td>LAS</td>
<td>QHSRDLPLT</td>
<td>RASKGVSTSGYSYLH</td>
<td>LASYLES</td>
<td>QHSRDLPLT</td>
<td>EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQ...</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="cdr-표시한-단백질-서열-정렬-시각화" class="level3" data-number="3.4.4">
<h3 data-number="3.4.4" class="anchored" data-anchor-id="cdr-표시한-단백질-서열-정렬-시각화"><span class="header-section-number">3.4.4</span> CDR 표시한 단백질 서열 정렬 시각화</h3>
<div id="cell-32" class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> io</span>
<span id="cb23-2"></span>
<span id="cb23-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.align <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> align</span>
<span id="cb23-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.graphics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> graphics</span>
<span id="cb23-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.io.fasta <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> fasta</span>
<span id="cb23-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb23-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb23-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> biotite.application.clustalo <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ClustalOmegaApp</span>
<span id="cb23-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib.colors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LinearSegmentedColormap</span>
<span id="cb23-10"></span>
<span id="cb23-11"></span>
<span id="cb23-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> create_similarity_colormap():</span>
<span id="cb23-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""시각화에 사용할 컬러맵 생성"""</span></span>
<span id="cb23-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> LinearSegmentedColormap.from_list(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"similarity_cmap"</span>, [(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>), (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)])</span>
<span id="cb23-15"></span>
<span id="cb23-16"></span>
<span id="cb23-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_sequence_features(ax, alignment, features, num_sequences, line_length, spacing):</span>
<span id="cb23-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""서열 특징 정보를 시각화하는 도우미 함수"""</span></span>
<span id="cb23-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row_index <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(alignment) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> line_length):</span>
<span id="cb23-20">        row_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> line_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> row_index</span>
<span id="cb23-21">        row_end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(line_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (row_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(alignment))</span>
<span id="cb23-22"></span>
<span id="cb23-23">        seq_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> alignment.trace[row_start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb23-24">        seq_end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> alignment.trace[row_end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb23-25">        base_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (num_sequences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> spacing) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> row_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num_sequences</span>
<span id="cb23-26"></span>
<span id="cb23-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> feat_name, (feat_start, feat_end) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> features.items():</span>
<span id="cb23-28">            start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> feat_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb23-29">            end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> feat_end</span>
<span id="cb23-30"></span>
<span id="cb23-31">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> seq_end <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> seq_start:</span>
<span id="cb23-32">                x_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.clip(start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> seq_start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, line_length)</span>
<span id="cb23-33">                x_end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.clip(end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> seq_start, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, line_length)</span>
<span id="cb23-34">                x_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x_end) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb23-35"></span>
<span id="cb23-36">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 특징 표시 선 및 텍스트</span></span>
<span id="cb23-37">                ax.plot(</span>
<span id="cb23-38">                    [x_start, x_end],</span>
<span id="cb23-39">                    [base_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb23-40">                    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb23-41">                    linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb23-42">                    clip_on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb23-43">                )</span>
<span id="cb23-44">                ax.text(</span>
<span id="cb23-45">                    x_center,</span>
<span id="cb23-46">                    base_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>,</span>
<span id="cb23-47">                    feat_name,</span>
<span id="cb23-48">                    fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb23-49">                    va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,</span>
<span id="cb23-50">                    ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb23-51">                )</span>
<span id="cb23-52"></span>
<span id="cb23-53"></span>
<span id="cb23-54"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> perform_alignment(sequences, use_input_order):</span>
<span id="cb23-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""서열 정렬 수행 함수"""</span></span>
<span id="cb23-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sequences) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb23-57">        matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> align.SubstitutionMatrix.std_protein_matrix()</span>
<span id="cb23-58">        alignments, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> align.align_optimal(</span>
<span id="cb23-59">            sequences[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb23-60">            sequences[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb23-61">            matrix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>matrix,</span>
<span id="cb23-62">            gap_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb23-63">            terminal_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb23-64">        )</span>
<span id="cb23-65">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> alignments, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb23-66">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb23-67">        app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ClustalOmegaApp(sequences)</span>
<span id="cb23-68">        app.start()</span>
<span id="cb23-69">        app.join()</span>
<span id="cb23-70">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> app.get_alignment(), app.get_alignment_order()</span>
<span id="cb23-71"></span>
<span id="cb23-72"></span>
<span id="cb23-73"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> visualize_alignment_with_features(</span>
<span id="cb23-74">    fasta_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb23-75">    sequence_features: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb23-76">    use_input_sequence_order: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb23-77">    figure_size: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb23-78">    sequence_line_length: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>,</span>
<span id="cb23-79">    feature_spacing: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb23-80">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb23-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb23-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    FASTA 서열 정렬 및 특징 시각화 함수</span></span>
<span id="cb23-83"></span>
<span id="cb23-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb23-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    fasta_string: FASTA 형식의 서열 문자열</span></span>
<span id="cb23-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    sequence_features: 첫 번째 서열의 특징 위치 정보 (시작, 끝)</span></span>
<span id="cb23-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    use_input_sequence_order: 입력 순서 유지 여부</span></span>
<span id="cb23-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    figure_size: 출력 이미지 크기 (가로, 세로)</span></span>
<span id="cb23-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    sequence_line_length: 줄당 표시할 서열 길이</span></span>
<span id="cb23-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    feature_spacing: 특징 표시 간격</span></span>
<span id="cb23-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb23-92"></span>
<span id="cb23-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FASTA 데이터 파싱</span></span>
<span id="cb23-94">    fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> io.StringIO(fasta_string)</span>
<span id="cb23-95">    seq_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta.get_sequences(fasta.FastaFile.read(fasta_file))</span>
<span id="cb23-96">    sequences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(seq_dict.values())</span>
<span id="cb23-97">    seq_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(seq_dict.keys())</span>
<span id="cb23-98"></span>
<span id="cb23-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 서열 정렬 수행</span></span>
<span id="cb23-100">    alignments, order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> perform_alignment(sequences, use_input_sequence_order)</span>
<span id="cb23-101">    ordered_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [seq_ids[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> order]</span>
<span id="cb23-102"></span>
<span id="cb23-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화 설정</span></span>
<span id="cb23-104">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figure_size)</span>
<span id="cb23-105">    colormap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_similarity_colormap()</span>
<span id="cb23-106"></span>
<span id="cb23-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 정렬 결과 플롯</span></span>
<span id="cb23-108">    graphics.plot_alignment_similarity_based(</span>
<span id="cb23-109">        ax,</span>
<span id="cb23-110">        alignments,</span>
<span id="cb23-111">        matrix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>align.SubstitutionMatrix.std_protein_matrix(),</span>
<span id="cb23-112">        symbols_per_line<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sequence_line_length,</span>
<span id="cb23-113">        labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ordered_ids,</span>
<span id="cb23-114">        show_numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb23-115">        cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colormap,</span>
<span id="cb23-116">        label_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,</span>
<span id="cb23-117">        number_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,</span>
<span id="cb23-118">        symbol_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,</span>
<span id="cb23-119">        spacing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>feature_spacing,</span>
<span id="cb23-120">    )</span>
<span id="cb23-121"></span>
<span id="cb23-122">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 특징 정보 표시</span></span>
<span id="cb23-123">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sequence_features:</span>
<span id="cb23-124">        plot_sequence_features(</span>
<span id="cb23-125">            ax,</span>
<span id="cb23-126">            alignments,</span>
<span id="cb23-127">            sequence_features,</span>
<span id="cb23-128">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sequences),</span>
<span id="cb23-129">            sequence_line_length,</span>
<span id="cb23-130">            feature_spacing,</span>
<span id="cb23-131">        )</span>
<span id="cb23-132"></span>
<span id="cb23-133">    plt.tight_layout()</span>
<span id="cb23-134">    plt.show()</span>
<span id="cb23-135"></span>
<span id="cb23-136"></span>
<span id="cb23-137"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용 예시</span></span>
<span id="cb23-138">fasta_sequence_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb23-139"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;CBK51939</span></span>
<span id="cb23-140"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQGISSWLAWYQQKPEKAPKSLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQYYSYPRTFGQGTKVEIK</span></span>
<span id="cb23-141"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7WSL_L</span></span>
<span id="cb23-142"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQLTQSPSFLSAYVGDRVTITCKASQDVGTAVAWYQQKPGKAPKLLIYWASTLHTGVPSRFSGSGSGTEFTLTISSLQPEDFATYYCQHYSSYPWTFGQGTKLEIK</span></span>
<span id="cb23-143"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;8AS0_C</span></span>
<span id="cb23-144"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIQMTQSPSSLSASVGDRVTITCRASQSISSYLNWYQQKPGKAPKLLIYAASSLQSGVPSRFSGSGSGTDFTLTISSLQPEDFATYYCQQDYGLPFTFGQGTKVEIK</span></span>
<span id="cb23-145"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;7CGW_B</span></span>
<span id="cb23-146"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DIVMTQSPDSLAVSLGERATINCKSSESVSNDVAWYQQKPGQPPKLLINYAFHRFTGVPDRFSGSGYGTDFTLTISSLQAEDVAVYYCHQAYSSPYTFGQGTKLEIK</span></span>
<span id="cb23-147"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5JXE_C</span></span>
<span id="cb23-148"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb23-149"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;5B8C_A</span></span>
<span id="cb23-150"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">EIVLTQSPATLSLSPGERATLSCRASKGVSTSGYSYLHWYQQKPGQAPRLLIYLASYLESGVPARFSGSGSGTDFTLTISSLEPEDFAVYYCQHSRDLPLTFGGGTKVEIK</span></span>
<span id="cb23-151"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb23-152"></span>
<span id="cb23-153">first_sequence_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb23-154">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CDR1"</span>: (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>),</span>
<span id="cb23-155">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CDR2"</span>: (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>),</span>
<span id="cb23-156">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CDR3"</span>: (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">89</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">98</span>),</span>
<span id="cb23-157">}</span>
<span id="cb23-158"></span>
<span id="cb23-159">visualize_alignment_with_features(</span>
<span id="cb23-160">    fasta_sequence_data,</span>
<span id="cb23-161">    sequence_features<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>first_sequence_features,</span>
<span id="cb23-162">    figure_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb23-163">    sequence_line_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span>,</span>
<span id="cb23-164">    feature_spacing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb23-165">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-17-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-12"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-17-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="cdr-서열-로고-시각화" class="level3" data-number="3.4.5">
<h3 data-number="3.4.5" class="anchored" data-anchor-id="cdr-서열-로고-시각화"><span class="header-section-number">3.4.5</span> CDR 서열 로고 시각화</h3>
<p>CDR 서열 로고는 항체 또는 T 세포 수용체의 상보성 결정 영역(CDR) 서열을 시각적으로 표현하는 데 사용됩니다.CDR 서열 로고는 다음과 같은 여러 가지 이점을 제공합니다.</p>
<ul>
<li>시각적 요약: 긴 CDR 서열의 핵심 특징과 다양성을 한눈에 파악할 수 있습니다.</li>
<li>보존된 모티프 식별: 특정 위치에서 빈번하게 나타나는 아미노산 잔기를 강조하여 기능적으로 중요한 모티프를 식별하는 데 도움을 줍니다.</li>
<li>서열 비교: 여러 CDR 서열 그룹의 로고를 비교하여 다양성 패턴과 보존된 영역의 차이를 시각적으로 확인할 수 있습니다.</li>
</ul>
<div id="cell-34" class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> io</span>
<span id="cb24-2"></span>
<span id="cb24-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.application.clustalo <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> clustalo</span>
<span id="cb24-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> seq</span>
<span id="cb24-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.graphics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> graphics</span>
<span id="cb24-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.io.fasta <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> fasta</span>
<span id="cb24-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb24-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pandas 라이브러리 추가</span></span>
<span id="cb24-9"></span>
<span id="cb24-10"></span>
<span id="cb24-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> visualize_sequence_logo(fasta_string, title, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)):</span>
<span id="cb24-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb24-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    주어진 FASTA 문자열로부터 시퀀스 로고를 생성하고 시각화합니다.</span></span>
<span id="cb24-14"></span>
<span id="cb24-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb24-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        fasta_string (str): FASTA 형식의 서열 문자열.</span></span>
<span id="cb24-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb24-18"></span>
<span id="cb24-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FASTA 문자열을 시퀀스 딕셔너리로 변환</span></span>
<span id="cb24-20">    fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> io.StringIO(fasta_string)</span>
<span id="cb24-21">    fasta_sequences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta.FastaFile.read(fasta_file)</span>
<span id="cb24-22">    sequences_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta.get_sequences(fasta_sequences)</span>
<span id="cb24-23"></span>
<span id="cb24-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다중 서열 정렬 (MSA) 생성</span></span>
<span id="cb24-25">    alignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clustalo.ClustalOmegaApp.align(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(sequences_dict.values()))</span>
<span id="cb24-26"></span>
<span id="cb24-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시퀀스 프로파일 생성</span></span>
<span id="cb24-28">    profile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seq.SequenceProfile.from_alignment(alignment)</span>
<span id="cb24-29"></span>
<span id="cb24-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시퀀스 로고 플롯</span></span>
<span id="cb24-31">    fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize)</span>
<span id="cb24-32">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span>)</span>
<span id="cb24-33">    graphics.plot_sequence_logo(ax, profile, scheme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flower"</span>)</span>
<span id="cb24-34"></span>
<span id="cb24-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 플롯 설정</span></span>
<span id="cb24-36">    ax.set_title(title)</span>
<span id="cb24-37">    ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb24-38">    ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bits"</span>)</span>
<span id="cb24-39">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb24-40">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb24-41">    fig.tight_layout()</span>
<span id="cb24-42"></span>
<span id="cb24-43">    plt.show()</span>
<span id="cb24-44"></span>
<span id="cb24-45"></span>
<span id="cb24-46"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> dataframe_to_fasta(df, id_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>, seq_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kabat_CDR1"</span>):</span>
<span id="cb24-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""데이터프레임을 FASTA 형식의 문자열로 변환합니다."""</span></span>
<span id="cb24-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>.join(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"&gt;</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row[id_col]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row[seq_col]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _, row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df.iterrows())</span>
<span id="cb24-49"></span>
<span id="cb24-50"></span>
<span id="cb24-51">cdr_regions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kabat_CDR1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kabat_CDR2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kabat_CDR3"</span>]</span>
<span id="cb24-52"></span>
<span id="cb24-53"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> cdr <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> cdr_regions:</span>
<span id="cb24-54">    fasta_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataframe_to_fasta(df, seq_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cdr)</span>
<span id="cb24-55">    visualize_sequence_logo(fasta_string, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cdr, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-18-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-13"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-18-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-18-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-14"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-18-output-2.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-18-output-3.png" class="lightbox" data-gallery="quarto-lightbox-gallery-15"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-18-output-3.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="단백질-서열에-에피토프-매핑-데이터-시각화" class="level3" data-number="3.4.6">
<h3 data-number="3.4.6" class="anchored" data-anchor-id="단백질-서열에-에피토프-매핑-데이터-시각화"><span class="header-section-number">3.4.6</span> 단백질 서열에 에피토프 매핑 데이터 시각화</h3>
<p>펩타이드 어레이 실험을 통애 얻은 에피토프에 대한 정보를 단백질 서열에 시각화해봅니다. 이 예시에서는 스크리닝된 항원의 색상 코딩된 서열 정렬 표현을 사용하여 두 가지 에피토프 매핑 연구의 데이터를 사용하겠습니다. 스크리닝된 항원은 말라리아 원충(Plasmodium falciparum)의 병독성 인자인 VAR2CSA의 세포외 도메인에 걸쳐 있으며 FCR3 (1-2659번 잔기)와 NF54 (1-2652번 잔기)에 해당합니다.</p>
<div id="cell-36" class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> seq</span>
<span id="cb25-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.align <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> align</span>
<span id="cb25-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.graphics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> graphics</span>
<span id="cb25-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.io.fasta <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> fasta</span>
<span id="cb25-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpl</span>
<span id="cb25-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb25-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb25-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb25-9"></span>
<span id="cb25-10"></span>
<span id="cb25-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> process_epitope_mapping(</span>
<span id="cb25-12">    array_seq_path,</span>
<span id="cb25-13">    sample1_file_path,</span>
<span id="cb25-14">    sample2_file_path,</span>
<span id="cb25-15">    pep_len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb25-16">    score_res<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb25-17">    combine_method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>,</span>
<span id="cb25-18">    threshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb25-19">    overlap_step<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb25-20">    label_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb25-21">    number_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb25-22">    symbol_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb25-23">    cbar_label_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb25-24">    cbar_tick_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb25-25">):</span>
<span id="cb25-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb25-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    에피토프 매핑 데이터를 처리하고 시각화합니다.</span></span>
<span id="cb25-28"></span>
<span id="cb25-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb25-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        array_seq_path (str): Array_Seq.txt 파일 경로.</span></span>
<span id="cb25-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        sample1_file_path (str): 첫 번째 샘플 에피토프 스캔 데이터 CSV 파일 경로.</span></span>
<span id="cb25-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        sample2_file_path (str): 두 번째 샘플 에피토프 스캔 데이터 CSV 파일 경로.</span></span>
<span id="cb25-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pep_len (int, optional): 펩타이드 길이. 기본값은 20.</span></span>
<span id="cb25-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        score_res (int, optional): 점수 잔기 위치. 기본값은 20.</span></span>
<span id="cb25-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        combine_method (str, optional): 점수 결합 방식 ("max" 또는 "mean"). 기본값은 "max".</span></span>
<span id="cb25-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        threshold (int, optional): 신호 점수에 대한 임계값. 기본값은 0.</span></span>
<span id="cb25-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        overlap_step (int, optional): 중첩 펩타이드의 스텝 크기. 기본값은 1.</span></span>
<span id="cb25-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        label_size (int, optional): 축 레이블 크기. 기본값은 8.</span></span>
<span id="cb25-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        number_size (int, optional): 서열 번호 크기. 기본값은 8.</span></span>
<span id="cb25-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        symbol_size (int, optional): 서열 글자 크기. 기본값은 4.</span></span>
<span id="cb25-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        cbar_label_size (int, optional): 컬러바 레이블 크기. 기본값은 8.</span></span>
<span id="cb25-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        cbar_tick_size (int, optional): 컬러바 눈금 크기. 기본값은 8.</span></span>
<span id="cb25-43"></span>
<span id="cb25-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb25-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        None: 결과를 시각적으로 표시합니다.</span></span>
<span id="cb25-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb25-47"></span>
<span id="cb25-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 에피토프 스캔 데이터 처리 함수</span></span>
<span id="cb25-49">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> read_scan(filename, peptide_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, score_residue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>):</span>
<span id="cb25-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""파일에서 에피토프 스캔 데이터를 읽어와 처리합니다."""</span></span>
<span id="cb25-51">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(peptide_length, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>):</span>
<span id="cb25-52">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">TypeError</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"peptide_length: 정수만 허용됩니다."</span>)</span>
<span id="cb25-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(score_residue, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>):</span>
<span id="cb25-54">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">TypeError</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score_residue: 정수만 허용됩니다."</span>)</span>
<span id="cb25-55">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> peptide_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> score_residue:</span>
<span id="cb25-56">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score_residue는 peptide_length보다 클 수 없습니다."</span>)</span>
<span id="cb25-57"></span>
<span id="cb25-58">        s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb25-59">            (score_residue) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> peptide_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-60">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> peptide_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> score_residue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb25-61">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-62">        )</span>
<span id="cb25-63"></span>
<span id="cb25-64">        df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(filename)</span>
<span id="cb25-65">        score_residues <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Seq"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>[s]</span>
<span id="cb25-66">        df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s_res"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> score_residues</span>
<span id="cb25-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df</span>
<span id="cb25-68"></span>
<span id="cb25-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 복제 점수 결합 함수</span></span>
<span id="cb25-70">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> combine_scores(dataframe, combine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>, flag_noisy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>):</span>
<span id="cb25-71">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""복제된 점수를 결합하고 노이즈가 있는 데이터를 표시합니다."""</span></span>
<span id="cb25-72">        df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataframe.copy()</span>
<span id="cb25-73">        df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ave"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r2"</span>]].mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb25-74">        df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"avedev"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ((df.r1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df.ave).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (df.r2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df.ave).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb25-75">        df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dev_ratio"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x.avedev <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> x.avedev <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> x.ave, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb25-76"></span>
<span id="cb25-77">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> combine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>:</span>
<span id="cb25-78">            df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"comb_signal"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(</span>
<span id="cb25-79">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(x.r1, x.r2) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x.dev_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> x.ave, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-80">            )</span>
<span id="cb25-81">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> combine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>:</span>
<span id="cb25-82">            df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"comb_signal"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: x.ave <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x.dev_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb25-83"></span>
<span id="cb25-84">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> flag_noisy:</span>
<span id="cb25-85">            df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flag"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x.dev_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb25-86">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df</span>
<span id="cb25-87"></span>
<span id="cb25-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 변환 함수</span></span>
<span id="cb25-89">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> data_transform(dataframe, threshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>):</span>
<span id="cb25-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""데이터프레임의 신호 값을 변환합니다."""</span></span>
<span id="cb25-91">        df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataframe.copy()</span>
<span id="cb25-92">        t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> threshold</span>
<span id="cb25-93">        df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cubic"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: np.cbrt(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, x.comb_signal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> t)), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb25-94">        df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"signal_plot"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: x.cubic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cubic"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb25-95">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df</span>
<span id="cb25-96"></span>
<span id="cb25-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 갭 서열 생성 함수</span></span>
<span id="cb25-98">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gapped_seq(dataframe, seq_trace, peptide_length, overlap_step<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb25-99">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""정렬 추적과 연결하는 갭 서열을 생성합니다."""</span></span>
<span id="cb25-100">        template <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seq_trace</span>
<span id="cb25-101">        df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataframe</span>
<span id="cb25-102">        _step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> overlap_step</span>
<span id="cb25-103">        gapped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(df.s_res, df.signal_plot))</span>
<span id="cb25-104">        lk1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s_res"</span>].values.tolist()</span>
<span id="cb25-105">        plen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peptide_length</span>
<span id="cb25-106"></span>
<span id="cb25-107">        x, b, c, p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb25-108">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> b <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(lk1)):</span>
<span id="cb25-109">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> a <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> template[x:]:</span>
<span id="cb25-110">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> plen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb25-111">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> a <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb25-112">                        gapped.insert(x, (template[x], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb25-113">                        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-114">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> lk1[b]:</span>
<span id="cb25-115">                        gapped.insert(x, (template[x], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb25-116">                        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-117">                        c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-118">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb25-119">                        gapped.insert(x, (template[x], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb25-120">                        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-121">                        c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-122">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb25-123">                        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-124">                        c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-125">                        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb25-126">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb25-127">                    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb25-128">                    p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-129">                    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-130">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb25-131"></span>
<span id="cb25-132">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 끝 부분의 갭 처리</span></span>
<span id="cb25-133">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(gapped) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(template) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> template[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(gapped) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb25-134">            gapped_tail <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"None"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(template) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(gapped))</span>
<span id="cb25-135">            gapped.extend(gapped_tail)</span>
<span id="cb25-136"></span>
<span id="cb25-137">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> gapped</span>
<span id="cb25-138"></span>
<span id="cb25-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 신호 맵 생성 함수</span></span>
<span id="cb25-140">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> signal_map(gapped_seq1, gapped_seq2):</span>
<span id="cb25-141">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""두 갭 서열에서 신호 점수의 매핑을 생성합니다."""</span></span>
<span id="cb25-142">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> gapped_seq1 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> gapped_seq2 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb25-143">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb25-144">        gapd_s1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gapped_seq1</span>
<span id="cb25-145">        gapd_s2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gapped_seq2</span>
<span id="cb25-146">        fl_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(gapd_s1), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb25-147"></span>
<span id="cb25-148">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> v1 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(gapd_s1)):</span>
<span id="cb25-149">            fl_score[v1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gapd_s1[v1][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb25-150">            fl_score[v1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gapd_s2[v1][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb25-151"></span>
<span id="cb25-152">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> fl_score</span>
<span id="cb25-153"></span>
<span id="cb25-154">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw_colorbar(</span>
<span id="cb25-155">        axes,</span>
<span id="cb25-156">        array1,</span>
<span id="cb25-157">        array2,</span>
<span id="cb25-158">        colormap,</span>
<span id="cb25-159">        orient<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb25-160">        title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb25-161">        label_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb25-162">        tick_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb25-163">    ):</span>
<span id="cb25-164">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""주어진 축에 컬러바를 그립니다."""</span></span>
<span id="cb25-165">        df1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array1</span>
<span id="cb25-166">        df2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array2</span>
<span id="cb25-167">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colormap</span>
<span id="cb25-168">        ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axes</span>
<span id="cb25-169">        orientation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> orient</span>
<span id="cb25-170">        label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> title</span>
<span id="cb25-171"></span>
<span id="cb25-172">        vmiA <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df1[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"comb_signal"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"comb_signal"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df1 <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb25-173">        vmiB <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"comb_signal"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"comb_signal"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df2 <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb25-174">        vmxA <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df1[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"comb_signal"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"comb_signal"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df1 <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-175">        vmxB <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"comb_signal"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"comb_signal"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df2 <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-176"></span>
<span id="cb25-177">        norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mpl.colors.PowerNorm(gamma<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.33</span>, vmin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(vmiA, vmiB), vmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(vmxA, vmxB))</span>
<span id="cb25-178"></span>
<span id="cb25-179">        fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mpl.pyplot.figure()</span>
<span id="cb25-180">        cbar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.colorbar(</span>
<span id="cb25-181">            mpl.cm.ScalarMappable(norm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>norm, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cmp</span>),</span>
<span id="cb25-182">            cax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax,</span>
<span id="cb25-183">            orientation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>orientation,</span>
<span id="cb25-184">            label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>label,</span>
<span id="cb25-185">        )</span>
<span id="cb25-186">        cbar.ax.tick_params(labelsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tick_size)</span>
<span id="cb25-187">        cbar.ax.set_xlabel(cbar.ax.get_xlabel(), fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>label_size)</span>
<span id="cb25-188">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> cbar</span>
<span id="cb25-189"></span>
<span id="cb25-190">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. 데이터 로드 및 전처리</span></span>
<span id="cb25-191">    sample1_scan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> read_scan(sample1_file_path, pep_len, score_res)</span>
<span id="cb25-192">    sample2_scan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> read_scan(sample2_file_path, pep_len, score_res)</span>
<span id="cb25-193"></span>
<span id="cb25-194">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. 복제 점수 결합 및 노이즈 처리</span></span>
<span id="cb25-195">    dfa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb25-196">        combine_scores(sample1_scan, combine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>combine_method, flag_noisy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb25-197">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sample1_scan <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb25-198">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb25-199">    )</span>
<span id="cb25-200">    dfb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb25-201">        combine_scores(sample2_scan, combine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>combine_method, flag_noisy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb25-202">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sample2_scan <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb25-203">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb25-204">    )</span>
<span id="cb25-205"></span>
<span id="cb25-206">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. 데이터 변환 (큐빅 지수 사용)</span></span>
<span id="cb25-207">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> dfa <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb25-208">        dfa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data_transform(dfa, threshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>threshold)</span>
<span id="cb25-209">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> dfb <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb25-210">        dfb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data_transform(dfb, threshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>threshold)</span>
<span id="cb25-211"></span>
<span id="cb25-212">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. FASTA 파일 읽기 및 서열 정렬</span></span>
<span id="cb25-213">    fasta_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fasta.FastaFile.read(array_seq_path)</span>
<span id="cb25-214"></span>
<span id="cb25-215">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FCR3와 NF54 단백질 서열 파싱 (추출)</span></span>
<span id="cb25-216">    sequences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb25-217">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> sequence <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> fasta_file.values():</span>
<span id="cb25-218">        sequences.append(seq.ProteinSequence(sequence))</span>
<span id="cb25-219"></span>
<span id="cb25-220">    matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> align.SubstitutionMatrix.std_protein_matrix()</span>
<span id="cb25-221">    alignments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb25-222"></span>
<span id="cb25-223">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sequences)):</span>
<span id="cb25-224">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sequences)):</span>
<span id="cb25-225">            alignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> align.align_optimal(</span>
<span id="cb25-226">                sequences[i],</span>
<span id="cb25-227">                sequences[j],</span>
<span id="cb25-228">                matrix,</span>
<span id="cb25-229">                gap_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb25-230">                terminal_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb25-231">            )</span>
<span id="cb25-232">            alignments.append(alignment[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb25-233"></span>
<span id="cb25-234">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5. 갭 서열 생성</span></span>
<span id="cb25-235">    trace_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> align.get_symbols(alignments[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb25-236">    trace_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> align.get_symbols(alignments[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb25-237"></span>
<span id="cb25-238">    gapd_s1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb25-239">        gapped_seq(dfa, trace_a, pep_len, overlap_step)</span>
<span id="cb25-240">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> dfa <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> trace_a <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb25-241">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb25-242">    )</span>
<span id="cb25-243">    gapd_s2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb25-244">        gapped_seq(dfb, trace_b, pep_len, overlap_step)</span>
<span id="cb25-245">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> dfb <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> trace_b <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb25-246">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb25-247">    )</span>
<span id="cb25-248"></span>
<span id="cb25-249">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 6. 신호 맵 생성</span></span>
<span id="cb25-250">    score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> signal_map(gapd_s1, gapd_s2) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> gapd_s1 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> gapd_s2 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb25-251"></span>
<span id="cb25-252">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 7. 시각화</span></span>
<span id="cb25-253">    fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>))</span>
<span id="cb25-254">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span>)</span>
<span id="cb25-255">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> score <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb25-256">        graphics.plot_alignment_array(</span>
<span id="cb25-257">            ax,</span>
<span id="cb25-258">            alignments[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb25-259">            fl_score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>score,</span>
<span id="cb25-260">            labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sample 1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sample 2"</span>],</span>
<span id="cb25-261">            show_numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb25-262">            symbols_per_line<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>,</span>
<span id="cb25-263">            show_line_position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb25-264">            label_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>label_size,</span>
<span id="cb25-265">            number_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>number_size,</span>
<span id="cb25-266">            symbol_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>symbol_size,</span>
<span id="cb25-267">        )</span>
<span id="cb25-268"></span>
<span id="cb25-269">        ax2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_axes([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.13</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.07</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>])</span>
<span id="cb25-270">        ax2.set_frame_on(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb25-271"></span>
<span id="cb25-272">        colormap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> graphics.ArrayPlotter(ax2, score).get_cmap()</span>
<span id="cb25-273"></span>
<span id="cb25-274">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> dfa <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> dfb <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> colormap <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb25-275">            cbar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> draw_colorbar(</span>
<span id="cb25-276">                ax2,</span>
<span id="cb25-277">                dfa,</span>
<span id="cb25-278">                dfb,</span>
<span id="cb25-279">                colormap,</span>
<span id="cb25-280">                orient<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"horizontal"</span>,</span>
<span id="cb25-281">                title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fluorescence Intensity [AU]"</span>,</span>
<span id="cb25-282">                label_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cbar_label_size,</span>
<span id="cb25-283">                tick_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cbar_tick_size,</span>
<span id="cb25-284">            )</span>
<span id="cb25-285"></span>
<span id="cb25-286">            labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cbar.ax.get_xticklabels()</span>
<span id="cb25-287">            plt.setp(</span>
<span id="cb25-288">                labels,</span>
<span id="cb25-289">                rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>,</span>
<span id="cb25-290">                horizontalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb25-291">                fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cbar_tick_size,</span>
<span id="cb25-292">            )</span>
<span id="cb25-293"></span>
<span id="cb25-294"></span>
<span id="cb25-295"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용 예시</span></span>
<span id="cb25-296">array_seq_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../input/Array_Seq.txt"</span></span>
<span id="cb25-297">sample1_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../input/FCR3_10ug.csv"</span></span>
<span id="cb25-298">sample2_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../input/NF54_10ug.csv"</span></span>
<span id="cb25-299"></span>
<span id="cb25-300">process_epitope_mapping(</span>
<span id="cb25-301">    array_seq_path,</span>
<span id="cb25-302">    sample1_file_path,</span>
<span id="cb25-303">    sample2_file_path,</span>
<span id="cb25-304">    label_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb25-305">    number_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb25-306">    symbol_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb25-307">    cbar_label_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb25-308">    cbar_tick_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb25-309">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-19-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-16"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-19-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<pre><code>&lt;Figure size 640x480 with 0 Axes&gt;</code></pre>
</div>
</div>
</section>
</section>
<section id="단백질-구조-분석-관련" class="level2" data-number="3.5">
<h2 data-number="3.5" class="anchored" data-anchor-id="단백질-구조-분석-관련"><span class="header-section-number">3.5</span> 단백질 구조 분석 관련</h2>
<section id="이차구조-시각화" class="level3" data-number="3.5.1">
<h3 data-number="3.5.1" class="anchored" data-anchor-id="이차구조-시각화"><span class="header-section-number">3.5.1</span> 이차구조 시각화</h3>
<p>단백질 서열에 대한 이차 구조 예측은 <a href="https://github.com/psipred/s4pred">s4pred</a>에서 계산된 것입니다.</p>
<div id="cell-39" class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite</span>
<span id="cb27-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> seq</span>
<span id="cb27-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence.graphics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> graphics</span>
<span id="cb27-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb27-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb27-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> biotite.sequence <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Annotation, Feature, Location</span>
<span id="cb27-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> biotite.sequence.graphics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plot_feature_map</span>
<span id="cb27-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib.patches <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Rectangle</span>
<span id="cb27-9"></span>
<span id="cb27-10"></span>
<span id="cb27-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 헬릭스 구조를 그리는 클래스</span></span>
<span id="cb27-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> HelixPlotter(graphics.FeaturePlotter):</span>
<span id="cb27-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> matches(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, feature):</span>
<span id="cb27-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> feature.key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SecStr"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> feature.qual.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sec_str_type"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"helix"</span></span>
<span id="cb27-15"></span>
<span id="cb27-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, axes, feature, bbox, loc, style_param):</span>
<span id="cb27-17">        n_turns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.ceil((loc.last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> loc.first <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6</span>)</span>
<span id="cb27-18">        x_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, n_turns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb27-19">        y_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.sin(x_val) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb27-20"></span>
<span id="cb27-21">        x_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> bbox.width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (n_turns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> bbox.x0</span>
<span id="cb27-22">        y_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> bbox.height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> bbox.y0</span>
<span id="cb27-23"></span>
<span id="cb27-24">        background <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Rectangle(bbox.p0, bbox.width, bbox.height, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb27-25">        axes.add_patch(background)</span>
<span id="cb27-26">        axes.plot(x_val, y_val, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FF7979"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 부드러운 붉은색</span></span>
<span id="cb27-27"></span>
<span id="cb27-28"></span>
<span id="cb27-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 시트 구조를 그리는 클래스</span></span>
<span id="cb27-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> SheetPlotter(graphics.FeaturePlotter):</span>
<span id="cb27-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, head_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, tail_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>):</span>
<span id="cb27-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._head_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> head_width</span>
<span id="cb27-33">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._tail_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tail_width</span>
<span id="cb27-34"></span>
<span id="cb27-35">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> matches(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, feature):</span>
<span id="cb27-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> feature.key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SecStr"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> feature.qual.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sec_str_type"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sheet"</span></span>
<span id="cb27-37"></span>
<span id="cb27-38">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, axes, feature, bbox, loc, style_param):</span>
<span id="cb27-39">        x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bbox.x0, bbox.y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> bbox.height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb27-40">        dx, dy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bbox.width, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb27-41"></span>
<span id="cb27-42">        draw_head <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> (loc.defect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> seq.Location.Defect.MISS_RIGHT)</span>
<span id="cb27-43"></span>
<span id="cb27-44">        axes.add_patch(</span>
<span id="cb27-45">            biotite.AdaptiveFancyArrow(</span>
<span id="cb27-46">                x,</span>
<span id="cb27-47">                y,</span>
<span id="cb27-48">                dx,</span>
<span id="cb27-49">                dy,</span>
<span id="cb27-50">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._tail_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> bbox.height,</span>
<span id="cb27-51">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._head_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> bbox.height,</span>
<span id="cb27-52">                head_ratio<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb27-53">                draw_head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>draw_head,</span>
<span id="cb27-54">                color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FFB74D"</span>,</span>
<span id="cb27-55">                linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb27-56">            )</span>
<span id="cb27-57">        )</span>
<span id="cb27-58"></span>
<span id="cb27-59"></span>
<span id="cb27-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 2차 구조를 시각화하는 함수</span></span>
<span id="cb27-61"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> visualize_secondary_structure(sse, first_id, seq_name):</span>
<span id="cb27-62">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> _add_sec_str(annotation, first, last, str_type):</span>
<span id="cb27-63">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> str_type <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>]:</span>
<span id="cb27-64">            feature <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Feature(</span>
<span id="cb27-65">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SecStr"</span>,</span>
<span id="cb27-66">                [Location(first, last)],</span>
<span id="cb27-67">                {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sec_str_type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"helix"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> str_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sheet"</span>},</span>
<span id="cb27-68">            )</span>
<span id="cb27-69">            annotation.add_feature(feature)</span>
<span id="cb27-70"></span>
<span id="cb27-71">    annotation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Annotation()</span>
<span id="cb27-72">    curr_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb27-73">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, curr_sse <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(sse):</span>
<span id="cb27-74">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> curr_start <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb27-75">            curr_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i</span>
<span id="cb27-76">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> curr_sse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> sse[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]:</span>
<span id="cb27-77">            _add_sec_str(annotation, curr_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> first_id, i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> first_id, sse[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb27-78">            curr_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i</span>
<span id="cb27-79">    _add_sec_str(annotation, curr_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> first_id, i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> first_id, curr_sse)</span>
<span id="cb27-80"></span>
<span id="cb27-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 서열 길이에 따라 피겨의 높이 계산</span></span>
<span id="cb27-82">    symbols_per_line <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 줄당 서열의 수</span></span>
<span id="cb27-83">    num_lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sse) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> symbols_per_line)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 올림 나눗셈</span></span>
<span id="cb27-84">    fig_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num_lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기본 높이 1에 줄 수에 따라 높이 추가</span></span>
<span id="cb27-85"></span>
<span id="cb27-86">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.0</span>, fig_height))</span>
<span id="cb27-87">    plot_feature_map(</span>
<span id="cb27-88">        ax,</span>
<span id="cb27-89">        annotation,</span>
<span id="cb27-90">        symbols_per_line<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>symbols_per_line,</span>
<span id="cb27-91">        loc_range<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(first_id, first_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sse)),</span>
<span id="cb27-92">        show_numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb27-93">        show_line_position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb27-94">        feature_plotters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[HelixPlotter(), SheetPlotter()],</span>
<span id="cb27-95">    )</span>
<span id="cb27-96"></span>
<span id="cb27-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 서열 이름을 플롯의 제목으로 추가</span></span>
<span id="cb27-98">    plt.title(seq_name, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb27-99"></span>
<span id="cb27-100">    fig.tight_layout()</span>
<span id="cb27-101">    plt.show()</span>
<span id="cb27-102"></span>
<span id="cb27-103"></span>
<span id="cb27-104"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 입력 문자열 파싱 및 2차 구조 시각화</span></span>
<span id="cb27-105">input_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb27-106"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;AI_SYNTH_1</span></span>
<span id="cb27-107"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">MSEIQVRLNPDDGSKFEYTYTITTESELEKVLNELMDYIKKQGAKRVRISITARTKKEAEKFAAILIKVFAELGYNDINVTFDGDTVTVEGQLQGAKRVRISITARTKKEAEKFAAILIKVFAELGYNDINVTFDGDTVTVEGQLMSEIQVRLNPDDGSKFEYTYTITTESELEKVLNELMDYIKKNVTFDGDTVTVEGQLMSEIQVRLNPDDGSKFEYTYTITTESELEKVLNELMDYIKKQGAKRVRISITARTKKEAEKFAAILIKVFAELGYNDI</span></span>
<span id="cb27-108"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">CCCEEEEECCCCCCEEEEEEEECCHHHHHHHHHHHHHHHHHCCCCEEEEEEEECCHHHHHHHHHHHHHHHHHCCCCEEEEEEECCEEEEEEEECCCCEEEEEEEECCHHHHHHHHHHHHHHHHHCCCCEEEEEEECCEEEEEEEEEEEEEEEECCCCCCCEEEEEEECCHHHHHHHHHHHHHHHHHCCEECCCEEEEEEEEEEEEEEEECCCCCCEEEEEEEECCHHHHHHHHHHHHHHHHHCCCCEEEEEEEECCHHHHHHHHHHHHHHHHHCCCCCC</span></span>
<span id="cb27-109"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;AI_SYNTH_2</span></span>
<span id="cb27-110"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">GSMRQEKVLKSIEETVRKMDVTMETHRSGNEVKVVIKGLHESQQEQLKKDVEETSKKQGVETRIEFHGDTVTIVVREGSMRQEKVLKSIEETVRKMDVTMETHRSGNEVKVVIKGLHESQQEQLKKDVEETSKKQGVETRIEFHGDTVTIVVREGSMRQEKVLKSIEETVRKMDVTMETHRSGNEVKVVIKGLHESQQEQLKKDVEETSKKQGVETRIEFHGDTVTIVVRE</span></span>
<span id="cb27-111"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">CCCCHHHHHHHHHHHHHHCCCEEEEEECCCEEEEEEECCCHHHHHHHHHHHHHHHHHCCCEEEEEEECCEEEEEEECCCCCHHHHHHHHHHHHHHCCCEEEEEECCCEEEEEEECCCHHHHHHHHHHHHHHHHHCCCEEEEEEECCEEEEEEECCCCCHHHHHHHHHHHHHHCCCEEEEEECCCEEEEEEECCCHHHHHHHHHHHHHHHHHCCCCEEEEEECCEEEEEEEC</span></span>
<span id="cb27-112"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;AI_SYNTH_3</span></span>
<span id="cb27-113"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">GKSPTEVLLELIAEASGTTREEVKEKFLKELRKGKSPTEVLLELIAEASGTTKEEVKEKFLKELSFGKSPTEVLLELIAEASGTTKEEVKKKFWKELSLGKSPTEVLLELIAEASGTTREEVKEKFLKELRKGKSPTEVLLELIAEASGTTKEEVKEKFLKELSFGKSPTEVLLELIAEASGTTKEEVKKKFWKELSLGKSPTEVLLELIAEASGTTREEVKEKFLKELRKGKSPTEVLLELIAEASGTTKEEVKEKFLKELSFGKSPTEVLLELIAEASGTTKEEVKKKFWKELSL</span></span>
<span id="cb27-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">CCCHHHHHHHHHHHHHCCCHHHHHHHHHHHHHCCCCHHHHHHHHHHHHHCCCHHHHHHHHHHHHCCCCCHHHHHHHHHHHHHCCCHHHHHHHHHHHHCCCCCHHHHHHHHHHHHHCCCHHHHHHHHHHHHHCCCCHHHHHHHHHHHHHCCCHHHHHHHHHHHHCCCCCHHHHHHHHHHHHHCCCHHHHHHHHHHHHCCCCCHHHHHHHHHHHHHCCCHHHHHHHHHHHHHCCCCHHHHHHHHHHHHHCCCHHHHHHHHHHHHCCCCCHHHHHHHHHHHHCCCCHHHHHHHHHHHCCC</span></span>
<span id="cb27-115"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb27-116"></span>
<span id="cb27-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 입력 문자열에서 서열 정보 추출</span></span>
<span id="cb27-118">sequences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb27-119"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> input_string.strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>):</span>
<span id="cb27-120">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> line.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;"</span>):</span>
<span id="cb27-121">        current_seq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> line[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]</span>
<span id="cb27-122">        sequences[current_seq] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb27-123">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb27-124">        sequences[current_seq].append(line)</span>
<span id="cb27-125"></span>
<span id="cb27-126"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DSSP 표기법을 ABC 표기법으로 변환</span></span>
<span id="cb27-127">dssp_to_abc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"E"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>}</span>
<span id="cb27-128"></span>
<span id="cb27-129"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 서열에 대해 2차 구조 시각화</span></span>
<span id="cb27-130"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> seq_name, seq_data <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sequences.items():</span>
<span id="cb27-131">    sequence, sse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seq_data</span>
<span id="cb27-132">    sse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([dssp_to_abc[e] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> e <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sse], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"U1"</span>)</span>
<span id="cb27-133">    visualize_secondary_structure(sse, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, seq_name)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-20-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-17"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-20-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-20-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-18"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-20-output-2.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-20-output-3.png" class="lightbox" data-gallery="quarto-lightbox-gallery-19"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-20-output-3.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="라마찬드란-플롯-ramachandran-plot" class="level3" data-number="3.5.2">
<h3 data-number="3.5.2" class="anchored" data-anchor-id="라마찬드란-플롯-ramachandran-plot"><span class="header-section-number">3.5.2</span> 라마찬드란 플롯 (Ramachandran Plot)</h3>
<p>아래 코드는 스크립트는 라마찬드란 플롯을 생성합니다. 라마찬드란 플롯은 단백질 구조 분석에 사용되는 중요한 그래프입니다. 단백질을 구성하는 아미노산 잔기의 회전각(dihedral angle) 중 두 가지, 즉 파이(φ, phi) 각과 싸이(ψ, psi) 각의 가능한 조합을 시각적으로 나타냅니다.</p>
<ul>
<li>파이(φ) 각: 하나의 아미노산 잔기 내에서 질소 원자(N)와 알파 탄소 원자(Cα) 사이의 결합을 축으로 하는 회전각입니다. 이전 아미노산의 카르보닐 탄소(C’)와 현재 아미노산의 아미노 질소(N)로 정의됩니다.</li>
<li>싸이(ψ) 각: 하나의 아미노산 잔기 내에서 알파 탄소 원자(Cα)와 카르보닐 탄소 원자(C’) 사이의 결합을 축으로 하는 회전각입니다. 현재 아미노산의 알파 탄소(Cα)와 카르보닐 탄소(C’) 그리고 다음 아미노산의 아미노 질소(N)로 정의됩니다.</li>
</ul>
<p>이 두 각도의 조합은 폴리펩타이드 사슬의 국소적인 형태, 즉 2차 구조에 큰 영향을 미칩니다. 라마찬드란 플롯은 이론적으로 가능한 파이-싸이 각도 조합 중에서 실제로 단백질 구조에서 관찰되는 각도 분포를 보여줍니다.</p>
<section id="플롯의-의미" class="level4" data-number="3.5.2.1">
<h4 data-number="3.5.2.1" class="anchored" data-anchor-id="플롯의-의미"><span class="header-section-number">3.5.2.1</span> 플롯의 의미:</h4>
<ul>
<li>플롯 상의 점 하나는 단백질 내의 하나의 아미노산 잔기에 해당하며, 그 점의 위치는 해당 잔기의 파이 각과 싸이 각 값을 나타냅니다.</li>
<li>플롯에는 일반적으로 허용된 영역(allowed regions)과 금지된 영역(disallowed regions)이 표시됩니다. 이는 아미노산의 입체적인 충돌 때문에 특정 각도 조합이 불가능하거나 매우 드물게 나타나기 때문입니다.</li>
<li>알파-나선(alpha-helix) 구조를 갖는 아미노산 잔기들은 플롯의 특정 영역에 집중되어 나타납니다.</li>
<li>베타-병풍(beta-sheet) 구조를 갖는 아미노산 잔기들은 또 다른 특정 영역에 집중되어 나타납니다.</li>
<li>기타 구조(예: 루프, 턴)를 갖는 잔기들은 플롯의 다양한 영역에 분포할 수 있습니다.</li>
</ul>
<div id="cell-41" class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tempfile <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gettempdir</span>
<span id="cb28-2"></span>
<span id="cb28-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.database.rcsb <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> rcsb</span>
<span id="cb28-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.structure <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> struc</span>
<span id="cb28-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.structure.io <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> strucio</span>
<span id="cb28-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb28-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb28-8"></span>
<span id="cb28-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 단백질 구조 데이터 다운로드 및 처리</span></span>
<span id="cb28-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rcsb.fetch(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3av0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cif"</span>, gettempdir())</span>
<span id="cb28-11">atom_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> strucio.load_structure(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb28-12">peptide <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> atom_array[struc.filter_amino_acids(atom_array)]</span>
<span id="cb28-13">chain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peptide[peptide.chain_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>]</span>
<span id="cb28-14"></span>
<span id="cb28-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이면각 계산</span></span>
<span id="cb28-16">phi, psi, omega <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> struc.dihedral_backbone(chain)</span>
<span id="cb28-17">phi, psi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.rad2deg(phi)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], np.rad2deg(psi)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb28-18"></span>
<span id="cb28-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 라마찬드란 플롯 생성</span></span>
<span id="cb28-20">figure, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb28-21">h, xed, yed, image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.hist2d(phi, psi, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viridis"</span>, cmin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb28-22"></span>
<span id="cb28-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 컬러바 설정</span></span>
<span id="cb28-24">cbar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> figure.colorbar(image, orientation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vertical"</span>)</span>
<span id="cb28-25">cbar.set_label(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>)</span>
<span id="cb28-26"></span>
<span id="cb28-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 플롯 스타일 설정</span></span>
<span id="cb28-28">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equal"</span>)</span>
<span id="cb28-29">ax.set_xlim(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>)</span>
<span id="cb28-30">ax.set_ylim(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>)</span>
<span id="cb28-31">ax.set_xlabel(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">phi</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb28-32">ax.set_ylabel(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">psi</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb28-33">ax.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ramachandran plot"</span>)</span>
<span id="cb28-34"></span>
<span id="cb28-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 플롯 표시</span></span>
<span id="cb28-36">plt.tight_layout()</span>
<span id="cb28-37">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-21-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-20"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-21-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="인접-행렬adjacency-matrix-시각화하기" class="level3" data-number="3.5.3">
<h3 data-number="3.5.3" class="anchored" data-anchor-id="인접-행렬adjacency-matrix-시각화하기"><span class="header-section-number">3.5.3</span> 인접 행렬(adjacency matrix) 시각화하기</h3>
<p>인접 행렬(Adjacency Matrix)은 그래프 이론에서 사용되는 개념으로 그래프 내의 노드(vertex)들이 서로 어떻게 연결되어 있는지(adjacent)를 나타내는 정사각 행렬입니다. 생물학, 특히 단백질 구조 분석에서는 원자 또는 아미노산 잔기를 노드로 간주하고 특정 기준(예: 거리)에 따라 서로 연결되어 있다고 정의할 때 유용하게 활용할 수 있습니다.</p>
<div id="cell-43" class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tempfile <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gettempdir</span>
<span id="cb29-2"></span>
<span id="cb29-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite</span>
<span id="cb29-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.database.rcsb <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> rcsb</span>
<span id="cb29-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.structure <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> struc</span>
<span id="cb29-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.structure.io <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> strucio</span>
<span id="cb29-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb29-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb29-9"></span>
<span id="cb29-10"></span>
<span id="cb29-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> download_and_load_structure(pdb_id):</span>
<span id="cb29-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""PDB ID를 이용하여 단백질 구조를 다운로드하고 Biotite Structure 객체로 로드합니다."""</span></span>
<span id="cb29-13">    file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rcsb.fetch(pdb_id, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cif"</span>, gettempdir())</span>
<span id="cb29-14">    array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> strucio.load_structure(file_name)</span>
<span id="cb29-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> array</span>
<span id="cb29-16"></span>
<span id="cb29-17"></span>
<span id="cb29-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> select_ca_atoms(structure, chain_id):</span>
<span id="cb29-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Biotite Structure 객체에서 특정 chain ID의 CA (알파 탄소) 원자만 선택합니다."""</span></span>
<span id="cb29-20">    chain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> structure[structure.chain_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> chain_id]</span>
<span id="cb29-21">    ca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chain[chain.atom_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CA"</span>]</span>
<span id="cb29-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ca</span>
<span id="cb29-23"></span>
<span id="cb29-24"></span>
<span id="cb29-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calculate_distance_matrix(atom_array):</span>
<span id="cb29-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Biotite AtomArray에서 CA 원자 간의 거리 행렬을 계산합니다."""</span></span>
<span id="cb29-27">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> atom_array.coord</span>
<span id="cb29-28">    n_atoms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coords.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb29-29">    distances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((n_atoms, n_atoms))</span>
<span id="cb29-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n_atoms):</span>
<span id="cb29-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(i, n_atoms):</span>
<span id="cb29-32">            dist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(coords[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> coords[j])</span>
<span id="cb29-33">            distances[i, j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dist</span>
<span id="cb29-34">            distances[j, i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dist</span>
<span id="cb29-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> distances</span>
<span id="cb29-36"></span>
<span id="cb29-37"></span>
<span id="cb29-38"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> visualize_distance_matrix(distance_matrix, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CA atom distance map"</span>, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viridis_r"</span>):</span>
<span id="cb29-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""행렬을 컬러맵을 사용하여 시각화하고 컬러바를 추가합니다."""</span></span>
<span id="cb29-40">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 컬러바 공간 고려하여 figsize 조정</span></span>
<span id="cb29-41">    im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.imshow(distance_matrix, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cmap, origin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lower"</span>)</span>
<span id="cb29-42"></span>
<span id="cb29-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 컬러바 크기 줄이기</span></span>
<span id="cb29-44">    cbar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.colorbar(im, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax, shrink<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>)</span>
<span id="cb29-45">    cbar.set_label(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distance (Å)"</span>)</span>
<span id="cb29-46"></span>
<span id="cb29-47">    ax.xaxis.tick_bottom()</span>
<span id="cb29-48">    ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"equal"</span>)</span>
<span id="cb29-49">    ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residue number"</span>)</span>
<span id="cb29-50">    ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Residue number"</span>)</span>
<span id="cb29-51">    ax.set_title(title)</span>
<span id="cb29-52">    fig.tight_layout()</span>
<span id="cb29-53">    plt.show()</span>
<span id="cb29-54"></span>
<span id="cb29-55"></span>
<span id="cb29-56">pdb_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8z8v"</span></span>
<span id="cb29-57">chain_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span></span>
<span id="cb29-58"></span>
<span id="cb29-59">structure <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> download_and_load_structure(pdb_id)</span>
<span id="cb29-60">ca_atoms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> select_ca_atoms(structure, chain_id)</span>
<span id="cb29-61">distance_matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calculate_distance_matrix(ca_atoms)</span>
<span id="cb29-62">visualize_distance_matrix(</span>
<span id="cb29-63">    distance_matrix, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"CA atom distance map of </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pdb_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - Chain </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>chain_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb29-64">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-22-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-21"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-22-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="단백질의-지름-측정" class="level3" data-number="3.5.4">
<h3 data-number="3.5.4" class="anchored" data-anchor-id="단백질의-지름-측정"><span class="header-section-number">3.5.4</span> 단백질의 지름 측정</h3>
<p>아래 코드는 단백질의 지름을 최대 원자 간 쌍 거리로 정의하여 계산합니다. 이는 단백질 내에 존재하는 모든 원자 쌍 사이의 거리를 계산한 후, 그 중 가장 큰 거리를 단백질의 지름으로 정의하는 방식입니다.</p>
<div id="cell-45" class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tempfile <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gettempdir</span>
<span id="cb30-2"></span>
<span id="cb30-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.database.rcsb <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> rcsb</span>
<span id="cb30-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.structure <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> struc</span>
<span id="cb30-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.structure.io <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> strucio</span>
<span id="cb30-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb30-7"></span>
<span id="cb30-8"></span>
<span id="cb30-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_diameter(pdb_id):</span>
<span id="cb30-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PDB 파일 다운로드</span></span>
<span id="cb30-11">    file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rcsb.fetch(pdb_id, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bcif"</span>, gettempdir())</span>
<span id="cb30-12">    atom_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> strucio.load_structure(file_name)</span>
<span id="cb30-13"></span>
<span id="cb30-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 아미노산만 남기고 나머지 제거</span></span>
<span id="cb30-15">    atom_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> atom_array[struc.filter_amino_acids(atom_array)]</span>
<span id="cb30-16"></span>
<span id="cb30-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원자 좌표 추출</span></span>
<span id="cb30-18">    coord <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> atom_array.coord</span>
<span id="cb30-19"></span>
<span id="cb30-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모든 쌍별 차이 벡터 계산</span></span>
<span id="cb30-21">    diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coord[:, np.newaxis, :] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> coord[np.newaxis, :, :]</span>
<span id="cb30-22"></span>
<span id="cb30-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 차이 벡터의 절대값 계산 -&gt; 제곱 거리</span></span>
<span id="cb30-24">    sq_dist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> diff, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb30-25"></span>
<span id="cb30-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최대 거리가 지름</span></span>
<span id="cb30-27">    diameter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.sqrt(np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(sq_dist))</span>
<span id="cb30-28"></span>
<span id="cb30-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> diameter</span>
<span id="cb30-30"></span>
<span id="cb30-31"></span>
<span id="cb30-32"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1IGT(항체)의 지름:"</span>, get_diameter(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1IGT"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Angstrom"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1IGT(항체)의 지름: 166.0276 Angstrom</code></pre>
</div>
</div>
</section>
<section id="단백질-구조가-풀리지-않은-식별" class="level3" data-number="3.5.5">
<h3 data-number="3.5.5" class="anchored" data-anchor-id="단백질-구조가-풀리지-않은-식별"><span class="header-section-number">3.5.5</span> 단백질 구조가 풀리지 않은 식별</h3>
<p>아래 코드는 단백질 구조에서 발견된 갭(gap), 즉 정보가 없는 부분을 나타내는 막대 그래프를 생성합니다. 위쪽 막대는 최근 결정 구조(PDB 코드: 5LUQ)에서 누락된 아미노산 잔기를 보여주고 아래쪽 막대는 최근 저온 전자 현미경(cryo-EM) 구조(PDB 코드: 5W1R)에서 누락된 아미노산 잔기를 보여줍니다.</p>
<ul>
<li>초록색: 공간적으로 구조가 밝혀진 아미노산 잔기</li>
<li>노란색: 단순히 폴리알라닌으로만 주석 처리된 아미노산 잔기 (정확한 측쇄 정보 없음)</li>
<li>빨간색: 구조가 해결되지 않아 정보가 없는 아미노산 잔기</li>
</ul>
<div id="cell-47" class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tempfile <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gettempdir</span>
<span id="cb32-2"></span>
<span id="cb32-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.database.rcsb <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> rcsb</span>
<span id="cb32-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.structure.io <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> strucio</span>
<span id="cb32-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb32-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb32-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib.patches <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Rectangle</span>
<span id="cb32-8"></span>
<span id="cb32-9"></span>
<span id="cb32-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_gaps(pdb_id, chain_id, ax):</span>
<span id="cb32-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 구조 파일 다운로드 및 파싱</span></span>
<span id="cb32-12">    path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rcsb.fetch(pdb_id, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bcif"</span>, gettempdir())</span>
<span id="cb32-13">    atom_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> strucio.load_structure(path)</span>
<span id="cb32-14"></span>
<span id="cb32-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 지정된 체인만 고려</span></span>
<span id="cb32-16">    atom_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> atom_array[atom_array.chain_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> chain_id]</span>
<span id="cb32-17"></span>
<span id="cb32-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 잔기의 상태를 저장할 배열 (0: 없음, 1: 폴리알라닌, 2: 존재)</span></span>
<span id="cb32-19">    states <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(atom_array.res_id[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb32-20"></span>
<span id="cb32-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 잔기의 상태 결정</span></span>
<span id="cb32-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(states)):</span>
<span id="cb32-23">        residue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> atom_array[atom_array.res_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb32-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(residue) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb32-25">            states[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 잔기 없음</span></span>
<span id="cb32-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> residue.res_name[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UNK"</span>:</span>
<span id="cb32-27">            states[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 폴리알라닌</span></span>
<span id="cb32-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb32-29">            states[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 잔기 존재</span></span>
<span id="cb32-30"></span>
<span id="cb32-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 상태의 연속된 구간 찾기</span></span>
<span id="cb32-32">    state_intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb32-33">    curr_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb32-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(states)):</span>
<span id="cb32-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> curr_start <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb32-36">            curr_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i</span>
<span id="cb32-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> states[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> states[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]:</span>
<span id="cb32-38">            state_intervals.append((curr_start, i, states[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span>
<span id="cb32-39">            curr_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i</span>
<span id="cb32-40">    state_intervals.append((curr_start, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(states), states[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span>
<span id="cb32-41"></span>
<span id="cb32-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 상태 구간을 색상으로 표시 (Nord 테마의 Aurora 색상 사용)</span></span>
<span id="cb32-43">    colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#BF616A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EBCB8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A3BE8C"</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Nord 색상: Red, Yellow, Green</span></span>
<span id="cb32-44">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> start, stop, state <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> state_intervals:</span>
<span id="cb32-45">        ax.add_patch(</span>
<span id="cb32-46">            Rectangle(</span>
<span id="cb32-47">                (start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb32-48">                stop <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start,</span>
<span id="cb32-49">                <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb32-50">                edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"None"</span>,</span>
<span id="cb32-51">                facecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[state],</span>
<span id="cb32-52">            )</span>
<span id="cb32-53">        )</span>
<span id="cb32-54"></span>
<span id="cb32-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 스타일 설정</span></span>
<span id="cb32-56">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb32-57">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb32-58">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb32-59">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb32-60">    ax.yaxis.set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb32-61">    ax.set_xlim(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(states) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb32-62">    ax.set_ylim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb32-63"></span>
<span id="cb32-64"></span>
<span id="cb32-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 메인 그래프 생성</span></span>
<span id="cb32-66">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb32-67"></span>
<span id="cb32-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5luq 구조 그래프</span></span>
<span id="cb32-69">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">211</span>)</span>
<span id="cb32-70">ax.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5luq"</span>, loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)</span>
<span id="cb32-71">plot_gaps(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5luq"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, ax)</span>
<span id="cb32-72"></span>
<span id="cb32-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5w1r 구조 그래프</span></span>
<span id="cb32-74">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">212</span>)</span>
<span id="cb32-75">ax.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5w1r"</span>, loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)</span>
<span id="cb32-76">plot_gaps(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5w1r"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, ax)</span>
<span id="cb32-77">ax.set_xlabel(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">Residue </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\ </span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">number</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb32-78"></span>
<span id="cb32-79">fig.tight_layout()</span>
<span id="cb32-80">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-24-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-22"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-24-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="당화된-아미노산-시각화" class="level3" data-number="3.5.6">
<h3 data-number="3.5.6" class="anchored" data-anchor-id="당화된-아미노산-시각화"><span class="header-section-number">3.5.6</span> 당화된 아미노산 시각화</h3>
<p>이 예시에서는 임의의 단백질에서 아미노산 잔기의 당화(glycosylation)를 시각적으로 나타냅니다. 먼저, 당류에 속하는 잔기 이름 목록이 필요합니다. 이러한 목록을 만드는 것은 상당히 번거롭습니다. 여기에서는 Mol* 소프트웨어 에서 목록을 가져와 사용하겠습니다.</p>
<div id="cell-49" class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tempfile <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gettempdir</span>
<span id="cb33-2"></span>
<span id="cb33-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.database.rcsb <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> rcsb</span>
<span id="cb33-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.sequence <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> seq</span>
<span id="cb33-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.structure <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> struc</span>
<span id="cb33-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> biotite.structure.io.pdbx <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pdbx</span>
<span id="cb33-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb33-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> networkx <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nx</span>
<span id="cb33-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb33-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib.lines <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Line2D</span>
<span id="cb33-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> networkx.drawing.nx_pydot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> graphviz_layout</span>
<span id="cb33-12"></span>
<span id="cb33-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 상수 정의</span></span>
<span id="cb33-14">NODE_SIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb33-15">HORIZONTAL_NODE_DISTANCE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb33-16">LINE_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb33-17">SACCHARIDE_NAMES <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb33-18">    res_name: common_name</span>
<span id="cb33-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> common_name, res_names <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [</span>
<span id="cb33-20">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Glc"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GLC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BGC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z8T"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MLR"</span>]),</span>
<span id="cb33-21">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Man"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MAN"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BMA"</span>]),</span>
<span id="cb33-22">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gal"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GLA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GAL"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GZL"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GXL"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GIV"</span>]),</span>
<span id="cb33-23">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gul"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4GL"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GL0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GUP"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z8H"</span>]),</span>
<span id="cb33-24">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alt"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z6H"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3MK"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SHD"</span>]),</span>
<span id="cb33-25">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"All"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AFD"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ALL"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WOO"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z2D"</span>]),</span>
<span id="cb33-26">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tal"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ZEE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A5C"</span>]),</span>
<span id="cb33-27">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ido"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ZCD"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z0F"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4N2"</span>]),</span>
<span id="cb33-28">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GlcNAc"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NDG"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NAG"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NGZ"</span>]),</span>
<span id="cb33-29">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ManNAc"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BM3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BM7"</span>]),</span>
<span id="cb33-30">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GalNAc"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A2G"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NGA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YYQ"</span>]),</span>
<span id="cb33-31">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GulNAc"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LXB"</span>]),</span>
<span id="cb33-32">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AllNAc"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NAA"</span>]),</span>
<span id="cb33-33">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IdoNAc"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LXZ"</span>]),</span>
<span id="cb33-34">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GlcN"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PA1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GCS"</span>]),</span>
<span id="cb33-35">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ManN"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"95Z"</span>]),</span>
<span id="cb33-36">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GalN"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X6X"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1GN"</span>]),</span>
<span id="cb33-37">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GlcA"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GCU"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BDP"</span>]),</span>
<span id="cb33-38">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ManA"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MAV"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BEM"</span>]),</span>
<span id="cb33-39">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GalA"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ADA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GTR"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GTK"</span>]),</span>
<span id="cb33-40">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GulA"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LGU"</span>]),</span>
<span id="cb33-41">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TalA"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X1X"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X0X"</span>]),</span>
<span id="cb33-42">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IdoA"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IDR"</span>]),</span>
<span id="cb33-43">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Qui"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G6D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YYK"</span>]),</span>
<span id="cb33-44">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rha"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RAM"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RM4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XXR"</span>]),</span>
<span id="cb33-45">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6dGul"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"66O"</span>]),</span>
<span id="cb33-46">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fuc"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FUC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FUL"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FCA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FCB"</span>]),</span>
<span id="cb33-47">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"QuiNAc"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z9W"</span>]),</span>
<span id="cb33-48">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FucNAc"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"49T"</span>]),</span>
<span id="cb33-49">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Oli"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DDA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RAE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z5J"</span>]),</span>
<span id="cb33-50">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tyv"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TYV"</span>]),</span>
<span id="cb33-51">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Abe"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ABE"</span>]),</span>
<span id="cb33-52">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Par"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PZU"</span>]),</span>
<span id="cb33-53">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dig"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z3U"</span>]),</span>
<span id="cb33-54">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ara"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"64K"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ARA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ARB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AHR"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FUB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BXY"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BXX"</span>]),</span>
<span id="cb33-55">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lyx"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LDY"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z4W"</span>]),</span>
<span id="cb33-56">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Xyl"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XYS"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XYP"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XYZ"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HSY"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LXC"</span>]),</span>
<span id="cb33-57">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rib"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YYM"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RIP"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RIB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BDR"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0MK"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z6J"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"32O"</span>]),</span>
<span id="cb33-58">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kdn"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KDM"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KDN"</span>]),</span>
<span id="cb33-59">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Neu5Ac"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SIA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SLB"</span>]),</span>
<span id="cb33-60">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Neu5Gc"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NGC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NGE"</span>]),</span>
<span id="cb33-61">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LDManHep"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GMH"</span>]),</span>
<span id="cb33-62">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kdo"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KDO"</span>]),</span>
<span id="cb33-63">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DDManHep"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"289"</span>]),</span>
<span id="cb33-64">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MurNAc"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MUB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AMU"</span>]),</span>
<span id="cb33-65">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mur"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1S4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MUR"</span>]),</span>
<span id="cb33-66">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Api"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XXM"</span>]),</span>
<span id="cb33-67">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fru"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BDF"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z9N"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FRU"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LFR"</span>]),</span>
<span id="cb33-68">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tag"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T6T"</span>]),</span>
<span id="cb33-69">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sor"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SOE"</span>]),</span>
<span id="cb33-70">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Psi"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PSV"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SF6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SF9"</span>]),</span>
<span id="cb33-71">    ]</span>
<span id="cb33-72">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> res_name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> res_names</span>
<span id="cb33-73">}</span>
<span id="cb33-74">SACCHARIDE_REPRESENTATION <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb33-75">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Glc"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"royalblue"</span>),</span>
<span id="cb33-76">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Man"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forestgreen"</span>),</span>
<span id="cb33-77">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gal"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gold"</span>),</span>
<span id="cb33-78">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gul"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkorange"</span>),</span>
<span id="cb33-79">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Alt"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>),</span>
<span id="cb33-80">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"All"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>),</span>
<span id="cb33-81">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tal"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightsteelblue"</span>),</span>
<span id="cb33-82">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ido"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chocolate"</span>),</span>
<span id="cb33-83">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GlcNAc"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"royalblue"</span>),</span>
<span id="cb33-84">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ManNAc"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forestgreen"</span>),</span>
<span id="cb33-85">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GalNAc"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gold"</span>),</span>
<span id="cb33-86">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GulNAc"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkorange"</span>),</span>
<span id="cb33-87">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AllNAc"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>),</span>
<span id="cb33-88">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IdoNAc"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chocolate"</span>),</span>
<span id="cb33-89">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GlcN"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"royalblue"</span>),</span>
<span id="cb33-90">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ManN"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forestgreen"</span>),</span>
<span id="cb33-91">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GalN"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gold"</span>),</span>
<span id="cb33-92">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GlcA"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"royalblue"</span>),</span>
<span id="cb33-93">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ManA"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forestgreen"</span>),</span>
<span id="cb33-94">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GalA"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gold"</span>),</span>
<span id="cb33-95">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GulA"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkorange"</span>),</span>
<span id="cb33-96">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TalA"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightsteelblue"</span>),</span>
<span id="cb33-97">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IdoA"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chocolate"</span>),</span>
<span id="cb33-98">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Qui"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"royalblue"</span>),</span>
<span id="cb33-99">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rha"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forestgreen"</span>),</span>
<span id="cb33-100">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6dGul"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkorange"</span>),</span>
<span id="cb33-101">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fuc"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"crimson"</span>),</span>
<span id="cb33-102">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"QuiNAc"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"royalblue"</span>),</span>
<span id="cb33-103">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FucNAc"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"P"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"crimson"</span>),</span>
<span id="cb33-104">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Oli"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"royalblue"</span>),</span>
<span id="cb33-105">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tyv"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forestgreen"</span>),</span>
<span id="cb33-106">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Abe"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkorange"</span>),</span>
<span id="cb33-107">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Par"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>),</span>
<span id="cb33-108">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dig"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>),</span>
<span id="cb33-109">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ara"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forestgreen"</span>),</span>
<span id="cb33-110">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lyx"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gold"</span>),</span>
<span id="cb33-111">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Xyl"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkorange"</span>),</span>
<span id="cb33-112">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rib"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>),</span>
<span id="cb33-113">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kdn"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forestgreen"</span>),</span>
<span id="cb33-114">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Neu5Ac"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mediumvioletred"</span>),</span>
<span id="cb33-115">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Neu5Gc"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"turquoise"</span>),</span>
<span id="cb33-116">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LDManHep"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forestgreen"</span>),</span>
<span id="cb33-117">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kdo"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gold"</span>),</span>
<span id="cb33-118">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DDManHep"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>),</span>
<span id="cb33-119">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MurNAc"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>),</span>
<span id="cb33-120">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mur"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chocolate"</span>),</span>
<span id="cb33-121">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Api"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"royalblue"</span>),</span>
<span id="cb33-122">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fru"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forestgreen"</span>),</span>
<span id="cb33-123">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tag"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gold"</span>),</span>
<span id="cb33-124">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sor"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkorange"</span>),</span>
<span id="cb33-125">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Psi"</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>),</span>
<span id="cb33-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기본 표현</span></span>
<span id="cb33-127">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>: (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"h"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>),</span>
<span id="cb33-128">}</span>
<span id="cb33-129"></span>
<span id="cb33-130"></span>
<span id="cb33-131"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> load_structure_data(pdb_id):</span>
<span id="cb33-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb33-133"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    PDB ID를 기반으로 단백질 구조 데이터를 다운로드하고 로드합니다.</span></span>
<span id="cb33-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb33-135">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb33-136">        pdbx_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pdbx.BinaryCIFFile.read(rcsb.fetch(pdb_id, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bcif"</span>, gettempdir()))</span>
<span id="cb33-137">        structure <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pdbx.get_structure(pdbx_file, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, include_bonds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb33-138">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> structure</span>
<span id="cb33-139">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb33-140">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Error loading structure </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pdb_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb33-141">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb33-142"></span>
<span id="cb33-143"></span>
<span id="cb33-144"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> filter_structure(structure):</span>
<span id="cb33-145">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb33-146"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    구조체에서 탄수화물 및 아미노산만 필터링합니다.</span></span>
<span id="cb33-147"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb33-148">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> structure[struc.filter_carbohydrates(structure) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> struc.filter_amino_acids(structure)]</span>
<span id="cb33-149"></span>
<span id="cb33-150"></span>
<span id="cb33-151"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> create_residue_graph(structure):</span>
<span id="cb33-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb33-153"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    구조체에서 잔기 간의 연결을 나타내는 그래프를 생성합니다.</span></span>
<span id="cb33-154"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb33-155">    graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.Graph()</span>
<span id="cb33-156">    graph.add_nodes_from(struc.get_residue_starts(structure))</span>
<span id="cb33-157">    bonds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> structure.bonds.as_array()[:, :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb33-158">    connected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> struc.get_residue_starts_for(structure, bonds.flatten()).reshape(bonds.shape)</span>
<span id="cb33-159">    connected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> connected[connected[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> connected[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb33-160">    graph.add_edges_from(connected)</span>
<span id="cb33-161">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> graph</span>
<span id="cb33-162"></span>
<span id="cb33-163"></span>
<span id="cb33-164"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw_initial_graph(graph, is_glycan):</span>
<span id="cb33-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb33-166"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    전체 구조 그래프를 그립니다.</span></span>
<span id="cb33-167"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb33-168">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.0</span>))</span>
<span id="cb33-169">    nx.draw(</span>
<span id="cb33-170">        graph,</span>
<span id="cb33-171">        ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax,</span>
<span id="cb33-172">        node_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb33-173">        node_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"crimson"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_glycan[atom_i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"royalblue"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> atom_i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> graph.nodes()],</span>
<span id="cb33-174">    )</span>
<span id="cb33-175">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> fig, ax</span>
<span id="cb33-176"></span>
<span id="cb33-177"></span>
<span id="cb33-178"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> remove_non_glycan_edges(graph, is_glycan):</span>
<span id="cb33-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb33-180"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    글리칸이 아닌 잔기 간의 엣지를 제거합니다.</span></span>
<span id="cb33-181"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb33-182">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> atom_i, atom_j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(graph.edges):</span>
<span id="cb33-183">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> is_glycan[atom_i] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> is_glycan[atom_j]:</span>
<span id="cb33-184">            graph.remove_edge(atom_i, atom_j)</span>
<span id="cb33-185"></span>
<span id="cb33-186"></span>
<span id="cb33-187"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_glycan_subgraphs(graph):</span>
<span id="cb33-188">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb33-189"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    글리칸을 포함하는 연결된 서브그래프를 가져옵니다.</span></span>
<span id="cb33-190"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb33-191">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [</span>
<span id="cb33-192">        graph.subgraph(nodes).copy() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> nodes <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> nx.connected_components(graph) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(nodes) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb33-193">    ]</span>
<span id="cb33-194"></span>
<span id="cb33-195"></span>
<span id="cb33-196"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw_glycan_details(structure, glycan_graphs, is_amino_acid, is_glycan):</span>
<span id="cb33-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb33-198"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    개별 글리칸 그래프를 그리고 세부 정보를 표시합니다.</span></span>
<span id="cb33-199"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb33-200">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>))</span>
<span id="cb33-201">    glycosylated_residue_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb33-202">    glycosylated_residue_symbols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb33-203">    legend_elements <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb33-204"></span>
<span id="cb33-205">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> glycan_graph <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> glycan_graphs:</span>
<span id="cb33-206">        glycan_graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.DiGraph(</span>
<span id="cb33-207">            [(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(atom_i, atom_j), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(atom_i, atom_j)) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> atom_i, atom_j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> glycan_graph.edges()]</span>
<span id="cb33-208">        )</span>
<span id="cb33-209">        root <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [atom_i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> atom_i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> glycan_graph.nodes() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_amino_acid[atom_i]]</span>
<span id="cb33-210">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> root:</span>
<span id="cb33-211">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb33-212">        root <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> root[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb33-213">        glycosylated_residue_ids.append(structure.res_id[root])</span>
<span id="cb33-214">        glycosylated_residue_symbols.append(</span>
<span id="cb33-215">            seq.ProteinSequence.convert_letter_3to1(structure.res_name[root])</span>
<span id="cb33-216">        )</span>
<span id="cb33-217">        root_neighbor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(glycan_graph.neighbors(root))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb33-218">        pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> graphviz_layout(glycan_graph, prog<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dot"</span>)</span>
<span id="cb33-219">        nodes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(key) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pos.keys()]</span>
<span id="cb33-220">        pos_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(pos.values()))</span>
<span id="cb33-221">        pos_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> pos_array[nodes.index(root)]</span>
<span id="cb33-222">        pos_array[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> (</span>
<span id="cb33-223">            pos_array[nodes.index(root_neighbor), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pos_array[nodes.index(root), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb33-224">        )</span>
<span id="cb33-225">        non_zero_dist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(pos_array[(pos_array[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb33-226">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(non_zero_dist) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb33-227">            pos_array[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> HORIZONTAL_NODE_DISTANCE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(non_zero_dist)</span>
<span id="cb33-228">        pos_array[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> structure.res_id[root]</span>
<span id="cb33-229">        pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {node: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>(coord) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> node, coord <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(nodes, pos_array)}</span>
<span id="cb33-230"></span>
<span id="cb33-231">        nx.draw_networkx_edges(</span>
<span id="cb33-232">            glycan_graph, pos, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax, arrows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, node_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>LINE_WIDTH</span>
<span id="cb33-233">        )</span>
<span id="cb33-234"></span>
<span id="cb33-235">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> atom_i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> glycan_graph.nodes():</span>
<span id="cb33-236">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> is_glycan[atom_i]:</span>
<span id="cb33-237">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb33-238">            common_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SACCHARIDE_NAMES.get(structure.res_name[atom_i])</span>
<span id="cb33-239">            shape, color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SACCHARIDE_REPRESENTATION[common_name]</span>
<span id="cb33-240">            ax.scatter(</span>
<span id="cb33-241">                pos[atom_i][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb33-242">                pos[atom_i][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb33-243">                s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>NODE_SIZE,</span>
<span id="cb33-244">                marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>shape,</span>
<span id="cb33-245">                facecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="cb33-246">                edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb33-247">                linewidths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>LINE_WIDTH,</span>
<span id="cb33-248">            )</span>
<span id="cb33-249">            legend_elements[common_name] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Line2D(</span>
<span id="cb33-250">                [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb33-251">                [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb33-252">                label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>common_name,</span>
<span id="cb33-253">                linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"None"</span>,</span>
<span id="cb33-254">                marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>shape,</span>
<span id="cb33-255">                markerfacecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="cb33-256">                markeredgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span id="cb33-257">                markeredgewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>LINE_WIDTH,</span>
<span id="cb33-258">            )</span>
<span id="cb33-259"></span>
<span id="cb33-260">    ax.legend(handles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>legend_elements.values(), loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upper right"</span>)</span>
<span id="cb33-261">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb33-262">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb33-263">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb33-264">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb33-265">    ax.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, labelbottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb33-266">    ax.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>, left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, labelleft<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb33-267">    ax.set_xticks(glycosylated_residue_ids)</span>
<span id="cb33-268">    ax.set_xticklabels(</span>
<span id="cb33-269">        [</span>
<span id="cb33-270">            symbol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(res_id)</span>
<span id="cb33-271">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> symbol, res_id <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(glycosylated_residue_symbols, glycosylated_residue_ids)</span>
<span id="cb33-272">        ],</span>
<span id="cb33-273">        rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>,</span>
<span id="cb33-274">    )</span>
<span id="cb33-275">    ax.set_xlim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(structure.res_id[is_amino_acid]))</span>
<span id="cb33-276">    ax.set_ylim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb33-277">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> fig, ax</span>
<span id="cb33-278"></span>
<span id="cb33-279"></span>
<span id="cb33-280">PDB_ID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1IGT"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 항체 PDB ID</span></span>
<span id="cb33-281">structure <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> filter_structure(load_structure_data(PDB_ID))</span>
<span id="cb33-282">is_glycan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> struc.filter_carbohydrates(structure)</span>
<span id="cb33-283">is_amino_acid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> struc.filter_amino_acids(structure)</span>
<span id="cb33-284"></span>
<span id="cb33-285">graph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_residue_graph(structure)</span>
<span id="cb33-286">remove_non_glycan_edges(graph, is_glycan)</span>
<span id="cb33-287">glycan_graphs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_glycan_subgraphs(graph)</span>
<span id="cb33-288"></span>
<span id="cb33-289">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> draw_glycan_details(structure, glycan_graphs, is_amino_acid, is_glycan)</span>
<span id="cb33-290"></span>
<span id="cb33-291">fig.suptitle(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Glycan Analysis of </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>PDB_ID<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb33-292">fig.tight_layout(rect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.03</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 제목을 위한 공간 확보</span></span>
<span id="cb33-293">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Biotite_files/figure-html/cell-25-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-23"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Biotite_files/figure-html/cell-25-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
</section>
</section>
<section id="reference" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Reference</h1>
<ul>
<li>P. Kunzmann, T. D. Müller, M. Greil, J. H. Krumbach, J. M. Anter, D. Bauer, F. Islam, K. Hamacher, “Biotite: new tools for a versatile Python bioinformatics library,” BMC Bioinformatics, June 2023. doi: 10.1186/s12859-023-05345-6</li>
<li>Cock PJ, Antao T, Chang JT, Chapman BA, Cox CJ, Dalke A, Friedberg I, Hamelryck T, Kauff F, Wilczynski B, de Hoon MJ. Biopython: freely available Python tools for computational molecular biology and bioinformatics. Bioinformatics. 2009, doi: 10.1093/bioinformatics/btp163.</li>
</ul>


</section>

 ]]></description>
  <category>Biology</category>
  <category>Bioinformatics</category>
  <category>Biopython</category>
  <category>Biotite</category>
  <category>Python</category>
  <category>Visualization</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/python_Biotite.html</guid>
  <pubDate>Sat, 12 Apr 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>RFantibody로 de novo antibody discovery</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/RFantibody.html</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="RFantibody_1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/RFantibody_1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:80.0%"></a></p>
</figure>
</div>
<p>RFantibody는 구조 기반으로 새로운 항체와 나노바디를 디자인 할 수 있는 소프트웨어입니다. 구체적으로 RFantibody는 아래 세 가지 독립적인 소프트웨어들로 구성되어 있습니다.</p>
<ul>
<li><a href="https://www.nature.com/articles/s41586-023-06415-8">RFdiffusion</a>의 단백질 알파 카본에 대한 골격을 디자인 합니다.</li>
<li><a href="https://www.science.org/doi/10.1126/science.add2187">ProteinMPNN</a>을 사용해 위에서 디자인한 골격에 그럴듯한 아미노산 서열을 생성합니다.</li>
<li><a href="https://www.biorxiv.org/content/10.1101/2023.05.24.542179v1">RoseTTAFold2</a>으로 생성된 서열의 단백질 구조를 만들어보고 잘못된 디자인은 필터링합니다.</li>
</ul>
<p>이런 RFantibody 파이프라인에 대한 자세한 내용은 <a href="https://www.biorxiv.org/content/10.1101/2024.03.14.585103v1">공개 논문</a>에서 확인할 수 있습니다. 또한 RFantibody는 MIT 라이선스로 비영리 및 영리 사용자 모두에게 무료입니다.</p>
<section id="설치-및-사전-준비" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 설치 및 사전 준비</h1>
<section id="docker와-gpu" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="docker와-gpu"><span class="header-section-number">1.1</span> Docker와 GPU</h2>
<p>RFantibody는 Docker 컨테이너에서 실행되도록 설계되었습니다. Docker 컨테이너는 호스트 운영 체제 위에 별도의 운영 체제를 실행해서 다음과 같은 장점을 제공합니다.</p>
<ul>
<li>설치 간소화: Docker 소프트웨어 제품군만 있으면 됩니다.</li>
<li>호스트 시스템 독립성: 컨테이너 내부에서 실행되므로 어디에서 실행하든 기본적으로 동일하게 작동합니다.</li>
</ul>
<p>Docker를 설치하는 방법은 <a href="https://docs.docker.com/engine/install/">공식 홈페이지</a>를 참고하세요. 이미 Docker가 설치되어 있는지 여부는 터미널에서 <code>which docker</code> 로 확인할 수 있습니다. 이 명령이 경로를 반환하면 Docker를 사용할 수 있으며 실행할 준비가 된 것입니다.</p>
<p>또한 RFantibody를 실행하려면 NVIDIA GPU가 필요합니다. 다음을 실행하여 NVIDIA GPU를 사용할 수 있는지 확인할 수 있습니다. <code>nvidia-smi</code> 이 명령이 성공적으로 실행되면 호환되는 GPU가 있는 것이며 RFantibody를 실행할 수 있습니다.</p>
</section>
<section id="가중치-다운로드" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="가중치-다운로드"><span class="header-section-number">1.2</span> 가중치 다운로드</h2>
<p>먼저 Git을 사용하여 RFantibody 저장소 클론하고 다운로드된 디렉토리로 이동합니다. 그런 모델의 가중치를 <code>RFantibody/weights</code> 디렉토리에 다운로드합니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/partrita/RFantibody</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> RFantibody/</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span> include/download_weights.sh</span></code></pre></div>
</section>
<section id="rfantibody-docker-컨테이너-빌드-및-실행" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="rfantibody-docker-컨테이너-빌드-및-실행"><span class="header-section-number">1.3</span> RFantibody Docker 컨테이너 빌드 및 실행</h2>
<p>Docker 컨테이너를 시작할 올바른 권한이 있는지 확인하려면 다음을 실행해야 합니다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> usermod <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-aG</span> docker <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$USER</span></span></code></pre></div>
<p>이 명령을 실행한 후 변경 사항이 적용되도록 터미널 세션을 다시 시작해야 합니다.</p>
</section>
<section id="docker-이미지-빌드-및-시작하기" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="docker-이미지-빌드-및-시작하기"><span class="header-section-number">1.4</span> Docker 이미지 빌드 및 시작하기</h2>
<p>RFantibody가 다운로드된 디렉토리에서 다음 명령을 실행하여 RFantibody용 Docker 이미지를 빌드합니다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> rfantibody .</span></code></pre></div>
<p>방금 빌드한 이미지를 기반으로 Docker 컨테이너를 시작하려면 다음 명령을 실행합니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> rfantibody <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--gpus</span> all <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> .:/home <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> rfantibody</span></code></pre></div>
<p>이렇게 하면 현재 폴더를 Docker 컨테이너의 <code>/home</code> 폴더와 연결 할 수 있습니다.</p>
</section>
<section id="python-환경-설정" class="level2" data-number="1.5">
<h2 data-number="1.5" class="anchored" data-anchor-id="python-환경-설정"><span class="header-section-number">1.5</span> Python 환경 설정</h2>
<p>RFantibody 컨테이너에서 다음 스크립트를 실행해 Python 의존성 라이브러리를 설치합니다. 구체적으로 다음이 설치 됩니다.</p>
<ul>
<li>Python 환경 빌드 준비를 위해 <a href="https://www.dgl.ai">Deep Graph Library</a>를 다운로드합니다.</li>
<li><a href="https://python-poetry.org">Poetry</a>를 사용하여 Python 환경을 빌드합니다.</li>
<li><a href="https://github.com/pylelab/USalign">USalign</a> 실행 파일을 빌드합니다.</li>
</ul>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span> /home/include/setup.sh</span></code></pre></div>
</section>
<section id="hlt-파일-형식" class="level2" data-number="1.6">
<h2 data-number="1.6" class="anchored" data-anchor-id="hlt-파일-형식"><span class="header-section-number">1.6</span> HLT 파일 형식</h2>
<p>RFantibody는 각 단계 간에 PDB 파일 구조를 전달해야 합니다. 그리고 PDB 파일 구조에는 다음이 포함되어 있어야 합니다.</p>
<ul>
<li>현재 디자인 중인 항체-표적 복합체 구조 정보</li>
<li>어떤 사슬이 중쇄(Heavy chain), 경쇄(Light chain) 및 표적 사슬(Target chain)인지 여부</li>
<li>어떤 잔기가 어떤 CDR 루프에 있는지 여부</li>
</ul>
<p>파이프라인 단계 간에 이 정보를 전달할 수 있도록 HLT 파일이라고 하는 새로운 파일 형식을 정의해야 합니다. HLT 파일은 기본적으로 <code>.pdb</code> 파일이지만 다음과 같은 수정사항이 있습니다.</p>
<ul>
<li>중쇄는 사슬 ID ’H’로 표시됩니다.</li>
<li>경쇄는 사슬 ID ’L’로 표시됩니다.</li>
<li>표적 사슬은 (표적 사슬이 여러 개라도) 사슬 ID ’T’로 표시됩니다.</li>
<li>파일의 사슬 순서는 중쇄, 경쇄, 표적 순입니다.</li>
<li>파일 끝에는 각 CDR 루프 기반 절대(사슬별이 아닌) 아미노산 인덱스를 나타내는 PDB Remark가 있습니다.</li>
</ul>
<section id="hlt-파일로-변환하기" class="level3" data-number="1.6.1">
<h3 data-number="1.6.1" class="anchored" data-anchor-id="hlt-파일로-변환하기"><span class="header-section-number">1.6.1</span> HLT 파일로 변환하기</h3>
<p>RFantibody는 입력으로 HLT 파일 변환을 수행하는 스크립트를 <code>/scripts/util/chothia2HLT.py</code>에 제공합니다.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rfantibody 컨테이너 내부에서</span></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">poetry</span> run python /home/scripts/util/chothia2HLT.py  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> /home/scripts/examples/rfdiffusion/example_inputs/8tlm_chothia.pdb <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> /home/scripts/examples/rfdiffusion/example_inputs/8tlm <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-H</span> A <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-L</span> B <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-T</span> C</span></code></pre></div>
<p>이 스크립트는 Chothia 주석이 달린 <code>.pdb</code> 파일을 예상합니다. 이러한 파일의 훌륭한 소스는 PDB의 모든 항체 및 나노항체의 Chothia 주석 구조를 제공하고 몇 달마다 업데이트되는 <a href="https://opig.stats.ox.ac.uk/webapps/sabdab-sabpred/sabdab">SabDab</a>입니다.</p>
<p>또한 RFantibody 공개 논문에서 사용된 HLT 형식의 항체 및 나노바디 프레임워크는 다음 위치에 포함되어 있습니다.</p>
<ul>
<li>나노바디 프레임워크: <code>/scripts/examples/example_inputs/h-NbBCII10.pdb</code></li>
<li>항체 프레임워크: <code>/scripts/examples/example_inputs/hu-4D5-8_Fv.pdb</code></li>
</ul>
</section>
</section>
</section>
<section id="사용법" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 사용법</h1>
<p>앞서 이야기 했듯이 RFantibody는 3단계를 거쳐 작동합니다. 각 단계마다 명령어를 입력하는 방법은 이후에 설명하도록 하고 여기서는 사용자의 편의를 위해 작성한 bash 스크립트를 먼저 살펴보겠습니다.</p>
<section id="한번에-실행-하기" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="한번에-실행-하기"><span class="header-section-number">2.1</span> 한번에 실행 하기</h2>
<p>실행 방법은 아래와 같습니다.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rfantibody 컨테이너 내부에서</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span> /home/scripts/examples/rfdiffusion/example_9gox.sh</span></code></pre></div>
<p>텍스트 에디터로 해당 스크립트를 열어보면 아래와 같습니다. 상단의 스크립트의 변수를 원하는 값으로 수정해서 사용하도록 하세요.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define common variables</span></span>
<span id="cb8-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">NAME</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9gox"</span></span>
<span id="cb8-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PDB_ANTIBODY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CCR8_subset.pdb"</span></span>
<span id="cb8-6"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PDB_ANTIGEN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9gox_CLC.pdb"</span></span>
<span id="cb8-7"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">HOTSPOT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A175, S176, G179, V180, L181"</span></span>
<span id="cb8-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DESIGN_LOOPS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H1:7,H2:5,H3:5-8"</span></span>
<span id="cb8-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">NUM_DESIGNS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2</span>
<span id="cb8-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">SEQS_PER_STRUCT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>2</span>
<span id="cb8-11"></span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define directory structure</span></span>
<span id="cb8-13"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">BASE_DIR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/scripts"</span></span>
<span id="cb8-14"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">INPUT_DIR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${BASE_DIR}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/examples"</span></span>
<span id="cb8-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">OUTPUT_DIR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${INPUT_DIR}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-16"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RF_DIFFUSION_OUTPUT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${OUTPUT_DIR}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/rfdiffusion/example_outputs/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${NAME}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-17"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PROTEINMPNN_OUTPUT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${OUTPUT_DIR}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/proteinmpnn/example_outputs/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${NAME}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RF2_OUTPUT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${OUTPUT_DIR}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/rf2/example_outputs/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${NAME}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-19"></span>
<span id="cb8-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># [이후 코드 생략]</span></span></code></pre></div>
</section>
<section id="fine-tuned-rfdiffusion" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="fine-tuned-rfdiffusion"><span class="header-section-number">2.2</span> Fine-tuned RFdiffusion</h2>
<p>RFantibody의 첫 번째 단계인 항체 맞춤형 RFdiffusion 버전을 사용하는 방법을 살펴보겠습니다. 이 단계는 항체와 표적 단백질의 도킹 구조 파일을 생성합니다. 다음은 RFdiffusion을 실행하는 예제 명령입니다.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rfantibody 컨테이너 내부에서</span></span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">poetry</span> run python  /home/rfantibody/scripts/rfdiffusion_inference.py <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--config-path</span> src/rfantibody/rfdiffusion/config/inference <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--config-name</span> antibody <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-5">  antibody.target_pdb=/home/scripts/examples/example_inputs/rsv_site3.pdb <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-6">  antibody.framework_pdb=/home/scripts/examples/example_inputs/hu-4D5-8_Fv.pdb <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-7">  inference.ckpt_override_path=/home/weights/RFdiffusion_Ab.pt <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-8">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ppi.hotspot_res=[T305,T456]'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-9">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'antibody.design_loops=[L1:8-13,L2:7,L3:9-11,H1:7,H2:6,H3:5-13]'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-10">  inference.num_designs=20 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-11">  inference.output_prefix=/home/scripts/examples/example_outputs/ab_des</span></code></pre></div>
<p>위 명령어에 대해 좀 더 자세히 설명해보겠습니다.</p>
<ul>
<li><code>antibody.target_pdb</code>: 항체를 디자인하려는 표적 구조의 경로입니다. 일반적으로 파이프라인 실행의 계산 비용을 줄이기 위해 잘린 표적 구조입니다. 절단 전략은 여기에서 자세히 설명합니다.</li>
<li><code>antibody.framework_pdb</code>: 디자인에 사용하려는 HLT 형식의 항체 프레임워크 경로입니다. RFdiffusion은 루프로 주석이 달린 프레임워크 영역의 구조와 서열만 디자인합니다. 이렇게 하면 이미 최적화된 프레임워크의 도킹 및 루프를 디자인할 수 있습니다.</li>
<li><code>inference.ckpt_override_path</code>: 추론에 사용할 RFdiffusion 모델 가중치 세트의 경로입니다.</li>
<li><code>ppi.hotspot_res</code>: 에피토프를 정의하는 핫스팟 잔기 목록입니다. 일반 RFdiffusion과 동일한 형식으로 제공됩니다. 핫스팟 선택에 대한 자세한 내용은 여기에서 설명합니다.</li>
<li><code>antibody.design_loops</code>: 각 CDR 루프를 허용된 루프 길이 범위에 매핑하는 사전입니다. 각 루프의 길이는 이 범위에서 균일하게 샘플링되며 다른 루프에 대해 샘플링된 길이와 독립적으로 샘플링됩니다. CDR 루프가 프레임워크에 있지만 사전에 없는 경우 이 CDR 루프는 디자인 중에 서열 및 구조가 고정됩니다. CDR 루프가 사전에 포함되어 있지만 길이 범위가 제공되지 않은 경우 이 CDR 루프는 서열 및 구조가 디자인되지만 프레임워크 구조에 제공된 루프 길이로만 디자인됩니다.</li>
<li><code>inference.num_designs</code>: 생성해야 하는 디자인 수입니다.</li>
<li><code>inference.output_prefix</code>: 생성할 <code>.pdb</code> 파일 출력의 접두사입니다.</li>
</ul>
</section>
<section id="proteinmpnn" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="proteinmpnn"><span class="header-section-number">2.3</span> ProteinMPNN</h2>
<p>두 번째 단계는 윗 단계 RFdiffusion에서 생성된 구조 파일을 가져와 CDR 루프에 서열을 할당하는 것입니다. ProteinMPNN은 다음 명령을 사용하여 HLT 형식의 <code>.pdb</code> 파일 디렉토리에서 실행될 수 있습니다.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rfantibody 컨테이너 내부에서</span></span>
<span id="cb10-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">poetry</span> run python /home/scripts/proteinmpnn_interface_design.py <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-pdbdir</span> /home/scripts/examples/example_outputs/ab <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-outpdbdir</span> /home/scripts/examples/example_outputs/ab</span></code></pre></div>
</section>
<section id="rosettafold2" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="rosettafold2"><span class="header-section-number">2.4</span> RoseTTAFold2</h2>
<p>마지막 단계는 항체 맞춤형 RoseTTAFold2를 사용해 방금 디자인한 서열의 구조를 예측하는 것입니다. 그런 다음 해당 항체와 타겟 단백질이 결합될 것이라고 확신하는지 평가합니다. 간단하게 다음 명령을 통해 실행할 수 있습니다.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rfantibody 컨테이너 내부에서</span></span>
<span id="cb11-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">poetry</span> run python /home/scripts/rf2_predict.py <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb11-3">    input.pdb_dir=/path/to/inputdir <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb11-4">    output.pdb_dir=/path/to/outputdir</span></code></pre></div>
</section>
</section>
<section id="분석-결과" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 분석 결과</h1>
<p>앞서 이야기 했듯이 RFantibody는 3단계에 이뤄 실행되며 각각의 결과에 대해 살펴보겠습니다.</p>
<section id="fine-tuned-rfdiffusion-1" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="fine-tuned-rfdiffusion-1"><span class="header-section-number">3.1</span> Fine-tuned RFdiffusion</h2>
<p>첫 번째 단계인 RFdiffusion를 통해 아래 그림과 같이 타겟 단백질에 결합하는 항체 VH, VL 구조를 형성 할 수 있습니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="RFantibody_movie.gif" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://tomorrow-lab.github.io/posts/md/RFantibody_movie.gif" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:50.0%"></a></p>
</figure>
</div>
<p>다만 생성된 항체 구조에는 아미노산 residue에 대한 정보는 없고 Carbon alpha에 대한 위치 정보만 들어 있습니다. 따라서 다음 단계인 ProteinMPNN을 통해 구조에 맞는 아미노산 서열을 생성해야 합니다.</p>
</section>
<section id="proteinmpnn-1" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="proteinmpnn-1"><span class="header-section-number">3.2</span> ProteinMPNN</h2>
<p>ProteinMPNN을 실행하면 아래 예시와 같은 서열 정보가 포함된 <code>.pdb</code>파일이 만들어집니다. 이렇게 만들어진 서열이 진짜 앞에서 생성한 구조 파일에 적합한지 평가를 위해 다음 단계인 Protein folding이 필요합니다.</p>
<pre><code>&gt;ab_0_dldesign_0_H
QVQLVQSGAEVKKPGSSVKVSCKAVGASISSGIINWVRQAPGQGLEWMGRVDRSGGAYYAQKFQGRVTIT
ADESTSTAYMELRSEDTAVYYCALEVNGYLTGWGQGTLVTVSSAS
&gt;ab_0_dldesign_1_H
QVQLVQSGAEVKKPGSSVKVSCKAVGDSISSGIINWVRQAPGQGLEWMGRVDRAGGAYYAQKFQGRVTIT
ADESTSTAYMELRSEDTAVYYCALEVNGYLTGWGQGTLVTVSSAS
&gt;ab_0_dldesign_2_H
QVQLVQSGAEVKKPGSSVKVSCKAVGDSISSGIINWVRQAPGQGLEWMGRVDRSGGAYYAQKFQGRVTIT
ADESTSTAYMELRSEDTAVYYCALEVNGYLTGWGQGTLVTVSSAS
&gt;ab_0_dldesign_3_H
QVQLVQSGAEVKKPGSSVKVSCKAVGASISSGIINWVRQAPGQGLEWMGRVDRSGGAYYAQKFQGRVTIT
ADESTSTAYMELRSEDTAVYYCALEVNGYLTGWGQGTLVTVSSAS
&gt;ab_0_dldesign_4_H
QVQLVQSGAEVKKPGSSVKVSCKAVGASISSGIINWVRQAPGQGLEWMGRVDRSGGAYYAQKFQGRVTIT
ADESTSTAYMELRSEDTAVYYCALEVNGYLTGWGQGTLVTVSSAS
&gt;ab_0_dldesign_5_H
QVQLVQSGAEVKKPGSSVKVSCKAVGASISSGIINWVRQAPGQGLEWMGRVDRAGGAYYAQKFQGRVTIT
ADESTSTAYMELRSEDTAVYYCALEVNGYLTGWGQGTLVTVSSAS</code></pre>
</section>
<section id="rosettafold2-1" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="rosettafold2-1"><span class="header-section-number">3.3</span> RoseTTAFold2</h2>
<p>RoseTTAFold2의 결과를 확인해보면 아래와 같이 아미노산의 서열이 들어가 있는 것을 확인 할 수 있습니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="RFantibody_3.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://tomorrow-lab.github.io/posts/md/RFantibody_3.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:60.0%"></a></p>
</figure>
</div>
<p>이렇게 항체와 타겟 단백질의 결합 구조 파일을 생성하는 것으로 De novo antibody discovery가 완료되었습니다.</p>
</section>
</section>
<section id="마치며" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 마치며</h1>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="RFantibody_2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4"><img src="https://tomorrow-lab.github.io/posts/md/RFantibody_2.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:60.0%"></a></p>
</figure>
</div>
<p>de novo 항체 설계는 아직 초기 기술입니다. 그래서 실제로 결합하는 항체를 찾는 과정은 어려운 일입니다. 그러나 앞으로 더 많은 항체 설계 작업이 수행되고 모범 사례가 쌓이면 이 기술이 완벽해질 것입니다. 현재까지 알려진 de novo 항체 설계를 위한 고려 사항은 아래와 같습니다.</p>
<section id="표적-부위-선택" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="표적-부위-선택"><span class="header-section-number">4.1</span> 표적 부위 선택</h2>
<p>단백질의 모든 부위가 항체에 결합할 수 있는 것은 아닙니다. 즉, 결합에 적합한 후보가 되려면 해당 부위에 결합제가 상호작용할 수 있는 최소 3개 이상의 소수성 잔기가 있어야 합니다. 그리고 전하를 띤 극성 아미노산에 대한 결합은 여전히 상당히 어렵습니다. 또한 당화가 일어나는 부위에 대한 결합도 어렵습니다. 그리고 구조가 유연한 루프에 대한 결합도 역사적으로 어려운 부위이지만 RFdiffusion을 사용한 <a href="https://www.nature.com/articles/s41586-023-06953-1">논문</a>도 존재합니다.</p>
</section>
<section id="나노바디-도킹-문제" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="나노바디-도킹-문제"><span class="header-section-number">4.2</span> 나노바디 도킹 문제</h2>
<p>de novo 나노바디 설계를 해보면 많은 경우 CDR이 아닌 측면으로 도킹하는 것을 볼 수 있습니다. 이는 오류가 아니며 실제로 나노바디가 종종 이런 측면으로 결합하기 때문입니다. 따라서 핫스팟과 CDR 길이를 조정한다면 항체와 비슷한 도킹 결과를 얻을 수 있습니다. 다만 항체와 유사한 도킹을 원한다면 항체 프레임워크를 사용하여 설계하는 편이 더 좋은 접근법입니다.</p>
</section>
<section id="표적-단백질-잘라내기" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="표적-단백질-잘라내기"><span class="header-section-number">4.3</span> 표적 단백질 잘라내기</h2>
<p>RFdiffusion과 RF2의 계산 시간은 시스템의 잔기 수 N에 대해 <img src="https://latex.codecogs.com/png.latex?O(N%5E2)">로 증가합니다. RFantibody 파이프라인의 모든 단계는 잘라낸 표적 단백질을 허용하도록 설계되었고 따라서 표적 단백질의 크기가 큰 경우 계산량을 줄이기 위해 불필요한 서열은 잘라내는 것이 좋습니다. 물론 표적 단백질의 어느 부분을 잘라낼 것인가는 사용자에 따라 의견이 다를 것입니다. 일반적으로는 2차 구조를 형성하는 부위는 피하고 링커로 연결된 지점을 잘라내는 것이 추천됩니다. 그러나 바이러스 스파이크 단백질과 같은 단백질은 이런 점이 덜 명확할 수 있습니다. 그러니 PyMol을 사용해 직접 눈으로 보고 표적 단백질을 잘라내는 것을 추천합니다. 또한 원하는 표적 부위(핫스팟) 주변 10Å의 단백질은 남겨두는 것을 권장합니다.</p>
</section>
<section id="결합-위치핫스팟-고르기" class="level2" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="결합-위치핫스팟-고르기"><span class="header-section-number">4.4</span> 결합 위치(핫스팟) 고르기</h2>
<p>결합 위치(핫스팟)은 항체가 표적 단백질에 상호작용하는 부분입니다. RFantibody 모델의 학습 과정에서 핫스팟은 항체의 CDR 잔기와 Cβ 거리가 8Å 미만인 부위로 지정되었습니다. RFantibody는 일반 RFdiffusion보다 선택된 핫스팟에 더 민감한 것으로 나타났고 부적절한 핫스팟이 지정된 경우 도킹되지 않은 항체를 생성합니다. 따라서 수천 개의 항체를 생성하기 전에 소수의 항체 생성을 실험해보고 지정한 핫스팟이 적절한지 판단해보세요.</p>
</section>
<section id="항체-설계-규모에-대하여" class="level2" data-number="4.5">
<h2 data-number="4.5" class="anchored" data-anchor-id="항체-설계-규모에-대하여"><span class="header-section-number">4.5</span> 항체 설계 규모에 대하여</h2>
<p>논문에서 보고된 일부 표적 단백질의 경우 단지 95개만 설계했었어도 VHH 결합체를 식별할 수 있었습니다. 그러나 일반적으로는 1만개 정도의 항체 서열을 생성해야 할 것으로 예상합니다. 왜냐하면 현재 신뢰할 수 있는 in silico 필터링 지표가 없기 때문입니다. 현재는 긍정적이든 부정적이든 항체 설계를 통해 얻은 데이터가 부족하고 앞으로 더 많은 실험 데이터가 커뮤니티에 공유 되어야 합니다. 그러면 더 신뢰할 수 있는 in silico 필터를 만들 수 있을 것입니다. 그러면 더 높은 성공률을 통해 저렴한 항체 설계를 할 수 있을 것입니다.</p>
</section>
<section id="cdr-길이-선택" class="level2" data-number="4.6">
<h2 data-number="4.6" class="anchored" data-anchor-id="cdr-길이-선택"><span class="header-section-number">4.6</span> CDR 길이 선택</h2>
<p>우리의 설계 캠페인에 사용된 루프 범위는 RFdiffusion 예제 파일에 제공되어 있습니다. 이 범위는 각 루프의 자연 발생 길이 빈도를 살펴보고 대부분의 밀도를 포함하도록 결정했습니다. 또한 비교적 짧은 H3 루프를 선택하려고 했는데, 이는 설계와 예측이 더 쉬우면서도 효과적으로 결합할 수 있는 충분한 길이를 제공할 것이라고 판단했기 때문입니다. 단백질의 소수성 포켓을 표적으로 할 때는 길이가 긴 H3 서열이 유용할 것입니다. 따라서 이런 경우에는 예제에서 제공하는 것보다 H3 범위를 늘려야 합니다.</p>
</section>
<section id="in-silico-필터링-전략" class="level2" data-number="4.7">
<h2 data-number="4.7" class="anchored" data-anchor-id="in-silico-필터링-전략"><span class="header-section-number">4.7</span> in silico 필터링 전략</h2>
<p>다음과 같은 최소한의 필터링 기준을 권장합니다</p>
<ul>
<li>RF2 pAE &lt; 10</li>
<li>RMSD(디자인과 RF2 예측결과의 차이) &lt; 2Å</li>
<li>Rosetta ddG &lt; -20</li>
</ul>
<p>현재 RFantibody 파이프라인의 가장 큰 문제는 효과적인 in silico 필터가 없다는 것입니다. 그러니 더 많은 실험을 통해 데이터를 수집할 필요가 있습니다.</p>
</section>
</section>
<section id="reference" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Reference</h1>
<ul>
<li><a href="https://github.com/partrita/RFantibody">RFantibody github repo</a></li>
<li><a href="https://www.biorxiv.org/content/10.1101/2024.03.14.585103v1">Atomically accurate de novo design of single-domain antibodies</a></li>
<li><a href="http://dx.doi.org/10.1101/2023.01.08.523187">Unlocking de novo antibody design with generative artificial intelligence</a></li>
<li><a href="https://foundry.adaptyvbio.com/competition">Protein Design Competition</a></li>
</ul>


</section>

 ]]></description>
  <category>Python</category>
  <category>RFantibody</category>
  <category>Antibody</category>
  <category>De novo design</category>
  <guid>https://tomorrow-lab.github.io/posts/md/RFantibody.html</guid>
  <pubDate>Mon, 31 Mar 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>데이터 기반 의사 결정을 위한 시각화</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/python_DatadrivenDecision.html</link>
  <description><![CDATA[ 





<p>이번 글에서는 데이터 기반 의사 결정(Data-Driven Decision Making)에 대해 이야기해 보려고 합니다. 데이터 기반 의사 결정은 객관적인 데이터를 분석하고 해석하여 결정을 내리는 방식으로 직관이나 경험에 의존하는 것보다 더욱 합리적인 판단을 가능하게 하여 연구 및 비즈니스 분야에서 그 중요성이 점점 커지고 있습니다.</p>
<p>하지만 실제 데이터를 수집하다 보면 변수(차원)가 지나치게 많아져 어떤 변수가 실제로 중요한 영향을 미치는지 파악하기 어려울 때가 많습니다. 이럴 때는 고차원 데이터의 차원을 축소하여 시각화하면 숨겨진 패턴을 발견하고 의사 결정에 도움을 얻을 수 있습니다. 따라서 이번 글에서는 항체 후보 물질 분석 사례를 통해 데이터 기반 의사 결정 시 시각화가 어떻게 기여하는지 구체적으로 살펴보겠습니다.</p>
<section id="분석-예시" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 분석 예시</h1>
<p>신약 개발은 막대한 비용이 소요되므로, 각 단계에서 효과적으로 후보 물질의 수를 줄여나가는 것이 매우 중요합니다. 여기서 핵심적인 질문은 <strong>“어떻게 효율적으로 후보군을 압축할 수 있는가?”</strong>입니다. 예시로, 항체 후보 물질들의 다양한 특성 데이터를 확보했다는 가정 하에, 각 후보 물질이 어떤 군집에 속하는지 확인하고 우리가 원하는 신약의 특성을 가진 군집을 찾아내는 방법을 설명하고자 합니다.</p>
<section id="예시-데이터-생성" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="예시-데이터-생성"><span class="header-section-number">1.1</span> 예시 데이터 생성</h2>
<p>우선 예시 데이터를 임의로 생성하겠습니다. 실제로는 실험을 통해 데이터를 얻어야 합니다. 그런 다음 데이터 분석 시 분석 결과의 편향을 방지하기 위해 각 데이터를 정규화하는 과정이 필요합니다. 이는 수집된 데이터의 종류에 따라 값의 범위가 다르기 때문에 발생하는 문제를 해결하기 위함입니다.</p>
<div id="cell-2" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> networkx <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nx</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.cluster.hierarchy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> fcluster, linkage, to_tree</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.spatial.distance <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pdist</span>
<span id="cb1-7"></span>
<span id="cb1-8">nord_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#BF616A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#D08770"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EBCB8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A3BE8C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#B48EAD"</span>]</span>
<span id="cb1-9"></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_candidate_dataframe(num_candidates):</span>
<span id="cb1-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""주어진 개수의 후보 물질에 대한 가짜 데이터를 생성하고 DataFrame을 반환합니다."""</span></span>
<span id="cb1-13"></span>
<span id="cb1-14">    candidates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"mAb</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, num_candidates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)]</span>
<span id="cb1-15"></span>
<span id="cb1-16">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEC_main"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEC_RT"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pI"</span>: np.random.uniform(low<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, high<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HIC_RT"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AC_SIN_Ace"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AC_SINS_PBS"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PSR"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ELISA"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BVP"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-26">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tm"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-27">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tagg"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-28">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DSR"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-29">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KD"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-9</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-10</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-30">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CE_SDS"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-31">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Titer"</span>: np.random.normal(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_candidates),</span>
<span id="cb1-32">    }</span>
<span id="cb1-33"></span>
<span id="cb1-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pd.DataFrame(data, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>candidates)</span>
<span id="cb1-35"></span>
<span id="cb1-36"></span>
<span id="cb1-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터프레임 생성</span></span>
<span id="cb1-38">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_candidate_dataframe(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>)</span>
<span id="cb1-39">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">SEC_main</th>
<th data-quarto-table-cell-role="th">SEC_RT</th>
<th data-quarto-table-cell-role="th">pI</th>
<th data-quarto-table-cell-role="th">HIC_RT</th>
<th data-quarto-table-cell-role="th">AC_SIN_Ace</th>
<th data-quarto-table-cell-role="th">AC_SINS_PBS</th>
<th data-quarto-table-cell-role="th">PSR</th>
<th data-quarto-table-cell-role="th">ELISA</th>
<th data-quarto-table-cell-role="th">BVP</th>
<th data-quarto-table-cell-role="th">Tm</th>
<th data-quarto-table-cell-role="th">Tagg</th>
<th data-quarto-table-cell-role="th">DSR</th>
<th data-quarto-table-cell-role="th">KD</th>
<th data-quarto-table-cell-role="th">CE_SDS</th>
<th data-quarto-table-cell-role="th">Titer</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">mAb1</td>
<td>7.716622</td>
<td>4.533963</td>
<td>6.248699</td>
<td>7.440337</td>
<td>0.561915</td>
<td>0.711327</td>
<td>84.064097</td>
<td>225.218601</td>
<td>0.974259</td>
<td>71.659902</td>
<td>74.373305</td>
<td>0.287697</td>
<td>1.031917e-09</td>
<td>1.322444</td>
<td>3.856274</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">mAb2</td>
<td>9.612681</td>
<td>3.405297</td>
<td>7.883553</td>
<td>4.965127</td>
<td>0.705750</td>
<td>0.556172</td>
<td>106.424606</td>
<td>216.402007</td>
<td>0.530804</td>
<td>70.952498</td>
<td>73.987070</td>
<td>0.257838</td>
<td>1.134045e-09</td>
<td>1.179368</td>
<td>5.108560</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">mAb3</td>
<td>8.566355</td>
<td>5.513600</td>
<td>4.326831</td>
<td>7.699645</td>
<td>0.502079</td>
<td>0.791923</td>
<td>97.192836</td>
<td>192.832037</td>
<td>0.825276</td>
<td>73.547259</td>
<td>75.420313</td>
<td>0.408547</td>
<td>8.124828e-10</td>
<td>0.946294</td>
<td>4.966770</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">mAb4</td>
<td>6.266927</td>
<td>4.467299</td>
<td>6.437856</td>
<td>6.946538</td>
<td>0.427200</td>
<td>0.633186</td>
<td>114.785950</td>
<td>188.995268</td>
<td>1.187786</td>
<td>67.822568</td>
<td>81.971270</td>
<td>0.291206</td>
<td>1.011503e-09</td>
<td>0.821762</td>
<td>4.791883</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">mAb5</td>
<td>9.834639</td>
<td>3.830083</td>
<td>4.168068</td>
<td>4.577302</td>
<td>0.481710</td>
<td>0.887330</td>
<td>117.810791</td>
<td>188.247256</td>
<td>0.599934</td>
<td>72.565529</td>
<td>69.435881</td>
<td>0.306160</td>
<td>9.839867e-10</td>
<td>0.569637</td>
<td>4.871462</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>앞서 제시된 테이블을 보면 각 후보 항체에 대해 다양한 실험을 통해 얻은 데이터 값들이 나열되어 있는 것을 확인할 수 있습니다. 이때 어떤 항체가 우리가 원하는 특성을 갖추고 있는지 명확히 판단하기 어렵다는 점을 쉽게 이해하실 수 있을 겁니다. 그 이유는 첫째, 모든 면에서 완벽한 값을 나타내는 후보 물질은 존재하지 않기 때문이고 둘째, 어떤 특성 값이 가장 중요한지를 우리가 아직 정확히 알지 못하기 때문입니다.</p>
</section>
<section id="데이터-분석-및-시각화" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="데이터-분석-및-시각화"><span class="header-section-number">1.2</span> 데이터 분석 및 시각화</h2>
<p>분석 결과를 덴드로그램이나 네트워크 그래프와 같은 시각적인 형태로 표현하여 후보 물질들 간의 유사성을 직관적으로 파악할 수 있도록 돕습니다. 아래 코드를 통해 예시 데이터를 분석하고 시각화를 해보겠습니다.</p>
<div id="cell-4" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 정규화</span></span>
<span id="cb2-2">df_normalized <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>())</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 거리 행렬 계산</span></span>
<span id="cb2-5">distance_matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pdist(df_normalized, metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"euclidean"</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 계층적 군집화를 통해 트리 생성</span></span>
<span id="cb2-8">linkage_matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> linkage(distance_matrix, method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"average"</span>)</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 클러스터 할당 (5개의 주요 그룹으로 분할)</span></span>
<span id="cb2-11">clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fcluster(linkage_matrix, t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, criterion<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maxclust"</span>)</span>
<span id="cb2-12">candidates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.index.tolist()</span>
<span id="cb2-13">label_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb2-14">    candidates[i]: nord_colors[clusters[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(nord_colors)] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(candidates))</span>
<span id="cb2-15">}</span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 트리를 NetworkX 그래프로 변환</span></span>
<span id="cb2-18">root, nodes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> to_tree(linkage_matrix, rd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-19">G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.Graph()</span>
<span id="cb2-20"></span>
<span id="cb2-21"></span>
<span id="cb2-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_edges(node, parent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb2-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> node <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb2-24">        G.add_node(node.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>candidates[node.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> node.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(candidates) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb2-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> parent <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb2-26">            G.add_edge(parent.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, node.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>)</span>
<span id="cb2-27">        add_edges(node.left, node)</span>
<span id="cb2-28">        add_edges(node.right, node)</span>
<span id="cb2-29"></span>
<span id="cb2-30"></span>
<span id="cb2-31">add_edges(root)</span>
<span id="cb2-32"></span>
<span id="cb2-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 시각화</span></span>
<span id="cb2-34">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb2-35">ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb2-36">pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.kamada_kawai_layout(G)</span>
<span id="cb2-37">nx.draw_networkx_edges(G, pos, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax)</span>
<span id="cb2-38"></span>
<span id="cb2-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 노드 라벨 추가 (색상 적용)</span></span>
<span id="cb2-40">labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {n: G.nodes[n][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> G.nodes <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> G.nodes[n][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>]}</span>
<span id="cb2-41"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> labels:</span>
<span id="cb2-42">    plt.text(</span>
<span id="cb2-43">        pos[n][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb2-44">        pos[n][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb2-45">        labels[n],</span>
<span id="cb2-46">        fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb2-47">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>label_colors.get(labels[n], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>),</span>
<span id="cb2-48">        bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facecolor"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"edgecolor"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"boxstyle"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round,pad=0.2"</span>},</span>
<span id="cb2-49">    )</span>
<span id="cb2-50"></span>
<span id="cb2-51">fig.tight_layout()</span>
<span id="cb2-52">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_DatadrivenDecision_files/figure-html/cell-3-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_DatadrivenDecision_files/figure-html/cell-3-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>다양한 실험 결과를 테이블 형태로 보는 것은 정보를 얻는 데 도움이 되지만, 많은 정보를 한눈에 파악하기는 쉽지 않습니다. 하지만 앞선 예시에서처럼 데이터를 시각화하면 후보 항체들이 어떤 무리(클러스터)를 형성하고 있는지 직관적으로 확인할 수 있습니다. 시각화는 데이터를 효과적으로 요약하여 다음과 같은 유용한 정보를 제공합니다.</p>
<ul>
<li>유사성 파악: 어떤 후보 항체들이 서로 비슷한 특성을 나타내는지 시각적으로 보여주어 그룹별 특징을 분석하는 데 용이합니다.</li>
<li>이상치 식별: 다른 후보 항체들과 뚜렷하게 구별되는 특성을 가진 이상치를 발견하고, 이에 대한 추가적인 분석이나 실험을 진행할 수 있습니다.</li>
<li>선택 근거 제시: 시각화된 결과를 통해 최종 후보 선택의 타당한 근거를 명확하게 제시할 수 있습니다. 예를 들어, 특정 그룹에 속한 후보 항체들이 높은 결합력과 뛰어난 안정성을 보인다는 점을 시각적으로 보여줄 수 있습니다.</li>
</ul>
</section>
</section>
<section id="마치며" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 마치며</h1>
<p>위와 같은 시각화 결과를 얻은 후에는 어떤 추가적인 분석이 필요할까요? 일반적으로 다음과 같은 단계를 거치게 됩니다.</p>
<ol type="1">
<li>그룹별 특성 심층 분석: 시각화된 결과를 바탕으로 각 그룹의 구체적인 특성을 자세히 분석하고, 우리가 목표로 하는 특성을 가진 그룹을 식별합니다.</li>
<li>그룹 내 개별 후보 비교: 선택된 그룹 내의 개별 후보 항체들의 특성을 세밀하게 비교하여 최종적으로 최적의 후보를 선택합니다.</li>
</ol>
<p>이처럼 데이터 기반 의사 결정은 과학 연구 분야뿐만 아니라 다양한 영역에서 활용될 수 있습니다. 복잡한 문제에 직면했을 때 데이터를 시각화하여 분석한다면, 더욱 효과적이고 합리적인 결정을 내리는 데 큰 도움을 얻을 수 있습니다.</p>


</section>

 ]]></description>
  <category>Data science</category>
  <category>Python</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/python_DatadrivenDecision.html</guid>
  <pubDate>Sat, 29 Mar 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>OpenCV를 사용해 이미지에서 세포 수 측정</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/python_CV2_CellCounting.html</link>
  <description><![CDATA[ 





<p>생물학 실험에서 이미지에서 세포 수를 측정 작업은 매우 흔한 일입니다. 일반적으로는 이미지를 촬영하는 장비에 자동으로 세포 수를 측적하는 소프트웨어가 같이 제공되고 있습니다. 그러나 가끔은 수동으로 세포의 수를 측정해야하는 경우가 생기곤 합니다. 그런 작업은 시간과 노력이 많이 들고 결과를 신뢰하기 어렵습니다.</p>
<p>이런 문제를 해결하기 위해 이번 글에서는 오픈소스 컴퓨터 비전 라이브러리인 <code>OpenCV</code>를 사용해 이미지를 분석하고 세포 수를 자동으로 측정하는 방법을 소개합니다. <code>OpenCV</code>는 강력하고 유연한 이미지 처리 라이브러리이며 세포 수 계수 외에도 다양한 생물학적 이미지 분석에 활용될 수 있습니다.</p>
<section id="사용된-코드" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 사용된 코드</h1>
<div id="ec1011af-8e2b-424d-a8d8-d4c37b7db8b2" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cv2</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-4"></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> process_image(image_path):</span>
<span id="cb1-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 읽기 및 전처리</span></span>
<span id="cb1-8">    original_im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)</span>
<span id="cb1-9"></span>
<span id="cb1-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 중간값 필터 적용 (노이즈 제거) 및 배경 추정</span></span>
<span id="cb1-11">    im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.medianBlur(original_im, ksize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb1-12">    bg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.medianBlur(im, ksize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)</span>
<span id="cb1-13"></span>
<span id="cb1-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 배경 제거 및 신호 정규화</span></span>
<span id="cb1-15">    signal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.subtract(im, bg)</span>
<span id="cb1-16">    signal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.normalize(signal, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, cv2.NORM_MINMAX, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cv2.CV_8U)</span>
<span id="cb1-17"></span>
<span id="cb1-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 가우시안 블러 적용 및 마스크 생성</span></span>
<span id="cb1-19">    smooth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.GaussianBlur(signal, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), sigmaX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-20">    valmask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> smooth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb1-21">    peakmask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> smooth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> cv2.dilate(smooth, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, iterations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 블롭 처리</span></span>
<span id="cb1-24">    blobs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (valmask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> peakmask).astype(np.uint8) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb1-25">    kernel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>))</span>
<span id="cb1-26">    blobs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.morphologyEx(blobs, cv2.MORPH_DILATE, kernel)</span>
<span id="cb1-27"></span>
<span id="cb1-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연결된 컴포넌트 분석</span></span>
<span id="cb1-29">    nlabels, _, _, centroids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.connectedComponentsWithStats(blobs)</span>
<span id="cb1-30"></span>
<span id="cb1-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> original_im, signal, centroids, nlabels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-32"></span>
<span id="cb1-33"></span>
<span id="cb1-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> visualize_results(original, processed, centroids):</span>
<span id="cb1-35">    fig, (ax1, ax2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb1-36"></span>
<span id="cb1-37">    ax1.imshow(original, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray"</span>)</span>
<span id="cb1-38">    ax1.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original Image"</span>)</span>
<span id="cb1-39">    ax1.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb1-40"></span>
<span id="cb1-41">    ax2.imshow(processed, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray"</span>)</span>
<span id="cb1-42">    ax2.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Processed Image"</span>)</span>
<span id="cb1-43">    ax2.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb1-44"></span>
<span id="cb1-45">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> pt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> centroids[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]:</span>
<span id="cb1-46">        ax2.add_artist(plt.Circle(pt, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lime"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb1-47"></span>
<span id="cb1-48">    plt.tight_layout()</span>
<span id="cb1-49">    plt.show()</span>
<span id="cb1-50"></span>
<span id="cb1-51"></span>
<span id="cb1-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 메인 실행 부분</span></span>
<span id="cb1-53">image_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/input/cell_0.png"</span></span>
<span id="cb1-54">original, processed, centroids, cell_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> process_image(image_path)</span>
<span id="cb1-55"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"총 </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>cell_count<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">개 세포 확인."</span>)</span>
<span id="cb1-56">visualize_results(original, processed, centroids)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>총 174개 세포 확인.</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_CV2_CellCounting_files/figure-html/cell-2-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_CV2_CellCounting_files/figure-html/cell-2-output-2.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>다른 이미지에 위의 코드를 다시 사용해보겠습니다.</p>
<div id="ce869b8d-3628-45aa-b92a-98cecb6be352" class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다른 이미지</span></span>
<span id="cb3-2">image_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/input/cell_2.png"</span></span>
<span id="cb3-3">original, processed, centroids, cell_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> process_image(image_path)</span>
<span id="cb3-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"총 </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>cell_count<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">개 세포 확인."</span>)</span>
<span id="cb3-5">visualize_results(original, processed, centroids)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>총 293개 세포 확인.</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_CV2_CellCounting_files/figure-html/cell-3-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_CV2_CellCounting_files/figure-html/cell-3-output-2.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>이번 글에서는 <code>OpenCV</code>를 사용하여 이미지를 분석하고 세포 수를 측정 하는 방법에 대해 설명했습니다. 다만 위에 제시된 방법은 다양한 종류의 세포 이미지에 적용 가능하지 않습니다. 위의 코드는 특정 세포 이미지에 맞춰 최적화된 결과입니다. 따라서 다른 종류의 세포 이미지나 촬영 조건이 다른 이미지에 동일한 코드를 적용할 경우 코드의 파라미터를 조정하거나 전처리 과정을 필요할 수 있습니다.</p>
<p>그러니 더 효율적이고 정확한 세포 수 측정을 위해서는 <a href="https://neurips22-cellseg.grand-challenge.org/">NeurIPS 2022 세포 분할 챌린지</a> 최종 우승 소프트웨어인 <a href="https://github.com/FZJ-INM1-BDA/celldetection">celldetection</a>를 사용해보시길 권장합니다.</p>
</section>
<section id="reference" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Reference</h1>
<ul>
<li><a href="https://stackoverflow.com/questions/72755474/counting-cells-with-opencv">이미지 출처</a></li>
</ul>


</section>

 ]]></description>
  <category>Python</category>
  <category>OpenCV</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/python_CV2_CellCounting.html</guid>
  <pubDate>Sat, 22 Mar 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>LLM 사전 학습에 대한 이해</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/LLM_Pre_Training.html</link>
  <description><![CDATA[ 





<p>이 글은 <a href="https://learn.deeplearning.ai/courses/pretraining-llms">deeplearning.ai</a>의 Pre-training LLM 강의를 듣고 나름대로 정리를 해본 글입니다. 자세한 내용은 강의를 참고해주세요. LLM 사전 학습은 컴퓨팅 파워가 많이 필요하기 때문에 사실상 개인이 수행하기에는 어려운 작업이지만, 이 글을 통해 LLM 사전 학습에 대한 전반적인 이해를 얻을 수 있을 것입니다.</p>
<section id="llm-사전-학습이란" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> LLM 사전 학습이란?</h1>
<p>대규모 언어 모델(LLM)을 처음부터 훈련하는 것은 막대한 계산 자원과 시간이 소요됩니다. 그래서 이미 방대한 텍스트 데이터를 활용해 사전 학습된 모델을 가져와 특정 작업에 맞게 소규모 데이터셋으로 미세 조정(Fine-tuning)하는 것이 일반적인 자연어 처리(NLP) 방법입니다. 그러나 이 글에서는 데이터를 수집하고 준비하는 첫번째 단계부터 LLM 모델을 사전 학습 시키는 아래와 같은 과정에 대해 배워보도록 하겠습니다.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">graph LR;
    A[데이터 수집] --&gt; B[데이터 패키징]
    B --&gt; C[모델 학습]
    C --&gt; D[모델 사용]
    D --&gt; E[모델 평가]
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<section id="일반-사전학습-모델-불러오기" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="일반-사전학습-모델-불러오기"><span class="header-section-number">1.1</span> 일반 사전학습 모델 불러오기</h2>
<p>여기서 예시로 다루는 <code>TinySolar-248m-4k</code> 모델은 248M 매개변수(GPT2와 비슷한 규모)와 4096 토큰 컨텍스트 윈도우를 가진 작은 디코더 전용 소형 모델입니다. 이 모델은 Hugging Face 모델 라이브러리에서 <a href="https://huggingface.co/upstage/TinySolar-248m-4k">링크</a> 확인 할 수 있습니다.</p>
<p>모델을 불러오는 과정은 다음 세 단계로 이루어집니다: 1. Hugging Face 모델 라이브러리에서 모델 경로 지정하기 2. <code>transformers</code> 라이브러리의 <code>AutoModelforCausalLM</code>을 사용하여 모델 불러오기 3. 같은 모델 경로에서 모델의 토크나이저 불러오기</p>
</section>
</section>
<section id="데이터-준비" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 데이터 준비</h1>
<p>언어 모델을 학습할 때 사용하는 데이터의 품질은 매우 중요하며 사전 학습(Pre-training)에서 필요한 데이터와 미세 조정(Fine-tuning)에서의 데이터는 서로 다른 성질을 가지고 있습니다.</p>
<p>사전 학습에 사용되는 데이터는 일반적으로 더 대규모 데이터로 구조화가 덜 되어 있습니다. 반면에 미세 조정에서 사용되는 데이터는 특정 작업에 맞게 구조화된 데이터로 구성되어 있습니다. 비유하자면 사전 학습은 많은 책을 읽는 것과 같고, 미세 조정은 예비 고사를 치르는 것과 같습니다.</p>
<p>여기에서는 학습 데이터를 확보하는 두 가지 방법을 살펴보겠습니다:</p>
<ol type="1">
<li>Hugging Face에서 기존 데이터셋 다운로드</li>
<li>직접 수집한 텍스트 파일로 데이터셋 생성</li>
</ol>
<p>두 경우 모두 결과는 <code>Datasets</code> 라이브러리의 일부인 Hugging Face <code>Dataset</code> 객체가 됩니다. Dataset의 속성과 사용 방법에 대한 자세한 내용은 <a href="https://huggingface.co/docs/datasets/en/index">Hugging Face 웹사이트</a>에서 확인할 수 있습니다.</p>
<section id="hugging-face에서-데이터-다운로드" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="hugging-face에서-데이터-다운로드"><span class="header-section-number">2.1</span> Hugging Face에서 데이터 다운로드</h2>
<p>여기서 다운로드하는 <code>upstage/Pretraining_Dataset</code> 데이터셋은 <strong>Red Pajama</strong>라는 훨씬 더 큰(1조 토큰 규모) 데이터셋의 서브셋입니다. 전체 데이터셋은 Hugging Face의 <a href="https://huggingface.co/datasets/togethercomputer/RedPajama-Data-1T">이 링크</a>에서 확인할 수 있습니다.</p>
<div id="cell-5" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb1-2"></span>
<span id="cb1-3">pretraining_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upstage/Pretraining_Dataset"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>)</span>
<span id="cb1-4">pretraining_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pretraining_dataset.select_columns([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>])</span>
<span id="cb1-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(pretraining_dataset)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Dataset({
    features: ['text'],
    num_rows: 60000
})</code></pre>
</div>
</div>
<div id="cell-6" class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(pretraining_dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>In 1793 Zaman Shah, a grandson of Ahmad Shah Durrani, won a brief war of succession to become ruler of Afghanistan. The support of Painda Khan, chief of the Baraksai branch of the Durrani tribe, was decisive in his victory. In the next fifty year., the brothers of Zaman shah and the sons of Painda Khan were to dominate the affairs of Afghanistan. The Durrani tribe was very large with several branches and numerous clans. 1 Abmad Shah and his successors belonged to the Sadozai clan, but other clans, such as the Mohammedzai of Painda Khan, were larger and more powerful and this situation caused many problems.
Mahmud had revolted unsuccessfully several times with Persian backing, but now with Fateh Khan's help he was able to defeat Zaman who was captured and blinded. Mahmud's position was insecure however. Persian invasions threatened, the tribes were discontented, and another brother of Zaman, Shuja-ul-Mulk, was in arms against him. In 1803 Shuja succeeded in toppling Mahmud after three years in power. But Shuja's rule was effective only in Kabul and Peshawar since Mahmud's brother Firuz held Herat, and Fateh Khan controUed the country around Kandahar. Mahmud escaped from the prison where he had been confined and in 1809 he and Fateh Khan defeated Shuja, who eventually fled to India where he was given a pension by the British, and Mabmud returned to power.
During his years in power Fateh Khan had made many enemies including Mabmud's son Kamran, and most recently Firuz. At this point Fath Ali Shah of Persia sent Mahmud an ultimatum to dispose of Fateh Khan or face a massive Persian invasion. 5 These combined factors, persuaded Mahmud to sacrifice his vizier. Fateh Khan was seized, blinded, kept prisoner, and finally cut to pieces in 1818. 6 Like Zaman, Mabmud had destroyed the man who was keeping him on the throne and his fall was equally swift. Fateh Khan's brothers led a general revolt and assumed control themselves while Mabmud, Kamran, and Firuz fled to Herat.
These continued civil wars and the division of royal authority were disastrous for Afghanistan. Herat was cast adrift and now isolated and surrounded by enemies. On the west, the Persians were eager to make good their long-standing claim to the city. On the east, only the disunity of Fateh Khan's brothers prevented them from avenging him. Herat might have fallen to either one if it had not first begun to arouse the interest of outside powers.</code></pre>
</div>
</div>
<section id="사전-학습-및-미세-조정-데이터-세트-비교" class="level3" data-number="2.1.1">
<h3 data-number="2.1.1" class="anchored" data-anchor-id="사전-학습-및-미세-조정-데이터-세트-비교"><span class="header-section-number">2.1.1</span> 사전 학습 및 미세 조정 데이터 세트 비교</h3>
<p>다음 셀에서는 위에서 로드한 사전 학습 데이터 세트와 대조할 미세 조정 데이터 세트를 다운로드합니다. Alpaca 모델 및 명령어 튜닝 데이터 세트에 대한 자세한 내용은 <a href="https://crfm.stanford.edu/2023/03/13/alpaca.html">여기</a>에서 확인할 수 있습니다.</p>
<div id="cell-8" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb5-2"></span>
<span id="cb5-3">instruction_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c-s-ale/alpaca-gpt4-data"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>)</span>
<span id="cb5-4"></span>
<span id="cb5-5">i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""Instruction: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>instruction_dataset[i][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"instruction"</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-8"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Input: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>instruction_dataset[i][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-9"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Output: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>instruction_dataset[i][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output"</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Instruction: Give three tips for staying healthy.
Input: 
Output: 1. Eat a balanced and nutritious diet: Make sure your meals are inclusive of a variety of fruits and vegetables, lean protein, whole grains, and healthy fats. This helps to provide your body with the essential nutrients to function at its best and can help prevent chronic diseases.

2. Engage in regular physical activity: Exercise is crucial for maintaining strong bones, muscles, and cardiovascular health. Aim for at least 150 minutes of moderate aerobic exercise or 75 minutes of vigorous exercise each week.

3. Get enough sleep: Getting enough quality sleep is crucial for physical and mental well-being. It helps to regulate mood, improve cognitive function, and supports healthy growth and immune function. Aim for 7-9 hours of sleep each night.</code></pre>
</div>
</div>
<p>사전 학습 데이터가 단순한 원시 텍스트로 구성된 것과 달리 미세 조정용 데이터 세트는 질문-답변 쌍이나 명령어-응답 형태로 구조화되어 있다는 것을 알 수 있습니다. 또한 필요한 경우 추가 입력 컨텍스트를 포함할 수도 있습니다. 다만 여기에서는 앞으로는 비구조화된 사전 학습 데이터 세트만 사용할 것입니다.</p>
</section>
</section>
<section id="직접-데이터-스크랩해오기" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="직접-데이터-스크랩해오기"><span class="header-section-number">2.2</span> 직접 데이터 스크랩해오기</h2>
<div id="cell-10" class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dataset, concatenate_datasets</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 스크랩된 텍스트 데이터를 저장할 리스트 초기화</span></span>
<span id="cb7-4">scrap_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb7-5">source_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/input/scraped_text"</span>)</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 디렉토리 내 모든 파일 읽기</span></span>
<span id="cb7-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> file_path <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> source_dir.iterdir():</span>
<span id="cb7-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> file_path.is_file():  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일인지 확인</span></span>
<span id="cb7-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> file_path.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb7-11">            scrap_text.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.read()})</span>
<span id="cb7-12"></span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트를 Dataset 객체로 변환</span></span>
<span id="cb7-14">scrap_text_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dataset.from_list(scrap_text)</span>
<span id="cb7-15"></span>
<span id="cb7-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기존 데이터셋과 새로 만든 데이터셋 결합</span></span>
<span id="cb7-17">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> concatenate_datasets([pretraining_dataset, scrap_text_dataset])</span>
<span id="cb7-18"></span>
<span id="cb7-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 출력</span></span>
<span id="cb7-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(dataset)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Dataset({
    features: ['text'],
    num_rows: 60004
})</code></pre>
</div>
</div>
</section>
<section id="데이터-정리" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="데이터-정리"><span class="header-section-number">2.3</span> 데이터 정리</h2>
<p>이제 다음과 같은 데이터 정리 단계를 수행합니다:</p>
<ol type="1">
<li>너무 짧은 데이터 필터링<br>
</li>
<li>하나의 텍스트 내에서 반복된 부분 제거<br>
</li>
<li>중복된 문서 제거<br>
</li>
<li>비영어 텍스트를 제거하는 품질 필터 적용</li>
</ol>
<section id="너무-짧은-데이터-제거" class="level3" data-number="2.3.1">
<h3 data-number="2.3.1" class="anchored" data-anchor-id="너무-짧은-데이터-제거"><span class="header-section-number">2.3.1</span> 너무 짧은 데이터 제거</h3>
<p>짧은 데이터는 모델이 학습하는 데 도움이 되지 않을 수 있습니다. 따라서 이번 단계에서는 너무 짧은 데이터를 제거합니다. 여기서는 3개 이하의 토큰을 가진 데이터를 제거합니다.</p>
<div id="cell-12" class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> heapq</span>
<span id="cb9-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb9-3"></span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> paragraph_length_filter(example):</span>
<span id="cb9-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""페이지의 줄 수가 너무 적거나 줄 길이가 너무 짧으면 False를 반환합니다."""</span></span>
<span id="cb9-7">    lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>].split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 가장 긴 3개의 줄의 길이를 계산하고, 그 중 최소 길이가 3보다 작은 경우 False 반환</span></span>
<span id="cb9-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(lines) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(heapq.nlargest(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(line) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lines])) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb9-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb9-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb9-12"></span>
<span id="cb9-13"></span>
<span id="cb9-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"데이터 정리 전 데이터의 수: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>num_rows<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-15"></span>
<span id="cb9-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 필터링 작업 수행</span></span>
<span id="cb9-17">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(paragraph_length_filter, load_from_cache_file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb9-18"></span>
<span id="cb9-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"데이터 정리 후 데이터의 수: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>num_rows<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>데이터 정리 전 데이터의 수: 60004</code></pre>
</div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"a61f5ccafbd84aa58a2950cb17c11bff","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>데이터 정리 후 데이터의 수: 52355</code></pre>
</div>
</div>
</section>
<section id="훈련-샘플-내-반복된-텍스트-제거" class="level3" data-number="2.3.2">
<h3 data-number="2.3.2" class="anchored" data-anchor-id="훈련-샘플-내-반복된-텍스트-제거"><span class="header-section-number">2.3.2</span> 훈련 샘플 내 반복된 텍스트 제거</h3>
<p>여기서는 각 샘플 내에서 반복된 텍스트를 제거합니다. 이를 통해 모델이 반복된 텍스트를 학습하는 것을 방지할 수 있습니다.</p>
<div id="cell-14" class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> find_duplicates(paragraphs: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb12-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""중복된 단락의 수와 문자 수를 계산합니다."""</span></span>
<span id="cb12-3">    unique_paragraphs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb12-4">    duplicate_chars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-5">    duplicate_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-6"></span>
<span id="cb12-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> paragraph <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> paragraphs:</span>
<span id="cb12-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> paragraph <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> unique_paragraphs:</span>
<span id="cb12-9">            duplicate_chars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(paragraph)</span>
<span id="cb12-10">            duplicate_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb12-12">            unique_paragraphs.add(paragraph)</span>
<span id="cb12-13"></span>
<span id="cb12-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> duplicate_count, duplicate_chars</span>
<span id="cb12-15"></span>
<span id="cb12-16"></span>
<span id="cb12-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> paragraph_repetition_filter(example: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb12-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""페이지에 중복이 너무 많으면 False를 반환합니다."""</span></span>
<span id="cb12-19">    text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>]</span>
<span id="cb12-20">    paragraphs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{2,}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>).split(text.strip())</span>
<span id="cb12-21"></span>
<span id="cb12-22">    duplicate_count, duplicate_chars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> find_duplicates(paragraphs)</span>
<span id="cb12-23"></span>
<span id="cb12-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> duplicate_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(paragraphs) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>:</span>
<span id="cb12-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb12-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> duplicate_chars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(text) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>:</span>
<span id="cb12-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb12-28"></span>
<span id="cb12-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb12-30"></span>
<span id="cb12-31"></span>
<span id="cb12-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋에 필터 적용</span></span>
<span id="cb12-33">filtered_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(paragraph_repetition_filter, load_from_cache_file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb12-34"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"필터링 후 데이터셋 크기: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>filtered_dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>num_rows<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"1237457ab7ba4bd8b90196c582517cdb","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>필터링 후 데이터셋 크기: 52326</code></pre>
</div>
</div>
</section>
<section id="중복-제거" class="level3" data-number="2.3.3">
<h3 data-number="2.3.3" class="anchored" data-anchor-id="중복-제거"><span class="header-section-number">2.3.3</span> 중복 제거</h3>
<p>이 섹션에서는 전체 데이터 세트에서 중복된 샘플을 제거합니다. (이전 단계에서는 각 샘플 내에서 반복된 텍스트만 제거했습니다.)</p>
<div id="cell-16" class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> deduplication(dataset: Dataset) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Dataset:</span>
<span id="cb14-2">    unique_texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb14-3"></span>
<span id="cb14-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> dedup_func(example: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, Any]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb14-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""중복된 텍스트 항목을 제거합니다."""</span></span>
<span id="cb14-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> unique_texts:</span>
<span id="cb14-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb14-8">        unique_texts.add(example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>])</span>
<span id="cb14-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb14-10"></span>
<span id="cb14-11">    deduplicated_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(dedup_func, load_from_cache_file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, num_proc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb14-12"></span>
<span id="cb14-13">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"원래 데이터셋 크기: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>num_rows<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-14">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"중복 제거 후 데이터셋 크기: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>deduplicated_dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>num_rows<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-15"></span>
<span id="cb14-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> deduplicated_dataset</span>
<span id="cb14-17"></span>
<span id="cb14-18"></span>
<span id="cb14-19">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> deduplication(dataset)</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"70f638b5bf814e079bde83d7c0d94a8b","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>원래 데이터셋 크기: 52355
중복 제거 후 데이터셋 크기: 43621</code></pre>
</div>
</div>
</section>
<section id="언어-필터링" class="level3" data-number="2.3.4">
<h3 data-number="2.3.4" class="anchored" data-anchor-id="언어-필터링"><span class="header-section-number">2.3.4</span> 언어 필터링</h3>
<p>여기서는 영어가 아닌 텍스트 샘플을 제거합니다. 이를 위해 <code>lingua-py</code>라는 언어 감지 라이브러리를 사용합니다. 자세한 내용은 <a href="https://github.com/pemistahl/lingua-py">여기</a>에서 확인할 수 있습니다.</p>
<div id="cell-18" class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> lingua <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Language, LanguageDetectorBuilder</span>
<span id="cb16-2"></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 영어와 한국어 감지를 위한 언어 감지기 생성</span></span>
<span id="cb16-4">detector <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LanguageDetectorBuilder.from_languages(Language.ENGLISH, Language.KOREAN).build()</span>
<span id="cb16-5"></span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋에서 영어 텍스트만 필터링</span></span>
<span id="cb16-7">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb16-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: detector.detect_language_of(x[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>].replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Language.ENGLISH,</span>
<span id="cb16-9">    load_from_cache_file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb16-10">    num_proc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb16-11">)</span>
<span id="cb16-12"></span>
<span id="cb16-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 필터링 후 데이터셋 크기 출력</span></span>
<span id="cb16-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"제거 후 데이터셋 크기: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>num_rows<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Parameter 'function'=&lt;function &lt;lambda&gt; at 0x7388a02aa7a0&gt; of the transform datasets.arrow_dataset.Dataset.filter@2.0.1 couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.</code></pre>
</div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"9aeec63daf7d486aa2ac646e1eef1689","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>제거 후 데이터셋 크기: 43322</code></pre>
</div>
</div>
</section>
</section>
<section id="데이터-세트를-디스크에-저장" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="데이터-세트를-디스크에-저장"><span class="header-section-number">2.4</span> 데이터 세트를 디스크에 저장</h2>
<p>Parquet 데이터 형식에 대한 자세한 내용은 <a href="https://parquet.apache.org/">여기</a>에서 확인할 수 있습니다.</p>
<div id="cell-20" class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/output"</span>)</span>
<span id="cb19-2">file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"preprocessed_dataset.parquet"</span></span>
<span id="cb19-3">file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> file_name</span>
<span id="cb19-4"></span>
<span id="cb19-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 디렉토리가 존재하지 않으면 생성</span></span>
<span id="cb19-6">output_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb19-7"></span>
<span id="cb19-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파케이 파일로 저장</span></span>
<span id="cb19-9">dataset.to_parquet(file_path)</span>
<span id="cb19-10"></span>
<span id="cb19-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"데이터셋이 성공적으로 저장되었습니다: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"3febd67ed36046529f6d90decfcb1db3","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>데이터셋이 성공적으로 저장되었습니다: ../data/output/preprocessed_dataset.parquet</code></pre>
</div>
</div>
<p>이제 데이터 세트를 모델 학습에 사용할 수 있도록 패키징하는 방법을 배웁니다.</p>
</section>
</section>
<section id="데이터-패키징" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 데이터 패키징</h1>
<p>데이터 패키징은 토큰화(Tokenizing)와 패킹(Packing) 과정을 포함하며 각각의 역할은 아래와 같습니다.</p>
<ul>
<li><strong>토큰화(Tokenizing)</strong>: 각 텍스트를 의미 있는 작은 단위(토큰)로 분할하는 과정<br>
</li>
<li><strong>패킹(Packing)</strong>: 훈련 효율성을 높이기 위해 토큰을 최대 시퀀스 길이에 맞게 정리하는 과정</li>
</ul>
<section id="토큰화-및-input_ids-만들기" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="토큰화-및-input_ids-만들기"><span class="header-section-number">3.1</span> 토큰화 및 input_ids 만들기</h2>
<p>이전 단계에서 저장한 데이터 세트를 불러오는 것부터 시작합니다.</p>
<div id="cell-22" class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datasets</span>
<span id="cb21-2"></span>
<span id="cb21-3">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datasets.load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parquet"</span>, data_files<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>file_path.as_posix(), split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>)</span>
<span id="cb21-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(dataset)</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"ee98a8ff2acb4aea81d8ddd1cf355fe3","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Dataset({
    features: ['text'],
    num_rows: 43322
})</code></pre>
</div>
</div>
<p>Hugging Face <code>Dataset</code> 객체의 <code>shard</code> 메서드를 사용하여 데이터 세트를 10개의 더 작은 조각(<em>shards</em>)으로 분할합니다. (<em>shard</em>는 깨진 유리 조각처럼 데이터를 나누는 개념입니다.) Sharding에 대한 자세한 내용은 <a href="https://huggingface.co/docs/datasets/en/process#shard">여기</a>에서 확인할 수 있습니다.</p>
<div id="cell-24" class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.shard(num_shards<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb23-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(dataset)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Dataset({
    features: ['text'],
    num_rows: 4333
})</code></pre>
</div>
</div>
<p>토크나이저를 불러오고, <code>input_ids</code>를 생성하는 데 사용할 수 있습니다. 이 과정은 데이터를 토큰화하고 토큰을 <code>input_ids</code>로 변환하는 과정입니다.</p>
<div id="cell-26" class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoTokenizer</span>
<span id="cb25-2"></span>
<span id="cb25-3">model_path_or_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upstage/SOLAR-10.7B-v1.0"</span></span>
<span id="cb25-4">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(</span>
<span id="cb25-5">    model_path_or_name,</span>
<span id="cb25-6">    use_fast<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 참고: 긴 텍스트 샘플이 때때로 멈추는 경향이 있어 빠른 토큰화를 비활성화합니다. 대신 병렬 처리를 위해 map 함수와 datasets 라이브러리를 사용하겠습니다.</span></span>
<span id="cb25-7">)</span>
<span id="cb25-8">tokenizer.tokenize(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I'm a short sentence"</span>)</span>
<span id="cb25-9"></span>
<span id="cb25-10"></span>
<span id="cb25-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 헬퍼 함수 생성:</span></span>
<span id="cb25-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> tokenization(example):</span>
<span id="cb25-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토큰화</span></span>
<span id="cb25-14">    tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokenizer.tokenize(example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>])</span>
<span id="cb25-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토큰을 ID로 변환</span></span>
<span id="cb25-16">    token_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokenizer.convert_tokens_to_ids(tokens)</span>
<span id="cb25-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &lt;bos&gt;, &lt;eos&gt; 토큰을 token_ids의 앞과 뒤에 추가</span></span>
<span id="cb25-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bos: 시퀀스 시작, eos: 시퀀스 끝</span></span>
<span id="cb25-19">    token_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [tokenizer.bos_token_id] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> token_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [tokenizer.eos_token_id]</span>
<span id="cb25-20">    example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> token_ids</span>
<span id="cb25-21"></span>
<span id="cb25-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최종 데이터셋의 총 토큰 수를 계산하는 데 이 열을 사용할 것입니다.</span></span>
<span id="cb25-23">    example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num_tokens"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(token_ids)</span>
<span id="cb25-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> example</span></code></pre></div>
</div>
<p>사전 학습 데이터 세트의 모든 예제를 토큰화 합니다.</p>
<blockquote class="blockquote">
<p>이 과정은 시간이 오래 걸릴 수 있습니다.</p>
</blockquote>
<div id="cell-28" class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋의 각 예제에 tokenization 함수를 적용합니다.</span></span>
<span id="cb26-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load_from_cache_file=False 옵션은 캐시된 결과를 사용하지 않고 항상 새로 계산하도록 합니다.</span></span>
<span id="cb26-3">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(tokenization, load_from_cache_file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb26-4"></span>
<span id="cb26-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환된 데이터셋의 정보를 출력합니다.</span></span>
<span id="cb26-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(dataset)</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"0243925ef2864690a83015407733b113","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Dataset({
    features: ['text', 'input_ids', 'num_tokens'],
    num_rows: 4333
})</code></pre>
</div>
</div>
<div id="cell-29" class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋에서 네 번째 샘플을 선택합니다.</span></span>
<span id="cb28-2"></span>
<span id="cb28-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, sample[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 샘플 텍스트의 처음 30자를 출력합니다.</span></span>
<span id="cb28-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">input_ids"</span>, sample[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토큰화된 입력 ID의 처음 30개를 출력합니다.</span></span>
<span id="cb28-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">num_tokens"</span>, sample[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num_tokens"</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 샘플의 총 토큰 수를 출력합니다.</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>text A cool look at climate
Ian Sin

input_ids [1, 330, 5106, 913, 438, 11259, 13, 28737, 276, 318, 1505, 992, 2261, 2308, 302, 272, 1830, 11259, 2268, 11725, 297, 272, 6194, 684, 767, 6768, 905, 304, 5780, 1580]

num_tokens 3731</code></pre>
</div>
</div>
<p>데이터셋의 총 토큰 수를 확인합니다.</p>
<div id="cell-31" class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb30-2"></span>
<span id="cb30-3">total_tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num_tokens"</span>])</span>
<span id="cb30-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"총 토큰 수: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>total_tokens<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>총 토큰 수: 5689564</code></pre>
</div>
</div>
</section>
<section id="데이터-패킹" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="데이터-패킹"><span class="header-section-number">3.2</span> 데이터 패킹</h2>
<p>데이터 패킹은 여러 데이터를 효율적으로 하나의 데이터 블록으로 결합하는 과정입니다. 이 기술은 특히 자연어 처리(NLP) 작업에서 배치 처리 효율성을 높이는 데 중요합니다. 아래 다이어그램은 일반적인 워크플로우를 보여줍니다.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">graph TD;
    B[Load Dataset];
    B --&gt; C[Tokenize Each Example];
    C --&gt; D[Create input_ids];
    D --&gt; E[Pad Sequences to Max Length];
    E --&gt; F[Pack Tokens into Batches];
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<ol type="1">
<li>데이터셋 로드: 원시 텍스트 데이터를 메모리에 불러옵니다.</li>
<li>토큰화: 각 예제 텍스트를 개별 토큰으로 분할합니다. 이는 단어, 하위 단어 또는 문자 수준에서 수행될 수 있습니다.</li>
<li>input_ids 생성: 토큰을 해당하는 정수 ID로 변환합니다. 이는 모델이 이해할 수 있는 형식입니다.</li>
<li>시퀀스 패딩: 배치 내의 모든 시퀀스가 동일한 길이를 갖도록 짧은 시퀀스에 패딩을 추가합니다.</li>
<li>배치로 토큰 패킹: 여러 예제의 토큰을 하나의 배치로 결합합니다.</li>
</ol>
<p>마지막 단계에서 모든 예제의 input_ids를 하나의 리스트로 연결하는 것은 메모리 효율성과 처리 속도를 향상시키는 중요한 최적화 기법입니다. 이렇게 하면 모델이 한 번에 여러 예제를 처리할 수 있습니다. 이러한 패킹 기법은 GPU 메모리 사용을 최적화하고 병렬 처리 능력을 최대한 활용할 수 있어 전체적인 훈련 시간을 단축시킬 수 있습니다.</p>
<div id="cell-33" class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dataset의 "input_ids" 배열을 연결하여 하나의 배열로 만듭니다.</span></span>
<span id="cb32-2">input_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate(dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>])</span>
<span id="cb32-3"></span>
<span id="cb32-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연결된 배열의 길이를 출력합니다.</span></span>
<span id="cb32-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"연결된 배열의 길이 </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(input_ids)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb32-6"></span>
<span id="cb32-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최대 시퀀스 길이를 설정합니다.</span></span>
<span id="cb32-8">max_seq_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb32-9"></span>
<span id="cb32-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 총 길이를 계산합니다. input_ids의 길이에서 max_seq_length로 나누어 나머지를 뺀 값입니다.</span></span>
<span id="cb32-11">total_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(input_ids) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(input_ids) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> max_seq_length</span>
<span id="cb32-12"></span>
<span id="cb32-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 계산된 총 길이를 출력합니다.</span></span>
<span id="cb32-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"계산된 총 길이: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>total_length<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>연결된 배열의 길이 5689564
계산된 총 길이: 5689536</code></pre>
</div>
</div>
<p>리스트 끝에서 추가 토큰을 버려서 토큰의 수가 <code>max_seq_length</code>로 정확하게 나누어지도록 합니다.</p>
<div id="cell-35" class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># input_ids 배열을 total_length 길이만큼 자릅니다.</span></span>
<span id="cb34-2">input_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_ids[:total_length]</span>
<span id="cb34-3"></span>
<span id="cb34-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 잘린 배열의 shape(형상)을 출력합니다.</span></span>
<span id="cb34-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"input_ids의 shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>input_ids<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-6"></span>
<span id="cb34-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># input_ids 배열을 (행: -1, 열: max_seq_length) 형태로 재구조화하고, 데이터 타입을 int32로 변환합니다.</span></span>
<span id="cb34-8">input_ids_reshaped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_ids.reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, max_seq_length).astype(np.int32)</span>
<span id="cb34-9"></span>
<span id="cb34-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 재구조화된 배열의 shape(형상)을 출력합니다.</span></span>
<span id="cb34-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"input_ids_reshaped의 shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>input_ids_reshaped<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-12"></span>
<span id="cb34-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 재구조화된 배열의 데이터 타입을 출력합니다.</span></span>
<span id="cb34-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"input_ids_reshaped의 데이터 타입: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(input_ids_reshaped)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>input_ids의 shape: (5689536,)
input_ids_reshaped의 shape: (177798, 32)
input_ids_reshaped의 데이터 타입: &lt;class 'numpy.ndarray'&gt;</code></pre>
</div>
</div>
<p>Hugging Face 데이터 세트로 변환하려면 다음과 같이 합니다.</p>
<div id="cell-37" class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># input_ids_reshaped를 리스트로 변환합니다.</span></span>
<span id="cb36-2">input_ids_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_ids_reshaped.tolist()</span>
<span id="cb36-3"></span>
<span id="cb36-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환된 리스트를 사용하여 새로운 Dataset 객체를 생성합니다.</span></span>
<span id="cb36-5">packaged_pretrain_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datasets.Dataset.from_dict({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>: input_ids_list})</span>
<span id="cb36-6"></span>
<span id="cb36-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 생성된 Dataset 객체의 정보를 출력합니다.</span></span>
<span id="cb36-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"생성된 Dataset 객체: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>packaged_pretrain_dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>생성된 Dataset 객체: Dataset({
    features: ['input_ids'],
    num_rows: 177798
})</code></pre>
</div>
</div>
</section>
<section id="패킹된-데이터-세트-디스크에-저장" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="패킹된-데이터-세트-디스크에-저장"><span class="header-section-number">3.3</span> 패킹된 데이터 세트 디스크에 저장</h2>
<p>Hugging Face Dataset 객체를 디스크에 저장하는 방법은 다음과 같습니다.</p>
<blockquote class="blockquote">
<p><code>to_parquet()</code> 메서드는 데이터를 Parquet 파일 형식으로 저장합니다. Parquet는 효율적인 컬럼 기반 저장 형식으로, 대규모 데이터를 저장하고 처리하는 데 최적화되어 있습니다. Parquet 형식은 다른 데이터 분석 툴(예: pandas, Apache Spark 등)과 쉽게 호환됩니다. 데이터 세트를 다른 시스템 또는 다른 툴과 공유할 때 유용하며 압축과 성능 최적화 측면에서 효율적입니다.</p>
</blockquote>
<div id="cell-39" class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"packaged_pretrain_dataset.parquet"</span></span>
<span id="cb38-2">file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> file_name</span>
<span id="cb38-3"></span>
<span id="cb38-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 디렉토리가 존재하지 않으면 생성</span></span>
<span id="cb38-5">output_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb38-6"></span>
<span id="cb38-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파케이 파일로 저장</span></span>
<span id="cb38-8">packaged_pretrain_dataset.to_parquet(file_path)</span>
<span id="cb38-9"></span>
<span id="cb38-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"데이터셋이 성공적으로 저장되었습니다: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"13e397341dc645a3bea854847aae09b9","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>데이터셋이 성공적으로 저장되었습니다: ../data/output/packaged_pretrain_dataset.parquet</code></pre>
</div>
</div>
<div id="cell-40" class="cell">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1">packaged_pretrain_dataset</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<pre><code>Dataset({
    features: ['input_ids'],
    num_rows: 177798
})</code></pre>
</div>
</div>
<div id="cell-41" class="cell">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(packaged_pretrain_dataset[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1, 560, 28705, 28740, 28787, 28774, 28770, 1054, 14886, 23452]</code></pre>
</div>
</div>
</section>
</section>
<section id="모델-훈련-준비하기" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 모델 훈련 준비하기</h1>
<section id="모델-구성" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="모델-구성"><span class="header-section-number">4.1</span> 모델 구성</h2>
<p>Meta의 Llama 모델 계열을 기반으로 모델을 구성할 것입니다. transformers 라이브러리에는 이 모델들과 함께 작업할 수 있는 여러 도구가 있으며, 이에 대해 <a href="https://huggingface.co/docs/transformers/main/en/model_doc/llama">여기</a>에서 읽을 수 있습니다.</p>
<p>시작은 <code>LlamaConfig</code> 객체를 생성하여 모델의 아키텍처를 구성하는 것입니다.</p>
<div id="cell-43" class="cell">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LlamaConfig, LlamaForCausalLM</span>
<span id="cb44-2"></span>
<span id="cb44-3"></span>
<span id="cb44-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> print_nparams(model):</span>
<span id="cb44-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""모델의 총 파라미터 개수를 계산하여 출력합니다."""</span></span>
<span id="cb44-6">    nparams <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(p.numel() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> model.parameters())</span>
<span id="cb44-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"모델의 총 파라미터 개수: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>nparams<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-8"></span>
<span id="cb44-9"></span>
<span id="cb44-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LlamaConfig 객체를 생성합니다.</span></span>
<span id="cb44-11">config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LlamaConfig()</span>
<span id="cb44-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"기본 설정: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>config<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>기본 설정: LlamaConfig {
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 1,
  "eos_token_id": 2,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 11008,
  "max_position_embeddings": 2048,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 32,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-06,
  "rope_scaling": null,
  "rope_theta": 10000.0,
  "tie_word_embeddings": false,
  "transformers_version": "4.37.2",
  "use_cache": true,
  "vocab_size": 32000
}
</code></pre>
</div>
</div>
<div id="cell-44" class="cell">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 아키텍처를 변경하기 위해 설정 값을 업데이트합니다:</span></span>
<span id="cb46-2">config.num_hidden_layers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기본값 32에서 12로 감소</span></span>
<span id="cb46-3">config.hidden_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기본값 4096에서 1024로 감소 (1/4 축소)</span></span>
<span id="cb46-4">config.intermediate_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4096</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기본값 11008에서 4096으로 감소 (MLP 표현 차원, 약 1/3 축소)</span></span>
<span id="cb46-5">config.num_key_value_heads <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기본값 num_attention_heads=32에서 8로 감소 (1/4 축소)</span></span>
<span id="cb46-6">config.torch_dtype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bfloat16"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 정밀도를 감소</span></span>
<span id="cb46-7">config.use_cache <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># `True`는 gradient checkpointing과 호환되지 않음</span></span>
<span id="cb46-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"업데이트된 설정: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>config<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>업데이트된 설정: LlamaConfig {
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 1,
  "eos_token_id": 2,
  "hidden_act": "silu",
  "hidden_size": 1024,
  "initializer_range": 0.02,
  "intermediate_size": 4096,
  "max_position_embeddings": 2048,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 12,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-06,
  "rope_scaling": null,
  "rope_theta": 10000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.37.2",
  "use_cache": false,
  "vocab_size": 32000
}
</code></pre>
</div>
</div>
</section>
<section id="가중치-초기화" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="가중치-초기화"><span class="header-section-number">4.2</span> 가중치 초기화</h2>
<p>모델 훈련을 위한 가중치 초기화 방법에는 다음 4가지가 있습니다. 각각을 간략히 설명하고 4번째 방법인 depth upscaling 방법을 사용해 학습을 진행하겠습니다.</p>
<section id="가중치-랜덤-초기화" class="level3" data-number="4.2.1">
<h3 data-number="4.2.1" class="anchored" data-anchor-id="가중치-랜덤-초기화"><span class="header-section-number">4.2.1</span> 가중치 랜덤 초기화</h3>
<p>모델의 가중치를 랜덤으로 초기화하는 방법입니다. 모든 가중치는 평균이 0이고 표준 편차가 0.02인 절단된 정규 분포(truncated normal distribution)에서 값을 설정합니다. 평균에서 2시그마(2σ)를 초과하는 값은 0으로 설정됩니다.</p>
<p>장점:</p>
<ul>
<li>대칭성을 깨뜨려 뉴런이 서로 다르게 학습할 수 있도록 도움.</li>
<li>다양한 초기값으로 파라미터 공간 탐색 가능.</li>
</ul>
<p>단점: - 초기값이 너무 크거나 작으면 기울기 폭주(exploding gradient) 또는 소실(vanishing gradient) 문제가 발생할 수 있음. - 깊은 네트워크에서는 비효율적일 수 있음.</p>
</section>
<section id="기존-모델에-추가-사전-훈련" class="level3" data-number="4.2.2">
<h3 data-number="4.2.2" class="anchored" data-anchor-id="기존-모델에-추가-사전-훈련"><span class="header-section-number">4.2.2</span> 기존 모델에 추가 사전 훈련</h3>
<p>기존 공개된 모델을 로드하여 새로운 데이터로 추가 학습을 진행하는 방법입니다.</p>
<p>장점:</p>
<ul>
<li>기존 모델의 강점을 유지하면서 새로운 데이터에 맞게 업데이트 가능.</li>
<li>학습 시간이 단축될 수 있음.</li>
</ul>
<p>단점:</p>
<ul>
<li>기존 모델이 새로운 데이터와 충분히 유사하지 않다면 성능 저하 가능.</li>
<li>추가 훈련 시 과적합(overfitting) 위험 발생 가능.</li>
</ul>
</section>
<section id="기존-학습된-모델-축소" class="level3" data-number="4.2.3">
<h3 data-number="4.2.3" class="anchored" data-anchor-id="기존-학습된-모델-축소"><span class="header-section-number">4.2.3</span> 기존 학습된 모델 축소</h3>
<p>예를 들면 <code>tinySolar-248m-4k</code> 모델을 12개 레이어에서 10개 레이어로 축소합니다.</p>
<p>장점: - 모델 크기를 줄여 계산 비용 감소. - 간단한 작업에 더 적합하게 조정 가능.</p>
<p>단점: - 복잡한 문제에서는 성능 저하 가능. - 중요한 정보가 손실될 수 있음.</p>
</section>
<section id="기존-학습된-모델-확장" class="level3" data-number="4.2.4">
<h3 data-number="4.2.4" class="anchored" data-anchor-id="기존-학습된-모델-확장"><span class="header-section-number">4.2.4</span> 기존 학습된 모델 확장</h3>
<p>예를 들면 <code>tinySolar-248m-4k</code> 모델을 12개 레이어에서 16개 레이어로 확장할 것입니다. 이는 복잡한 문제를 해결하기 위해 모델의 표현력을 높이는 데 효과적이며, 기존 사전 학습된 가중치를 활용해 효율적으로 확장할 수 있는 장점이 있습니다.</p>
<p>장점: - 더 복잡한 문제를 처리할 수 있는 능력 향상. - 기존 모델의 성능을 확장하여 더 많은 데이터를 활용 가능.</p>
<p>단점: - 계산 비용 증가 및 학습 시간 연장. - 레이어를 잘못 추가하면 과적합 위험 증가.</p>
<section id="실습" class="level4" data-number="4.2.4.1">
<h4 data-number="4.2.4.1" class="anchored" data-anchor-id="실습"><span class="header-section-number">4.2.4.1</span> 실습</h4>
<p>이제 12개 레이어의 <code>tinySolar-248m-4k</code> 모델을 16개 레이어로 확장하는 방법을 알아보도록 하겠습니다. 레이어 선택 전략: 원본 12개 레이어 중 하위 8개(초기 특징 추출) + 상위 8개(고수준 추상화)를 중복 추출하는 방법을 사용하겠습니다. 이를 통해 계산 효율성(전체 레이어 재학습 대신 기존 레이어 재활용으로 학습 시간 단축)과 호환성이 보장(임베딩/분류 레이어 유지로 입력-출력 구조 일관성 확보)됩니다. 수행할 단계는 다음과 같습니다:</p>
<ol type="1">
<li>16개 레이어 모델 구성 및 랜덤 가중치 초기화
<ul>
<li>16개 레이어 구조의 새 모델을 생성하고 랜덤 가중치로 초기화합니다.</li>
</ul></li>
<li>12개 레이어를 가진 <code>tinySolar-248m-4k</code> 모델 메모리 로드
<ul>
<li>기존 12개 레이어 모델을 메모리에 불러옵니다.</li>
</ul></li>
<li>레이어 복제 및 가중치 덮어쓰기
<ul>
<li>원본 12개 레이어 모델에서 하위 8개 레이어와 상위 8개 레이어를 복사하여 16개 레이어 모델의 랜덤 가중치를 대체합니다.</li>
</ul></li>
<li>임베딩/분류 레이어 복제
<ul>
<li>원본 모델의 임베딩 레이어(embedding layers)와 분류 레이어(classifying layers)를 새 모델의 랜덤 초기화된 해당 레이어에 복사합니다.</li>
</ul></li>
</ol>
<div id="cell-46" class="cell">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> copy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> deepcopy</span>
<span id="cb48-2"></span>
<span id="cb48-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoModelForCausalLM, AutoTokenizer, LlamaConfig, TextStreamer</span>
<span id="cb48-4"></span>
<span id="cb48-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LLaMA 모델 구성 설정</span></span>
<span id="cb48-6">config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LlamaConfig(</span>
<span id="cb48-7">    num_hidden_layers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최종적으로 16개의 레이어를 가진 모델을 원함</span></span>
<span id="cb48-8">    hidden_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,</span>
<span id="cb48-9">    intermediate_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4096</span>,</span>
<span id="cb48-10">    num_attention_heads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,</span>
<span id="cb48-11">    num_key_value_heads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb48-12">    torch_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bfloat16"</span>,</span>
<span id="cb48-13">    use_cache<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb48-14">)</span>
<span id="cb48-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(config)</span>
<span id="cb48-16"></span>
<span id="cb48-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 새로운 모델 생성 및 bfloat16으로 변환</span></span>
<span id="cb48-18">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LlamaForCausalLM(config)</span>
<span id="cb48-19">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.to(dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.bfloat16)</span>
<span id="cb48-20">print_nparams(model)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 308839424 =&gt; 308M</span></span>
<span id="cb48-21"></span>
<span id="cb48-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사전 학습된 모델 로드</span></span>
<span id="cb48-23">model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upstage/TinySolar-248m-4k"</span></span>
<span id="cb48-24">pretrained_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForCausalLM.from_pretrained(</span>
<span id="cb48-25">    model_name_or_path,</span>
<span id="cb48-26">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cpu"</span>,</span>
<span id="cb48-27">    torch_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.bfloat16,</span>
<span id="cb48-28">)</span>
<span id="cb48-29">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_name_or_path)</span>
<span id="cb48-30"></span>
<span id="cb48-31">print_nparams(pretrained_model)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 248013824 =&gt; 248M</span></span>
<span id="cb48-32"></span>
<span id="cb48-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사전 학습된 모델의 레이어를 새 모델로 복사</span></span>
<span id="cb48-34">model.model.layers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> deepcopy(pretrained_model.model.layers[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> deepcopy(</span>
<span id="cb48-35">    pretrained_model.model.layers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:]</span>
<span id="cb48-36">)</span>
<span id="cb48-37"></span>
<span id="cb48-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 임베딩 레이어 복사</span></span>
<span id="cb48-39">model.model.embed_tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> deepcopy(pretrained_model.model.embed_tokens)</span>
<span id="cb48-40"></span>
<span id="cb48-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 언어 모델 헤드 복사</span></span>
<span id="cb48-42">model.lm_head <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> deepcopy(pretrained_model.lm_head)</span>
<span id="cb48-43"></span>
<span id="cb48-44"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(model.config)</span>
<span id="cb48-45"></span>
<span id="cb48-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 간단한 추론 실행으로 학습되지 않은 모델 테스트</span></span>
<span id="cb48-47">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I am an engineer. I love"</span></span>
<span id="cb48-48"></span>
<span id="cb48-49">inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokenizer(prompt, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>).to(model.device)</span>
<span id="cb48-50"></span>
<span id="cb48-51">streamer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TextStreamer(tokenizer, skip_prompt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, skip_special_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb48-52"></span>
<span id="cb48-53">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(</span>
<span id="cb48-54">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>inputs, streamer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>streamer, use_cache<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, max_new_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, do_sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb48-55">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>LlamaConfig {
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 1,
  "eos_token_id": 2,
  "hidden_act": "silu",
  "hidden_size": 1024,
  "initializer_range": 0.02,
  "intermediate_size": 4096,
  "max_position_embeddings": 2048,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 16,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-06,
  "rope_scaling": null,
  "rope_theta": 10000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.37.2",
  "use_cache": false,
  "vocab_size": 32000
}

모델의 총 파라미터 개수: 308839424</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>모델의 총 파라미터 개수: 248013824
LlamaConfig {
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 1,
  "eos_token_id": 2,
  "hidden_act": "silu",
  "hidden_size": 1024,
  "initializer_range": 0.02,
  "intermediate_size": 4096,
  "max_position_embeddings": 2048,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 16,
  "num_key_value_heads": 8,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-06,
  "rope_scaling": null,
  "rope_theta": 10000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "bfloat16",
  "transformers_version": "4.37.2",
  "use_cache": false,
  "vocab_size": 32000
}

to work with people who are not afraid to look at the world and are not afraid to look at the world with a little bit of a twist.
I am a very humble person and I am very fortunate to have a great team of people who work hard to make a difference.
I am very fortunate to have a great team of people who work hard to make a difference.
I am very fortunate to have a great team of people who work hard to make a difference.
I am very fortunate to have a great team of people who work hard to make a difference.
I am very fortunate to have a great team</code></pre>
</div>
</div>
<p>위의 결과를 통해 학습되지 않은 모델은 성능이 좋지 않다는 것을 알 수 있습니다.(같은 말을 반복) 일단은 해당 모델을 디스크에 저장하겠습니다. 새 모델 이름은 확장된 3억 8백만 개 매개변수(308M)를 반영해 <code>TinySolar-308m-4k-init</code>로 지정하겠습니다.</p>
<div id="cell-48" class="cell">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1">file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TinySolar-308m-4k-init"</span></span>
<span id="cb52-2">file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> file_name</span>
<span id="cb52-3"></span>
<span id="cb52-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 디렉토리가 존재하지 않으면 생성</span></span>
<span id="cb52-5">output_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb52-6"></span>
<span id="cb52-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 308M 파라미터 모델 저장</span></span>
<span id="cb52-8">model.save_pretrained(file_path)</span>
<span id="cb52-9"></span>
<span id="cb52-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 참고: 메모리 제한 환경에서 대규모 모델 실행 시 사용 (메모리 문제 발생 시 실행)</span></span>
<span id="cb52-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gc</span>
<span id="cb52-12"></span>
<span id="cb52-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">del</span> model  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 객체 삭제</span></span>
<span id="cb52-14">gc.collect()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 가비지 컬렉션 수행</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<pre><code>222</code></pre>
</div>
</div>
</section>
</section>
</section>
</section>
<section id="모델-학습" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 모델 학습</h1>
<p>사전 학습(pretraining)은 컴퓨팅 자원이 매우 많이 듭니다! 따라서 사전 학습 프로젝트를 시작하기 전에 비용이 얼마나 들지 확인해보는것이 좋습니다. 🤗 Hugging Face의 <a href="https://huggingface.co/training-cluster">비용 계산기</a>를 사용하여 학습 작업 비용을 대략적으로 예상할 수 있습니다. AWS나 Google Cloud와 같은 다른 인프라에서 학습할 경우, 해당 제공업체의 최신 비용 추정치를 참조하시기 바랍니다.</p>
<section id="학습할-모델-로드하기" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="학습할-모델-로드하기"><span class="header-section-number">5.1</span> 학습할 모델 로드하기</h2>
<p>이전에 만들었던 확장(upscale)한 모델을 다시 불러옵니다.</p>
<div id="cell-50" class="cell">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb54-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoModelForCausalLM</span>
<span id="cb54-3"></span>
<span id="cb54-4">pretrained_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForCausalLM.from_pretrained(</span>
<span id="cb54-5">    file_path.as_posix(),</span>
<span id="cb54-6">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb54-7">    torch_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.bfloat16,</span>
<span id="cb54-8">    use_cache<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb54-9">)</span>
<span id="cb54-10">pretrained_model</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="27">
<pre><code>LlamaForCausalLM(
  (model): LlamaModel(
    (embed_tokens): Embedding(32000, 1024)
    (layers): ModuleList(
      (0-15): 16 x LlamaDecoderLayer(
        (self_attn): LlamaSdpaAttention(
          (q_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (k_proj): Linear(in_features=1024, out_features=256, bias=False)
          (v_proj): Linear(in_features=1024, out_features=256, bias=False)
          (o_proj): Linear(in_features=1024, out_features=1024, bias=False)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (mlp): LlamaMLP(
          (gate_proj): Linear(in_features=1024, out_features=4096, bias=False)
          (up_proj): Linear(in_features=1024, out_features=4096, bias=False)
          (down_proj): Linear(in_features=4096, out_features=1024, bias=False)
          (act_fn): SiLU()
        )
        (input_layernorm): LlamaRMSNorm()
        (post_attention_layernorm): LlamaRMSNorm()
      )
    )
    (norm): LlamaRMSNorm()
  )
  (lm_head): Linear(in_features=1024, out_features=32000, bias=False)
)</code></pre>
</div>
</div>
<p>위 출력 결과를 통해 레이어가 16개인 것을 확인 할 수 있습니다.</p>
</section>
<section id="데이터셋-로드" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="데이터셋-로드"><span class="header-section-number">5.2</span> 데이터셋 로드</h2>
<p><code>Dataset</code> 객체의 두 가지 메서드를 업데이트하여 트레이너와 인터페이스할 수 있도록 합니다. 이 메서드들은 생성한 데이터셋을 학습 데이터로 지정할 때 필요 합니다.</p>
<div id="cell-52" class="cell">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datasets</span>
<span id="cb56-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb56-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dataset</span>
<span id="cb56-4"></span>
<span id="cb56-5"></span>
<span id="cb56-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> CustomDataset(Dataset):</span>
<span id="cb56-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, args, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>):</span>
<span id="cb56-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""커스텀 데이터셋 객체를 초기화합니다."""</span></span>
<span id="cb56-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> args</span>
<span id="cb56-10">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datasets.load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parquet"</span>, data_files<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args.dataset_name, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>split)</span>
<span id="cb56-11"></span>
<span id="cb56-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__len__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb56-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""데이터셋의 샘플 수를 반환합니다."""</span></span>
<span id="cb56-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dataset)</span>
<span id="cb56-15"></span>
<span id="cb56-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__getitem__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, idx):</span>
<span id="cb56-17">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb56-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        지정된 인덱스에서 데이터셋의 단일 데이터 샘플을 검색합니다.</span></span>
<span id="cb56-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb56-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트를 PyTorch용 LongTensor로 변환</span></span>
<span id="cb56-21">        input_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.LongTensor(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dataset[idx][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>])</span>
<span id="cb56-22">        labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.LongTensor(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dataset[idx][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>])</span>
<span id="cb56-23"></span>
<span id="cb56-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 샘플을 딕셔너리 형태로 반환</span></span>
<span id="cb56-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>: input_ids, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"labels"</span>: labels}</span></code></pre></div>
</div>
</section>
<section id="학습-파라미터-구성" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="학습-파라미터-구성"><span class="header-section-number">5.3</span> 학습 파라미터 구성</h2>
<p>여기서는 모델 학습에 필요한 다양한 매개변수를 정의합니다. 그리고 이전에 준비한 데이터셋을 학습 과정에 연결합니다.</p>
<div id="cell-54" class="cell">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dataclasses <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dataclass, field</span>
<span id="cb57-2"></span>
<span id="cb57-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> transformers</span>
<span id="cb57-4"></span>
<span id="cb57-5">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/output"</span>)</span>
<span id="cb57-6">dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"packaged_pretrain_dataset.parquet"</span></span>
<span id="cb57-7">dataset_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> dataset_name</span>
<span id="cb57-8"></span>
<span id="cb57-9"></span>
<span id="cb57-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@dataclass</span></span>
<span id="cb57-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> CustomArguments(transformers.TrainingArguments):</span>
<span id="cb57-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋 구성</span></span>
<span id="cb57-13">    dataset_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋 파일 경로 설정</span></span>
<span id="cb57-14">        default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset_path.as_posix()</span>
<span id="cb57-15">    )</span>
<span id="cb57-16">    num_proc: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 전처리를 위한 서브 프로세스 수</span></span>
<span id="cb57-17">    max_seq_length: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최대 시퀀스 길이</span></span>
<span id="cb57-18"></span>
<span id="cb57-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 핵심 학습 설정</span></span>
<span id="cb57-20">    seed: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 초기화를 위한 랜덤 시드, 재현성을 보장</span></span>
<span id="cb57-21">    optim: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"adamw_torch"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 옵티마이저 설정, 여기서는 PyTorch의 AdamW 사용</span></span>
<span id="cb57-22">    max_steps: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최대 학습 스텝 수</span></span>
<span id="cb57-23">    per_device_train_batch_size: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 디바이스에서 학습에 사용되는 배치 크기</span></span>
<span id="cb57-24"></span>
<span id="cb57-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기타 학습 설정</span></span>
<span id="cb57-26">    learning_rate: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5e-5</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 옵티마이저의 초기 학습률 설정</span></span>
<span id="cb57-27">    weight_decay: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 가중치 감소율 설정</span></span>
<span id="cb57-28">    warmup_steps: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습률 워밍업 단계 수 설정</span></span>
<span id="cb57-29">    lr_scheduler_type: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습률 스케줄러 유형 설정</span></span>
<span id="cb57-30">    gradient_checkpointing: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(</span>
<span id="cb57-31">        default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb57-32">    )  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 메모리 절약을 위한 그래디언트 체크포인트 활성화</span></span>
<span id="cb57-33">    dataloader_num_workers: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 로딩을 위한 서브 프로세스 수 설정</span></span>
<span id="cb57-34">    bf16: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 지원되는 하드웨어에서 bfloat16 정밀도를 사용하여 학습 수행</span></span>
<span id="cb57-35">    gradient_accumulation_steps: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(</span>
<span id="cb57-36">        default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb57-37">    )  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 가중치를 업데이트하기 전에 그래디언트를 누적하는 단계 수</span></span>
<span id="cb57-38"></span>
<span id="cb57-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로깅 구성</span></span>
<span id="cb57-40">    logging_steps: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습 정보를 로깅하는 빈도(스텝 단위)</span></span>
<span id="cb57-41">    report_to: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로깅 대상(e.g., WandB, TensorBoard)</span></span>
<span id="cb57-42"></span>
<span id="cb57-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 저장 구성</span></span>
<span id="cb57-44">    save_strategy: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steps"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "epoch"으로 변경 가능 (저장 전략)</span></span>
<span id="cb57-45">    save_steps: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습 체크포인트를 저장하는 빈도(스텝 단위)</span></span>
<span id="cb57-46">    save_total_limit: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 저장할 체크포인트의 최대 개수 제한</span></span>
<span id="cb57-47"></span>
<span id="cb57-48"></span>
<span id="cb57-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용자 정의 인자를 파싱하고 모델 저장 경로를 설정합니다:</span></span>
<span id="cb57-50">parser <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transformers.HfArgumentParser(CustomArguments)</span>
<span id="cb57-51">(args,) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parser.parse_args_into_dataclasses(args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"--output_dir=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>output_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>as_posix()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>])</span>
<span id="cb57-52"></span>
<span id="cb57-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습 데이터셋을 설정합니다:</span></span>
<span id="cb57-54">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CustomDataset(args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args)</span>
<span id="cb57-55"></span>
<span id="cb57-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋의 형태를 확인합니다:</span></span>
<span id="cb57-57"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input shape: "</span>, train_dataset[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>].shape)</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"a6104f722c364a50becb34e592d0b7b9","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Input shape:  torch.Size([32])</code></pre>
</div>
</div>
</section>
<section id="트레이너-실행-및-모니터링" class="level2" data-number="5.4">
<h2 data-number="5.4" class="anchored" data-anchor-id="트레이너-실행-및-모니터링"><span class="header-section-number">5.4</span> 트레이너 실행 및 모니터링</h2>
<p>먼저, 학습 중 손실 값을 기록하기 위한 콜백을 설정합니다. 이 콜백은 학습 과정에서 발생하는 손실 값을 추적하고 기록하기 위함입니다.</p>
<blockquote class="blockquote">
<p>손실 값의 추이를 그래프로 시각화하면 학습 과정을 더 쉽게 이해할 수 있습니다. 급격한 손실 변화나 이상치가 있는지 주의 깊게 관찰하세요. 이는 학습 과정에서의 문제를 나타낼 수 있습니다.</p>
</blockquote>
<div id="cell-56" class="cell">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Trainer, TrainerCallback</span>
<span id="cb59-2"></span>
<span id="cb59-3"></span>
<span id="cb59-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 손실 값 기록을 위한 커스텀 콜백 정의</span></span>
<span id="cb59-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> LossLoggingCallback(TrainerCallback):</span>
<span id="cb59-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_log(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, args, state, control, logs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb59-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""학습 중 로그 데이터를 수집합니다"""</span></span>
<span id="cb59-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> logs <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb59-9">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.logs.append(logs)</span>
<span id="cb59-10"></span>
<span id="cb59-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb59-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""콜백 초기화 및 로그 저장소 생성"""</span></span>
<span id="cb59-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.logs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb59-14"></span>
<span id="cb59-15"></span>
<span id="cb59-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 콜백 객체 생성</span></span>
<span id="cb59-17">loss_logging_callback <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LossLoggingCallback()</span></code></pre></div>
</div>
<p>그런 다음 <code>transformers</code> 라이브러리에서 Hugging Face <code>Trainer</code> 객체의 인스턴스를 생성합니다. 트레이너의 <code>train()</code> 메서드를 호출하여 학습을 시작합니다:</p>
<div id="cell-58" class="cell">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb60-1">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Trainer(</span>
<span id="cb60-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pretrained_model,</span>
<span id="cb60-3">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args,</span>
<span id="cb60-4">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_dataset,</span>
<span id="cb60-5">    eval_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb60-6">    callbacks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[loss_logging_callback],</span>
<span id="cb60-7">)</span>
<span id="cb60-8"></span>
<span id="cb60-9">trainer.train()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
      
      <progress value="10000" max="10000" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [10000/10000 06:25, Epoch 0/1]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1000</td>
<td>4.417900</td>
</tr>
<tr class="even">
<td>2000</td>
<td>4.274800</td>
</tr>
<tr class="odd">
<td>3000</td>
<td>4.152300</td>
</tr>
<tr class="even">
<td>4000</td>
<td>4.100100</td>
</tr>
<tr class="odd">
<td>5000</td>
<td>4.017500</td>
</tr>
<tr class="even">
<td>6000</td>
<td>3.982000</td>
</tr>
<tr class="odd">
<td>7000</td>
<td>3.934200</td>
</tr>
<tr class="even">
<td>8000</td>
<td>3.971900</td>
</tr>
<tr class="odd">
<td>9000</td>
<td>3.944800</td>
</tr>
<tr class="even">
<td>10000</td>
<td>3.939500</td>
</tr>
</tbody>
</table>
<p>
</p></div>
<div class="cell-output cell-output-display" data-execution_count="31">
<pre><code>TrainOutput(global_step=10000, training_loss=4.073491650390625, metrics={'train_runtime': 386.2049, 'train_samples_per_second': 51.786, 'train_steps_per_second': 25.893, 'total_flos': 1060114268160000.0, 'train_loss': 4.073491650390625, 'epoch': 0.11})</code></pre>
</div>
</div>
<p>시각화를 통해 Training loss가 어떻게 줄었는지 확인해보겠습니다.</p>
<div id="cell-60" class="cell">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb62-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb62-2"></span>
<span id="cb62-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ggplot 스타일 적용</span></span>
<span id="cb62-4">plt.style.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot"</span>)</span>
<span id="cb62-5"></span>
<span id="cb62-6">logs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> loss_logging_callback.logs</span>
<span id="cb62-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loss_logging_callback에서 기록한 손실 값 가져오기</span></span>
<span id="cb62-8">losses <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [log[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"loss"</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> log <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> logs <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"loss"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> log]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'loss' 키가 있는 로그만 추출</span></span>
<span id="cb62-9"></span>
<span id="cb62-10">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 배경색 설정</span></span>
<span id="cb62-11">plt.plot(losses)</span>
<span id="cb62-12">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Epochs"</span>)</span>
<span id="cb62-13">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Loss"</span>)</span>
<span id="cb62-14">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Training Loss"</span>)</span>
<span id="cb62-15">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_Pre_Training_files/figure-html/cell-33-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_Pre_Training_files/figure-html/cell-33-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>학습을 계속할 수록 손실 값이 줄어드는 것을 확인할 수 있습니다. 이는 모델이 데이터를 더 잘 이해하고 있음을 의미합니다. 그러나 손실 값이 감소하는 속도가 느려지면 학습이 수렴(convergence)하고 있음을 나타낼 수 있습니다. 이 경우 학습률을 조정하거나 다른 하이퍼파라미터를 조정하여 성능을 향상시킬 수 있습니다. 이제 학습된 모델을 저장해보죠.</p>
<div id="cell-62" class="cell">
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 이름 및 저장 경로 설정</span></span>
<span id="cb63-2">model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TinySolar-308m-4k-finetune"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파인튜닝된 모델 이름</span></span>
<span id="cb63-3">save_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> model_name  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 저장 경로 생성</span></span>
<span id="cb63-4"></span>
<span id="cb63-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사전 학습된 모델 저장</span></span>
<span id="cb63-6">pretrained_model.save_pretrained(save_path.as_posix())  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 가중치와 구성 파일 저장</span></span>
<span id="cb63-7"></span>
<span id="cb63-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저 저장</span></span>
<span id="cb63-9">tokenizer.save_pretrained(save_path.as_posix())  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저 관련 파일(vocab 등) 저장</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="33">
<pre><code>('../data/output/TinySolar-308m-4k-finetune/tokenizer_config.json',
 '../data/output/TinySolar-308m-4k-finetune/special_tokens_map.json',
 '../data/output/TinySolar-308m-4k-finetune/tokenizer.model',
 '../data/output/TinySolar-308m-4k-finetune/added_tokens.json',
 '../data/output/TinySolar-308m-4k-finetune/tokenizer.json')</code></pre>
</div>
</div>
</section>
<section id="모델의-성능-확인" class="level2" data-number="5.5">
<h2 data-number="5.5" class="anchored" data-anchor-id="모델의-성능-확인"><span class="header-section-number">5.5</span> 모델의 성능 확인</h2>
<p>모델 학습을 진행하면서 모델의 체크포인트(임시 저장)를 만들었습니다. 이 체크포인트를 불러와서 사용해보는 코드는 아래와 같습니다. 모델의 토크나이저는 이전과 마찬가지로 Solar 토크나이저를 사용하고 <code>TextStreamer</code> 객체를 설정하여 생성되는 텍스트를 출력합니다.</p>
<div id="cell-64" class="cell">
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb65-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoModelForCausalLM, AutoTokenizer, TextStreamer</span>
<span id="cb65-3"></span>
<span id="cb65-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. 토크나이저 설정</span></span>
<span id="cb65-5">model_name_or_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upstage/TinySolar-248m-4k"</span></span>
<span id="cb65-6">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_name_or_path)</span>
<span id="cb65-7"></span>
<span id="cb65-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. 중간 체크포인트 모델 로드</span></span>
<span id="cb65-9">checkpoint_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/output/checkpoint-10000"</span></span>
<span id="cb65-10">model2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForCausalLM.from_pretrained(</span>
<span id="cb65-11">    checkpoint_path,</span>
<span id="cb65-12">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb65-13">    torch_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.bfloat16,</span>
<span id="cb65-14">)</span>
<span id="cb65-15"></span>
<span id="cb65-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. 프롬프트 설정</span></span>
<span id="cb65-17">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I am an engineer. I love"</span></span>
<span id="cb65-18"></span>
<span id="cb65-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. 입력 토큰화</span></span>
<span id="cb65-20">inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokenizer(prompt, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>).to(model2.device)</span>
<span id="cb65-21"></span>
<span id="cb65-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5. 텍스트 스트리머 설정</span></span>
<span id="cb65-23">streamer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TextStreamer(tokenizer, skip_prompt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, skip_special_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb65-24"></span>
<span id="cb65-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 6. 텍스트 생성</span></span>
<span id="cb65-26">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model2.generate(</span>
<span id="cb65-27">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>inputs,</span>
<span id="cb65-28">    streamer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>streamer,</span>
<span id="cb65-29">    use_cache<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb65-30">    max_new_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>,</span>
<span id="cb65-31">    do_sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb65-32">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>,</span>
<span id="cb65-33">)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>what I see in people like me and so, for me, my passion is a passion for health and love. As long and as I am an entrepreneur (both in the fields of health marketing and customer sales, there is a difference that must be recognised here. In this issue, I am in charge of what I</code></pre>
</div>
</div>
<p>위의 결과를 보면 처음 시작했던 모델과 비교하면 훨씬 더 자연스러운 텍스트가 생성되는 것을 확인할 수 있습니다. 다만 맥락은 이해하기 어렵네요.</p>
</section>
</section>
<section id="모델-평가" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> 모델 평가</h1>
<p>LLM 모델 평가는 전통적인 기계학습 모델과 달리 복잡하고 다면적인 과정입니다. 주요 평가 방법으로는 벤치마크 평가와 리더보드 평가가 존재합니다. 다만 실제 구현하는 코드는 이 글의 범위를 벗어나기에 생략하겠습니다.</p>
<section id="벤치마크-평가법" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="벤치마크-평가법"><span class="header-section-number">6.1</span> 벤치마크 평가법</h2>
<p>벤치마크 평가는 표준화된 데이터셋과 태스크를 사용하여 모델의 성능을 객관적으로 측정합니다.</p>
<ul>
<li>LM Evaluation Harness: EleutherAI에서 개발한 도구로, 다양한 벤치마크 태스크에 대해 LLM을 평가할 수 있습니다. 다음 <a href="https://github.com/EleutherAI/lm-evaluation-harness">GitHub 리포지토리</a>에서 찾을 수 있습니다.</li>
<li>TruthfulQA: 모델의 진실성과 정확성을 평가하는 벤치마크로, 817개의 질문을 포함하며 건강, 법률, 금융 등 38개 주제를 다룹니다. TruthfulQA 벤치마크에 대한 자세한 내용은 <a href="https://arxiv.org/abs/2109.07958">이 논문</a>에서 읽을 수 있으며 구현 코드는 다음 <a href="https://github.com/sylinrl/TruthfulQA">GitHub 리포지토리</a>에서 확인할 수 있습니다.</li>
</ul>
</section>
<section id="리더보드-평가법" class="level2" data-number="6.2">
<h2 data-number="6.2" class="anchored" data-anchor-id="리더보드-평가법"><span class="header-section-number">6.2</span> 리더보드 평가법</h2>
<p>리더보드는 다양한 모델의 성능을 비교할 수 있는 플랫폼을 제공합니다.</p>
<ul>
<li>Hugging Face <a href="https://huggingface.co/open-llm-leaderboard">리더보드</a>: 다양한 LLM 모델의 성능을 비교할 수 있는 플랫폼입니다. 전문가나 일반 사용자가 직접 모델의 출력을 평가하는 방식입니다.</li>
</ul>
</section>
</section>
<section id="마치며" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> 마치며</h1>
<p>이번 강의에서는 LLM 사전 학습을 위한 데이터 수집, 정제, 패키징, 모델 구성, 가중치 초기화, 학습의 과정을 배웠습니다. 이러한 과정을 통해 LLM 모델을 효율적으로 학습하고 성능을 평가할 수 있습니다. 이제 여러분도 LLM 모델을 구축하고 평가할 수 있는 능력을 갖추셨습니다. 앞으로도 다양한 업무에 LLM 모델을 적용하여 더 나은 성능을 달성하시기 바랍니다.</p>
<blockquote class="blockquote">
<p>AI는 새로운 전기와 같아서 삶의 거의 모든 영역을 변화시키고 개선할 것입니다. - <a href="https://www.andrewng.org/">Andrew Ng</a></p>
</blockquote>
<section id="reference" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="reference"><span class="header-section-number">7.1</span> Reference</h2>
<ul>
<li><a href="https://learn.deeplearning.ai/courses/pretraining-llms/lesson/xg5n5/why-pre-training">Pretraining LLMs</a></li>
</ul>


</section>
</section>

 ]]></description>
  <category>LLM</category>
  <category>Machine Learning</category>
  <category>Python</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/LLM_Pre_Training.html</guid>
  <pubDate>Thu, 13 Mar 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>LLM을 사용한 스팸 메시지 분류</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/LLM_classification.html</link>
  <description><![CDATA[ 





<p>이메일은 현대 사회의 필수적인 커뮤니케이션 도구입니다. 하지만 스팸 메일의 범람은 사용자들에게 큰 골칫거리가 되고 있습니다. 광고부터 악성 피싱 시도까지 스팸 메일은 생산성을 저하시키고 보안 위험을 초래합니다. 이러한 문제를 해결하기 위해 다양한 스팸 필터링 기술이 개발되어 왔지만 최근 인공지능 기술의 발전으로 더욱 정교하고 효과적인 방법이 등장했습니다.</p>
<p>바로 대규모 언어 모델(Large Language Model, LLM)을 활용한 스팸 필터링입니다. LLM은 방대한 양의 텍스트 데이터로 사전 학습된 모델로 인간의 언어를 이해하고 생성하는 데 탁월한 성능을 보입니다. 이러한 LLM의 강력한 언어 이해 능력을 스팸 필터링에 적용하면 기존 방식보다 훨씬 더 정확하고 효과적으로 스팸을 탐지할 수 있습니다.</p>
<p>본 글에서는 LLM 모델을 사용하여 스팸 필터링 시스템을 구축하는 과정을 단계별로 살펴보겠습니다. 데이터 전처리부터 모델 설정, 미세 조정, 그리고 실제 적용까지 과정을 다룰 예정입니다.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
    direction LR
    A: Preprocess dataset
    B: Create data loaders
    C: Load pretrained model
    D: Model setup
    F: Fine-tune model
    G: Use model on new data
    state Stage1{
         A --&gt; B
    }
    Stage1 --&gt; Stage2 
    state Stage2{
         C --&gt; D
    }
    Stage2 --&gt; Stage3
    state Stage3{
        F --&gt; G
    }
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>위 다이어그램은 LLM 모델을 사용하여 스팸 필터링을 위한 분류 미세 조정의 3단계 과정을 보여줍니다. 1단계는 데이터셋을 준비하는 과정입니다. 먼저 스팸 메일과 정상 메일 데이터를 수집하여 데이터셋을 구축합니다. 그런 다음, 데이터셋을 LLM 모델에 적합한 형태로 전처리합니다. 여기에는 불필요한 문자 제거, 텍스트 정규화, 토큰화 등의 작업이 포함될 수 있습니다. 마지막으로, 전처리된 데이터셋을 모델 학습에 사용할 수 있도록 데이터 로더를 생성합니다. 데이터 로더는 데이터를 일괄 처리하고 모델에 공급하는 역할을 합니다.</p>
<p>2단계는 모델을 설정하는 과정입니다. Hugging Face와 같은 라이브러리를 사용하여 사전 훈련된 LLM 모델을 로드합니다. BERT, RoBERTa와 같은 모델을 사용할 수 있습니다. 그런 다음, 로드한 모델을 스팸 필터링 작업에 맞게 설정합니다. 여기에는 모델의 출력 레이어 수정, 추가적인 레이어 추가 등의 작업이 포함될 수 있습니다.</p>
<p>3단계는 모델을 미세 조정하고 실제 스팸 필터링에 활용하는 과정입니다. 1단계에서 준비한 데이터셋을 사용하여 2단계에서 설정한 모델을 미세 조정합니다. 미세 조정은 모델이 스팸 메일과 정상 메일을 구분하는 방법을 학습하는 과정입니다. 충분한 미세 조정 후에는 모델을 새로운 데이터에 적용하여 스팸 메일을 분류할 수 있습니다. 이제 단계별로 코드 예제를 다루어 보죠.</p>
<section id="단계-데이터셋-준비" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 1단계: 데이터셋 준비</h1>
<div id="cell-2" class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>matplotlib version: 3.10.0
numpy version: 2.2.3
tiktoken version: 0.9.0
torch version: 2.6.0
pandas version: 2.2.3</code></pre>
</div>
</div>
<div id="cell-3" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urllib.request</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zipfile</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 상수 정의: 파일 경로 및 URL을 쉽게 관리하기 위함</span></span>
<span id="cb2-9">DATA_URL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://archive.ics.uci.edu/static/public/228/sms+spam+collection.zip"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋 URL</span></span>
<span id="cb2-10">DATA_FILENAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sms_spam_collection.zip"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다운로드할 ZIP 파일 이름</span></span>
<span id="cb2-11">DATA_DIR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/input"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 저장 디렉토리</span></span>
<span id="cb2-12">EXTRACTED_DIR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(DATA_DIR) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sms_spam_collection"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 압축 해제 후 데이터 저장 디렉토리</span></span>
<span id="cb2-13">DATA_FILEPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EXTRACTED_DIR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SMSSpamCollection.tsv"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최종 데이터 파일 경로</span></span>
<span id="cb2-14"></span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> download_and_extract_data(url, filename, extract_dir, filepath):</span>
<span id="cb2-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""SMS 스팸 컬렉션 데이터셋을 다운로드하고 압축 해제합니다.</span></span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        url (str): 데이터셋 URL</span></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        filename (str): 다운로드할 파일 이름</span></span>
<span id="cb2-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        extract_dir (Path): 압축 해제할 디렉토리</span></span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        filepath (Path): 최종 데이터 파일 경로</span></span>
<span id="cb2-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-25"></span>
<span id="cb2-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> filepath.exists():  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일이 이미 존재하면 다운로드 및 압축 해제 생략</span></span>
<span id="cb2-27">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>filepath<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> already exists. Skipping download and extraction."</span>)</span>
<span id="cb2-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span></span>
<span id="cb2-29"></span>
<span id="cb2-30">    os.makedirs(extract_dir, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 압축 해제 디렉토리 생성 (존재하지 않을 경우)</span></span>
<span id="cb2-31"></span>
<span id="cb2-32">    zip_filepath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(DATA_DIR) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> filename  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ZIP 파일 경로</span></span>
<span id="cb2-33"></span>
<span id="cb2-34">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Downloading data from </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>zip_filepath<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">..."</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다운로드 시작 메시지 출력</span></span>
<span id="cb2-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> urllib.request.urlopen(url) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> response:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># URL에 연결</span></span>
<span id="cb2-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(zip_filepath, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wb"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> out_file:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일 쓰기 모드로 열기</span></span>
<span id="cb2-37">            out_file.write(response.read())  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일에 내용 쓰기</span></span>
<span id="cb2-38"></span>
<span id="cb2-39">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Extracting data from </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>zip_filepath<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>extract_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">..."</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 압축 해제 시작 메시지 출력</span></span>
<span id="cb2-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> zipfile.ZipFile(zip_filepath, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> zip_ref:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ZIP 파일 열기</span></span>
<span id="cb2-41">        zip_ref.extractall(extract_dir)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 압축 해제</span></span>
<span id="cb2-42"></span>
<span id="cb2-43">    original_filepath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> extract_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SMSSpamCollection"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원래 파일 이름</span></span>
<span id="cb2-44">    os.rename(original_filepath, filepath)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일 이름 변경</span></span>
<span id="cb2-45"></span>
<span id="cb2-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Data downloaded and extracted to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>filepath<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 완료 메시지 출력</span></span>
<span id="cb2-47">    os.remove(zip_filepath)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 임시 ZIP 파일 삭제</span></span>
<span id="cb2-48"></span>
<span id="cb2-49"></span>
<span id="cb2-50"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> load_data(filepath):</span>
<span id="cb2-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""SMS 스팸 컬렉션 데이터를 pandas DataFrame으로 로드합니다.</span></span>
<span id="cb2-52"></span>
<span id="cb2-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb2-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        filepath (Path): 데이터 파일 경로</span></span>
<span id="cb2-55"></span>
<span id="cb2-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb2-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pandas.DataFrame: 데이터셋</span></span>
<span id="cb2-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb2-60">        df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(filepath, sep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, header<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Text"</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TSV 파일 읽기</span></span>
<span id="cb2-61">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df</span>
<span id="cb2-62">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">FileNotFoundError</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일이 없을 경우</span></span>
<span id="cb2-63">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Error: File not found at </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>filepath<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-64">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-65">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다른 에러 발생 시</span></span>
<span id="cb2-66">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"An error occurred while reading the file: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-68"></span>
<span id="cb2-69"></span>
<span id="cb2-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 다운로드 및 압축 해제</span></span>
<span id="cb2-71">download_and_extract_data(DATA_URL, DATA_FILENAME, EXTRACTED_DIR, DATA_FILEPATH)</span>
<span id="cb2-72"></span>
<span id="cb2-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 로드</span></span>
<span id="cb2-74">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_data(DATA_FILEPATH)</span>
<span id="cb2-75">df.tail()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>../data/input/sms_spam_collection/SMSSpamCollection.tsv already exists. Skipping download and extraction.</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Label</th>
<th data-quarto-table-cell-role="th">Text</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">5567</td>
<td>spam</td>
<td>This is the 2nd time we have tried 2 contact u...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5568</td>
<td>ham</td>
<td>Will ü b going to esplanade fr home?</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">5569</td>
<td>ham</td>
<td>Pity, * was in mood for that. So...any other s...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5570</td>
<td>ham</td>
<td>The guy did some bitching but I acted like i'd...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">5571</td>
<td>ham</td>
<td>Rofl. Its true to its name</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="cell-4" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># label 열의 값 분포 계산</span></span>
<span id="cb4-5">label_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>].value_counts()</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화</span></span>
<span id="cb4-8">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># figure 크기 설정</span></span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 막대 색상 지정</span></span>
<span id="cb4-11">bar_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#8FBCBB"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원하는 색상 코드</span></span>
<span id="cb4-12"></span>
<span id="cb4-13">ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.countplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bar_color)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># countplot 사용</span></span>
<span id="cb4-14"></span>
<span id="cb4-15">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 제목 설정</span></span>
<span id="cb4-16">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x축 레이블 설정</span></span>
<span id="cb4-17">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of Samples"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># y축 레이블 설정</span></span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 레이블의 비율 표시</span></span>
<span id="cb4-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, count <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(label_counts):</span>
<span id="cb4-21">    percentage <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 백분율 계산</span></span>
<span id="cb4-22">    plt.text(i, count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>percentage<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span>, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 추가</span></span>
<span id="cb4-23"></span>
<span id="cb4-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 오른쪽 및 위쪽 테두리 제거</span></span>
<span id="cb4-25">ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb4-26">ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb4-27"></span>
<span id="cb4-28">plt.show()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 출력</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_classification_files/figure-html/cell-4-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_classification_files/figure-html/cell-4-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<section id="데이터셋-불균형-해소" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="데이터셋-불균형-해소"><span class="header-section-number">1.1</span> 데이터셋 불균형 해소</h2>
<p>머신러닝 모델 훈련 시 가장 흔하게 마주하는 문제 중 하나는 데이터셋의 불균형입니다. 특히 스팸 필터링과 같이 특정 클래스의 데이터가 현저히 적은 경우 모델의 성능 저하를 야기할 수 있습니다. 이를 해결하기 위해 “ham” 메일과 “spam” 메일의 개수를 동일하게 맞춰줍니다. 구체적으로 “ham” 메일 중에서 “spam” 메일의 개수만큼 무작위로 샘플링하여 두 종류의 메일을 합쳐 균형 잡힌 데이터셋을 생성할 것입니다. 이렇게 생성된 <code>balanced_df</code>는 “ham”을 0, “spam”을 1로 매핑하여 숫자 레이블로 변환합니다.</p>
<div id="cell-6" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> create_balanced_dataset(df):</span>
<span id="cb5-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "spam" 인스턴스 개수 세기</span></span>
<span id="cb5-3">    num_spam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spam"</span>].shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb5-4"></span>
<span id="cb5-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "spam" 인스턴스 개수와 일치하도록 "ham" 인스턴스 무작위 샘플링</span></span>
<span id="cb5-6">    ham_subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ham"</span>].sample(num_spam, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb5-7"></span>
<span id="cb5-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "ham" 서브셋과 "spam" 데이터 결합</span></span>
<span id="cb5-9">    balanced_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([ham_subset, df[df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spam"</span>]])</span>
<span id="cb5-10"></span>
<span id="cb5-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> balanced_df</span>
<span id="cb5-12"></span>
<span id="cb5-13"></span>
<span id="cb5-14">balanced_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_balanced_dataset(df)</span>
<span id="cb5-15">balanced_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> balanced_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ham"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spam"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>})</span>
<span id="cb5-16"></span>
<span id="cb5-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(balanced_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>].value_counts())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Label
0    747
1    747
Name: count, dtype: int64</code></pre>
</div>
</div>
</section>
</section>
<section id="단계-사전-훈련된-모델-설정" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 2단계: 사전 훈련된 모델 설정</h1>
<section id="데이터-로더-생성-creating-data-loaders" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="데이터-로더-생성-creating-data-loaders"><span class="header-section-number">2.1</span> 데이터 로더 생성 (Creating data loaders)</h2>
<p>앞서 준비한 데이터를 LLM 모델의 학습 데이터로 사용하려면, 메시지 길이가 서로 다르다는 점을 고려해야 합니다. 여러 훈련 예제를 하나의 배치로 묶어 학습하는 과정에서, 메시지 길이가 다르면 문제가 발생할 수 있습니다. 이를 해결하기 위해 다음 두 가지 방법 중 하나를 선택해야 합니다.</p>
<ol type="1">
<li>데이터셋 또는 배치 내에서 가장 짧은 메시지 길이에 맞춰 모든 메시지를 잘라내는 방법: 이 방법은 간단하지만, 메시지 내용의 일부가 손실될 수 있다는 단점이 있습니다. 특히 중요한 정보가 메시지 앞부분에 위치하는 경우, 정보 손실로 인해 모델 성능이 저하될 수 있습니다.</li>
<li>데이터셋 또는 배치 내에서 가장 긴 메시지 길이에 맞춰 모든 메시지를 패딩하는 방법: 이 방법은 메시지 내용 손실 없이 모든 메시지를 동일한 길이로 맞출 수 있다는 장점이 있습니다. 다만, 패딩된 부분은 모델 학습에 영향을 미치지 않도록 마스크 처리를 해야 합니다.</li>
</ol>
<p>본 튜토리얼에서는 2번 방법을 선택하여 모든 메시지를 데이터셋에서 가장 긴 메시지 길이에 맞춰 패딩합니다. 패딩된 부분은 모델 학습 시 마스크 처리를 통해 무시하도록 합니다.</p>
</section>
<section id="사전-훈련된-모델-가중치-초기화-initializing-a-model-with-pretrained-weights" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="사전-훈련된-모델-가중치-초기화-initializing-a-model-with-pretrained-weights"><span class="header-section-number">2.2</span> 사전 훈련된 모델 가중치 초기화 (Initializing a model with pretrained weights)</h2>
<section id="모델-선택-choosing-a-model" class="level3" data-number="2.2.1">
<h3 data-number="2.2.1" class="anchored" data-anchor-id="모델-선택-choosing-a-model"><span class="header-section-number">2.2.1</span> 모델 선택 (Choosing a model)</h3>
<p>본 튜토리얼에서는 <code>answerdotai/ModernBERT-base</code> 모델을 사용합니다. 이 모델은 허깅페이스(Hugging Face)의 transformers 라이브러리를 사용하면 간단하게 모델을 불러올 수 있습니다.</p>
</section>
<section id="모델-초기화-initializing-the-model" class="level3" data-number="2.2.2">
<h3 data-number="2.2.2" class="anchored" data-anchor-id="모델-초기화-initializing-the-model"><span class="header-section-number">2.2.2</span> 모델 초기화 (Initializing the model)</h3>
<p><code>AutoModelForSequenceClassification</code> 클래스를 사용하여 사전 훈련된 모델을 불러오고, 원하는 task에 맞게 head 부분을 수정합니다. 본 튜토리얼에서는 스팸 메일 분류를 위해 2개의 label (스팸, 햄)을 가진 <code>classification head</code>를 사용합니다.</p>
<div id="cell-8" class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DataLoader, Dataset</span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb7-4">    AutoModelForSequenceClassification,</span>
<span id="cb7-5">    AutoTokenizer,</span>
<span id="cb7-6">    Trainer,</span>
<span id="cb7-7">    TrainingArguments,</span>
<span id="cb7-8">)</span>
<span id="cb7-9"></span>
<span id="cb7-10">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answerdotai/ModernBERT-base"</span></span>
<span id="cb7-11"></span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저를 데이터셋 생성 또는 멀티프로세싱 전에 전역적으로 초기화합니다.</span></span>
<span id="cb7-13">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_id)</span>
<span id="cb7-14"></span>
<span id="cb7-15"></span>
<span id="cb7-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 로더 클래스 정의</span></span>
<span id="cb7-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> CustomDataset(Dataset):</span>
<span id="cb7-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, texts, labels, tokenizer):  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저를 인자로 추가</span></span>
<span id="cb7-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> texts</span>
<span id="cb7-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> labels</span>
<span id="cb7-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokenizer  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전달받은 토크나이저 사용</span></span>
<span id="cb7-22"></span>
<span id="cb7-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__len__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb7-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.texts)</span>
<span id="cb7-25"></span>
<span id="cb7-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__getitem__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, idx):</span>
<span id="cb7-27">        encoding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tokenizer(</span>
<span id="cb7-28">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.texts[idx],</span>
<span id="cb7-29">            truncation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb7-30">            padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max_length"</span>,</span>
<span id="cb7-31">            max_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>,</span>
<span id="cb7-32">            return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>,</span>
<span id="cb7-33">        )</span>
<span id="cb7-34">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {</span>
<span id="cb7-35">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>: encoding[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>].flatten(),</span>
<span id="cb7-36">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"attention_mask"</span>: encoding[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"attention_mask"</span>].flatten(),</span>
<span id="cb7-37">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"labels"</span>: torch.tensor(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.labels[idx], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">long</span>),</span>
<span id="cb7-38">        }</span>
<span id="cb7-39"></span>
<span id="cb7-40"></span>
<span id="cb7-41">texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> balanced_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Text"</span>].to_list()</span>
<span id="cb7-42">labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> balanced_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Label"</span>].to_list()</span>
<span id="cb7-43"></span>
<span id="cb7-44">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CustomDataset(texts, labels, tokenizer)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저 인스턴스 전달</span></span>
<span id="cb7-45">train_loader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(dataset, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-46"></span>
<span id="cb7-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 로드 및 설정</span></span>
<span id="cb7-48"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> torch.backends.mps.is_available():</span>
<span id="cb7-49">    device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mps"</span>)</span>
<span id="cb7-50">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Using MPS"</span>)</span>
<span id="cb7-51"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> torch.cuda.is_available():</span>
<span id="cb7-52">    device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>)</span>
<span id="cb7-53">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Using CUDA"</span>)</span>
<span id="cb7-54"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb7-55">    device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cpu"</span>)</span>
<span id="cb7-56">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Using CPU"</span>)</span>
<span id="cb7-57"></span>
<span id="cb7-58">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForSequenceClassification.from_pretrained(model_id, num_labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb7-59">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.to(device)</span>
<span id="cb7-60"></span>
<span id="cb7-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 학습 설정 및 조정</span></span>
<span id="cb7-62">training_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TrainingArguments(</span>
<span id="cb7-63">    output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/output/ModernBERT-spam"</span>,</span>
<span id="cb7-64">    num_train_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb7-65">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,</span>
<span id="cb7-66">    logging_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/output/ModernBERT-spam/logs"</span>,</span>
<span id="cb7-67">    logging_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>,</span>
<span id="cb7-68">)</span>
<span id="cb7-69"></span>
<span id="cb7-70">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Trainer(</span>
<span id="cb7-71">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb7-72">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>training_args,</span>
<span id="cb7-73">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset,</span>
<span id="cb7-74">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Using MPS</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Some weights of ModernBertForSequenceClassification were not initialized from the model checkpoint at answerdotai/ModernBERT-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.</code></pre>
</div>
</div>
</section>
</section>
</section>
<section id="단계-모델-미세-조정" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 3단계: 모델 미세 조정</h1>
<section id="모델-가중치-동결-freezing-pretrained-weights" class="level3" data-number="3.0.1">
<h3 data-number="3.0.1" class="anchored" data-anchor-id="모델-가중치-동결-freezing-pretrained-weights"><span class="header-section-number">3.0.1</span> 모델 가중치 동결 (Freezing pretrained weights)</h3>
<p>사전 훈련된 모델의 가중치를 미세 조정(fine-tuning) 과정에서 동결하는 것은 일반적인 방법입니다. 이를 통해 사전 훈련된 모델이 가진 지식을 유지하면서, 특정 task에 맞게 모델을 조정할 수 있습니다. 하지만 여기에서는 모든 가중치를 미세 조정하여 모델 성능을 극대화합니다.</p>
<div id="cell-10" class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 조정 수행</span></span>
<span id="cb10-2">trainer.train()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
      
      <progress value="282" max="282" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [282/282 04:08, Epoch 3/3]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>40</td>
<td>0.251200</td>
</tr>
<tr class="even">
<td>80</td>
<td>0.079900</td>
</tr>
<tr class="odd">
<td>120</td>
<td>0.046400</td>
</tr>
<tr class="even">
<td>160</td>
<td>0.027300</td>
</tr>
<tr class="odd">
<td>200</td>
<td>0.041400</td>
</tr>
<tr class="even">
<td>240</td>
<td>0.001200</td>
</tr>
<tr class="odd">
<td>280</td>
<td>0.000200</td>
</tr>
</tbody>
</table>
<p>
</p></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>TrainOutput(global_step=282, training_loss=0.06348936739650139, metrics={'train_runtime': 250.0251, 'train_samples_per_second': 17.926, 'train_steps_per_second': 1.128, 'total_flos': 381819166460928.0, 'train_loss': 0.06348936739650139, 'epoch': 3.0})</code></pre>
</div>
</div>
</section>
<section id="모델로-예측하기" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="모델로-예측하기"><span class="header-section-number">3.1</span> 모델로 예측하기</h2>
<p>앞서 구축하고 미세 조정한 LLM 모델을 이용하여 실제 환경에서 새로운 이메일에 대한 스팸 여부를 예측해보겠습니다. 이 과정은 모델의 실용성을 검증하는 핵심적인 단계입니다.</p>
<div id="cell-12" class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 새로운 데이터에 대한 예측 사용</span></span>
<span id="cb12-2">predict_texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb12-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CONGRATULATIONS! You've been selected to receive a FREE iPhone 14 Pro Max! Click the link below to claim your prize within the next 30 minutes: bit.ly/free-iphone-claim. Don't miss out on this EXCLUSIVE offer"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 스팸</span></span>
<span id="cb12-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hi, how are you? I wanted to catch up and see if you're free for a call sometime this week."</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 햄</span></span>
<span id="cb12-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reminder: Don't forget to pick up your dry cleaning today."</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 햄</span></span>
<span id="cb12-6">]</span>
<span id="cb12-7"></span>
<span id="cb12-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예측 시 *동일한* 토크나이저 인스턴스 사용</span></span>
<span id="cb12-9">predict_encodings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokenizer(  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전역적으로 초기화된 토크나이저 사용</span></span>
<span id="cb12-10">    predict_texts, truncation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span></span>
<span id="cb12-11">)</span>
<span id="cb12-12"></span>
<span id="cb12-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 예측</span></span>
<span id="cb12-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb12-15">    outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model(</span>
<span id="cb12-16">        input_ids<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predict_encodings[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>].to(device),</span>
<span id="cb12-17">        attention_mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predict_encodings[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"attention_mask"</span>].to(device),</span>
<span id="cb12-18">    )</span>
<span id="cb12-19"></span>
<span id="cb12-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예측 결과 추출</span></span>
<span id="cb12-21">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.argmax(outputs.logits, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb12-22"></span>
<span id="cb12-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예측 결과 해석 및 출력</span></span>
<span id="cb12-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> text, prediction <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(predict_texts, predictions):</span>
<span id="cb12-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> prediction.item() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb12-26">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"스팸: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb12-28">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"햄: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>스팸: CONGRATULATIONS! You've been selected to receive a FREE iPhone 14 Pro Max! Click the link below to claim your prize within the next 30 minutes: bit.ly/free-iphone-claim. Don't miss out on this EXCLUSIVE offer
햄: Hi, how are you? I wanted to catch up and see if you're free for a call sometime this week.
햄: Reminder: Don't forget to pick up your dry cleaning today.</code></pre>
</div>
</div>
<p>위의 출력을 보니 성능이 꽤 괜찮은 것 처럼 보이네요.</p>
</section>
<section id="hugging-face-hub에-모델-저장" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="hugging-face-hub에-모델-저장"><span class="header-section-number">3.2</span> Hugging Face Hub에 모델 저장</h2>
<p>이제 미세 조정한 모델을 허깅페이스에 업로드합니다. 이렇게 올려두면 모델을 공유하거나 필요할때 다운로드해서 바로 사용할 수 있습니다.</p>
<div id="cell-14" class="cell" data-scrolled="true">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저 업로드</span></span>
<span id="cb14-2">tokenizer.push_to_hub(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ehottl/ModernBERT-spam"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 본인 계정 이름과 저장소 이름 작성</span></span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 트레이너를 사용한 모델 업로드</span></span>
<span id="cb14-5">trainer.push_to_hub(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ehottl/ModernBERT-spam"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 본인 계정 이름과 저장소 이름 작성</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>No files have been modified since last commit. Skipping to prevent empty commit.</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>CommitInfo(commit_url='https://huggingface.co/ehottl/ModernBERT-spam/commit/23f02271322e82762e9c5ca4322dad918205d6bf', commit_message='ehottl/ModernBERT-spam', commit_description='', oid='23f02271322e82762e9c5ca4322dad918205d6bf', pr_url=None, repo_url=RepoUrl('https://huggingface.co/ehottl/ModernBERT-spam', endpoint='https://huggingface.co', repo_type='model', repo_id='ehottl/ModernBERT-spam'), pr_revision=None, pr_num=None)</code></pre>
</div>
</div>
</section>
</section>
<section id="마치며" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 마치며</h1>
<p>이번 튜토리얼에서는 사전 훈련된 언어 모델(LLM)을 활용하여 스팸 메일을 분류하는 방법을 단계별로 살펴보았습니다. 데이터셋 준비, 모델 설정, 모델 학습 및 평가를 통해 스팸 메일 분류 모델을 개발하고 배포하는 전체 과정을 경험해 보았습니다. 이 튜토리얼을 통해 독자분들은 LLM 모델을 활용한 텍스트 분류 task에 대한 기본적인 이해를 얻었기를 바랍니다.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>LLM</category>
  <category>Huggingface</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/LLM_classification.html</guid>
  <pubDate>Sat, 01 Mar 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>파이썬으로 Epitope binning 하기</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/python_Epitope_binning.html</link>
  <description><![CDATA[ 





<p>치료용 단클론 항체(mAbs)는 바이오의약품 시장의 70% 이상을 차지하며 지속적으로 성장하고 있습니다. 항체 개발 초기 단계에서 치료제 및 진단 도구로 사용하기 위해 적절한 특성을 가진 후보를 선별하는 것이 중요합니다. 에피토프 빈닝은 mAbs가 표적 단백질(항원)에 결합하는 특성을 파악하는 방법입니다. 이 과정에서 동일한 표적 단백질에 특이적인 mAbs를 쌍으로 테스트하여 항원의 특정 부위에 대한 결합을 서로 차단하는지 여부를 평가합니다. 같은 에피토프에 대한 결합을 차단하는 mAbs는 함께 “빈”으로 분류됩니다. 같은 빈에 속한 mAbs는 종종 유사한 기능을 하므로 에피토프 빈을 통해 후보 항체의 다양성을 확인 할 수 있습니다. 에피토프 다양성은 지적 재산권 보호를 확대하는 데도 중요합니다. 예를 들면 항체들이 같은 항원에 결합하더라도 작용 메커니즘이 다를 수 있는데 이는 일부 암과 감염성 질환 치료에 중요하기 때문입니다.</p>
<blockquote class="blockquote">
<p>에피토프 빈닝은 에피토프 매핑과 혼동해서는 안 됩니다. 에피토프 매핑에서는 항원의 개별 단편에 대한 항체 결합을 테스트하여 항체가 결합하는 항원의 특정 에피토프를 정의합니다.</p>
</blockquote>
<p>SPR을 이용한 에피토프 빈닝의 주요 장점은 항원과 소량의 정제된 항체만 있으면 테스트할 수 있다는 것입니다. SPR을 통한 에피토프 비닝의 원리를 간략하게 설명하면 다음과 같습니다. 첫번째 항체를 고정시켜 놓고 항원과 두번째 항체를 넣어서 RU값을 측정하는데, 에피토프가 겹치지 않는 경우에 RU 값이 높게 측정됩니다. 즉, 에피토프가 비슷한 경우는 RU 값이 낮게 측정되는 것입니다. 이제 SPR을 통해 얻은 epitope binning 데이터를 파이썬으로 분석해서 어떤 항체 커뮤니티가 있는지 식별해보도록 하겠습니다.</p>
<section id="데이터-준비" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 데이터 준비</h1>
<p><a href="https://doi.org/10.1093/abt/tbaa016">Tom Z Yuan et al</a>에서 공개한 데이터를 가지고 시작해보겠습니다.</p>
<div id="cell-2" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 불러오기(원본 데이터는 wide 형태의 데이터 입니다.)</span></span>
<span id="cb1-4">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/input/EpitopeBinning.csv"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># wide데이터를 tidy 형태로 변환</span></span>
<span id="cb1-7">tidy_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.reset_index().melt(id_vars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mAb ID"</span>, var_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Antigen"</span>, value_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binding Value"</span>)</span>
<span id="cb1-8">tidy_df.columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First_ab"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Second_ab"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binding"</span>]</span>
<span id="cb1-9">tidy_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tidy_df.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First_ab"</span>).sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binding"</span>, ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환한 데이터 저장하기</span></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 히트맵을 그리기 위해 다시 wide로 만들기</span></span>
<span id="cb1-13">wide_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tidy_df.pivot_table(</span>
<span id="cb1-14">    index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First_ab"</span>,</span>
<span id="cb1-15">    columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Second_ab"</span>,</span>
<span id="cb1-16">    values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binding"</span>,</span>
<span id="cb1-17">    aggfunc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>,</span>
<span id="cb1-18">)</span>
<span id="cb1-19">wide_data.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Second_ab</th>
<th data-quarto-table-cell-role="th">ADI-15734</th>
<th data-quarto-table-cell-role="th">ADI-15741</th>
<th data-quarto-table-cell-role="th">ADI-15742</th>
<th data-quarto-table-cell-role="th">ADI-15743</th>
<th data-quarto-table-cell-role="th">ADI-15751</th>
<th data-quarto-table-cell-role="th">ADI-15757</th>
<th data-quarto-table-cell-role="th">ADI-15767</th>
<th data-quarto-table-cell-role="th">ADI-15776</th>
<th data-quarto-table-cell-role="th">ADI-15779</th>
<th data-quarto-table-cell-role="th">ADI-15782</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">ADI-16003</th>
<th data-quarto-table-cell-role="th">ADI-16017</th>
<th data-quarto-table-cell-role="th">ADI-16025</th>
<th data-quarto-table-cell-role="th">ADI-16031</th>
<th data-quarto-table-cell-role="th">ADI-16032</th>
<th data-quarto-table-cell-role="th">ADI-16047</th>
<th data-quarto-table-cell-role="th">ADI-16050</th>
<th data-quarto-table-cell-role="th">FVM09</th>
<th data-quarto-table-cell-role="th">KZ52</th>
<th data-quarto-table-cell-role="th">mab100</th>
</tr>
<tr class="even">
<th data-quarto-table-cell-role="th">First_ab</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">ADI-15734</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>1.0</td>
<td>0.0</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>...</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>3.0</td>
<td>1.0</td>
<td>1.0</td>
<td>1.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ADI-15741</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>...</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>2.0</td>
<td>0.0</td>
<td>1.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ADI-15742</td>
<td>1.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>1.0</td>
<td>0.0</td>
<td>3.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>...</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>3.0</td>
<td>0.0</td>
<td>1.0</td>
<td>2.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ADI-15743</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
<td>1.0</td>
<td>2.0</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>...</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>0.0</td>
<td>2.0</td>
<td>0.0</td>
<td>1.0</td>
<td>0.0</td>
<td>0.0</td>
<td>0.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ADI-15751</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>2.0</td>
<td>0.0</td>
<td>1.0</td>
<td>2.0</td>
<td>2.0</td>
<td>1.0</td>
<td>1.0</td>
<td>...</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>2.0</td>
<td>1.0</td>
<td>1.0</td>
</tr>
</tbody>
</table>

<p>5 rows × 54 columns</p>
</div>
</div>
</div>
<div id="cell-3" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">tidy_df.describe()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Binding</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">count</td>
<td>2563.000000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">mean</td>
<td>1.304331</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">std</td>
<td>0.870324</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">min</td>
<td>0.000000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">25%</td>
<td>1.000000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">50%</td>
<td>1.000000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">75%</td>
<td>2.000000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">max</td>
<td>6.000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>위의 결과를 통해 데이터의 형태를 파악할 수 있습니다. 총 2563개가 있고 최대값과 최소값을 보아하니 실제 실험 값이 아닌 일종의 후처리가된 값으로 구성되어 있음을 알 수 있습니다.</p>
</section>
<section id="시각화" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 시각화</h1>
<section id="히트맵" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="히트맵"><span class="header-section-number">2.1</span> 히트맵</h2>
<p>히트맵은 차단, 비차단 및 불확실한 항체 쌍에 대한 빠른 개요를 제공합니다. 이를 통해 히트맵 내 데이터를 간편하게 검사할 수 있으며 다음과 같은 이점을 제공합니다:</p>
<ol type="1">
<li>직관적 이해: 복잡한 데이터를 색상 코드로 표현하여 한눈에 파악할 수 있습니다.</li>
<li>패턴 식별: 대량의 데이터에서 패턴이나 트렌드를 쉽게 발견할 수 있습니다.</li>
<li>유연한 분석: 컷오프 값을 조정함으로써 다양한 조건에서 데이터를 분석할 수 있습니다.</li>
<li>효율적인 데이터 해석: 많은 양의 정보를 압축된 형태로 표현하여 빠른 의사결정을 돕습니다.</li>
</ol>
<div id="cell-5" class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.colors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mcolors</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Nord Aurora 색상</span></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A3BE8C: Nord8 (녹색)</span></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># EBCB8B: Nord9 (노란색)</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># BF616A: Nord11 (빨간색)</span></span>
<span id="cb3-10">aurora_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#BF616A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EBCB8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A3BE8C"</span>]</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용자 정의 색상 맵 생성</span></span>
<span id="cb3-13">cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.color_palette(aurora_colors)</span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 마스크 생성: NaN은 True, 나머지는 False</span></span>
<span id="cb3-16">mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.isnan(wide_data)</span>
<span id="cb3-17"></span>
<span id="cb3-18">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb3-19">sns.heatmap(</span>
<span id="cb3-20">    df,</span>
<span id="cb3-21">    cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cmap,</span>
<span id="cb3-22">    annot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb3-23">    linewidths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb3-24">    mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mask,</span>
<span id="cb3-25">    vmin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최소값을 0으로 설정</span></span>
<span id="cb3-26">    vmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최대값을 1로 설정 (필요에 따라 조정)</span></span>
<span id="cb3-27">    center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 중간값을 0.5로 설정</span></span>
<span id="cb3-28">    cbar_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>},</span>
<span id="cb3-29">    cbar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb3-30">    square<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb3-31">)</span>
<span id="cb3-32"></span>
<span id="cb3-33">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-34">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-35">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-36">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Epitope_binning_files/figure-html/cell-4-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Epitope_binning_files/figure-html/cell-4-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>위 히트맵 결과를 통해 크게 4개의 클러스터가 존재하고 있다는 것을 쉽게 유추할 수 있습니다.</p>
</section>
<section id="knn-클러스터링-및-네트워크-시각화" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="knn-클러스터링-및-네트워크-시각화"><span class="header-section-number">2.2</span> KNN 클러스터링 및 네트워크 시각화</h2>
<p>K-Nearest Neighbors (KNN) 클러스터링은 에피토프 빈닝 데이터를 분석하고 시각화하는 데 유용한 방법으로 히트맵보다 더 명료한 결과를 보여줍니다.</p>
<div id="cell-7" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.colors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mcolors</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> networkx <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nx</span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> adjustText <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> adjust_text</span>
<span id="cb4-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.cluster <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KMeans</span>
<span id="cb4-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 로드</span></span>
<span id="cb4-9">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tidy_df.reset_index()</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NaN 값을 포함한 행 제거 및 First_ab와 Second_ab가 동일한 행 제거</span></span>
<span id="cb4-12">data_clean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.dropna().query(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First_ab != Second_ab"</span>)</span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 방향성 그래프 생성</span></span>
<span id="cb4-15">G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.DiGraph()</span>
<span id="cb4-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _, row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> data_clean.iterrows():</span>
<span id="cb4-17">    G.add_edge(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First_ab"</span>], row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Second_ab"</span>], weight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binding"</span>])</span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 인접 행렬 생성</span></span>
<span id="cb4-20">adj_matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.to_numpy_array(G)</span>
<span id="cb4-21"></span>
<span id="cb4-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 특성 스케일링</span></span>
<span id="cb4-23">scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StandardScaler()</span>
<span id="cb4-24">adj_matrix_scaled <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.fit_transform(adj_matrix)</span>
<span id="cb4-25"></span>
<span id="cb4-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># KMeans 클러스터링</span></span>
<span id="cb4-27">n_clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 클러스터 수 고정</span></span>
<span id="cb4-28">kmeans <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> KMeans(n_clusters<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_clusters, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">420</span>)</span>
<span id="cb4-29">cluster_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kmeans.fit_predict(adj_matrix_scaled)</span>
<span id="cb4-30"></span>
<span id="cb4-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 클러스터 정보 저장</span></span>
<span id="cb4-32">partition <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(G.nodes(), cluster_labels))</span>
<span id="cb4-33"></span>
<span id="cb4-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 클러스터 중심 계산</span></span>
<span id="cb4-35">cluster_centers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kmeans.cluster_centers_</span>
<span id="cb4-36"></span>
<span id="cb4-37"></span>
<span id="cb4-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 노드 위치 조정 함수</span></span>
<span id="cb4-39"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> adjust_positions(pos, partition, cluster_centers):</span>
<span id="cb4-40">    new_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb4-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> node, position <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pos.items():</span>
<span id="cb4-42">        cluster <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> partition[node]</span>
<span id="cb4-43">        center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cluster_centers[cluster][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2D 좌표만 사용</span></span>
<span id="cb4-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 노드를 클러스터 중심 방향으로 이동</span></span>
<span id="cb4-45">        new_pos[node] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span></span>
<span id="cb4-46">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> new_pos</span>
<span id="cb4-47"></span>
<span id="cb4-48"></span>
<span id="cb4-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 시각화</span></span>
<span id="cb4-50">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그림 크기를 더 크게 조정</span></span>
<span id="cb4-51">pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx.spring_layout(G, k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, iterations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb4-52">pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> adjust_positions(pos, partition, cluster_centers)</span>
<span id="cb4-53"></span>
<span id="cb4-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 노드 색상 설정</span></span>
<span id="cb4-55">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [partition[node] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> node <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> G.nodes()]</span>
<span id="cb4-56"></span>
<span id="cb4-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Nord Aurora 색상 정의</span></span>
<span id="cb4-58">aurora_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A3BE8C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EBCB8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#D08770"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#BF616A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#B48EAD"</span>]</span>
<span id="cb4-59"></span>
<span id="cb4-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Aurora 색상으로 ColorMap 생성</span></span>
<span id="cb4-61">aurora_cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mcolors.ListedColormap(aurora_colors)</span>
<span id="cb4-62"></span>
<span id="cb4-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 노드 그리기</span></span>
<span id="cb4-64">nx.draw_networkx_nodes(G, pos, node_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors, node_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>aurora_cmap)</span>
<span id="cb4-65"></span>
<span id="cb4-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 엣지 그리기 (방향성과 가중치 반영)</span></span>
<span id="cb4-67">edge_weights <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [G[u][v][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weight"</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> u, v <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> G.edges()]</span>
<span id="cb4-68">max_weight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(edge_weights)</span>
<span id="cb4-69">edge_widths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> max_weight) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> w <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> edge_weights]</span>
<span id="cb4-70"></span>
<span id="cb4-71">nx.draw_networkx_edges(</span>
<span id="cb4-72">    G,</span>
<span id="cb4-73">    pos,</span>
<span id="cb4-74">    alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb4-75">    edge_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgray"</span>,</span>
<span id="cb4-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># width=edge_widths,</span></span>
<span id="cb4-77">    arrows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb4-78">    arrowsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb4-79">)</span>
<span id="cb4-80"></span>
<span id="cb4-81"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 라벨 위치 조정을 위한 준비</span></span>
<span id="cb4-82">texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-83"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> node, (x, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pos.items():</span>
<span id="cb4-84">    texts.append(plt.text(x, y, node, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>))</span>
<span id="cb4-85"></span>
<span id="cb4-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 라벨 위치 자동 조정</span></span>
<span id="cb4-87">adjust_text(texts, arrowprops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"arrowstyle"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lw"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>})</span>
<span id="cb4-88"></span>
<span id="cb4-89">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Directed Graph with Weighted Edges"</span>)</span>
<span id="cb4-90">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb4-91">plt.tight_layout()</span>
<span id="cb4-92">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_Epitope_binning_files/figure-html/cell-5-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_Epitope_binning_files/figure-html/cell-5-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>위의 결과를 통해 총 4개의 항체의 클러스터를 확인 할 수 있었고 히트맵 결과와 유사함이 확인되었습니다.</p>
</section>
</section>
<section id="마치며" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 마치며</h1>
<p>에피토프 빈닝은 항체의 결합 특성을 파악하고 다양한 에피토프를 표적으로 하는 항체를 선별할 수 있습니다. 히트맵과 KNN 클러스터링 등의 시각화 방법으로 항체 패널의 다양성을 확인하고 가장 유망한 후보를 선별하는 데 도움을 줍니다.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>Visualization</category>
  <category>Epitope binning</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/python_Epitope_binning.html</guid>
  <pubDate>Sun, 23 Feb 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>AKTA 크로마토그램(chromatogram) 시각화</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/python_AKTA_plot.html</link>
  <description><![CDATA[ 





<p>AKTA 시스템은 단백질 정제 과정에서 널리 사용되는 크로마토그래피 시스템입니다. 과거에는 GE healthcare에서 현재는 Cytiva사에서 판매되고 있으며 자체 소프트웨어 UNICORN를 제공합니다. 여기서는 UNICORN에서 추출한 스프레드 시트 데이터를 사용해 크로마토그래피 그래프를 생성하는 방법을 알아보겠습니다. 데이터 처리부터 시각화까지 단계별로 파이썬을 사용하였습니다.</p>
<div id="cell-2" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-5"></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> read_and_preprocess_data(file_path: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pd.DataFrame:</span>
<span id="cb1-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""엑셀 파일을 읽고 전처리하는 함수"""</span></span>
<span id="cb1-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 엑셀 파일 읽기 (상위 2행 스킵)</span></span>
<span id="cb1-10">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_excel(file_path, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, skiprows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb1-11"></span>
<span id="cb1-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 컬럼 이름 변경</span></span>
<span id="cb1-13">    new_columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb1-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml"</span>,</span>
<span id="cb1-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mAU"</span>,</span>
<span id="cb1-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_1"</span>,</span>
<span id="cb1-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mS_cm"</span>,</span>
<span id="cb1-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_2"</span>,</span>
<span id="cb1-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"percent"</span>,</span>
<span id="cb1-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_3"</span>,</span>
<span id="cb1-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%B"</span>,</span>
<span id="cb1-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_4"</span>,</span>
<span id="cb1-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pH"</span>,</span>
<span id="cb1-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_5"</span>,</span>
<span id="cb1-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MPa"</span>,</span>
<span id="cb1-26">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_6"</span>,</span>
<span id="cb1-27">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_min"</span>,</span>
<span id="cb1-28">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_7"</span>,</span>
<span id="cb1-29">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temperature_C"</span>,</span>
<span id="cb1-30">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_8"</span>,</span>
<span id="cb1-31">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frac"</span>,</span>
<span id="cb1-32">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_9"</span>,</span>
<span id="cb1-33">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Injections"</span>,</span>
<span id="cb1-34">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_10"</span>,</span>
<span id="cb1-35">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set_Marks"</span>,</span>
<span id="cb1-36">    ]</span>
<span id="cb1-37">    df.columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_columns</span>
<span id="cb1-38"></span>
<span id="cb1-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># %B 값 수정</span></span>
<span id="cb1-40">    elution_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set_Marks"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Block Isocratic_Elution"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_10"</span>].values[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb1-41">    df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%B"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> elution_start <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-42"></span>
<span id="cb1-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df</span>
<span id="cb1-44"></span>
<span id="cb1-45"></span>
<span id="cb1-46"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> setup_plot() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>[plt.Figure, plt.Axes]:</span>
<span id="cb1-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""플롯 초기 설정"""</span></span>
<span id="cb1-48">    fig, ax_main <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb1-49">    plt.subplots_adjust(top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.85</span>)</span>
<span id="cb1-50">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> fig, ax_main</span>
<span id="cb1-51"></span>
<span id="cb1-52"></span>
<span id="cb1-53"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_mau(ax: plt.Axes, df: pd.DataFrame) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb1-54">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""mAU 데이터 플로팅"""</span></span>
<span id="cb1-55">    ax.plot(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml"</span>], df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mAU"</span>], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mAU"</span>)</span>
<span id="cb1-56">    ax.fill_between(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml"</span>], df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mAU"</span>], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb1-57">    ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml"</span>)</span>
<span id="cb1-58">    ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mAU"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb1-59">    ax.set_ylim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2500</span>)</span>
<span id="cb1-60">    ax.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>, labelcolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb1-61"></span>
<span id="cb1-62"></span>
<span id="cb1-63"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_b_percentage(ax: plt.Axes, df: pd.DataFrame) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> plt.Axes:</span>
<span id="cb1-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""%B 데이터 플로팅"""</span></span>
<span id="cb1-65">    ax_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.twinx()</span>
<span id="cb1-66">    ax_b.plot(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml"</span>], df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%B"</span>], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%B"</span>)</span>
<span id="cb1-67">    ax_b.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%B"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb1-68">    ax_b.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>, labelcolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb1-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ax_b</span>
<span id="cb1-70"></span>
<span id="cb1-71"></span>
<span id="cb1-72"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_ph(ax: plt.Axes, df: pd.DataFrame) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> plt.Axes:</span>
<span id="cb1-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""pH 데이터 플로팅"""</span></span>
<span id="cb1-74">    ax_ph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.twinx()</span>
<span id="cb1-75">    ax_ph.plot(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_4"</span>], df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pH"</span>], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pH"</span>)</span>
<span id="cb1-76">    ax_ph.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pH"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>)</span>
<span id="cb1-77">    ax_ph.set_ylim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-78">    ax_ph.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>, labelcolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>)</span>
<span id="cb1-79">    ax_ph.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>].set_position((<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"outward"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>))</span>
<span id="cb1-80">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ax_ph</span>
<span id="cb1-81"></span>
<span id="cb1-82"></span>
<span id="cb1-83"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_fraction_lines(ax: plt.Axes, df: pd.DataFrame) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb1-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""분획 정보 표시"""</span></span>
<span id="cb1-85">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _, row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df.iterrows():</span>
<span id="cb1-86">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pd.notna(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frac"</span>]):</span>
<span id="cb1-87">            ax.axvline(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_8"</span>], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray"</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb1-88">            ax.text(</span>
<span id="cb1-89">                row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ml_8"</span>],</span>
<span id="cb1-90">                ax.get_ylim()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb1-91">                row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frac"</span>],</span>
<span id="cb1-92">                rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>,</span>
<span id="cb1-93">                va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,</span>
<span id="cb1-94">                ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>,</span>
<span id="cb1-95">            )</span>
<span id="cb1-96"></span>
<span id="cb1-97"></span>
<span id="cb1-98"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_combined_legend(axes: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[plt.Axes]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb1-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""모든 축의 범례 통합"""</span></span>
<span id="cb1-100">    lines, labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [], []</span>
<span id="cb1-101">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ax <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> axes:</span>
<span id="cb1-102">        ax_lines, ax_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.get_legend_handles_labels()</span>
<span id="cb1-103">        lines.extend(ax_lines)</span>
<span id="cb1-104">        labels.extend(ax_labels)</span>
<span id="cb1-105">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].legend(lines, labels, loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upper left"</span>)</span>
<span id="cb1-106"></span>
<span id="cb1-107"></span>
<span id="cb1-108"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> process_and_plot_file(file_path: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb1-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""단일 파일 처리 및 플로팅"""</span></span>
<span id="cb1-110">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Processing file: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>os<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>basename(file_path)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-111"></span>
<span id="cb1-112">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> read_and_preprocess_data(file_path)</span>
<span id="cb1-113">    fig, ax_main <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> setup_plot()</span>
<span id="cb1-114"></span>
<span id="cb1-115">    plot_mau(ax_main, df)</span>
<span id="cb1-116">    ax_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_b_percentage(ax_main, df)</span>
<span id="cb1-117">    ax_ph <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_ph(ax_main, df)</span>
<span id="cb1-118">    add_fraction_lines(ax_main, df)</span>
<span id="cb1-119">    add_combined_legend([ax_main, ax_b, ax_ph])</span>
<span id="cb1-120"></span>
<span id="cb1-121">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>os<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>basename(file_path)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Plot"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.01</span>)</span>
<span id="cb1-122">    ax_main.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb1-123">    plt.tight_layout()</span>
<span id="cb1-124">    plt.show()</span>
<span id="cb1-125"></span>
<span id="cb1-126"></span>
<span id="cb1-127"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> process_folder(folder_path: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb1-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""폴더 내 모든 .xls 파일 처리"""</span></span>
<span id="cb1-129">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> filename <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> os.listdir(folder_path):</span>
<span id="cb1-130">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> filename.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".xls"</span>):</span>
<span id="cb1-131">            file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(folder_path, filename)</span>
<span id="cb1-132">            process_and_plot_file(file_path)</span></code></pre></div>
</div>
<section id="데이터-살펴보기" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 데이터 살펴보기</h1>
<p>UNICORN 소프트웨어에서 실험 데이터를 엑셀 파일로 저장할 수 있고 일반적으로 다음과 같은 구조를 가집니다:</p>
<ul>
<li>헤더 정보: 실험 조건, 날짜, 시간 등</li>
<li>컬럼 헤더: 각 데이터 열의 이름과 단위</li>
<li>데이터 행: 시간에 따른 다양한 측정값</li>
</ul>
<p>데이터 테이블을 출력해 확인해 봅니다.</p>
<div id="cell-4" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_excel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/input/AKTA_run_1.xls"</span>, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, skiprows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb2-2">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="25">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">ml</th>
<th data-quarto-table-cell-role="th">mAU</th>
<th data-quarto-table-cell-role="th">ml.1</th>
<th data-quarto-table-cell-role="th">mS/cm</th>
<th data-quarto-table-cell-role="th">ml.2</th>
<th data-quarto-table-cell-role="th">%</th>
<th data-quarto-table-cell-role="th">ml.3</th>
<th data-quarto-table-cell-role="th">%B</th>
<th data-quarto-table-cell-role="th">ml.4</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">ml.6</th>
<th data-quarto-table-cell-role="th">ml/min</th>
<th data-quarto-table-cell-role="th">ml.7</th>
<th data-quarto-table-cell-role="th">°C</th>
<th data-quarto-table-cell-role="th">ml.8</th>
<th data-quarto-table-cell-role="th">(Fractions)</th>
<th data-quarto-table-cell-role="th">ml.9</th>
<th data-quarto-table-cell-role="th">(Injections)</th>
<th data-quarto-table-cell-role="th">ml.10</th>
<th data-quarto-table-cell-role="th">(Set Marks)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>0.000000</td>
<td>-0.099</td>
<td>0.000000</td>
<td>14.197</td>
<td>0.000000</td>
<td>14.2</td>
<td>0.000000</td>
<td>0.0</td>
<td>0.000000</td>
<td>6.86</td>
<td>...</td>
<td>0.000000</td>
<td>14.98</td>
<td>0.000000</td>
<td>26.3</td>
<td>-0.3</td>
<td>A1</td>
<td>0.0</td>
<td>3.0</td>
<td>-12.47</td>
<td>Method Run 11/21/2024, 2:05:53 PM Korea Standa...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0.095014</td>
<td>-0.091</td>
<td>0.095257</td>
<td>14.198</td>
<td>0.190336</td>
<td>14.2</td>
<td>0.190336</td>
<td>0.0</td>
<td>0.095257</td>
<td>6.86</td>
<td>...</td>
<td>0.095257</td>
<td>14.50</td>
<td>0.381111</td>
<td>26.3</td>
<td>9.7</td>
<td>A2</td>
<td>NaN</td>
<td>NaN</td>
<td>-12.47</td>
<td>Batch ID: 14DB55F2-E6A8-4734-8806-041C9AA49E11</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>0.190028</td>
<td>-0.081</td>
<td>0.190514</td>
<td>14.199</td>
<td>0.380673</td>
<td>14.2</td>
<td>0.380673</td>
<td>0.0</td>
<td>0.190514</td>
<td>6.87</td>
<td>...</td>
<td>0.190514</td>
<td>13.54</td>
<td>0.762222</td>
<td>26.3</td>
<td>19.7</td>
<td>A3</td>
<td>NaN</td>
<td>NaN</td>
<td>-12.47</td>
<td>Base CV, 0.40 {ml}</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>0.285042</td>
<td>-0.074</td>
<td>0.285772</td>
<td>14.203</td>
<td>0.571009</td>
<td>14.2</td>
<td>0.571009</td>
<td>0.0</td>
<td>0.285772</td>
<td>6.87</td>
<td>...</td>
<td>0.285772</td>
<td>8.78</td>
<td>1.143333</td>
<td>26.2</td>
<td>29.7</td>
<td>A4</td>
<td>NaN</td>
<td>NaN</td>
<td>-12.47</td>
<td>Block Start_with_PumpWash_Purifier</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>0.380056</td>
<td>-0.067</td>
<td>0.381029</td>
<td>14.204</td>
<td>0.761346</td>
<td>14.2</td>
<td>0.761346</td>
<td>0.0</td>
<td>0.381029</td>
<td>6.87</td>
<td>...</td>
<td>0.381029</td>
<td>8.00</td>
<td>1.524444</td>
<td>26.2</td>
<td>39.7</td>
<td>A5</td>
<td>NaN</td>
<td>NaN</td>
<td>-12.47</td>
<td>Base SameAsMain</td>
</tr>
</tbody>
</table>

<p>5 rows × 22 columns</p>
</div>
</div>
</div>
<section id="주요-데이터-열-확인하기" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="주요-데이터-열-확인하기"><span class="header-section-number">1.1</span> 주요 데이터 열 확인하기</h2>
<p>파일에서 흔히 볼 수 있는 주요 데이터 열은 다음과 같습니다:</p>
<ul>
<li>ml (Volume): 용출 부피</li>
<li>mAU (UV Absorbance): 자외선 흡광도</li>
<li>mS/cm (Conductivity): 전도도</li>
<li>%B (Buffer B Concentration): 버퍼 B의 농도 비율</li>
<li>pH: pH 값</li>
<li>MPa (Pressure): 시스템 압력</li>
<li>°C (Temperature): 온도</li>
<li>Fractions: 분획 번호</li>
</ul>
</section>
</section>
<section id="시각화-하기" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 시각화 하기</h1>
<div id="cell-6" class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 여기에 폴더 경로를 입력하세요.</span></span>
<span id="cb3-2">folder_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/input"</span></span>
<span id="cb3-3">process_folder(folder_path)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Processing file: AKTA_run_2.xls</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_AKTA_plot_files/figure-html/cell-4-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_AKTA_plot_files/figure-html/cell-4-output-2.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Processing file: AKTA_run_3.xls</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_AKTA_plot_files/figure-html/cell-4-output-4.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_AKTA_plot_files/figure-html/cell-4-output-4.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Processing file: AKTA_run_1.xls</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_AKTA_plot_files/figure-html/cell-4-output-6.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_AKTA_plot_files/figure-html/cell-4-output-6.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Processing file: AKTA_run_4.xls</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="python_AKTA_plot_files/figure-html/cell-4-output-8.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4"><img src="https://tomorrow-lab.github.io/posts/ipynb/python_AKTA_plot_files/figure-html/cell-4-output-8.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>생성된 그래프를 통해 다음과 같은 정보를 얻을 수 있습니다:</p>
<ul>
<li>mAU 값의 변화: 단백질 농도 변화 추적</li>
<li>%B 값의 변화: 버퍼 농도 변화 확인</li>
<li>pH 변화: 용출 조건 모니터링</li>
<li>분획 정보: 각 분획의 위치 확인</li>
</ul>
</section>
<section id="결론" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 결론</h1>
<p>이 방법을 통해 AKTA 데이터를 효과적으로 시각화할 수 있으며 이는 단백질 정제 과정의 최적화와 결과 해석에 큰 도움이 될 것입니다.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>Visualization</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/python_AKTA_plot.html</guid>
  <pubDate>Fri, 14 Feb 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>실습으로 배우는 대규모 언어 모델</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM.html</link>
  <description><![CDATA[ 





<p>최근 출간된 책 Hands-On Large Language Models (Jay Alammar, Maarten Grootendorst 저, 2024)을 읽고 그 내용을 정리해보려고 합니다. 이 책은 급속도로 발전하고 있는 대규모 언어 모델(Large Language Models, LLMs)의 이론을 쉽게 풀어내며 동시에 실습을 통해 독자들이 직접 경험할 수 있도록 구성했습니다. LLM의 전반적인 내용을 다루고 있어 AI와 자연어 처리에 관심 있는 분들에게 훌륭한 가이드가 될 것 같습니다. 이번 포스팅에서는 이 책의 내용 중 쓸만한 코드와 짧은 설명을 공유하려고 합니다.</p>
<section id="대규모-언어-모델의-이해" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 대규모 언어 모델의 이해</h1>
<section id="tokens-and-embedding" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="tokens-and-embedding"><span class="header-section-number">1.1</span> Tokens and Embedding</h2>
<p>토크나이저는 어떻게 텍스트를 자르는가? 3가지 중요 팩터: 1. 어휘 크기 (Vocabulary size) 2. 미등록 단어 (Out-of-vocabulary words) 처리 3. 언어의 특성 (Language characteristics)</p>
<p>토크나이저 분류</p>
<ol type="1">
<li>Word token: 공백이나 구두점을 기준으로 단어 단위로 분리</li>
<li>Subword token: 자주 사용되는 단어는 그대로 두고, 드문 단어는 더 작은 단위로 분리 (예: WordPiece, BPE)</li>
<li>Character token: 개별 문자 단위로 분리</li>
<li>Byte token: 바이트 단위로 분리, 모든 언어와 특수 문자 처리 가능</li>
</ol>
</section>
<section id="inside-of-llm" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="inside-of-llm"><span class="header-section-number">1.2</span> Inside of LLM</h2>
<p>LLM은 3개의 컴포넌트로 구성:</p>
<ul>
<li>Tokenizer: 입력 텍스트를 토큰으로 변환</li>
<li>Transformer: 토큰을 처리하고 문맥을 이해하는 핵심 아키텍처</li>
<li>LM head: Transformer의 출력을 받아 다음 토큰을 예측하는 층</li>
</ul>
<section id="최근-트랜스포머-블록의-발전" class="level3" data-number="1.2.1">
<h3 data-number="1.2.1" class="anchored" data-anchor-id="최근-트랜스포머-블록의-발전"><span class="header-section-number">1.2.1</span> 최근 트랜스포머 블록의 발전</h3>
<section id="rope" class="level4" data-number="1.2.1.1">
<h4 data-number="1.2.1.1" class="anchored" data-anchor-id="rope"><span class="header-section-number">1.2.1.1</span> RoPE</h4>
<p>RoPE는 다음과 같은 특징을 가집니다:</p>
<ul>
<li>상대적 위치 정보 인코딩: RoPE는 토큰 간의 상대적 위치 관계를 직접적으로 모델링합니다.</li>
<li>회전 행렬 사용: 위치 정보를 회전 행렬을 통해 인코딩하여 효율적으로 처리합니다.</li>
<li>길이 외삽(extrapolation) 능력: 학습 시 사용된 시퀀스 길이보다 긴 시퀀스에 대해서도 잘 작동합니다.</li>
<li>계산 효율성: 기존 위치 임베딩 방식에 비해 계산 효율성이 높습니다.</li>
<li>성능 향상: 특히 장문 텍스트 처리에서 성능 향상을 보입니다.</li>
</ul>
<p>RoPE는 GPT-3, PaLM, LLaMA 등 최신 대규모 언어 모델에서 널리 사용되고 있으며, 특히 긴 문맥을 다루는 데 효과적입니다.</p>
</section>
</section>
</section>
</section>
<section id="사전-학습된-llm-사용" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 사전 학습된 LLM 사용</h1>
<section id="텍스트-분류" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="텍스트-분류"><span class="header-section-number">2.1</span> 텍스트 분류</h2>
<p>자연어 처리에서 흔히 수행되는 작업 중 하나가 분류입니다. 이 작업의 목표는 입력된 텍스트에 레이블이나 클래스를 할당하도록 모델을 훈련시키는 것입니다. 텍스트 분류는 전 세계적으로 다양한 용도로 활용되고 있습니다. 감성 분석, 의도 파악, 개체 추출, 언어 감지 등이 그 예입니다.</p>
<p>대표적 언어 모델과 생성형 언어 모델이 분류 작업에 미치는 영향은 실로 막대합니다. 이러한 모델들은 텍스트 분류의 정확도와 효율성을 크게 향상시켰으며 더 복잡하고 미묘한 분류 작업을 가능하게 만들었습니다. 특히 사전 학습된 대규모 언어 모델(LLM)의 등장으로 텍스트 분류 작업의 성능이 비약적으로 발전했습니다.</p>
<section id="텍스트-감정-분석-with-representation-model" class="level3" data-number="2.1.1">
<h3 data-number="2.1.1" class="anchored" data-anchor-id="텍스트-감정-분석-with-representation-model"><span class="header-section-number">2.1.1</span> 텍스트 감정 분석 with Representation model</h3>
<p>텍스트 데이터를 가져와 텍스트의 감정 분석을 “cardiffnlp/twitter-roberta-base-sentiment-latest” 모델을 사용해 진행합니다. 이 모델은 RoBERTa 아키텍처를 기반으로 하며, 특히 트위터 데이터로 미세 조정되어 소셜 미디어 텍스트의 감정 분석에 최적화되어 있습니다.</p>
<div id="364a609e" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> classification_report</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers.pipelines.pt_utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KeyDataset</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋 불러오기</span></span>
<span id="cb1-9">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rotten_tomatoes"</span>)</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hugging Face 모델</span></span>
<span id="cb1-12">model_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cardiffnlp/twitter-roberta-base-sentiment-latest"</span></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델을 파이프라인에 로드</span></span>
<span id="cb1-15">pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model_name, tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model_name, top_k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda:0"</span>)</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 추론 실행</span></span>
<span id="cb1-18">y_pred: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> output <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tqdm(pipe(KeyDataset(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>)), total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>])):</span>
<span id="cb1-20">    negative_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score"</span>]</span>
<span id="cb1-21">    positive_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score"</span>]</span>
<span id="cb1-22">    assignment <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax([negative_score, positive_score])</span>
<span id="cb1-23">    y_pred.append(assignment)</span>
<span id="cb1-24"></span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> evaluate_performance(y_true: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], y_pred: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb1-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""분류 보고서 생성 및 출력"""</span></span>
<span id="cb1-28">    performance: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classification_report(y_true, y_pred, target_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"부정적"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"긍정적"</span>])</span>
<span id="cb1-29">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(performance)</span>
<span id="cb1-30"></span>
<span id="cb1-31"></span>
<span id="cb1-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 성능 평가 실행</span></span>
<span id="cb1-33">evaluate_performance(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>], y_pred)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>100%|█████████████████████████| 1066/1066 [00:02&lt;00:00, 459.29it/s]</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>              precision    recall  f1-score   support

         부정적       0.50      1.00      0.67       533
         긍정적       0.00      0.00      0.00       533

    accuracy                           0.50      1066
   macro avg       0.25      0.50      0.33      1066
weighted avg       0.25      0.50      0.33      1066
</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
</div>
</section>
<section id="텍스트-감정-분석-with-generative-model" class="level3" data-number="2.1.2">
<h3 data-number="2.1.2" class="anchored" data-anchor-id="텍스트-감정-분석-with-generative-model"><span class="header-section-number">2.1.2</span> 텍스트 감정 분석 with Generative model</h3>
<p>생성형 모델을 사용한 텍스트 감정 분석은 기존의 분류 기반 접근 방식과는 다른 새로운 패러다임을 제시합니다. 이 방식은 기존 방법보다 더 정확하고 세밀한 결과를 제공할 수 있지만, 모델의 훈련과 계산 비용이 높다는 단점도 있습니다.</p>
<div id="2bf7aab2" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb5-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline</span>
<span id="cb5-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers.pipelines.pt_utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KeyDataset</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 영화 리뷰 데이터셋 로드</span></span>
<span id="cb5-8">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rotten_tomatoes"</span>)</span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hugging Face 모델</span></span>
<span id="cb5-11">model_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"google/flan-t5-small"</span></span>
<span id="cb5-12"></span>
<span id="cb5-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델을 파이프라인에 로드</span></span>
<span id="cb5-14">pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text2text-generation"</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model_name, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda:0"</span>)</span>
<span id="cb5-15"></span>
<span id="cb5-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 준비</span></span>
<span id="cb5-17">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Is the following sentence positive or negative? "</span></span>
<span id="cb5-18">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> example: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t5"</span>: prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>]})</span>
<span id="cb5-19"></span>
<span id="cb5-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 추론 실행</span></span>
<span id="cb5-21">y_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb5-22"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> output <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tqdm(pipe(KeyDataset(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t5"</span>)), total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>])):</span>
<span id="cb5-23">    text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>]</span>
<span id="cb5-24">    y_pred.append(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-25"></span>
<span id="cb5-26"></span>
<span id="cb5-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> evaluate_performance(y_true: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], y_pred: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb5-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""분류 보고서 생성 및 출력"""</span></span>
<span id="cb5-29">    performance: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classification_report(y_true, y_pred, target_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"부정적"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"긍정적"</span>])</span>
<span id="cb5-30">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(performance)</span>
<span id="cb5-31"></span>
<span id="cb5-32"></span>
<span id="cb5-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 성능 평가 실행</span></span>
<span id="cb5-34">evaluate_performance(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>], y_pred)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>100%|█████████████████████████| 1066/1066 [00:08&lt;00:00, 121.39it/s]</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>              precision    recall  f1-score   support

         부정적       0.83      0.85      0.84       533
         긍정적       0.85      0.83      0.84       533

    accuracy                           0.84      1066
   macro avg       0.84      0.84      0.84      1066
weighted avg       0.84      0.84      0.84      1066
</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code></code></pre>
</div>
</div>
</section>
</section>
<section id="텍스트-클러스터링과-토픽-클러스터링" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="텍스트-클러스터링과-토픽-클러스터링"><span class="header-section-number">2.2</span> 텍스트 클러스터링과 토픽 클러스터링</h2>
<p>텍스트 클러스터링과 토픽 모델링은 문서 컬렉션을 분석하는 두 가지 주요 접근 방식입니다. 텍스트 클러스터링은 유사한 문서들을 그룹화하여 컬렉션을 여러 클러스터로 나누는 것을 목표로 합니다. 일반적으로 각 문서는 하나의 클러스터에만 속하게 됩니다. 반면 토픽 모델링은 문서 컬렉션에 내재된 추상적인 ’토픽’들을 발견하는 것을 목표로 합니다.</p>
<section id="bertopic-모듈식-토픽-모델링-프레임워크" class="level3" data-number="2.2.1">
<h3 data-number="2.2.1" class="anchored" data-anchor-id="bertopic-모듈식-토픽-모델링-프레임워크"><span class="header-section-number">2.2.1</span> BERTopic: 모듈식 토픽 모델링 프레임워크</h3>
<p>BERTopic은 최신 자연어 처리 기술을 활용한 강력한 토픽 모델링 프레임워크입니다. BERTopic은 전통적인 토픽 모델링 기법인 LDA에 비해 더 정교한 결과를 제공할 수 있으며, 특히 짧은 텍스트나 특정 도메인의 텍스트에 대해 우수한 성능을 보입니다. 학술 연구, 소셜 미디어 분석, 고객 피드백 분석 등 다양한 분야에서 활용될 수 있으며, 대규모 문서 컬렉션에서 의미 있는 인사이트를 추출하는 데 유용합니다.</p>
<div id="fd0596bb-ba17-4a6c-88e4-66511a5005ac" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb9-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb9-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> umap</span>
<span id="cb9-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb9-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> hdbscan <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> HDBSCAN</span>
<span id="cb9-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformer</span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># huggingface에서 데이터 로드</span></span>
<span id="cb9-9">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"effectiveML/ArXiv-10"</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>]</span>
<span id="cb9-10"></span>
<span id="cb9-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 메타데이터 추출</span></span>
<span id="cb9-12">abstracts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abstract"</span>]</span>
<span id="cb9-13">titles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>]</span>
<span id="cb9-14"></span>
<span id="cb9-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1단계</span></span>
<span id="cb9-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 초록에 대한 임베딩 생성</span></span>
<span id="cb9-17">embedding_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformer(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thenlper/gte-small"</span>)</span>
<span id="cb9-18">embeddings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> embedding_model.encode(abstracts, show_progress_bar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb9-19"></span>
<span id="cb9-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2단계</span></span>
<span id="cb9-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 384차원의 입력 임베딩을 50차원으로 축소</span></span>
<span id="cb9-22">umap_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umap.UMAP(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, min_dist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb9-23">reduced_embeddings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umap_model.fit_transform(embeddings)</span>
<span id="cb9-24"></span>
<span id="cb9-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3단계</span></span>
<span id="cb9-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델을 학습하고 클러스터 추출</span></span>
<span id="cb9-27">hdbscan_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HDBSCAN(</span>
<span id="cb9-28">    min_cluster_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"euclidean"</span>, cluster_selection_method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eom"</span></span>
<span id="cb9-29">).fit(reduced_embeddings)</span>
<span id="cb9-30">clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hdbscan_model.labels_</span>
<span id="cb9-31"></span>
<span id="cb9-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화를 위한 준비: 384차원 임베딩을 2차원으로 축소</span></span>
<span id="cb9-33">reduced_embeddings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> umap.UMAP(</span>
<span id="cb9-34">    n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, min_dist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb9-35">).fit_transform(embeddings)</span>
<span id="cb9-36"></span>
<span id="cb9-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터프레임 생성</span></span>
<span id="cb9-38">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(reduced_embeddings, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>])</span>
<span id="cb9-39">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> titles</span>
<span id="cb9-40">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cluster"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(c) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> clusters]</span>
<span id="cb9-41"></span>
<span id="cb9-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이상치와 비이상치(클러스터) 선택</span></span>
<span id="cb9-43">clusters_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.loc[df.cluster <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-1"</span>, :]</span>
<span id="cb9-44">outliers_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.loc[df.cluster <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-1"</span>, :]</span>
<span id="cb9-45"></span>
<span id="cb9-46"></span>
<span id="cb9-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 플랏 크기 지정</span></span>
<span id="cb9-48">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb9-49">plt.scatter(</span>
<span id="cb9-50">    outliers_df.x,</span>
<span id="cb9-51">    outliers_df.y,</span>
<span id="cb9-52">    alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb9-53">    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb9-54">    c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>,</span>
<span id="cb9-55">)</span>
<span id="cb9-56">plt.scatter(</span>
<span id="cb9-57">    clusters_df.x,</span>
<span id="cb9-58">    clusters_df.y,</span>
<span id="cb9-59">    c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>clusters_df.cluster.astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>),</span>
<span id="cb9-60">    alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>,</span>
<span id="cb9-61">    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb9-62">    cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viridis_r"</span>,</span>
<span id="cb9-63">)</span>
<span id="cb9-64">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb9-65">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"8aa485e3e76f4041a1670e36d388227a","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_HansOnLLM_files/figure-html/cell-7-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM_files/figure-html/cell-7-output-2.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<div id="99c52e97-c17f-4986-8832-e712a8dde976" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> copy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> deepcopy</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb10-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> bertopic <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BERTopic</span>
<span id="cb10-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> bertopic.representation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> TextGeneration</span>
<span id="cb10-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline</span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># BERTopic 모델 훈련</span></span>
<span id="cb10-9">topic_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BERTopic(</span>
<span id="cb10-10">    embedding_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>embedding_model,</span>
<span id="cb10-11">    umap_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>umap_model,</span>
<span id="cb10-12">    hdbscan_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hdbscan_model,</span>
<span id="cb10-13">    verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb10-14">).fit(abstracts, embeddings)</span>
<span id="cb10-15"></span>
<span id="cb10-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원본 표현 저장</span></span>
<span id="cb10-17">original_topics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> deepcopy(topic_model.topic_representations_)</span>
<span id="cb10-18"></span>
<span id="cb10-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Flan-T5를 사용한 토픽 표현 업데이트</span></span>
<span id="cb10-20">generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text2text-generation"</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"google/flan-t5-small"</span>)</span>
<span id="cb10-21"></span>
<span id="cb10-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 프롬프트 정의</span></span>
<span id="cb10-23">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""I have a topic that contains the following documents:</span></span>
<span id="cb10-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[DOCUMENTS]</span></span>
<span id="cb10-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">The topic is described by the following keywords: '[KEYWORDS]'.</span></span>
<span id="cb10-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Based on the documents and keywords, what is this topic about?"""</span></span>
<span id="cb10-27"></span>
<span id="cb10-28">representation_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TextGeneration(</span>
<span id="cb10-29">    generator, prompt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prompt, doc_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whitespace"</span></span>
<span id="cb10-30">)</span>
<span id="cb10-31">topic_model.update_topics(abstracts, representation_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>representation_model)</span>
<span id="cb10-32"></span>
<span id="cb10-33"></span>
<span id="cb10-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토픽 차이 표시 함수</span></span>
<span id="cb10-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> topic_differences(model, original_topics, nr_topics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>):</span>
<span id="cb10-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""두 모델 간의 토픽 표현 차이를 보여줍니다"""</span></span>
<span id="cb10-37">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Topic"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Updated"</span>])</span>
<span id="cb10-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> topic <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(nr_topics):</span>
<span id="cb10-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델별로 토픽당 상위 5개 단어 추출</span></span>
<span id="cb10-40">        og_words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" | "</span>.join(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>original_topics[topic]))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb10-41">        new_words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>.join(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>model.get_topic(topic)))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb10-42">        df.loc[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [topic, og_words, new_words]</span>
<span id="cb10-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df</span>
<span id="cb10-44"></span>
<span id="cb10-45"></span>
<span id="cb10-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토픽 차이 출력</span></span>
<span id="cb10-47"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(topic_differences(topic_model, original_topics))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>2025-01-21 12:04:12,339 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm
2025-01-21 12:05:33,792 - BERTopic - Dimensionality - Completed ✓
2025-01-21 12:05:33,799 - BERTopic - Cluster - Start clustering the reduced embeddings
2025-01-21 12:05:37,721 - BERTopic - Cluster - Completed ✓
2025-01-21 12:05:37,728 - BERTopic - Representation - Extracting topics from clusters using representation models.
2025-01-21 12:05:41,069 - BERTopic - Representation - Completed ✓
100%|████████████████████████████| 205/205 [00:03&lt;00:00, 54.17it/s]</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>   Topic                                           Original  \
0      0                 mathbb | prove | mathcal | we | if   
1      1                      flow | fluid | the | of | and   
2      2  channel | wireless | communication | mimo | pr...   
3      3  quantum | entanglement | states | bell | measu...   
4      4  solar | plasma | magnetic | coronal | reconnec...   

                    Updated  
0                 Maths      
1              dynamics      
2            Networking      
3  Quantum entanglement      
4          Solar-energy      </code></pre>
</div>
</div>
<div id="a7548dcf-4f7a-46a2-84d4-5268d94714c8" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> topic_model.visualize_document_datamap(</span>
<span id="cb13-2">    titles,</span>
<span id="cb13-3">    title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb13-4">    topics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)),</span>
<span id="cb13-5">    reduced_embeddings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>reduced_embeddings,</span>
<span id="cb13-6">    width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 7인치에 해당하는 픽셀 수 (100 픽셀/인치 기준)</span></span>
<span id="cb13-7">    height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 7인치에 해당하는 픽셀 수</span></span>
<span id="cb13-8">    label_font_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 크기 축소</span></span>
<span id="cb13-9">    label_wrap_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 레이블 줄바꿈 너비 축소</span></span>
<span id="cb13-10">    use_medoids<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb13-11">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_HansOnLLM_files/figure-html/cell-9-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM_files/figure-html/cell-9-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="프롬프트-엔지니어링" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="프롬프트-엔지니어링"><span class="header-section-number">2.3</span> 프롬프트 엔지니어링</h2>
<p>생성형 사전 학습 트랜스포머(GPT) 모델은 사용자가 제시한 프롬프트에 대응하여 텍스트를 생성하는 놀라운 능력을 갖추고 있습니다. 프롬프트 엔지니어링을 통해 이러한 프롬프트를 효과적으로 설계함으로써 생성되는 텍스트의 품질을 크게 향상시킬 수 있습니다.</p>
<p>이번에는 이러한 생성형 모델에 대해 더 자세히 살펴보고, 프롬프트 엔지니어링의 세계로 깊이 들어가 보겠습니다. 또한 생성형 모델을 이용한 추론, 검증, 그리고 모델 출력의 평가 방법까지 다루어 볼 것입니다.</p>
<p>프롬프트 엔지니어링은 단순히 질문을 던지는 것을 넘어서, 모델이 원하는 방식으로 응답하도록 유도하는 기술입니다. 이는 모델의 성능을 최적화하고, 특정 작업에 맞춤화된 결과를 얻는 데 핵심적인 역할을 합니다.</p>
<div id="45c9e1ee-edb4-458b-8044-f55b091b5843" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb14-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb14-3">    AutoModelForCausalLM,</span>
<span id="cb14-4">    AutoTokenizer,</span>
<span id="cb14-5">    logging,</span>
<span id="cb14-6">    pipeline,</span>
<span id="cb14-7">)</span>
<span id="cb14-8"></span>
<span id="cb14-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용할 모델 이름 지정</span></span>
<span id="cb14-10">model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"microsoft/Phi-3.5-mini-instruct"</span></span>
<span id="cb14-11"></span>
<span id="cb14-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 로드 및 설정</span></span>
<span id="cb14-13">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForCausalLM.from_pretrained(</span>
<span id="cb14-14">    model_name,</span>
<span id="cb14-15">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPU 사용</span></span>
<span id="cb14-16">    torch_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float16,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 16비트 부동소수점 사용</span></span>
<span id="cb14-17">    trust_remote_code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb14-18">)</span>
<span id="cb14-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저 로드</span></span>
<span id="cb14-20">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_name)</span>
<span id="cb14-21"></span>
<span id="cb14-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 생성 파이프라인 설정</span></span>
<span id="cb14-23">pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(</span>
<span id="cb14-24">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-generation"</span>,</span>
<span id="cb14-25">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 지정</span></span>
<span id="cb14-26">    tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 토크나이저 지정</span></span>
<span id="cb14-27">    return_full_text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전체 텍스트 반환 안 함</span></span>
<span id="cb14-28">    max_new_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최대 새 토큰 수</span></span>
<span id="cb14-29">    do_sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 샘플링 사용 안 함</span></span>
<span id="cb14-30">)</span>
<span id="cb14-31"></span>
<span id="cb14-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 프롬프트 설정</span></span>
<span id="cb14-33">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb14-34">    {</span>
<span id="cb14-35">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb14-36">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"직장동료에게 보내는 이메일의 짧은 인사말 3개만 적어줘."</span>,</span>
<span id="cb14-37">    }</span>
<span id="cb14-38">]</span>
<span id="cb14-39"></span>
<span id="cb14-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출력 생성</span></span>
<span id="cb14-41">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(messages)</span>
<span id="cb14-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 생성된 텍스트 출력</span></span>
<span id="cb14-43"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>`flash-attention` package not found, consider installing for better performance: No module named 'flash_attn'.
Current `flash-attention` does not support `window_size`. Either upgrade or use `attn_implementation='eager'`.</code></pre>
</div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"0f8ef81a8c3a4e7d87938c67a78e69d9","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>You are not running the flash-attention implementation, expect numerical differences.</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code> 제목: 환영 인사드리기

안녕 친구,

안녕하세요! 이 이메일을 보내드리고 직장에 합류하게 되어 기쁩니다. 팀에서 함께 일하고 함께 성장하기를 기대합니다. 행운을 빌어요!

감사합니다,
[당신의 이름]</code></pre>
</div>
</div>
<section id="모델-출력-제어" class="level3" data-number="2.3.1">
<h3 data-number="2.3.1" class="anchored" data-anchor-id="모델-출력-제어"><span class="header-section-number">2.3.1</span> 모델 출력 제어</h3>
<p>모델 매개변수를 조정하여 원하는 종류의 출력을 제어할 수 있습니다. <strong>temperature</strong>와 <strong>top_p</strong> 매개변수는 출력의 무작위성을 제어합니다.</p>
<section id="temperature온도" class="level4" data-number="2.3.1.1">
<h4 data-number="2.3.1.1" class="anchored" data-anchor-id="temperature온도"><span class="header-section-number">2.3.1.1</span> Temperature(온도)</h4>
<p>Temperature는 생성된 텍스트의 무작위성 또는 창의성을 제어합니다. 이는 확률이 낮은 토큰을 선택할 가능성을 정의합니다. 기본 아이디어는 temperature가 0이면 항상 가장 가능성이 높은 단어를 선택하기 때문에 매번 동일한 응답을 생성한다는 것입니다.</p>
</section>
<section id="top_p" class="level4" data-number="2.3.1.2">
<h4 data-number="2.3.1.2" class="anchored" data-anchor-id="top_p"><span class="header-section-number">2.3.1.2</span> top_p</h4>
<p>top_p(핵 샘플링이라고도 함)는 LLM이 고려할 수 있는 토큰의 부분집합(핵)을 제어하는 샘플링 기법입니다. 누적 확률에 도달할 때까지 토큰을 고려합니다. top_p를 0.1로 설정하면 해당 값에 도달할 때까지 토큰을 고려합니다.</p>
<div id="670cdb65-796e-4639-a03b-878698da4168" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using a high temperature</span></span>
<span id="cb18-2">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(messages, do_sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb18-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 제목: 안녕하세요, [동료 이름]

안녕하세요! 저를 잘 기억해주시고, 전문적인 지원과 협력을 이어오시길 바랍니다.

감사드립니다!

[당신의 이름]</code></pre>
</div>
</div>
<div id="fb563e73-d63c-4ef9-bdd5-dd204642a5b5" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using a high top_p</span></span>
<span id="cb20-2">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(messages, do_sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb20-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 제목: 인사 릴렉센

---

1. 빠른 칭호와 행운을 바쳐:
   안녕하세요 [동료 이름],

   이 메시지를 전해드리며, 우리를 부러워하게 만드는 발신인 이 글을 통해 전하고자 합니다. 이 역할에서 네가 저녁부터 아침까지 우수하게 일하고 있다는 증거로 자리매김하는 것을 자랑스럽게 여깁니다.

2. 긍정적인 기여에 감사:
   네가 간략한 지원도 및 공유된 실력에 영향을 미친 프로젝트와 빈틈없는 팀플 작물에 큰 마스터피스를 제공해주셨습니다. 이 회사를 하나의 개인으로부터 더 강력하고 협력적인 집단으로 시간이 지나면서 지속적인 성장을 목격하고 있습니다.

3. 앞으로의 연결:
   이 인사의 마당에 더 나</code></pre>
</div>
</div>
</section>
</section>
<section id="고급-프롬프트-엔지니어링" class="level3" data-number="2.3.2">
<h3 data-number="2.3.2" class="anchored" data-anchor-id="고급-프롬프트-엔지니어링"><span class="header-section-number">2.3.2</span> 고급 프롬프트 엔지니어링</h3>
<p>좋은 프롬프트를 만드는 것은 간단해 보일 수 있습니다. 구체적인 질문을 하고, 정확하게 표현하며, 몇 가지 예시를 추가하면 끝난 것 같죠! 하지만 프롬프트 작성은 매우 빠르게 복잡해질 수 있으며, 그 결과 대규모 언어 모델(LLM)을 활용하는 데 있어 종종 과소평가되는 요소입니다. 여기서는 프롬프트를 구축하기 위한 여러 가지 고급 기법을 살펴보겠습니다.</p>
</section>
<section id="복잡한-프롬프트" class="level3" data-number="2.3.3">
<h3 data-number="2.3.3" class="anchored" data-anchor-id="복잡한-프롬프트"><span class="header-section-number">2.3.3</span> 복잡한 프롬프트</h3>
<p>이 복잡한 프롬프트는 프롬프트 작성의 모듈식 특성을 보여줍니다. 우리는 자유롭게 구성 요소를 추가하거나 제거할 수 있고 출력에 미치는 영향을 판단할 수 있습니다.</p>
<div id="e5ec1a0b-d299-4bdd-b63c-88b1855dacf9" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 프롬프트 구성 요소</span></span>
<span id="cb22-2">persona <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"당신은 인공지능과 기계학습 분야의 전문가입니다. 복잡한 기술 문서를 쉽게 이해할 수 있는 요약으로 만드는 데 탁월합니다.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-3">instruction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"제공된 기술 문서의 핵심 내용을 요약해주세요.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-4">context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"요약은 개발자들이 문서의 가장 중요한 정보를 빠르게 파악할 수 있도록 핵심 포인트를 추출해야 합니다.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-5">data_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"주요 개념과 기술을 설명하는 글머리 기호 요약을 만드세요. 그 다음 주요 내용을 간결하게 요약하는 단락을 작성하세요.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-6">audience <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"이 요약은 최신 AI 개발 동향을 빠르게 파악해야 하는 바쁜 개발자들을 위한 것입니다.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-7">tone <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"전문적이고 명확한 톤을 사용해야 합니다.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-8"></span>
<span id="cb22-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 아래 내용을 원하는 문장으로 변경했습니다.</span></span>
<span id="cb22-10">text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">머신러닝 모델의 성능을 향상시키는 방법 중 하나는 앙상블 학습입니다. 앙상블 학습은 여러 개의 모델을 조합하여 더 나은 예측 결과를 얻는 방법입니다.</span></span>
<span id="cb22-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">주요 앙상블 기법으로는 배깅(Bagging), 부스팅(Boosting), 스태킹(Stacking)이 있습니다.</span></span>
<span id="cb22-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">배깅은 동일한 알고리즘을 사용하지만 서로 다른 학습 데이터 부분집합으로 여러 모델을 학습시키는 방법입니다.</span></span>
<span id="cb22-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">부스팅은 이전 모델의 오류를 보완하는 방향으로 순차적으로 모델을 학습시키는 방법입니다.</span></span>
<span id="cb22-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">스태킹은 여러 모델의 예측 결과를 새로운 모델의 입력으로 사용하여 최종 예측을 수행하는 방법입니다.</span></span>
<span id="cb22-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">이러한 앙상블 기법들은 단일 모델보다 일반적으로 더 높은 성능과 안정성을 제공합니다.</span></span>
<span id="cb22-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb22-18"></span>
<span id="cb22-19">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"요약할 텍스트: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb22-20"></span>
<span id="cb22-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전체 프롬프트 - 생성된 출력에 미치는 영향을 보기 위해 부분을 제거하거나 추가할 수 있습니다</span></span>
<span id="cb22-22">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> persona <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> instruction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> data_format <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> audience <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tone <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> data</span>
<span id="cb22-23"></span>
<span id="cb22-24">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: query}]</span>
<span id="cb22-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tokenizer.apply_chat_template(messages, tokenize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>))</span>
<span id="cb22-26"></span>
<span id="cb22-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출력 생성</span></span>
<span id="cb22-28">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(messages)</span>
<span id="cb22-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;|user|&gt;
당신은 인공지능과 기계학습 분야의 전문가입니다. 복잡한 기술 문서를 쉽게 이해할 수 있는 요약으로 만드는 데 탁월합니다.
제공된 기술 문서의 핵심 내용을 요약해주세요.
요약은 개발자들이 문서의 가장 중요한 정보를 빠르게 파악할 수 있도록 핵심 포인트를 추출해야 합니다.
주요 개념과 기술을 설명하는 글머리 기호 요약을 만드세요. 그 다음 주요 내용을 간결하게 요약하는 단락을 작성하세요.
이 요약은 최신 AI 개발 동향을 빠르게 파악해야 하는 바쁜 개발자들을 위한 것입니다.
전문적이고 명확한 톤을 사용해야 합니다.
요약할 텍스트: 
머신러닝 모델의 성능을 향상시키는 방법 중 하나는 앙상블 학습입니다. 앙상블 학습은 여러 개의 모델을 조합하여 더 나은 예측 결과를 얻는 방법입니다.
주요 앙상블 기법으로는 배깅(Bagging), 부스팅(Boosting), 스태킹(Stacking)이 있습니다.
배깅은 동일한 알고리즘을 사용하지만 서로 다른 학습 데이터 부분집합으로 여러 모델을 학습시키는 방법입니다.
부스팅은 이전 모델의 오류를 보완하는 방향으로 순차적으로 모델을 학습시키는 방법입니다.
스태킹은 여러 모델의 예측 결과를 새로운 모델의 입력으로 사용하여 최종 예측을 수행하는 방법입니다.
이러한 앙상블 기법들은 단일 모델보다 일반적으로 더 높은 성능과 안정성을 제공합니다.
&lt;|end|&gt;
&lt;|endoftext|&gt;
 **요약: 앙상블 학습을 통한 머신러닝 성능 향상**

*글머리기호 요약:*
- 앙상블 학습: 여러 모델의 조합
- 주요 기법: 배깅, 부스팅, 스태킹
- 성능 향상: 일반적으로 더 높고 안정적

*요약 단락:*
앙상블 학습은 머신러닝 모델의 성능을 향상시키기 위해 여러 개의 모델을 조합하는 기술입니다. 주요 앙상블 기법에는 배깅, 부스팅, 스태킹이 포함됩니다.

배깅은 동일한 알고리즘을 사용하면서 서로 다른 학습 데이터 부분집합으로 여러 모델을 학습시키는 방법입니다. 이 방법은 모델의 불필요한 동질성을 줄이고 오류를 완화하여 더 안정적인 예측을 제공합니다.

부스팅은 이전 모</code></pre>
</div>
</div>
</section>
<section id="문맥-내-학습-예시-제공" class="level3" data-number="2.3.4">
<h3 data-number="2.3.4" class="anchored" data-anchor-id="문맥-내-학습-예시-제공"><span class="header-section-number">2.3.4</span> 문맥 내 학습: 예시 제공</h3>
<p>우리는 LLM(대규모 언어 모델)에 우리가 정확히 달성하고자 하는 것의 예시를 제공할 수 있습니다. 이는 종종 문맥 내 학습이라고 불리며, 모델에 정확한 예시를 제공하는 방식입니다.</p>
<div id="9b3b3bf6-1bc6-4596-abb2-f2e71167e906" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 만들어낸 단어를 문장에서 사용하는 단일 예시 활용</span></span>
<span id="cb24-2">one_shot_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb24-3">    {</span>
<span id="cb24-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb24-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"'퀴블녹스'는 자유자재로 크기를 바꿀 수 있는 마법 생물입니다. '퀴블녹스'라는 단어를 사용한 문장의 예시는 다음과 같습니다:"</span>,</span>
<span id="cb24-6">    },</span>
<span id="cb24-7">    {</span>
<span id="cb24-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"assistant"</span>,</span>
<span id="cb24-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"여행을 갈 때 내 애완 퀴블녹스는 쥐만큼 작아져서 주머니에 쉽게 넣고 다닐 수 있어요."</span>,</span>
<span id="cb24-10">    },</span>
<span id="cb24-11">    {</span>
<span id="cb24-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb24-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"'실드치다'는 어처구니 없는 상황이나 인물의 입장을 방어하는 것을 의미합니다. '실드치다'라는 단어를 사용한 문장의 예시는 다음과 같습니다:"</span>,</span>
<span id="cb24-14">    },</span>
<span id="cb24-15">]</span>
<span id="cb24-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tokenizer.apply_chat_template(one_shot_prompt, tokenize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>))</span>
<span id="cb24-17"></span>
<span id="cb24-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출력 생성</span></span>
<span id="cb24-19">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(one_shot_prompt)</span>
<span id="cb24-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;|user|&gt;
'퀴블녹스'는 자유자재로 크기를 바꿀 수 있는 마법 생물입니다. '퀴블녹스'라는 단어를 사용한 문장의 예시는 다음과 같습니다:&lt;|end|&gt;
&lt;|assistant|&gt;
여행을 갈 때 내 애완 퀴블녹스는 쥐만큼 작아져서 주머니에 쉽게 넣고 다닐 수 있어요.&lt;|end|&gt;
&lt;|user|&gt;
'줌블하다'는 비정통적이지만 효과적인 방식으로 문제를 해결하는 것을 의미합니다. '줌블하다'라는 단어를 사용한 문장의 예시는 다음과 같습니다:&lt;|end|&gt;
&lt;|endoftext|&gt;
 올해의 과제를 처리하는 데 어려움을 겪으며, 우리는 줌블하게 새로운 프로세스를 도입하여 효율성을 높이고 성공적으로 마무리했습니다.</code></pre>
</div>
</div>
</section>
<section id="chain-prompting-문제를-나누어-해결하기" class="level3" data-number="2.3.5">
<h3 data-number="2.3.5" class="anchored" data-anchor-id="chain-prompting-문제를-나누어-해결하기"><span class="header-section-number">2.3.5</span> Chain Prompting: 문제를 나누어 해결하기</h3>
<p>문제를 하나의 프롬프트 내에서 해결하는 대신, 여러 프롬프트 사이에서 나누어 해결할 수 있습니다. 본질적으로 이 방법은 한 프롬프트의 출력을 다음 프롬프트의 입력으로 사용하여 문제를 해결하는 연속적인 상호작용 체인을 만드는 것입니다. Chain Prompting은 특히 다단계 추론, 복잡한 분석, 또는 여러 도메인의 지식을 결합해야 하는 작업에서 효과적입니다.</p>
<div id="cbb696bc-ee32-4971-ac48-1359235664e8" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 스마트홈 기기의 이름과 슬로건 생성</span></span>
<span id="cb26-2">product_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"스마트홈 기기의 이름과 슬로건을 만들어주세요."</span>}]</span>
<span id="cb26-3">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(product_prompt)</span>
<span id="cb26-4">product_description <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>]</span>
<span id="cb26-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(product_description)</span>
<span id="cb26-6"></span>
<span id="cb26-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 생성된 제품 이름과 슬로건을 바탕으로 짧은 판매 문구 생성</span></span>
<span id="cb26-8">sales_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb26-9">    {</span>
<span id="cb26-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb26-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"다음 제품에 대한 매우 짧은 판매 문구를 생성해주세요: '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>product_description<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'"</span>,</span>
<span id="cb26-12">    }</span>
<span id="cb26-13">]</span>
<span id="cb26-14">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(sales_prompt)</span>
<span id="cb26-15">sales_pitch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>]</span>
<span id="cb26-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(sales_pitch)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 이름: "SmartHaven"

슬로건: "SmartHaven - 디지털 편안함, 현실 속 편안한 집."

SmartHaven는 스마트홈 기기의 편안함과 효율성을 실현하는 최첨단 기기로, 집의 모든 영역에서 디지털 혁신을 제공합니다. 이 기기는 생활의 질을 향상시키고, 집의 안전성을 강화하며, 사용자의 생활을 효율적이고 편안하게 만듭니다. SmartHaven의 디지털 편안함과 현실 속 편안한 집을 상징하는 슬로건은 이러한 기능을 강조하고, 소비자들이 스마트홈의 풍부한 가치를 느낄 수 있도록 합니다.
 "SmartHaven: 현실 속 편안한 집, 디지털 편안함을 누릴 순간."</code></pre>
</div>
</div>
</section>
<section id="생성형-모델을-이용한-추론" class="level3" data-number="2.3.6">
<h3 data-number="2.3.6" class="anchored" data-anchor-id="생성형-모델을-이용한-추론"><span class="header-section-number">2.3.6</span> 생성형 모델을 이용한 추론</h3>
<p>추론은 인간 지능의 핵심 요소이며 종종 추론과 유사해 보이는 LLM의 창발적 행동과 비교됩니다. 우리가 “유사해 보이는”이라고 강조하는 이유는 이 글을 쓰는 시점에서 이러한 모델들은 일반적으로 학습 데이터의 암기와 패턴 매칭을 통해 이러한 행동을 보여주는 것으로 여겨지기 때문입니다.</p>
</section>
<section id="chain-of-thought-답변-전에-생각하기" class="level3" data-number="2.3.7">
<h3 data-number="2.3.7" class="anchored" data-anchor-id="chain-of-thought-답변-전에-생각하기"><span class="header-section-number">2.3.7</span> Chain-of-Thought: 답변 전에 생각하기</h3>
<p>Chain-of-Thought(사고 연쇄)는 생성형 모델이 질문에 직접 답변하지 않고 먼저 “생각”하도록 하는 것을 목표로 합니다.Chain-of-Thought 방식은 특히 수학 문제 풀이, 논리 퍼즐, 복잡한 의사 결정 과정 등에서 효과적으로 사용될 수 있으며, 모델의 추론 능력을 향상시키는 데 도움이 됩니다.</p>
<div id="8087489e-d0ed-4fe7-b40c-f9bf529a1d50" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 명시적인 추론 없이 답변하기</span></span>
<span id="cb28-2">standard_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb28-3">    {</span>
<span id="cb28-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb28-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"민수는 색연필 12자루를 가지고 있었습니다. 새 색연필 세트를 받았는데, 그 세트에는 8자루가 들어있었습니다. 그런데 3자루를 동생에게 주었습니다. 민수는 지금 몇 자루의 색연필을 가지고 있나요?"</span>,</span>
<span id="cb28-6">    },</span>
<span id="cb28-7">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"assistant"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17"</span>},</span>
<span id="cb28-8">    {</span>
<span id="cb28-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb28-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"학교 도서관에 책이 300권 있었습니다. 새로운 책 50권을 구입했고, 학생들이 25권을 빌려갔습니다. 지금 도서관에 있는 책은 몇 권인가요?"</span>,</span>
<span id="cb28-11">    },</span>
<span id="cb28-12">]</span>
<span id="cb28-13"></span>
<span id="cb28-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 생성 모델 실행</span></span>
<span id="cb28-15">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(standard_prompt)</span>
<span id="cb28-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 325권

이 문제를 해결하기 위해서는 다음 단계를 따릅니다:

1. 도서관에는 초기에 300권의 책이 있었습니다.
2. 새로운 책 50권을 도서관에 추가했습니다. 이를 기존의 총 권수에 더합니다: 300 + 50 = 350권.
3. 그런 다음, 학생들이 25권을 빌려갔습니다. 이를 현재의 총 권수에서 빼야 합니다: 350 - 25 = 325권.

따라서, 도서관에는 현재 325권의 책이 남아 있습니다.</code></pre>
</div>
</div>
<div id="7bed2f0a-caa3-425f-b8fc-2902d7992898" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사고 과정을 포함한 답변</span></span>
<span id="cb30-2">cot_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb30-3">    {</span>
<span id="cb30-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb30-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"민수는 색연필 12자루를 가지고 있었습니다. 새 색연필 세트를 2개 받았는데, 각 세트에는 5자루가 들어있었습니다. 민수는 지금 몇 자루의 색연필을 가지고 있나요?"</span>,</span>
<span id="cb30-6">    },</span>
<span id="cb30-7">    {</span>
<span id="cb30-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"assistant"</span>,</span>
<span id="cb30-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"민수는 처음에 12자루의 색연필을 가지고 있었습니다. 2개의 새 세트에 각각 5자루씩 들어있으므로 10자루를 추가로 받았습니다. 12 + 10 = 22. 따라서 답은 22자루입니다."</span>,</span>
<span id="cb30-10">    },</span>
<span id="cb30-11">    {</span>
<span id="cb30-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb30-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"학교 도서관에 책이 45권 있었습니다. 15권을 학생들에게 대출해주고 새로운 책 20권을 구입했습니다. 지금 도서관에 있는 책은 몇 권인가요?"</span>,</span>
<span id="cb30-14">    },</span>
<span id="cb30-15">]</span>
<span id="cb30-16"></span>
<span id="cb30-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출력 생성</span></span>
<span id="cb30-18">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(cot_prompt)</span>
<span id="cb30-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 도서관에서는 처음에 45권의 책이 있었습니다. 15권을 학생들에게 대출했으므로 45 - 15 = 30권이 남았습니다. 그런 다음 20권의 새로운 책을 구입했으므로 30 + 20 = 50권의 책이 지금 도서관에 있습니다. 따라서 답은 50권입니다.</code></pre>
</div>
</div>
</section>
<section id="제로샷-chain-of-thought" class="level3" data-number="2.3.8">
<h3 data-number="2.3.8" class="anchored" data-anchor-id="제로샷-chain-of-thought"><span class="header-section-number">2.3.8</span> 제로샷 Chain-of-Thought</h3>
<p>모델에게 예시를 제공하는 대신에 우리는 단순히 생성형 모델에게 추론 과정을 제공하도록 요청할 수 있습니다(제로샷 chain-of-thought). 이를 위해 효과적인 다양한 형태가 있지만 흔하고 효과적인 방법 중 하나는 “단계별로 생각해 봅시다”라는 문구를 사용하는 것입니다. 이 방법은 특히 다양한 유형의 문제에 대해 빠르게 추론 과정을 얻고자 할 때 유용하며, 모델의 일반화된 추론 능력을 테스트하는 데에도 효과적입니다.</p>
<div id="3f3a6562-d55c-4601-addd-74caad83a9a0" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zero-shot Chain-of-Thought</span></span>
<span id="cb32-2">zeroshot_cot_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb32-3">    {</span>
<span id="cb32-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb32-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"도서관에 책이 50권 있었습니다. 15권을 대출해주고 새로 20권을 구입했습니다. 지금 도서관에 있는 책은 몇 권인가요? 단계별로 생각해봅시다."</span>,</span>
<span id="cb32-6">    }</span>
<span id="cb32-7">]</span>
<span id="cb32-8"></span>
<span id="cb32-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출력 생성</span></span>
<span id="cb32-10">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(zeroshot_cot_prompt)</span>
<span id="cb32-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 이 문제를 해결하기 위해 다음 단계를 따르겠습니다:

1. 도서관에서 시작하는 초기 책 수: 50권
2. 대출된 책 수: 15권
3. 구입한 새로운 책 수: 20권

이제 이 값을 사용하여 현재 도서관에 있는 책 수를 계산해봅시다:

1. 시작하는 초기 책 수에서 대출된 책 수를 빼줍니다: 50 - 15 = 35권
2. 이 결과에 구입한 새로운 책 수를 더합니다: 35 + 20 = 55권

따라서, 현재 도서관에는 55권의 책이 있습니다.</code></pre>
</div>
</div>
</section>
<section id="tree-of-thought-중간-단계-탐색하기" class="level3" data-number="2.3.9">
<h3 data-number="2.3.9" class="anchored" data-anchor-id="tree-of-thought-중간-단계-탐색하기"><span class="header-section-number">2.3.9</span> Tree-of-Thought: 중간 단계 탐색하기</h3>
<p>Chain-of-Thought와 자기 일관성(self-consistency)의 개념은 더 복잡한 추론을 가능하게 하기 위한 것입니다. 여러 “생각”들을 샘플링하고 이를 더 신중하게 만듦으로써 생성형 모델의 출력을 개선합니다.</p>
<div id="ceaf803c-1983-419e-a635-4a90273bef4f" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zero-shot Tree-of-Thought</span></span>
<span id="cb34-2">zeroshot_tot_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb34-3">    {</span>
<span id="cb34-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb34-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"세 명의 다른 전문가들이 이 질문에 답하고 있다고 상상해보세요. 모든 전문가는 자신의 생각의 1단계를 적은 다음 그룹과 공유합니다. 그런 다음 모든 전문가는 다음 단계로 넘어갑니다. 만약 어느 전문가라도 자신이 틀렸다는 것을 깨닫게 되면 그 즉시 토론에서 빠집니다. 질문은 '학교 도서관에 책이 80권 있었습니다. 30권을 학생들에게 대출해주고 새로운 책 25권을 구입했습니다. 지금 도서관에 있는 책은 몇 권인가요?' 입니다. 결과에 대해 반드시 토론해주세요."</span>,</span>
<span id="cb34-6">    }</span>
<span id="cb34-7">]</span>
<span id="cb34-8"></span>
<span id="cb34-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출력 생성</span></span>
<span id="cb34-10">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipe(zeroshot_tot_prompt)</span>
<span id="cb34-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 1단계: 초기 책 수를 기억하기
80권의 책이 도서관에서 시작합니다.

2단계: 학생들에게 대출된 책 수를 계산하기
30권의 책이 학생들에게 대출됩니다.

3단계: 구입한 새로운 책 수를 계산하기
25권의 새로운 책이 도서관에 추가됩니다.

4단계: 현재 책 수를 계산하기
1단계에서 시작한 80권에서 2단계의 30권을 빼고, 그리고 3단계의 25권을 더합니다.

80 - 30 = 50
50 + 25 = 75

토론:
도서관에는 80권의 책이 시작되었습니다. 그 다음, 30권의 책이 학생들에게 대출되었습니다. 이로 인해 도서관에는 50권의 책이 남았습니다. 그 다음, 25권의 새로운 책이 도서관에 추가되었습니다. 따</code></pre>
</div>
</div>
</section>
</section>
<section id="의미론적-검색-및-검색-증강-생성" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="의미론적-검색-및-검색-증강-생성"><span class="header-section-number">2.4</span> 의미론적 검색 및 검색 증강 생성</h2>
<section id="밀집-검색-dense-retrieval" class="level3" data-number="2.4.1">
<h3 data-number="2.4.1" class="anchored" data-anchor-id="밀집-검색-dense-retrieval"><span class="header-section-number">2.4.1</span> 밀집 검색 (Dense Retrieval)</h3>
<p>밀집 검색은 검색 쿼리가 관련 결과와 가까울 것이라는 특성에 의존합니다.</p>
<section id="밀집-검색-주의사항" class="level4" data-number="2.4.1.1">
<h4 data-number="2.4.1.1" class="anchored" data-anchor-id="밀집-검색-주의사항"><span class="header-section-number">2.4.1.1</span> 밀집 검색 주의사항</h4>
<ul>
<li>거짓 양성: 의미적으로 유사하지만 실제로 관련이 없는 결과를 반환할 수 있습니다.</li>
<li>답변 부재: 코퍼스에 답변이 없는 경우에도 가장 가까운 결과를 반환합니다.</li>
<li>컨텍스트 손실: 단어의 정확한 일치보다는 의미적 유사성에 중점을 두기 때문에 특정 키워드나 구문을 놓칠 수 있습니다.</li>
<li>계산 비용: 대규모 데이터셋에서는 계산 비용이 높을 수 있습니다.</li>
<li>도메인 특화의 어려움: 특정 도메인의 전문 용어나 개념을 정확히 포착하기 어려울 수 있습니다.</li>
</ul>
<div id="37c83c91-0769-49bf-8622-067ac4f54643" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb36-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb36-3">    DPRContextEncoder,</span>
<span id="cb36-4">    DPRContextEncoderTokenizer,</span>
<span id="cb36-5">    DPRQuestionEncoder,</span>
<span id="cb36-6">    DPRQuestionEncoderTokenizer,</span>
<span id="cb36-7">)</span>
<span id="cb36-8"></span>
<span id="cb36-9">question_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/dpr-question_encoder-single-nq-base"</span></span>
<span id="cb36-10">context_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/dpr-ctx_encoder-single-nq-base"</span></span>
<span id="cb36-11"></span>
<span id="cb36-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 인코더와 토크나이저 초기화</span></span>
<span id="cb36-13">question_encoder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DPRQuestionEncoder.from_pretrained(question_model)</span>
<span id="cb36-14">question_tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DPRQuestionEncoderTokenizer.from_pretrained(question_model)</span>
<span id="cb36-15">context_encoder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DPRContextEncoder.from_pretrained(context_model)</span>
<span id="cb36-16">context_tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DPRContextEncoderTokenizer.from_pretrained(context_model)</span>
<span id="cb36-17"></span>
<span id="cb36-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 질문 인코딩</span></span>
<span id="cb36-19">question <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"듄의 작가는 누구인가요?"</span></span>
<span id="cb36-20">question_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> question_tokenizer(question, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)</span>
<span id="cb36-21">question_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> question_encoder(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>question_input).pooler_output</span>
<span id="cb36-22"></span>
<span id="cb36-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 컨텍스트 인코딩</span></span>
<span id="cb36-24">context <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"듄은 1965년에 미국 작가 프랭크 허버트가 쓴 공상과학 소설입니다."</span></span>
<span id="cb36-25">context_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> context_tokenizer(context, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)</span>
<span id="cb36-26">context_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> context_encoder(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>context_input).pooler_output</span>
<span id="cb36-27"></span>
<span id="cb36-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 유사도 계산</span></span>
<span id="cb36-29">similarity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.matmul(question_embedding, context_embedding.transpose(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb36-30"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"유사도 점수: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>similarity<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>item()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>유사도 점수: 75.5189</code></pre>
</div>
</div>
</section>
</section>
<section id="재순위화-예시" class="level3" data-number="2.4.2">
<h3 data-number="2.4.2" class="anchored" data-anchor-id="재순위화-예시"><span class="header-section-number">2.4.2</span> 재순위화 예시</h3>
<p>재순위화 시스템(예: monoBERT)은 사용자의 검색어와 후보 결과들을 분석하여 각 문서가 해당 검색어와 얼마나 관련이 있는지 점수를 매깁니다. 이렇게 산출된 관련성 점수를 바탕으로 사전에 선별된 결과들의 순서를 재배열합니다. 이 과정을 통해 검색어에 대한 결과의 순위가 개선되어 더욱 정확하고 관련성 높은 정보를 상위에 표시할 수 있게 됩니다.</p>
<p>재순위화 시스템의 주요 특징은 다음과 같습니다:</p>
<ol type="1">
<li><p><strong>정교한 관련성 평가</strong>: 단순한 키워드 매칭을 넘어 문맥과 의미를 고려한 심층적인 관련성 평가를 수행합니다.</p></li>
<li><p><strong>맞춤형 순위 조정</strong>: 사용자의 검색 의도를 더 정확히 반영하여 결과의 순위를 조정합니다.</p></li>
<li><p><strong>검색 품질 향상</strong>: 사용자에게 더 관련성 높고 유용한 정보를 우선적으로 제공함으로써 전반적인 검색 경험을 개선합니다.</p></li>
<li><p><strong>다양한 요소 고려</strong>: 문서의 내용, 구조, 메타데이터 등 다양한 요소를 종합적으로 분석하여 순위를 결정합니다.</p></li>
</ol>
<div id="d00362ee-9825-468f-a103-1c099b0d487b" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb38-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoModelForSequenceClassification, AutoTokenizer</span>
<span id="cb38-3"></span>
<span id="cb38-4">model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cross-encoder/ms-marco-MiniLM-L-6-v2"</span></span>
<span id="cb38-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 재순위화 모델 로드</span></span>
<span id="cb38-6">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_name)</span>
<span id="cb38-7">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForSequenceClassification.from_pretrained(model_name)</span>
<span id="cb38-8"></span>
<span id="cb38-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예시 쿼리와 검색된 문단들</span></span>
<span id="cb38-10">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"프랑스의 수도는 어디인가요?"</span></span>
<span id="cb38-11">passages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb38-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"파리는 프랑스의 수도이자 가장 인구가 많은 도시입니다."</span>,</span>
<span id="cb38-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"런던은 영국과 잉글랜드의 수도입니다."</span>,</span>
<span id="cb38-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"프랑스는 서유럽에 위치한 국가입니다."</span>,</span>
<span id="cb38-15">]</span>
<span id="cb38-16"></span>
<span id="cb38-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 문단 재순위화</span></span>
<span id="cb38-18">pairs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[query, passage] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> passage <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> passages]</span>
<span id="cb38-19">inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokenizer(pairs, padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, truncation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)</span>
<span id="cb38-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb38-21">    scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>inputs).logits.squeeze(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb38-22"></span>
<span id="cb38-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 점수에 따라 문단 정렬</span></span>
<span id="cb38-24">reranked_passages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [p <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _, p <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(scores, passages), reverse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)]</span>
<span id="cb38-25"></span>
<span id="cb38-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"재순위화된 문단:"</span>)</span>
<span id="cb38-27"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, passage <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(reranked_passages, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb38-28">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>passage<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>재순위화된 문단:
1. 파리는 프랑스의 수도이자 가장 인구가 많은 도시입니다.
2. 런던은 영국과 잉글랜드의 수도입니다.
3. 프랑스는 서유럽에 위치한 국가입니다.</code></pre>
</div>
</div>
</section>
<section id="rag검색-증강-생성" class="level3" data-number="2.4.3">
<h3 data-number="2.4.3" class="anchored" data-anchor-id="rag검색-증강-생성"><span class="header-section-number">2.4.3</span> RAG(검색 증강 생성)</h3>
<p>RAG는 검색 시스템의 파이프라인 끝단에 생성형 대규모 언어 모델(LLM)을 배치하는 혁신적인 접근 방식입니다. 이 방법을 통해 시스템은 검색된 문서를 바탕으로 답변을 생성하면서 동시에 출처를 인용할 수 있습니다. RAG의 주요 특징과 장점은 다음과 같습니다:</p>
<ol type="1">
<li><p><strong>정보의 정확성과 최신성</strong>: 실시간으로 검색된 최신 정보를 바탕으로 답변을 생성하므로, 항상 최신의 정확한 정보를 제공할 수 있습니다.</p></li>
<li><p><strong>근거 기반 응답</strong>: 생성된 답변의 각 부분에 대해 출처를 제시함으로써, 사용자는 정보의 신뢰성을 직접 확인할 수 있습니다.</p></li>
<li><p><strong>유연한 지식 확장</strong>: 모델의 재학습 없이도 새로운 정보를 즉시 활용할 수 있어, 지식 기반을 지속적으로 확장할 수 있습니다.</p></li>
<li><p><strong>맥락 이해 능력 향상</strong>: 검색된 문서들의 맥락을 종합적으로 이해하여 더 깊이 있고 관련성 높은 답변을 생성합니다.</p></li>
<li><p><strong>투명성 제고</strong>: 정보의 출처를 명확히 제시함으로써 AI 시스템의 의사결정 과정을 더 투명하게 만듭니다.</p></li>
</ol>
<div id="6ed63a14-a595-4d5e-ac66-fa62c45f197e" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb40-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb40-3">    AutoModel,</span>
<span id="cb40-4">    AutoTokenizer,</span>
<span id="cb40-5">    RagRetriever,</span>
<span id="cb40-6">    RagSequenceForGeneration,</span>
<span id="cb40-7">)</span>
<span id="cb40-8"></span>
<span id="cb40-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사전 훈련된 모델 로드</span></span>
<span id="cb40-10">question_encoder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModel.from_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/dpr-question_encoder-single-nq-base"</span>)</span>
<span id="cb40-11">question_tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/dpr-question_encoder-single-nq-base"</span>)</span>
<span id="cb40-12">generator_tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/bart-large"</span>)</span>
<span id="cb40-13"></span>
<span id="cb40-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># RAG 컴포넌트 초기화</span></span>
<span id="cb40-15">retriever <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RagRetriever.from_pretrained(</span>
<span id="cb40-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/rag-sequence-nq"</span>, index_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"exact"</span>, use_dummy_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb40-17">)</span>
<span id="cb40-18">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RagSequenceForGeneration.from_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"facebook/rag-sequence-nq"</span>, retriever<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>retriever)</span>
<span id="cb40-19"></span>
<span id="cb40-20"></span>
<span id="cb40-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_answer(query):</span>
<span id="cb40-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 쿼리 인코딩</span></span>
<span id="cb40-23">    input_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> question_tokenizer(query, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>]</span>
<span id="cb40-24">    question_hidden_states <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> question_encoder(input_ids)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb40-25"></span>
<span id="cb40-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 관련 문서 검색</span></span>
<span id="cb40-27">    retriever_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> retriever(input_ids, question_hidden_states, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)</span>
<span id="cb40-28"></span>
<span id="cb40-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 답변 생성</span></span>
<span id="cb40-30">    input_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> retriever_output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>]</span>
<span id="cb40-31">    attention_mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> retriever_output[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"attention_mask"</span>]</span>
<span id="cb40-32">    output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(input_ids<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_ids, attention_mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>attention_mask)</span>
<span id="cb40-33"></span>
<span id="cb40-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 생성된 답변 디코딩 및 반환</span></span>
<span id="cb40-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> generator_tokenizer.decode(output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], skip_special_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb40-36"></span>
<span id="cb40-37"></span>
<span id="cb40-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사용 예시</span></span>
<span id="cb40-39">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"프랑스의 수도는 어디인가요?"</span></span>
<span id="cb40-40">answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_answer(query)</span>
<span id="cb40-41"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"질문: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb40-42"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"답변: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>answer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</div>
</section>
</section>
<section id="멀티모달-llm" class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="멀티모달-llm"><span class="header-section-number">2.5</span> 멀티모달 LLM</h2>
<p>대규모 언어 모델(LLM)에서는 멀티모달 입력을 받아들이고 이를 바탕으로 추론하는 능력은 이전에는 접근하기 어려웠던 새로운 가능성을 열어줄 수 있습니다. 여기에서는 멀티모달 기능을 갖춘 여러 LLM을 살펴보고 실제 사용 사례로 어떤 의미를 갖는지 알아볼 것입니다.</p>
<section id="clip텍스트와-이미지-연결" class="level3" data-number="2.5.1">
<h3 data-number="2.5.1" class="anchored" data-anchor-id="clip텍스트와-이미지-연결"><span class="header-section-number">2.5.1</span> CLIP(텍스트와 이미지 연결)</h3>
<p>CLIP은 이미지와 텍스트 모두의 임베딩을 계산할 수 있는 임베딩 모델입니다. CLIP은 컴퓨터 비전과 자연어 처리의 경계를 허물고 두 영역을 통합하는 강력한 도구로 자리잡고 있습니다. 이를 통해 AI 시스템은 인간의 의사소통 방식에 더 가까워지고 더욱 자연스럽고 직관적인 상호작용이 가능해집니다. CLIP의 주요 특징은 다음과 같습니다:</p>
<ol type="1">
<li><strong>통합된 표현 공간</strong>: 이미지와 텍스트를 동일한 벡터 공간에 표현하여 직접적인 비교가 가능합니다.</li>
<li><strong>크로스모달 학습</strong>: 이미지와 텍스트 사이의 관계를 학습하여 더 풍부한 이해를 가능하게 합니다.</li>
<li><strong>유연한 응용</strong>: 이미지 검색, 이미지 캡셔닝, 시각적 질의응답 등 다양한 작업에 활용될 수 있습니다.</li>
<li><strong>제로샷 학습 능력</strong>: 특정 작업에 대한 추가 학습 없이도 새로운 개념을 인식할 수 있습니다.</li>
</ol>
<div id="99779707-b686-4c95-8097-a873a54b9772" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> urllib.request <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urlopen</span>
<span id="cb41-2"></span>
<span id="cb41-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb41-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb41-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb41-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb41-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> CLIPModel, CLIPProcessor, CLIPTokenizerFast</span>
<span id="cb41-8"></span>
<span id="cb41-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 불러오기</span></span>
<span id="cb41-10">image_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/HandsOnLLM/Hands-On-Large-Language-Models/main/chapter09/images/puppy.png"</span></span>
<span id="cb41-11">image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(urlopen(image_url)).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RGB"</span>)</span>
<span id="cb41-12">caption <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A ppuppy playing in the snow"</span></span>
<span id="cb41-13">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openai/clip-vit-base-patch32"</span></span>
<span id="cb41-14"></span>
<span id="cb41-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 전처리를 위한 토크나이저 로드</span></span>
<span id="cb41-16">clip_tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CLIPTokenizerFast.from_pretrained(model_id)</span>
<span id="cb41-17"></span>
<span id="cb41-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 전처리를 위한 프로세서 로드</span></span>
<span id="cb41-19">clip_processor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CLIPProcessor.from_pretrained(model_id)</span>
<span id="cb41-20"></span>
<span id="cb41-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 및 이미지 임베딩 생성을 위한 주 모델</span></span>
<span id="cb41-22">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CLIPModel.from_pretrained(model_id)</span>
<span id="cb41-23"></span>
<span id="cb41-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 입력 토큰화</span></span>
<span id="cb41-25">inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clip_tokenizer(caption, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)</span>
<span id="cb41-26"></span>
<span id="cb41-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 임베딩 생성</span></span>
<span id="cb41-28">text_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.get_text_features(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>inputs)</span>
<span id="cb41-29"></span>
<span id="cb41-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 전처리</span></span>
<span id="cb41-31">processed_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clip_processor(text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, images<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>image, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pixel_values"</span>]</span>
<span id="cb41-32"></span>
<span id="cb41-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 임베딩 생성</span></span>
<span id="cb41-34">image_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.get_image_features(processed_image)</span>
<span id="cb41-35"></span>
<span id="cb41-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화를 위한 이미지 준비</span></span>
<span id="cb41-37">processed_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> processed_image.squeeze(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb41-38">processed_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> processed_img.permute(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>torch.arange(processed_img.ndim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb41-39">processed_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.einsum(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ijk-&gt;jik"</span>, processed_img.numpy())</span>
<span id="cb41-40"></span>
<span id="cb41-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 원본 이미지와 처리된 이미지 시각화</span></span>
<span id="cb41-42">fig, (ax1, ax2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb41-43">ax1.imshow(image)</span>
<span id="cb41-44">ax1.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original Image"</span>)</span>
<span id="cb41-45">ax1.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb41-46">ax2.imshow(processed_img)</span>
<span id="cb41-47">ax2.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Processed Image"</span>)</span>
<span id="cb41-48">ax2.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb41-49">plt.show()</span>
<span id="cb41-50"></span>
<span id="cb41-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 임베딩 정규화</span></span>
<span id="cb41-52">text_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> text_embedding.norm(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, keepdim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb41-53">image_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> image_embedding.norm(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, keepdim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb41-54"></span>
<span id="cb41-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 유사도 계산</span></span>
<span id="cb41-56">text_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text_embedding.detach().cpu().numpy()</span>
<span id="cb41-57">image_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image_embedding.detach().cpu().numpy()</span>
<span id="cb41-58">score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text_embedding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span> image_embedding.T</span>
<span id="cb41-59"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"유사도 점수: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>score<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>item()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-1.7922626..2.145897].</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_HansOnLLM_files/figure-html/cell-27-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM_files/figure-html/cell-27-output-2.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>유사도 점수: 0.3006</code></pre>
</div>
</div>
</section>
<section id="blip-2양식-간-격차-해소" class="level3" data-number="2.5.2">
<h3 data-number="2.5.2" class="anchored" data-anchor-id="blip-2양식-간-격차-해소"><span class="header-section-number">2.5.2</span> BLIP-2(양식 간 격차 해소)</h3>
<p>처음부터 멀티모달 언어 모델을 만드는 것은 엄청난 컴퓨팅 파워와 데이터를 필요로 합니다. 이러한 모델을 만들려면 수십억 개의 이미지, 텍스트, 그리고 이미지-텍스트 쌍을 사용해야 합니다. 이는 쉽게 실현 가능한 일이 아닙니다. BLIP-2는 이러한 어려움을 해결하기 위해 새로운 접근 방식을 취합니다. 처음부터 아키텍처를 구축하는 대신, 사전 학습된 이미지 인코더와 사전 학습된 LLM을 연결하는 ’쿼리 트랜스포머(Q-Former)’라는 다리를 구축하여 시각-언어 간의 격차를 해소합니다. 이 방식의 주요 장점은 다음과 같습니다:</p>
<ol type="1">
<li><strong>효율적인 학습</strong>: BLIP-2는 이미지 인코더와 LLM을 처음부터 학습할 필요 없이 연결 다리만 학습하면 됩니다.</li>
<li><strong>기존 기술 활용</strong>: 이미 존재하는 기술과 모델을 최대한 활용하여 효율성을 높입니다.</li>
<li><strong>유연성</strong>: 다양한 사전 학습 모델을 조합하여 사용할 수 있어, 특정 작업에 최적화된 구성을 만들 수 있습니다.</li>
<li><strong>성능 향상</strong>: 각 분야에서 최고의 성능을 보이는 모델들을 결합함으로써 전반적인 성능을 크게 향상시킬 수 있습니다.</li>
<li><strong>자원 절약</strong>: 거대한 데이터셋과 컴퓨팅 자원이 필요한 전체 모델 학습을 피할 수 있어 시간과 비용을 절약합니다.</li>
</ol>
<div id="bde289aa-d173-4b78-ba76-ce78ac68a2eb" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> urllib.request <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urlopen</span>
<span id="cb44-2"></span>
<span id="cb44-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb44-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb44-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb44-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb44-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MinMaxScaler</span>
<span id="cb44-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoModelForVisualQuestionAnswering, AutoProcessor</span>
<span id="cb44-9"></span>
<span id="cb44-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 프로세서와 주 모델 로드</span></span>
<span id="cb44-11">blip_processor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoProcessor.from_pretrained(</span>
<span id="cb44-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Salesforce/blip2-opt-2.7b"</span>,</span>
<span id="cb44-13">)</span>
<span id="cb44-14">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForVisualQuestionAnswering.from_pretrained(</span>
<span id="cb44-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Salesforce/blip2-opt-2.7b"</span>, torch_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float16</span>
<span id="cb44-16">)</span>
<span id="cb44-17"></span>
<span id="cb44-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 추론 속도 향상을 위해 모델을 GPU로 이동</span></span>
<span id="cb44-19">device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> torch.cuda.is_available() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cpu"</span></span>
<span id="cb44-20">model.to(device)</span>
<span id="cb44-21"></span>
<span id="cb44-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 슈퍼카 이미지 로드</span></span>
<span id="cb44-23">car_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/HandsOnLLM/Hands-On-Large-Language-Models/main/chapter09/images/car.png"</span></span>
<span id="cb44-24">image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(urlopen(car_path)).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RGB"</span>)</span>
<span id="cb44-25"></span>
<span id="cb44-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 전처리</span></span>
<span id="cb44-27">inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor(image, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>).to(device, torch.float16)</span>
<span id="cb44-28">inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pixel_values"</span>].shape</span>
<span id="cb44-29"></span>
<span id="cb44-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># numpy로 변환하고 (1, 3, 224, 224)에서 (224, 224, 3) 형태로 변경</span></span>
<span id="cb44-31">image_inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pixel_values"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].detach().cpu().numpy()</span>
<span id="cb44-32">image_inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.einsum(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ijk-&gt;kji"</span>, image_inputs)</span>
<span id="cb44-33">image_inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.einsum(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ijk-&gt;jik"</span>, image_inputs)</span>
<span id="cb44-34"></span>
<span id="cb44-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># RGB 값을 나타내기 위해 이미지 입력을 0-255로 스케일링</span></span>
<span id="cb44-36">scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MinMaxScaler(feature_range<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>))</span>
<span id="cb44-37">image_inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.fit_transform(image_inputs.reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, image_inputs.shape[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])).reshape(</span>
<span id="cb44-38">    image_inputs.shape</span>
<span id="cb44-39">)</span>
<span id="cb44-40">image_inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(image_inputs, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.uint8)</span>
<span id="cb44-41"></span>
<span id="cb44-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># numpy 배열을 Image로 변환</span></span>
<span id="cb44-43">Image.fromarray(image_inputs)</span>
<span id="cb44-44"></span>
<span id="cb44-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 전처리</span></span>
<span id="cb44-46">text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Her vocalization was remarkably melodic"</span></span>
<span id="cb44-47">token_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor(image, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>text, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>)</span>
<span id="cb44-48">token_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> token_ids.to(device, torch.float16)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_ids"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb44-49"></span>
<span id="cb44-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 입력 ID를 다시 토큰으로 변환</span></span>
<span id="cb44-51">tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor.tokenizer.convert_ids_to_tokens(token_ids)</span>
<span id="cb44-52"></span>
<span id="cb44-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 공백 토큰을 밑줄로 대체</span></span>
<span id="cb44-54">tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [token.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ġ"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tokens]</span>
<span id="cb44-55"></span>
<span id="cb44-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화</span></span>
<span id="cb44-57">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb44-58"></span>
<span id="cb44-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 표시</span></span>
<span id="cb44-60">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb44-61">plt.imshow(Image.fromarray(image_inputs))</span>
<span id="cb44-62">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Processed Image"</span>)</span>
<span id="cb44-63">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb44-64"></span>
<span id="cb44-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트와 토큰 표시</span></span>
<span id="cb44-66">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb44-67">plt.text(</span>
<span id="cb44-68">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb44-69">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb44-70">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Original Text: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb44-71">    horizontalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb44-72">    fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb44-73">    wrap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb44-74">)</span>
<span id="cb44-75">plt.text(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.65</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tokens:"</span>, horizontalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb44-76">plt.text(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>.join(tokens), horizontalalignment<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, wrap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb44-77">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb44-78"></span>
<span id="cb44-79">plt.tight_layout()</span>
<span id="cb44-80">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"a25bfc74cfed4c89b2c3579fc125a259","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_HansOnLLM_files/figure-html/cell-28-output-2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM_files/figure-html/cell-28-output-2.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<section id="사용-사례-1-이미지-캡셔닝" class="level4" data-number="2.5.2.1">
<h4 data-number="2.5.2.1" class="anchored" data-anchor-id="사용-사례-1-이미지-캡셔닝"><span class="header-section-number">2.5.2.1</span> 사용 사례 1: 이미지 캡셔닝</h4>
<p>이미지 캡셔닝은 주어진 이미지의 내용을 설명하는 텍스트를 자동으로 생성하는 작업입니다.</p>
<div id="a25f15e8-2a8d-4ad4-91cb-098e3543ca84" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 로드</span></span>
<span id="cb45-2">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://upload.wikimedia.org/wikipedia/commons/7/70/Rorschach_blot_01.jpg"</span></span>
<span id="cb45-3">image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(urlopen(url)).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RGB"</span>)</span>
<span id="cb45-4"></span>
<span id="cb45-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 캡션 생성</span></span>
<span id="cb45-6">inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor(image, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>).to(device, torch.float16)</span>
<span id="cb45-7">generated_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>inputs, max_new_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb45-8">generated_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor.batch_decode(generated_ids, skip_special_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb45-9">generated_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generated_text[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].strip()</span>
<span id="cb45-10"></span>
<span id="cb45-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지와 생성된 텍스트 시각화</span></span>
<span id="cb45-12">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb45-13">plt.imshow(image)</span>
<span id="cb45-14">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb45-15">plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Generated text: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>generated_text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb45-16">plt.tight_layout()</span>
<span id="cb45-17">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_HansOnLLM_files/figure-html/cell-29-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-5"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM_files/figure-html/cell-29-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
</section>
<section id="사용-사례-2-시각적-질의응답" class="level4" data-number="2.5.2.2">
<h4 data-number="2.5.2.2" class="anchored" data-anchor-id="사용-사례-2-시각적-질의응답"><span class="header-section-number">2.5.2.2</span> 사용 사례 2: 시각적 질의응답</h4>
<p>시각적 질의응답은 이미지와 관련된 질문에 대해 AI가 답변을 제공하는 기술입니다.</p>
<div id="351719c7-29be-4494-928f-2783627a8890" class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 로드</span></span>
<span id="cb46-2">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://upload.wikimedia.org/wikipedia/commons/7/70/Rorschach_blot_01.jpg"</span></span>
<span id="cb46-3">image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(urlopen(url)).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RGB"</span>)</span>
<span id="cb46-4"></span>
<span id="cb46-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각적 질문 답변</span></span>
<span id="cb46-6">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Question: Write down what you see in this picture. Answer:"</span></span>
<span id="cb46-7"></span>
<span id="cb46-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지와 프롬프트 처리</span></span>
<span id="cb46-9">inputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor(image, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>prompt, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>).to(device, torch.float16)</span>
<span id="cb46-10"></span>
<span id="cb46-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 생성</span></span>
<span id="cb46-12">generated_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>inputs, max_new_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb46-13">generated_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blip_processor.batch_decode(generated_ids, skip_special_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb46-14">generated_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generated_text[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].strip()</span>
<span id="cb46-15"></span>
<span id="cb46-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지와 생성된 텍스트 시각화</span></span>
<span id="cb46-17">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb46-18">plt.imshow(image)</span>
<span id="cb46-19">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb46-20">plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>generated_text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, wrap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb46-21">plt.tight_layout()</span>
<span id="cb46-22">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="LLM_HansOnLLM_files/figure-html/cell-30-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-6"><img src="https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM_files/figure-html/cell-30-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>이러한 다중 모달 텍스트 생성 모델의 핵심 아이디어는 입력 이미지의 시각적 특징을 LLM이 사용할 수 있는 텍스트 임베딩으로 투영하는 것입니다. 이 모델을 이미지 캡셔닝과 다중 모달 채팅 기반 프롬프팅에 사용하는 방법을 보았는데, 여기서는 두 가지 양식을 결합하여 응답을 생성합니다.</p>
</section>
</section>
</section>
</section>
<section id="언어-모델-훈련-및-미세-조정" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 언어 모델 훈련 및 미세 조정</h1>
<section id="텍스트-임베딩-모델-생성" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="텍스트-임베딩-모델-생성"><span class="header-section-number">3.1</span> 텍스트 임베딩 모델 생성</h2>
<p>텍스트 임베딩 모델은 많은 강력한 자연어 처리 애플리케이션의 기초를 이룹니다. 이들은 텍스트 생성 모델과 같은 이미 인상적인 기술들을 더욱 강화하는 기반을 마련합니다. 임베딩 모델을 생성하는 방법은 여러 가지가 있지만, 일반적으로 우리는 대조 학습을 주목합니다. 이는 많은 임베딩 모델의 중요한 측면인데, 이 과정을 통해 모델이 의미론적 표현을 효율적으로 학습할 수 있기 때문입니다.</p>
<section id="대조-생성generating-contrastive-예제" class="level3" data-number="3.1.1">
<h3 data-number="3.1.1" class="anchored" data-anchor-id="대조-생성generating-contrastive-예제"><span class="header-section-number">3.1.1</span> 대조 생성(Generating Contrastive) 예제</h3>
<div id="a8697927-06bb-485b-90b4-f51329ede4a4" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb47-2"></span>
<span id="cb47-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dataset, load_dataset</span>
<span id="cb47-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformer, losses</span>
<span id="cb47-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.evaluation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EmbeddingSimilarityEvaluator</span>
<span id="cb47-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.trainer <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformerTrainer</span>
<span id="cb47-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.training_args <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformerTrainingArguments</span>
<span id="cb47-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb47-9"></span>
<span id="cb47-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GLUE에서 MNLI 데이터셋 로드</span></span>
<span id="cb47-11">mnli <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mnli"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>).select(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50_000</span>))</span>
<span id="cb47-12">mnli <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mnli.remove_columns(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"idx"</span>)</span>
<span id="cb47-13">mnli <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mnli.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb47-14"></span>
<span id="cb47-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 전처리</span></span>
<span id="cb47-16">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anchor"</span>: [], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>: [], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative"</span>: []}</span>
<span id="cb47-17">soft_negatives <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mnli[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hypothesis"</span>]</span>
<span id="cb47-18">random.shuffle(soft_negatives)</span>
<span id="cb47-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row, soft_negative <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tqdm(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(mnli, soft_negatives)):</span>
<span id="cb47-20">    train_dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anchor"</span>].append(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"premise"</span>])</span>
<span id="cb47-21">    train_dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>].append(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hypothesis"</span>])</span>
<span id="cb47-22">    train_dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative"</span>].append(soft_negative)</span>
<span id="cb47-23">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dataset.from_dict(train_dataset)</span>
<span id="cb47-24"></span>
<span id="cb47-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델</span></span>
<span id="cb47-26">embedding_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformer(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bert-base-uncased"</span>)</span>
<span id="cb47-27"></span>
<span id="cb47-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 손실 함수 정의. 소프트맥스 손실에서는 레이블 수를 명시적으로 설정해야 함.</span></span>
<span id="cb47-29">train_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> losses.MultipleNegativesRankingLoss(model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>embedding_model)</span>
<span id="cb47-30"></span>
<span id="cb47-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 평가 함수 및 stsb를 위한 임베딩 유사도 평가기 생성</span></span>
<span id="cb47-32">val_sts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stsb"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation"</span>)</span>
<span id="cb47-33">evaluator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EmbeddingSimilarityEvaluator(</span>
<span id="cb47-34">    sentences1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence1"</span>],</span>
<span id="cb47-35">    sentences2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence2"</span>],</span>
<span id="cb47-36">    scores<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> score <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>]],</span>
<span id="cb47-37">    main_similarity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>,</span>
<span id="cb47-38">)</span>
<span id="cb47-39"></span>
<span id="cb47-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 인자 정의</span></span>
<span id="cb47-41">args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformerTrainingArguments(</span>
<span id="cb47-42">    output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mnrloss_embedding_model"</span>,</span>
<span id="cb47-43">    num_train_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb47-44">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,</span>
<span id="cb47-45">    per_device_eval_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,</span>
<span id="cb47-46">    warmup_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb47-47">    fp16<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb47-48">    eval_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb47-49">    logging_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb47-50">)</span>
<span id="cb47-51"></span>
<span id="cb47-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 임베딩 모델 훈련</span></span>
<span id="cb47-53">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformerTrainer(</span>
<span id="cb47-54">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>embedding_model,</span>
<span id="cb47-55">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args,</span>
<span id="cb47-56">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_dataset,</span>
<span id="cb47-57">    loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_loss,</span>
<span id="cb47-58">    evaluator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>evaluator,</span>
<span id="cb47-59">)</span>
<span id="cb47-60">trainer.train()</span>
<span id="cb47-61"></span>
<span id="cb47-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련된 모델 평가</span></span>
<span id="cb47-63">evaluator(embedding_model)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>16875it [00:00, 42644.51it/s]
No sentence-transformers model found with name bert-base-uncased. Creating a new one with mean pooling.</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
      
      <progress value="528" max="528" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [528/528 00:32, Epoch 1/1]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>100</td>
<td>0.346900</td>
</tr>
<tr class="even">
<td>200</td>
<td>0.107100</td>
</tr>
<tr class="odd">
<td>300</td>
<td>0.083700</td>
</tr>
<tr class="even">
<td>400</td>
<td>0.068100</td>
</tr>
<tr class="odd">
<td>500</td>
<td>0.072500</td>
</tr>
</tbody>
</table>
<p>
</p></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"89f595417aa44ce5b88220d312bf2161","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>{'pearson_cosine': np.float64(0.8058287434682441),
 'spearman_cosine': np.float64(0.8093139517546301)}</code></pre>
</div>
</div>
</section>
<section id="임베딩-모델의-미세-조정" class="level3" data-number="3.1.2">
<h3 data-number="3.1.2" class="anchored" data-anchor-id="임베딩-모델의-미세-조정"><span class="header-section-number">3.1.2</span> 임베딩 모델의 미세 조정</h3>
<section id="지도-학습-기반-미세-조정-supervised-fine-tuning-sft" class="level4" data-number="3.1.2.1">
<h4 data-number="3.1.2.1" class="anchored" data-anchor-id="지도-학습-기반-미세-조정-supervised-fine-tuning-sft"><span class="header-section-number">3.1.2.1</span> 지도 학습 기반 미세 조정 (Supervised Fine-Tuning, SFT)</h4>
<p>지도 학습 기반 미세 조정(SFT)은 사전 훈련된 임베딩 모델을 특정 작업이나 도메인에 맞게 조정하는 프로세스입니다. 이 방법은 레이블이 지정된 데이터셋을 사용하여 모델의 성능을 향상시키고 특정 용도에 더 적합하게 만듭니다.</p>
<div id="58ccae0b-854e-463d-b0ee-683ea5a085ac" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb50-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformer, losses</span>
<span id="cb50-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.evaluation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EmbeddingSimilarityEvaluator</span>
<span id="cb50-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.trainer <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformerTrainer</span>
<span id="cb50-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.training_args <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformerTrainingArguments</span>
<span id="cb50-6"></span>
<span id="cb50-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GLUE에서 MNLI 데이터셋 로드</span></span>
<span id="cb50-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 0 = 함의, 1 = 중립, 2 = 모순</span></span>
<span id="cb50-9">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mnli"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>).select(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25_000</span>))</span>
<span id="cb50-10">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_dataset.remove_columns(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"idx"</span>)</span>
<span id="cb50-11"></span>
<span id="cb50-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># stsb를 위한 임베딩 유사도 평가기 생성</span></span>
<span id="cb50-13">val_sts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stsb"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation"</span>)</span>
<span id="cb50-14">evaluator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EmbeddingSimilarityEvaluator(</span>
<span id="cb50-15">    sentences1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence1"</span>],</span>
<span id="cb50-16">    sentences2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence2"</span>],</span>
<span id="cb50-17">    scores<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> score <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>]],</span>
<span id="cb50-18">    main_similarity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>,</span>
<span id="cb50-19">)</span>
<span id="cb50-20"></span>
<span id="cb50-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 정의</span></span>
<span id="cb50-22">embedding_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformer(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence-transformers/all-MiniLM-L6-v2"</span>)</span>
<span id="cb50-23"></span>
<span id="cb50-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 손실 함수</span></span>
<span id="cb50-25">train_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> losses.MultipleNegativesRankingLoss(model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>embedding_model)</span>
<span id="cb50-26"></span>
<span id="cb50-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 인자 정의</span></span>
<span id="cb50-28">args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformerTrainingArguments(</span>
<span id="cb50-29">    output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"finetuned_embedding_model"</span>,</span>
<span id="cb50-30">    num_train_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb50-31">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,</span>
<span id="cb50-32">    per_device_eval_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,</span>
<span id="cb50-33">    warmup_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb50-34">    fp16<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb50-35">    eval_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb50-36">    logging_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb50-37">)</span>
<span id="cb50-38"></span>
<span id="cb50-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 훈련</span></span>
<span id="cb50-40">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformerTrainer(</span>
<span id="cb50-41">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>embedding_model,</span>
<span id="cb50-42">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args,</span>
<span id="cb50-43">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_dataset,</span>
<span id="cb50-44">    loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_loss,</span>
<span id="cb50-45">    evaluator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>evaluator,</span>
<span id="cb50-46">)</span>
<span id="cb50-47">trainer.train()</span>
<span id="cb50-48"></span>
<span id="cb50-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련된 모델 평가</span></span>
<span id="cb50-50">evaluator(embedding_model)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Column 'hypothesis' is at index 1, whereas a column with this name is usually expected at index 0. Note that the column order can be important for some losses, e.g. MultipleNegativesRankingLoss will always consider the first column as the anchor and the second as the positive, regardless of the dataset column names. Consider renaming the columns to match the expected order, e.g.:
dataset = dataset.select_columns(['hypothesis', 'entailment', 'contradiction'])</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
      
      <progress value="782" max="782" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [782/782 00:20, Epoch 1/1]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>100</td>
<td>0.127500</td>
</tr>
<tr class="even">
<td>200</td>
<td>0.126100</td>
</tr>
<tr class="odd">
<td>300</td>
<td>0.108700</td>
</tr>
<tr class="even">
<td>400</td>
<td>0.117500</td>
</tr>
<tr class="odd">
<td>500</td>
<td>0.115400</td>
</tr>
<tr class="even">
<td>600</td>
<td>0.105800</td>
</tr>
<tr class="odd">
<td>700</td>
<td>0.106100</td>
</tr>
</tbody>
</table>
<p>
</p></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"6c25295376e34b8a947275510261363d","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>{'pearson_cosine': np.float64(0.850360102427649),
 'spearman_cosine': np.float64(0.8505789375274108)}</code></pre>
</div>
</div>
</section>
</section>
<section id="비지도-학습" class="level3" data-number="3.1.3">
<h3 data-number="3.1.3" class="anchored" data-anchor-id="비지도-학습"><span class="header-section-number">3.1.3</span> 비지도 학습</h3>
<p>현실 세계의 데이터셋에는 우리가 사용할 수 있는 좋은 레이블 세트가 함께 제공되지 않습니다. 대신 미리 정해진 레이블 없이 모델을 훈련시키는 기법을 찾아야 합니다. 이것을 비지도 학습이라 부릅니다. 여기에는 여러 가지 방식이 존재합니다.</p>
<section id="트랜스포머-기반-순차적-디노이징-오토인코더" class="level4" data-number="3.1.3.1">
<h4 data-number="3.1.3.1" class="anchored" data-anchor-id="트랜스포머-기반-순차적-디노이징-오토인코더"><span class="header-section-number">3.1.3.1</span> 트랜스포머 기반 순차적 디노이징 오토인코더</h4>
<p>TSDAE는 비지도 학습으로 임베딩 모델을 만드는 매우 우아한 접근 방식입니다. 이 방법은 우리가 전혀 레이블이 지정된 데이터를 가지고 있지 않다고 가정하며, 인위적으로 레이블을 만들 필요가 없습니다.</p>
<div id="7f90a3ab-331f-4c5e-86a9-a9ec0a090959" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> nltk</span>
<span id="cb53-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dataset, load_dataset</span>
<span id="cb53-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformer, losses, models</span>
<span id="cb53-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DenoisingAutoEncoderDataset</span>
<span id="cb53-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.evaluation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EmbeddingSimilarityEvaluator</span>
<span id="cb53-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.trainer <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformerTrainer</span>
<span id="cb53-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sentence_transformers.training_args <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SentenceTransformerTrainingArguments</span>
<span id="cb53-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb53-9"></span>
<span id="cb53-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 추가 토크나이저 다운로드</span></span>
<span id="cb53-11">nltk.download(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"punkt"</span>)</span>
<span id="cb53-12">nltk.download(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"punkt_tab"</span>)</span>
<span id="cb53-13"></span>
<span id="cb53-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 문장의 평면 리스트 생성</span></span>
<span id="cb53-15">mnli <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mnli"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>).select(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25_000</span>))</span>
<span id="cb53-16">flat_sentences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mnli[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"premise"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> mnli[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hypothesis"</span>]</span>
<span id="cb53-17"></span>
<span id="cb53-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 입력 데이터에 노이즈 추가</span></span>
<span id="cb53-19">damaged_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DenoisingAutoEncoderDataset(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(flat_sentences)))</span>
<span id="cb53-20"></span>
<span id="cb53-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋 생성</span></span>
<span id="cb53-22">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"damaged_sentence"</span>: [], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"original_sentence"</span>: []}</span>
<span id="cb53-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> data <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tqdm(damaged_data):</span>
<span id="cb53-24">    train_dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"damaged_sentence"</span>].append(data.texts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb53-25">    train_dataset[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"original_sentence"</span>].append(data.texts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb53-26">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dataset.from_dict(train_dataset)</span>
<span id="cb53-27"></span>
<span id="cb53-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># stsb를 위한 임베딩 유사도 평가기 생성</span></span>
<span id="cb53-29">val_sts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stsb"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation"</span>)</span>
<span id="cb53-30">evaluator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EmbeddingSimilarityEvaluator(</span>
<span id="cb53-31">    sentences1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence1"</span>],</span>
<span id="cb53-32">    sentences2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence2"</span>],</span>
<span id="cb53-33">    scores<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> score <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> val_sts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>]],</span>
<span id="cb53-34">    main_similarity<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>,</span>
<span id="cb53-35">)</span>
<span id="cb53-36"></span>
<span id="cb53-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 임베딩 모델 생성</span></span>
<span id="cb53-38">word_embedding_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> models.Transformer(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bert-base-uncased"</span>)</span>
<span id="cb53-39">pooling_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> models.Pooling(word_embedding_model.get_word_embedding_dimension(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cls"</span>)</span>
<span id="cb53-40">embedding_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformer(modules<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[word_embedding_model, pooling_model])</span>
<span id="cb53-41"></span>
<span id="cb53-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 디노이징 오토인코더 손실 사용</span></span>
<span id="cb53-43">train_loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> losses.DenoisingAutoEncoderLoss(embedding_model, tie_encoder_decoder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb53-44">train_loss.decoder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_loss.decoder.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>)</span>
<span id="cb53-45"></span>
<span id="cb53-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 인자 정의</span></span>
<span id="cb53-47">args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformerTrainingArguments(</span>
<span id="cb53-48">    output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tsdae_embedding_model"</span>,</span>
<span id="cb53-49">    num_train_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb53-50">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,</span>
<span id="cb53-51">    per_device_eval_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,</span>
<span id="cb53-52">    warmup_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb53-53">    fp16<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb53-54">    eval_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb53-55">    logging_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb53-56">    disable_tqdm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb53-57">)</span>
<span id="cb53-58"></span>
<span id="cb53-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 훈련</span></span>
<span id="cb53-60">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SentenceTransformerTrainer(</span>
<span id="cb53-61">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>embedding_model,</span>
<span id="cb53-62">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args,</span>
<span id="cb53-63">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_dataset,</span>
<span id="cb53-64">    loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_loss,</span>
<span id="cb53-65">    evaluator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>evaluator,</span>
<span id="cb53-66">)</span>
<span id="cb53-67"></span>
<span id="cb53-68">trainer.train()</span>
<span id="cb53-69"></span>
<span id="cb53-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련된 모델 평가</span></span>
<span id="cb53-71">evaluator(embedding_model)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>[nltk_data] Downloading package punkt to /home/fkt/nltk_data...
[nltk_data]   Package punkt is already up-to-date!
[nltk_data] Downloading package punkt_tab to /home/fkt/nltk_data...
[nltk_data]   Package punkt_tab is already up-to-date!
100%|█████████████████████| 48353/48353 [00:03&lt;00:00, 15391.05it/s]</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
      
      <progress value="3023" max="3023" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [3023/3023 02:42, Epoch 1/1]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1000</td>
<td>4.637300</td>
</tr>
<tr class="even">
<td>2000</td>
<td>3.883400</td>
</tr>
<tr class="odd">
<td>3000</td>
<td>3.647900</td>
</tr>
</tbody>
</table>
<p>
</p></div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"ceec1d3857784c0aac1eb569554d70d8","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>{'pearson_cosine': np.float64(0.7401165281596465),
 'spearman_cosine': np.float64(0.7469963144425136)}</code></pre>
</div>
</div>
<div id="bfce2153-8521-48ed-9bf7-31de741185e0" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># VRAM clean up</span></span>
<span id="cb56-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gc</span>
<span id="cb56-3"></span>
<span id="cb56-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb56-5"></span>
<span id="cb56-6">gc.collect()</span>
<span id="cb56-7">torch.cuda.empty_cache()</span></code></pre></div>
</div>
</section>
</section>
</section>
<section id="분류를-위한-표현-모델-미세-조정" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="분류를-위한-표현-모델-미세-조정"><span class="header-section-number">3.2</span> 분류를 위한 표현 모델 미세 조정</h2>
<p>BERT 모델을 미세 조정하는 여러 방법과 응용 사례를 살펴보겠습니다.</p>
<section id="지도-학습-분류" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="지도-학습-분류"><span class="header-section-number">3.2.1</span> 지도 학습 분류</h3>
<p>사전 학습된 BERT 모델 미세 조정하기위해 앞서 사용했던 것과 동일한 Rotten Tomatoes 데이터셋을 활용하겠습니다. 영어 위키피디아와 미출판 도서들로 구성된 대규모 데이터셋으로 사전 학습된 “bert-base-cased” 모델을 사용할 것입니다.</p>
<div id="51dbc779-00a9-4369-a2c6-88ced843db8d" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> warnings</span>
<span id="cb57-2"></span>
<span id="cb57-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> evaluate</span>
<span id="cb57-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb57-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb57-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb57-7">    AutoModelForSequenceClassification,</span>
<span id="cb57-8">    AutoTokenizer,</span>
<span id="cb57-9">    DataCollatorWithPadding,</span>
<span id="cb57-10">    Trainer,</span>
<span id="cb57-11">    TrainingArguments,</span>
<span id="cb57-12">    logging,</span>
<span id="cb57-13">)</span>
<span id="cb57-14"></span>
<span id="cb57-15">logging.set_verbosity_error()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 경고 메시지가 표시되지 않고 오류 메시지만 표시</span></span>
<span id="cb57-16">warnings.filterwarnings(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ignore"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 경고 메시지 끄기</span></span>
<span id="cb57-17"></span>
<span id="cb57-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 준비 및 분할</span></span>
<span id="cb57-19">tomatoes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rotten_tomatoes"</span>)</span>
<span id="cb57-20">train_data, test_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tomatoes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>], tomatoes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test"</span>]</span>
<span id="cb57-21"></span>
<span id="cb57-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 및 토크나이저 로드</span></span>
<span id="cb57-23">model_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bert-base-cased"</span></span>
<span id="cb57-24">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForSequenceClassification.from_pretrained(model_id, num_labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb57-25">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_id)</span>
<span id="cb57-26"></span>
<span id="cb57-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 배치 내 가장 긴 시퀀스에 맞춰 패딩</span></span>
<span id="cb57-28">data_collator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataCollatorWithPadding(tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer)</span>
<span id="cb57-29"></span>
<span id="cb57-30"></span>
<span id="cb57-31"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> preprocess_function(examples):</span>
<span id="cb57-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""입력 데이터 토큰화"""</span></span>
<span id="cb57-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> tokenizer(examples[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>], truncation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb57-34"></span>
<span id="cb57-35"></span>
<span id="cb57-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습/테스트 데이터 토큰화</span></span>
<span id="cb57-37">tokenized_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_data.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(preprocess_function, batched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb57-38">tokenized_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_data.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(preprocess_function, batched<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb57-39"></span>
<span id="cb57-40"></span>
<span id="cb57-41"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> compute_metrics(eval_pred):</span>
<span id="cb57-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Calculate F1 score"""</span></span>
<span id="cb57-43">    logits, labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> eval_pred</span>
<span id="cb57-44">    predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax(logits, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb57-45">    load_f1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> evaluate.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f1"</span>)</span>
<span id="cb57-46">    f1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_f1.compute(predictions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>predictions, references<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>labels)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f1"</span>]</span>
<span id="cb57-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f1"</span>: f1}</span>
<span id="cb57-48"></span>
<span id="cb57-49"></span>
<span id="cb57-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 매개변수 튜닝을 위한 학습 인자</span></span>
<span id="cb57-51">training_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TrainingArguments(</span>
<span id="cb57-52">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model"</span>,</span>
<span id="cb57-53">    learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2e-5</span>,</span>
<span id="cb57-54">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,</span>
<span id="cb57-55">    per_device_eval_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,</span>
<span id="cb57-56">    num_train_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb57-57">    weight_decay<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>,</span>
<span id="cb57-58">    save_strategy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"epoch"</span>,</span>
<span id="cb57-59">    report_to<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb57-60">    disable_tqdm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb57-61">)</span>
<span id="cb57-62"></span>
<span id="cb57-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습 과정을 실행하는 Trainer</span></span>
<span id="cb57-64">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Trainer(</span>
<span id="cb57-65">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb57-66">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>training_args,</span>
<span id="cb57-67">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenized_train,</span>
<span id="cb57-68">    eval_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenized_test,</span>
<span id="cb57-69">    processing_class<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer,</span>
<span id="cb57-70">    data_collator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data_collator,</span>
<span id="cb57-71">    compute_metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>compute_metrics,</span>
<span id="cb57-72">)</span>
<span id="cb57-73"></span>
<span id="cb57-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 학습</span></span>
<span id="cb57-75">trainer.train()</span>
<span id="cb57-76"></span>
<span id="cb57-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 평가</span></span>
<span id="cb57-78">trainer.evaluate()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
      
      <progress value="5340" max="5340" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [5340/5340 02:46, Epoch 10/10]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>500</td>
<td>0.418000</td>
</tr>
<tr class="even">
<td>1000</td>
<td>0.234400</td>
</tr>
<tr class="odd">
<td>1500</td>
<td>0.137900</td>
</tr>
<tr class="even">
<td>2000</td>
<td>0.072600</td>
</tr>
<tr class="odd">
<td>2500</td>
<td>0.038000</td>
</tr>
<tr class="even">
<td>3000</td>
<td>0.032400</td>
</tr>
<tr class="odd">
<td>3500</td>
<td>0.023500</td>
</tr>
<tr class="even">
<td>4000</td>
<td>0.007000</td>
</tr>
<tr class="odd">
<td>4500</td>
<td>0.010100</td>
</tr>
<tr class="even">
<td>5000</td>
<td>0.004100</td>
</tr>
</tbody>
</table>
<p>
</p></div>
<div class="cell-output cell-output-display">

    <div>
      
      <progress value="67" max="67" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [67/67 00:00]
    </div>
    
</div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>{'eval_loss': 1.279144048690796,
 'eval_f1': 0.8457899716177862,
 'eval_runtime': 1.4511,
 'eval_samples_per_second': 734.612,
 'eval_steps_per_second': 46.172,
 'epoch': 10.0}</code></pre>
</div>
</div>
</section>
<section id="적은-샷few-shot-분류" class="level3" data-number="3.2.2">
<h3 data-number="3.2.2" class="anchored" data-anchor-id="적은-샷few-shot-분류"><span class="header-section-number">3.2.2</span> 적은 샷(Few shot) 분류</h3>
<p>적은 샷 분류는 지도 학습 분류의 한 기법으로, 소수의 레이블된 예시만을 바탕으로 분류기가 목표 레이블을 학습하는 방법입니다. 이 기법은 분류 작업이 필요하지만 충분한 레이블된 데이터를 즉시 사용할 수 없을 때 유용합니다. 다시 말해, 이 방법을 통해 각 클래스당 소수의 고품질 데이터 포인트만 레이블링하여 모델을 훈련시킬 수 있습니다.</p>
<section id="setfit-적은-훈련-예시로-효율적인-미세-조정" class="level4" data-number="3.2.2.1">
<h4 data-number="3.2.2.1" class="anchored" data-anchor-id="setfit-적은-훈련-예시로-효율적인-미세-조정"><span class="header-section-number">3.2.2.1</span> SetFit: 적은 훈련 예시로 효율적인 미세 조정</h4>
<p>적은 샷 텍스트 분류를 수행하기 위해 SetFit이라는 효율적인 프레임워크를 사용합니다. 이는 문장 트랜스포머의 구조를 기반으로 하여 훈련 중 업데이트되는 고품질 텍스트 표현을 생성합니다. SetFit은 다음 세 단계로 구성됩니다: 1. 훈련 데이터 샘플링: 클래스 내부와 외부 선택을 기반으로 긍정적(유사한) 및 부정적(다른) 문장 쌍을 생성합니다. 2. 임베딩 미세 조정: 이전에 생성된 훈련 데이터를 바탕으로 사전 학습된 임베딩 모델을 미세 조정합니다. 3. 분류기 훈련: 임베딩 모델 위에 분류 헤드를 만들고 이전에 생성된 훈련 데이터를 사용하여 훈련시킵니다.</p>
</section>
<section id="적은-샷-분류를-위한-미세-조정" class="level4" data-number="3.2.2.2">
<h4 data-number="3.2.2.2" class="anchored" data-anchor-id="적은-샷-분류를-위한-미세-조정"><span class="header-section-number">3.2.2.2</span> 적은 샷 분류를 위한 미세 조정</h4>
<p>이전에는 약 8,500개의 영화 리뷰를 포함한 데이터셋으로 훈련했습니다. 하지만 이번에는 적은 샷 설정이므로 각 클래스당 16개의 예시만 샘플링할 것입니다. 두 개의 클래스가 있으므로 이전에 사용했던 8,500개의 영화 리뷰와 비교해 단 32개의 문서로만 훈련하게 됩니다.</p>
<div id="819c8131-c059-4781-a6ee-342e40e83fa9" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> setfit <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SetFitModel, sample_dataset</span>
<span id="cb59-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> setfit <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Trainer <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> SetFitTrainer</span>
<span id="cb59-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> setfit <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> TrainingArguments <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> SetFitTrainingArguments</span>
<span id="cb59-4"></span>
<span id="cb59-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 클래스당 16개의 예시를 샘플링하여 few-shot 설정을 시뮬레이션합니다</span></span>
<span id="cb59-6">sampled_train_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_dataset(tomatoes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>], num_samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb59-7"></span>
<span id="cb59-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사전 훈련된 SentenceTransformer 모델을 로드합니다</span></span>
<span id="cb59-9">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SetFitModel.from_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sentence-transformers/all-mpnet-base-v2"</span>)</span>
<span id="cb59-10"></span>
<span id="cb59-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 인자를 정의합니다</span></span>
<span id="cb59-12">args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SetFitTrainingArguments(</span>
<span id="cb59-13">    num_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 대조 학습에 사용할 에폭 수</span></span>
<span id="cb59-14">    num_iterations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 생성할 텍스트 쌍의 수</span></span>
<span id="cb59-15">)</span>
<span id="cb59-16">args.eval_strategy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> args.evaluation_strategy</span>
<span id="cb59-17"></span>
<span id="cb59-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 트레이너를 생성합니다</span></span>
<span id="cb59-19">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SetFitTrainer(</span>
<span id="cb59-20">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb59-21">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args,</span>
<span id="cb59-22">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sampled_train_data,</span>
<span id="cb59-23">    eval_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_data,</span>
<span id="cb59-24">    metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f1"</span>,</span>
<span id="cb59-25">)</span>
<span id="cb59-26"></span>
<span id="cb59-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 루프</span></span>
<span id="cb59-28">trainer.train()</span>
<span id="cb59-29"></span>
<span id="cb59-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 테스트 데이터로 모델을 평가합니다</span></span>
<span id="cb59-31">trainer.evaluate()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>model_head.pkl not found on HuggingFace Hub, initialising classification head with random weights. You should TRAIN this model on a downstream task to use it for predictions and inference.</code></pre>
</div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"24b020d35aee4bc3b68fad0a662517ab","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>***** Running training *****
  Num unique pairs = 1280
  Batch size = 16
  Num epochs = 3</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>{'embedding_loss': 0.3226, 'grad_norm': 1.9545438289642334, 'learning_rate': 8.333333333333333e-07, 'epoch': 0.0125}
{'embedding_loss': 0.1147, 'grad_norm': 0.20879538357257843, 'learning_rate': 1.7592592592592595e-05, 'epoch': 0.625}
{'embedding_loss': 0.0009, 'grad_norm': 0.026085715740919113, 'learning_rate': 1.2962962962962964e-05, 'epoch': 1.25}
{'embedding_loss': 0.0004, 'grad_norm': 0.016781330108642578, 'learning_rate': 8.333333333333334e-06, 'epoch': 1.875}
{'embedding_loss': 0.0003, 'grad_norm': 0.011119991540908813, 'learning_rate': 3.7037037037037037e-06, 'epoch': 2.5}</code></pre>
</div>
<div class="cell-output cell-output-display">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"3734eb3a74714de8861ac0808da45d83","version_major":2,"version_minor":0,"quarto_mimetype":"application/vnd.jupyter.widget-view+json"}
</script>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>***** Running evaluation *****</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>{'train_runtime': 13.0872, 'train_samples_per_second': 293.417, 'train_steps_per_second': 18.339, 'train_loss': 0.025163489832387618, 'epoch': 3.0}</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>{'f1': 0.8462273161413563}</code></pre>
</div>
</div>
<p>32개의 레이블된 문서만으로 약 0.85의 F1 점수를 얻었습니다. 원본 데이터의 아주 작은 부분집합으로만 모델을 훈련시켰다는 점을 고려하면 이는 매우 인상적인 결과입니다! SetFit은 적은 샷 분류 작업을 수행할 수 있을 뿐만 아니라 레이블이 전혀 없는 경우인 제로샷 분류에도 대응할 수 있습니다.</p>
</section>
</section>
</section>
<section id="생성-모델-미세-조정" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="생성-모델-미세-조정"><span class="header-section-number">3.3</span> 생성 모델 미세 조정</h2>
<section id="지도-학습-미세-조정-sft" class="level3" data-number="3.3.1">
<h3 data-number="3.3.1" class="anchored" data-anchor-id="지도-학습-미세-조정-sft"><span class="header-section-number">3.3.1</span> 지도 학습 미세 조정 (SFT)</h3>
<section id="전체-미세-조정" class="level4" data-number="3.3.1.1">
<h4 data-number="3.3.1.1" class="anchored" data-anchor-id="전체-미세-조정"><span class="header-section-number">3.3.1.1</span> 전체 미세 조정</h4>
<p>가장 일반적인 미세 조정 과정은 전체 미세 조정입니다. LLM을 사전 학습하는 것과 마찬가지로, 이 과정은 목표로 하는 지도 학습 미세 조정(SFT) 작업에 맞춰 모델의 모든 매개변수를 업데이트하는 것을 포함합니다.</p>
</section>
<section id="매개변수-효율적-미세-조정-peft" class="level4" data-number="3.3.1.2">
<h4 data-number="3.3.1.2" class="anchored" data-anchor-id="매개변수-효율적-미세-조정-peft"><span class="header-section-number">3.3.1.2</span> 매개변수 효율적 미세 조정 (PEFT)</h4>
<p>모델의 모든 매개변수를 업데이트하는 것은 성능을 크게 향상시킬 수 있는 잠재력이 있지만 몇 가지 단점이 있습니다. 훈련 비용이 많이 들고, 훈련 시간이 길며, 상당한 저장 공간이 필요합니다. 이러한 문제를 해결하기 위해, 더 높은 계산 효율성으로 사전 학습된 모델을 미세 조정하는 데 중점을 둔 매개변수 효율적 미세 조정(PEFT) 대안에 관심이 모아지고 있습니다.</p>
<section id="어댑터" class="level5" data-number="3.3.1.2.1">
<h5 data-number="3.3.1.2.1" class="anchored" data-anchor-id="어댑터"><span class="header-section-number">3.3.1.2.1</span> 어댑터</h5>
<p>어댑터는 많은 PEFT 기반 기술의 핵심 구성 요소입니다. 이 방법은 트랜스포머 내부에 추가적인 모듈식 구성 요소를 제안하며, 이를 미세 조정하여 모델의 모든 가중치를 미세 조정할 필요 없이 특정 작업에 대한 모델의 성능을 향상시킬 수 있습니다. 이는 많은 시간과 계산 자원을 절약합니다.</p>
</section>
<section id="저순위-적응-lora" class="level5" data-number="3.3.1.2.2">
<h5 data-number="3.3.1.2.2" class="anchored" data-anchor-id="저순위-적응-lora"><span class="header-section-number">3.3.1.2.2</span> 저순위 적응 (LoRA)</h5>
<p>어댑터의 대안으로, 저순위 적응(LoRA)이 소개되었으며 현재 PEFT를 위한 널리 사용되고 효과적인 기술입니다. LoRA는 (어댑터와 마찬가지로) 작은 수의 매개변수만 업데이트하면 되는 기술입니다.</p>
<blockquote class="blockquote">
<p>더 효율적인 훈련을 위한 모델 압축: LoRA를 더욱 효율적으로 만들기 위해 원래 가중치를 더 작은 행렬로 투영하기 전에 모델의 원래 가중치의 메모리 요구 사항을 줄일 수 있습니다. LLM의 가중치는 float64나 float32와 같은 비트 수로 표현될 수 있는 주어진 정밀도를 가진 숫자 값입니다.</p>
</blockquote>
<div id="3058b119-6fe5-4b8b-a352-935ea7bf3d8e" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb66-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb66-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb66-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> peft <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LoraConfig, get_peft_model, prepare_model_for_kbit_training</span>
<span id="cb66-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb66-5">    AutoModelForCausalLM,</span>
<span id="cb66-6">    AutoTokenizer,</span>
<span id="cb66-7">    BitsAndBytesConfig,</span>
<span id="cb66-8">    TrainingArguments,</span>
<span id="cb66-9">)</span>
<span id="cb66-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> trl <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SFTTrainer</span>
<span id="cb66-11"></span>
<span id="cb66-12">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model"</span></span>
<span id="cb66-13"></span>
<span id="cb66-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TinyLlama의 채팅 템플릿을 사용하기 위해 토크나이저 로드</span></span>
<span id="cb66-15">template_tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TinyLlama/TinyLlama-1.1B-Chat-v1.0"</span>)</span>
<span id="cb66-16"></span>
<span id="cb66-17"></span>
<span id="cb66-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> format_prompt(example):</span>
<span id="cb66-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""TinyLLama가 사용하는 &lt;|user|&gt; 템플릿을 사용하여 프롬프트 포맷"""</span></span>
<span id="cb66-20"></span>
<span id="cb66-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 답변 포맷</span></span>
<span id="cb66-22">    chat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"messages"</span>]</span>
<span id="cb66-23">    prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> template_tokenizer.apply_chat_template(chat, tokenize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb66-24"></span>
<span id="cb66-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>: prompt}</span>
<span id="cb66-26"></span>
<span id="cb66-27"></span>
<span id="cb66-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TinyLLama가 사용하는 템플릿을 사용하여 데이터 로드 및 포맷</span></span>
<span id="cb66-29">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb66-30">    load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HuggingFaceH4/ultrachat_200k"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test_sft"</span>)</span>
<span id="cb66-31">    .shuffle(seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb66-32">    .select(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3_000</span>))</span>
<span id="cb66-33">)</span>
<span id="cb66-34">dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(format_prompt)</span>
<span id="cb66-35"></span>
<span id="cb66-36">model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TinyLlama/TinyLlama-1.1B-intermediate-step-1431k-3T"</span></span>
<span id="cb66-37"></span>
<span id="cb66-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4비트 양자화 설정 - QLoRA의 Q</span></span>
<span id="cb66-39">bnb_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BitsAndBytesConfig(</span>
<span id="cb66-40">    load_in_4bit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4비트 정밀도 모델 로딩 사용</span></span>
<span id="cb66-41">    bnb_4bit_quant_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nf4"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 양자화 유형</span></span>
<span id="cb66-42">    bnb_4bit_compute_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float16"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 계산 데이터 타입</span></span>
<span id="cb66-43">    bnb_4bit_use_double_quant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 중첩 양자화 적용</span></span>
<span id="cb66-44">)</span>
<span id="cb66-45"></span>
<span id="cb66-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPU에서 훈련할 모델 로드</span></span>
<span id="cb66-47">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForCausalLM.from_pretrained(</span>
<span id="cb66-48">    model_name,</span>
<span id="cb66-49">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb66-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 일반 SFT의 경우 이 부분 제외</span></span>
<span id="cb66-51">    quantization_config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bnb_config,</span>
<span id="cb66-52">)</span>
<span id="cb66-53">model.config.use_cache <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb66-54">model.config.pretraining_tp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb66-55"></span>
<span id="cb66-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LLaMA 토크나이저 로드</span></span>
<span id="cb66-57">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_name, trust_remote_code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb66-58">tokenizer.pad_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;PAD&gt;"</span></span>
<span id="cb66-59">tokenizer.padding_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span></span>
<span id="cb66-60">tokenizer.chat_template <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> template_tokenizer.chat_template</span>
<span id="cb66-61"></span>
<span id="cb66-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA 설정 준비</span></span>
<span id="cb66-63">peft_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoraConfig(</span>
<span id="cb66-64">    lora_alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA 스케일링</span></span>
<span id="cb66-65">    lora_dropout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA 레이어의 드롭아웃</span></span>
<span id="cb66-66">    r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 랭크</span></span>
<span id="cb66-67">    bias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb66-68">    task_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CAUSAL_LM"</span>,</span>
<span id="cb66-69">    target_modules<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 대상 레이어</span></span>
<span id="cb66-70">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"k_proj"</span>,</span>
<span id="cb66-71">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gate_proj"</span>,</span>
<span id="cb66-72">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v_proj"</span>,</span>
<span id="cb66-73">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up_proj"</span>,</span>
<span id="cb66-74">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q_proj"</span>,</span>
<span id="cb66-75">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o_proj"</span>,</span>
<span id="cb66-76">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"down_proj"</span>,</span>
<span id="cb66-77">    ],</span>
<span id="cb66-78">)</span>
<span id="cb66-79"></span>
<span id="cb66-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련을 위한 모델 준비</span></span>
<span id="cb66-81">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare_model_for_kbit_training(model)</span>
<span id="cb66-82">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_peft_model(model, peft_config)</span>
<span id="cb66-83"></span>
<span id="cb66-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 인자</span></span>
<span id="cb66-85">training_arguments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TrainingArguments(</span>
<span id="cb66-86">    output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>output_dir,</span>
<span id="cb66-87">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb66-88">    gradient_accumulation_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb66-89">    optim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"paged_adamw_32bit"</span>,</span>
<span id="cb66-90">    learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2e-4</span>,</span>
<span id="cb66-91">    lr_scheduler_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>,</span>
<span id="cb66-92">    num_train_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb66-93">    logging_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb66-94">    fp16<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb66-95">    gradient_checkpointing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb66-96">    disable_tqdm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb66-97">)</span>
<span id="cb66-98"></span>
<span id="cb66-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 지도 미세조정 매개변수 설정</span></span>
<span id="cb66-100">trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SFTTrainer(</span>
<span id="cb66-101">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb66-102">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset,</span>
<span id="cb66-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dataset_text_field="text",</span></span>
<span id="cb66-104">    tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer,</span>
<span id="cb66-105">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>training_arguments,</span>
<span id="cb66-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># max_seq_length=512,</span></span>
<span id="cb66-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 일반 SFT의 경우 이 부분 제외</span></span>
<span id="cb66-108">    peft_config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>peft_config,</span>
<span id="cb66-109">)</span>
<span id="cb66-110"></span>
<span id="cb66-111"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 훈련</span></span>
<span id="cb66-112">trainer.train()</span>
<span id="cb66-113"></span>
<span id="cb66-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># QLoRA 가중치 저장</span></span>
<span id="cb66-115">trainer.model.save_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model/TinyLlama-1.1B-qlora"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
      
      <progress value="375" max="375" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [375/375 06:35, Epoch 1/1]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>100</td>
<td>5.425600</td>
</tr>
<tr class="even">
<td>200</td>
<td>5.160700</td>
</tr>
<tr class="odd">
<td>300</td>
<td>5.117600</td>
</tr>
</tbody>
</table>
<p>
</p></div>
</div>
<div id="9f5b495b-71c9-4227-a1d9-eb80933cdf94" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb67-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> peft <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoPeftModelForCausalLM</span>
<span id="cb67-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline</span>
<span id="cb67-3"></span>
<span id="cb67-4">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoPeftModelForCausalLM.from_pretrained(</span>
<span id="cb67-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model/TinyLlama-1.1B-qlora"</span>,</span>
<span id="cb67-6">    low_cpu_mem_usage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb67-7">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb67-8">)</span>
<span id="cb67-9"></span>
<span id="cb67-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA와 기본 모델 병합</span></span>
<span id="cb67-11">merged_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.merge_and_unload()</span>
<span id="cb67-12"></span>
<span id="cb67-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 미리 정의된 프롬프트 템플릿 사용</span></span>
<span id="cb67-14">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""&lt;|user|&gt;</span></span>
<span id="cb67-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">독감 예방 접종이 필요한 이유에 대해 간단히 설명해줘.&lt;/s&gt;</span></span>
<span id="cb67-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;|assistant|&gt;</span></span>
<span id="cb67-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb67-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 튜닝된 모델 실행</span></span>
<span id="cb67-19">pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(task<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-generation"</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>merged_model, tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer)</span>
<span id="cb67-20">pipe(prompt)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>'&lt;|user|&gt;\n독감 예방 접종이 필요한 이유에 대해 간단히 설명해줘.&lt;/s&gt;\n&lt;|assistant|&gt;\nThe reason for preventive treatment is to prevent the spread of the disease and to reduce the risk of complications. This is especially important for people with underlying health conditions, such as diabetes or high blood pressure, who are at higher risk of developing complications.'</code></pre>
</div>
</div>
</section>
</section>
</section>
<section id="생성-모델-평가" class="level3" data-number="3.3.2">
<h3 data-number="3.3.2" class="anchored" data-anchor-id="생성-모델-평가"><span class="header-section-number">3.3.2</span> 생성 모델 평가</h3>
<p>생성 모델을 평가하는 것은 상당한 도전 과제입니다.</p>
<section id="단어-수준-지표" class="level4" data-number="3.3.2.1">
<h4 data-number="3.3.2.1" class="anchored" data-anchor-id="단어-수준-지표"><span class="header-section-number">3.3.2.1</span> 단어 수준 지표</h4>
<p>생성 모델을 비교하는 데 흔히 사용되는 지표 범주 중 하나는 단어 수준 평가입니다. 이러한 전통적인 기법들은 참조 데이터셋과 생성된 토큰을 토큰(집합) 수준에서 비교합니다. 일반적인 단어 수준 지표로는 혼란도(perplexity), ROUGE, BLEU, BERTScore 등이 있습니다.</p>
</section>
<section id="벤치마크" class="level4" data-number="3.3.2.2">
<h4 data-number="3.3.2.2" class="anchored" data-anchor-id="벤치마크"><span class="header-section-number">3.3.2.2</span> 벤치마크</h4>
<p>언어 생성 및 이해 작업에 대한 생성 모델을 평가하는 일반적인 방법은 MMLU, GLUE, TruthfulQA, GSM8k, HellaSwag와 같은 잘 알려진 공개 벤치마크를 사용하는 것입니다.</p>
</section>
<section id="리더보드" class="level4" data-number="3.3.2.3">
<h4 data-number="3.3.2.3" class="anchored" data-anchor-id="리더보드"><span class="header-section-number">3.3.2.3</span> 리더보드</h4>
<p>다양한 벤치마크가 존재하기 때문에 어떤 벤치마크가 자신의 모델에 가장 적합한지 선택하기 어려울 수 있습니다. 모델이 공개될 때마다 여러 벤치마크에서 평가되어 전반적인 성능을 보여주는 경우가 많습니다.</p>
<p>이에 따라 여러 벤치마크를 포함하는 리더보드가 개발되었습니다. 일반적인 리더보드로는 Open LLM Leaderboard가 있으며, 현재 HellaSwag, MMLU, TruthfulQA, GSM8k 등 6개의 벤치마크를 포함하고 있습니다.</p>
</section>
</section>
<section id="선호도-튜닝-ppodpo" class="level3" data-number="3.3.3">
<h3 data-number="3.3.3" class="anchored" data-anchor-id="선호도-튜닝-ppodpo"><span class="header-section-number">3.3.3</span> 선호도 튜닝 (PPO/DPO)</h3>
<p>모델이 지시를 따를 수 있게 되었더라도, 다양한 상황에서 우리가 기대하는 대로 행동하도록 최종 훈련 단계를 통해 더욱 개선할 수 있습니다. 예를 들어, “LLM이란 무엇인가요?”라는 질문에 대해 “대규모 언어 모델입니다”라는 간단한 답변보다는 LLM의 내부 구조를 자세히 설명하는 답변을 선호할 수 있습니다. 그렇다면 어떻게 하나의 답변을 다른 답변보다 선호하는 우리의 (인간의) 선호도를 LLM의 출력과 일치시킬 수 있을까요?</p>
<div id="35944231-bb54-4782-8eb3-d92e83987e4d" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb69-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dataset</span>
<span id="cb69-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> peft <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb69-3">    AutoPeftModelForCausalLM,</span>
<span id="cb69-4">    LoraConfig,</span>
<span id="cb69-5">    get_peft_model,</span>
<span id="cb69-6">    prepare_model_for_kbit_training,</span>
<span id="cb69-7">)</span>
<span id="cb69-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoTokenizer, BitsAndBytesConfig, logging</span>
<span id="cb69-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> trl <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DPOConfig, DPOTrainer</span>
<span id="cb69-10"></span>
<span id="cb69-11"></span>
<span id="cb69-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 전처리</span></span>
<span id="cb69-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> format_prompt(example):</span>
<span id="cb69-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""TinyLLama가 사용하는 &lt;|user|&gt; 템플릿을 사용하여 프롬프트 포맷"""</span></span>
<span id="cb69-15">    system <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;|system|&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb69-16">    prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;|user|&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;|assistant|&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb69-17">    chosen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chosen"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb69-18">    rejected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> example[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rejected"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb69-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {</span>
<span id="cb69-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prompt"</span>: system <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> prompt,</span>
<span id="cb69-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chosen"</span>: chosen,</span>
<span id="cb69-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rejected"</span>: rejected,</span>
<span id="cb69-23">    }</span>
<span id="cb69-24"></span>
<span id="cb69-25"></span>
<span id="cb69-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터셋에 포맷 적용 및 비교적 짧은 답변 선택</span></span>
<span id="cb69-27">dpo_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"argilla/distilabel-intel-orca-dpo-pairs"</span>, split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span>)</span>
<span id="cb69-28">dpo_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dpo_dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb69-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> r: r[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"status"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tie"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> r[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chosen_score"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> r[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in_gsm8k_train"</span>]</span>
<span id="cb69-30">)</span>
<span id="cb69-31">dpo_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dpo_dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(format_prompt, remove_columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dpo_dataset.column_names)</span>
<span id="cb69-32"></span>
<span id="cb69-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 양자화</span></span>
<span id="cb69-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4비트 양자화 설정 - QLoRA의 Q</span></span>
<span id="cb69-35">bnb_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BitsAndBytesConfig(</span>
<span id="cb69-36">    load_in_4bit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4비트 정밀도 모델 로딩 사용</span></span>
<span id="cb69-37">    bnb_4bit_quant_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nf4"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 양자화 타입</span></span>
<span id="cb69-38">    bnb_4bit_compute_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float16"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 계산 데이터 타입</span></span>
<span id="cb69-39">    bnb_4bit_use_double_quant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 중첩 양자화 적용</span></span>
<span id="cb69-40">)</span>
<span id="cb69-41"></span>
<span id="cb69-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA와 기본 모델 병합</span></span>
<span id="cb69-43">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoPeftModelForCausalLM.from_pretrained(</span>
<span id="cb69-44">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model/TinyLlama-1.1B-qlora"</span>,</span>
<span id="cb69-45">    low_cpu_mem_usage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb69-46">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb69-47">    quantization_config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bnb_config,</span>
<span id="cb69-48">)</span>
<span id="cb69-49">merged_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.merge_and_unload()</span>
<span id="cb69-50"></span>
<span id="cb69-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LLaMA 토크나이저 로드</span></span>
<span id="cb69-52">model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TinyLlama/TinyLlama-1.1B-intermediate-step-1431k-3T"</span></span>
<span id="cb69-53">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_name, trust_remote_code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb69-54">tokenizer.pad_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;PAD&gt;"</span></span>
<span id="cb69-55">tokenizer.padding_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span></span>
<span id="cb69-56"></span>
<span id="cb69-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA 설정 준비</span></span>
<span id="cb69-58">peft_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoraConfig(</span>
<span id="cb69-59">    lora_alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA 스케일링</span></span>
<span id="cb69-60">    lora_dropout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA 레이어의 드롭아웃</span></span>
<span id="cb69-61">    r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 랭크</span></span>
<span id="cb69-62">    bias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb69-63">    task_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CAUSAL_LM"</span>,</span>
<span id="cb69-64">    target_modules<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb69-65">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 대상 레이어</span></span>
<span id="cb69-66">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"k_proj"</span>,</span>
<span id="cb69-67">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gate_proj"</span>,</span>
<span id="cb69-68">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v_proj"</span>,</span>
<span id="cb69-69">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up_proj"</span>,</span>
<span id="cb69-70">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q_proj"</span>,</span>
<span id="cb69-71">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o_proj"</span>,</span>
<span id="cb69-72">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"down_proj"</span>,</span>
<span id="cb69-73">    ],</span>
<span id="cb69-74">)</span>
<span id="cb69-75"></span>
<span id="cb69-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련을 위한 모델 준비</span></span>
<span id="cb69-77">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare_model_for_kbit_training(model)</span>
<span id="cb69-78">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_peft_model(model, peft_config)</span>
<span id="cb69-79"></span>
<span id="cb69-80">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model"</span></span>
<span id="cb69-81"></span>
<span id="cb69-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 훈련 인자</span></span>
<span id="cb69-83">training_arguments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DPOConfig(</span>
<span id="cb69-84">    output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>output_dir,</span>
<span id="cb69-85">    per_device_train_batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb69-86">    gradient_accumulation_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb69-87">    optim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"paged_adamw_32bit"</span>,</span>
<span id="cb69-88">    learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-5</span>,</span>
<span id="cb69-89">    lr_scheduler_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>,</span>
<span id="cb69-90">    max_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>,</span>
<span id="cb69-91">    logging_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb69-92">    fp16<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb69-93">    gradient_checkpointing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb69-94">    warmup_ratio<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb69-95">    beta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># beta 값을 여기에 추가</span></span>
<span id="cb69-96">    max_prompt_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>,</span>
<span id="cb69-97">    max_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>,</span>
<span id="cb69-98">    disable_tqdm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb69-99">)</span>
<span id="cb69-100"></span>
<span id="cb69-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DPO 트레이너 생성</span></span>
<span id="cb69-102">dpo_trainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DPOTrainer(</span>
<span id="cb69-103">    model,</span>
<span id="cb69-104">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>training_arguments,</span>
<span id="cb69-105">    train_dataset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dpo_dataset,</span>
<span id="cb69-106">    processing_class<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tokenizer 대신 processing_class 사용</span></span>
<span id="cb69-107">    peft_config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>peft_config,</span>
<span id="cb69-108">)</span>
<span id="cb69-109"></span>
<span id="cb69-110"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DPO로 모델 미세조정</span></span>
<span id="cb69-111">dpo_trainer.train()</span>
<span id="cb69-112"></span>
<span id="cb69-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 어댑터 저장</span></span>
<span id="cb69-114">dpo_trainer.model.save_pretrained(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model/TinyLlama-1.1B-dpo-qlora"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
      
      <progress value="500" max="500" style="width:300px; height:20px; vertical-align: middle;"></progress>
      [500/500 10:36, Epoch 0/1]
    </div>
    
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">Step</th>
<th data-quarto-table-cell-role="th">Training Loss</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>100</td>
<td>0.593300</td>
</tr>
<tr class="even">
<td>200</td>
<td>0.485700</td>
</tr>
<tr class="odd">
<td>300</td>
<td>0.520400</td>
</tr>
<tr class="even">
<td>400</td>
<td>0.476500</td>
</tr>
<tr class="odd">
<td>500</td>
<td>0.489200</td>
</tr>
</tbody>
</table>
<p>
</p></div>
</div>
<div id="82150d4a-2f63-4556-9c53-08c22de77930" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb70-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> peft <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PeftModel</span>
<span id="cb70-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline</span>
<span id="cb70-3"></span>
<span id="cb70-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LoRA와 기본 모델 병합</span></span>
<span id="cb70-5">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoPeftModelForCausalLM.from_pretrained(</span>
<span id="cb70-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model/TinyLlama-1.1B-qlora"</span>,</span>
<span id="cb70-7">    low_cpu_mem_usage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb70-8">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb70-9">)</span>
<span id="cb70-10">sft_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.merge_and_unload()</span>
<span id="cb70-11"></span>
<span id="cb70-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DPO LoRA와 SFT 모델 병합</span></span>
<span id="cb70-13">dpo_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PeftModel.from_pretrained(</span>
<span id="cb70-14">    sft_model,</span>
<span id="cb70-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./model/TinyLlama-1.1B-dpo-qlora"</span>,</span>
<span id="cb70-16">    device_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb70-17">)</span>
<span id="cb70-18">dpo_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dpo_model.merge_and_unload()</span>
<span id="cb70-19"></span>
<span id="cb70-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 정의된 프롬프트 템플릿 사용</span></span>
<span id="cb70-21">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""&lt;|user|&gt;</span></span>
<span id="cb70-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">독감 예방 접종의 중요성에 대해 설명해.&lt;/s&gt;</span></span>
<span id="cb70-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;|assistant|&gt;</span></span>
<span id="cb70-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb70-25"></span>
<span id="cb70-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 튜닝된 모델 실행</span></span>
<span id="cb70-27">pipe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(task<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-generation"</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dpo_model, tokenizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tokenizer)</span>
<span id="cb70-28">pipe(prompt)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>'&lt;|user|&gt;\n독감 예방 접종의 중요성에 대해 설명해.&lt;/s&gt;\n&lt;|assistant|&gt;\nThe importance of preventive treatment in the prevention of chronic diseases has been recognized for centuries. Chronic diseases such as heart disease, stroke, diabetes, and cancer are the leading causes of death worldwide. Preventive treatment is essential to reduce the risk of developing these diseases and improve the quality of life for patients.\n\nPreventive treatment involves a combination of lifestyle changes, medications, and medical interventions. These interventions aim to reduce the risk of developing chronic diseases by modifying the lifestyle of the patient, such as smoking cessation, physical activity, and dietary modification.\n\nPreventive treatment is often recommended for patients with high risk of developing chronic diseases, such as those with a family history of heart disease, diabetes, or cancer. Patients with these risk factors should be screened regularly for early detection of the disease and receive preventive treatment as soon as possible.\n\nIn addition to preventive treatment, patients with chronic diseases should be monitored regularly to detect any changes in their condition and to ensure that they receive the appropriate treatment. This monitoring can help to identify early signs of disease progression and to prevent complications.\n\nIn conclusion, preventive treatment is essential to reduce the risk of developing chronic diseases and improve the quality of life for patients. By following a healthy lifestyle, making lifestyle changes, and receiving preventive treatment, patients can reduce their risk of developing chronic diseases and improve their overall health.'</code></pre>
</div>
</div>
<p>우리가 살펴본 미세 조정 과정은 두 단계로 이루어집니다. 첫 번째 단계에서는 사전 학습된 LLM에 지시 데이터를 사용하여 지도 학습 미세 조정을 수행했으며, 이를 흔히 지시 튜닝이라고 합니다. 이 결과로 채팅과 유사한 행동을 하고 지시를 정확히 따를 수 있는 모델이 만들어졌습니다.</p>
<p>두 번째 단계에서는 정렬 데이터, 즉 어떤 유형의 답변이 다른 답변보다 선호되는지를 나타내는 데이터로 모델을 더욱 개선했습니다. 선호도 튜닝이라고 불리는 이 과정은 이전에 지시 튜닝된 모델에 인간의 선호도를 주입합니다.</p>
<p>SFT+DPO의 조합을 통한 미세 조절은 훌륭한 방법이지만 두 번의 훈련 루프를 수행하고 두 과정에서 매개변수를 조정해야기 때문에 많은 계산 비용이 발생합니다. 이런 점을 극복하기 위해 새로운 방법들이 나오고 있는데 그 중에 주목할 만한 것은 Odds Ratio Preference Optimization(ORPO)으로 SFT와 DPO를 단일 훈련 과정으로 결합한 것입니다. 이 방법은 두 개의 별도 훈련 루프를 제거해 훈련 과정을 단순화하면서도 QLoRA의 사용을 가능하게 합니다.</p>
</section>
</section>
</section>
<section id="마치며" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 마치며</h1>
<p>이 글을 통해 우리는 LLM이 어떻게 분류, 생성, 언어 표현을 포함한 특정 작업에 사용할 수 있는지, 그리고 사전 학습된 LLM을 미세 조정하는 다양한 방법을 살펴봤습니다. 이런 기술을 익힘으로써 여러분들은 LLM을 활용해 혁신적인 솔루션을 만들 수 있을 것입니다. 마무리하면서 LLM에 대한 우리의 탐구는 아직 시작에 불과하다는 점을 강조하고 싶습니다. 앞으로 더 많은 흥미로운 발전이 있을 것이며 여러분이 이 분야의 진보를 계속 주시하기를 권장합니다.</p>
</section>
<section id="참고-자료" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 참고 자료</h1>
<ul>
<li><a href="https://github.com/HandsOnLLM/Hands-On-Large-Language-Models">Hands on large language model repo</a></li>
<li><a href="https://github.com/rasbt/LLMs-from-scratch">LLM rfrom scratch</a></li>
<li><a href="https://github.com/philschmid/deep-learning-pytorch-huggingface">Deep learning with pytorch</a></li>
</ul>


</section>

 ]]></description>
  <category>LLM</category>
  <category>Machine Learning</category>
  <category>Python</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/LLM_HansOnLLM.html</guid>
  <pubDate>Sun, 26 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>타이핑으로 소비되는 칼로리</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/typecount.html</link>
  <description><![CDATA[ 





<p>문득 타이핑이 얼마나 많은 칼로리를 소모하는지 궁금해졌습니다. 하루 종일 키보드를 두드리면 꽤 많은 운동이 되지 않을까 하는 생각이 들었고 찾아보니 이미 계산해본 사람이 있었습니다.[^1] 이 글은 사실상 원저자의 글을 번역하고 추가로 코드 작성을 한 것입니다. 타이핑으로 소모되는 칼로리를 알아보기 위해 다음과 같은 단계로 계산해 보았습니다.</p>
<ol type="1">
<li>1분 타이핑에 소모되는 칼로리 계산</li>
<li>하루 동안의 타이핑 횟수 측정</li>
<li>하루 총 소모 칼로리 계산</li>
</ol>
<blockquote class="blockquote">
<p>이 글은 비전문적임으로 재미로만 읽어 주시면 좋겠습니다.</p>
</blockquote>
<section id="분-타이핑-칼로리-소모량-계산" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 1분 타이핑 칼로리 소모량 계산</h1>
<p>타이핑 횟수를 측정하기 위해 아래와 같이 파이썬으로 간단한 GUI 프로그램을 만들었습니다. 혹시 나중에 개선할 지도 몰라서 <a href="https://github.com/partrita/typecount">깃헙저장소</a>에 올려두었습니다.</p>
<section id="파이썬-코드" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="파이썬-코드"><span class="header-section-number">1.1</span> 파이썬 코드</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tkinter <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tk</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pynput.keyboard <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Listener</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> csv</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> date</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> TypingCounter:</span>
<span id="cb1-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, master):</span>
<span id="cb1-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.master <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> master</span>
<span id="cb1-10">        master.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Typing Counter v0.2.0"</span>)</span>
<span id="cb1-11">        master.geometry(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"200x200+100+100"</span>)</span>
<span id="cb1-12"></span>
<span id="cb1-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.is_counting <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.csv_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"typing_count.csv"</span></span>
<span id="cb1-16"></span>
<span id="cb1-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tk.Label(master, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count: 0"</span>)</span>
<span id="cb1-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.label.pack(pady<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.start_button <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tk.Button(master, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Start"</span>, command<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.start_counting)</span>
<span id="cb1-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.start_button.pack()</span>
<span id="cb1-22"></span>
<span id="cb1-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stop_button <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tk.Button(master, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stop"</span>, command<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stop_counting, state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tk.DISABLED)</span>
<span id="cb1-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stop_button.pack()</span>
<span id="cb1-25"></span>
<span id="cb1-26">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.save_button <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tk.Button(master, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Save"</span>, command<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.save_count)</span>
<span id="cb1-27">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.save_button.pack()</span>
<span id="cb1-28"></span>
<span id="cb1-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.quit_button <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tk.Button(master, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quit"</span>, command<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>master.quit)</span>
<span id="cb1-30">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.quit_button.pack()</span>
<span id="cb1-31"></span>
<span id="cb1-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.listener <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb1-33"></span>
<span id="cb1-34">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> start_counting(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-35">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.is_counting <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-36">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.start_button.config(state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tk.DISABLED)</span>
<span id="cb1-37">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stop_button.config(state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tk.NORMAL)</span>
<span id="cb1-38">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.listener <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Listener(on_press<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.on_press)</span>
<span id="cb1-39">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.listener.start()</span>
<span id="cb1-40"></span>
<span id="cb1-41">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> stop_counting(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-42">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.is_counting <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-43">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.start_button.config(state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tk.NORMAL)</span>
<span id="cb1-44">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stop_button.config(state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tk.DISABLED)</span>
<span id="cb1-45">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.listener:</span>
<span id="cb1-46">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.listener.stop()</span>
<span id="cb1-47"></span>
<span id="cb1-48">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_press(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, key):</span>
<span id="cb1-49">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.is_counting:</span>
<span id="cb1-50">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-51">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.label.config(text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Count: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-52"></span>
<span id="cb1-53">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> save_count(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-54">        today <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> date.today().isoformat()</span>
<span id="cb1-55">        data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [today, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.count]</span>
<span id="cb1-56">        </span>
<span id="cb1-57">        file_exists <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.isfile(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.csv_file)</span>
<span id="cb1-58">        </span>
<span id="cb1-59">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.csv_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>, newline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb1-60">            writer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> csv.writer(f)</span>
<span id="cb1-61">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> file_exists:</span>
<span id="cb1-62">                writer.writerow([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>])</span>
<span id="cb1-63">            writer.writerow(data)</span>
<span id="cb1-64">        </span>
<span id="cb1-65">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Data saved: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-66"></span>
<span id="cb1-67">root <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tk.Tk()</span>
<span id="cb1-68">app <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TypingCounter(root)</span>
<span id="cb1-69">root.mainloop()</span></code></pre></div>
<p>이 코드는 다음과 같은 기능을 제공합니다:</p>
<ol type="1">
<li>시작 버튼: 타이핑 카운트를 시작합니다.</li>
<li>종료 버튼: 타이핑 카운트를 중지합니다.</li>
<li>저장 버튼: 현재 날짜와 타이핑 횟수를 CSV 파일에 저장합니다.</li>
<li>종료 버튼: 프로그램을 종료합니다.</li>
</ol>
<p>CSV 파일 (‘typing_count.csv’)은 스크립트가 있는 폴더에 생성되며, 이미 파일이 존재하면 새로운 데이터를 추가합니다. 파일이 없으면 새로 생성하고 헤더를 추가합니다.이 프로그램은 사용자가 시작 버튼을 누를 때부터 타이핑 횟수를 세기 시작하고, 종료 버튼을 누르면 카운팅을 중지합니다. 저장 버튼을 누르면 현재 날짜와 카운트를 CSV 파일에 저장합니다.</p>
</section>
<section id="심박수-기반의-칼로리-소모량-측정-공식" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="심박수-기반의-칼로리-소모량-측정-공식"><span class="header-section-number">1.2</span> 심박수 기반의 칼로리 소모량 측정 공식</h2>
<p>타이핑 중 소모되는 칼로리를 측정하기 위해 심박수를 기준으로 삼았습니다. 일반적으로 사용되는 공식은 다음과 같습니다:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B%EC%86%8C%EB%AA%A8%20%EC%B9%BC%EB%A1%9C%EB%A6%AC%20(kcal/min)%7D%20=%20%5Cfrac%7B%5Ctext%7B%EC%8B%AC%EB%B0%95%EC%88%98%20(bpm)%7D%20%5Ctimes%20%5Ctext%7B%EC%B2%B4%EC%A4%91%20(kg)%7D%20%5Ctimes%200.6309%7D%7B1000%7D%0A"></p>
<ul>
<li><strong>A:</strong> 안정시 심박수에서 소모된 칼로리</li>
<li><strong>B:</strong> 타이핑 중 심박수에 의해 소모되는 칼로리</li>
</ul>
</section>
<section id="apple-watch로-심박수-측정" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="apple-watch로-심박수-측정"><span class="header-section-number">1.3</span> Apple Watch로 심박수 측정</h2>
<ul>
<li>안정시 심박수: <strong>88 bpm</strong></li>
<li>타이핑 중 심박수: <strong>97 bpm</strong></li>
</ul>
</section>
<section id="분-타이핑으로-소모된-칼로리-계산" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="분-타이핑으로-소모된-칼로리-계산"><span class="header-section-number">1.4</span> 1분 타이핑으로 소모된 칼로리 계산</h2>
<p>체중은 65kg으로 가정합니다.</p>
<ul>
<li><p>A: 안정시 심박수에서 소모된 칼로리 <img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B%EC%86%8C%EB%AA%A8%20%EC%B9%BC%EB%A1%9C%EB%A6%AC%7D%20=%20%5Cfrac%7B88%20%5Ctimes%2065%20%5Ctimes%200.6309%7D%7B1000%7D%20%5Capprox%203.6087%20%5Ctext%7B%20Kcal%7D%0A"></p></li>
<li><p>B: 타이핑 중 소모된 칼로리 <img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B%EC%86%8C%EB%AA%A8%20%EC%B9%BC%EB%A1%9C%EB%A6%AC%7D%20=%20%5Cfrac%7B97%20%5Ctimes%2065%20%5Ctimes%200.6309%7D%7B1000%7D%20%5Capprox%203.9778%20%5Ctext%7B%20Kcal%7D%0A"></p></li>
<li><p>AB: 약 1분 동안의 차이는 <img src="https://latex.codecogs.com/png.latex?%0A3.9778%20-%203.6087%20%5Capprox%200.3691%20%5Ctext%7B%20Kcal%7D%0A"></p></li>
<li><p>한 번의 타이핑으로 소모되는 칼로리는 <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B0.3691%7D%7B222%7D%20%5Capprox%200.0016%20%5Ctext%7B%20Kcal%7D%0A"></p></li>
</ul>
<p>결과적으로 한 번의 타이핑으로 약 <strong>0.0016 Kcal</strong>를 소비하는 것으로 나타났습니다.</p>
</section>
</section>
<section id="하루-평균-얼마나-타이핑-하는지-측정" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 하루 평균 얼마나 타이핑 하는지 측정</h1>
<p>앞서 만든 프로그램으로 연말 기간동안 하루의 타이핑량을 측정해서 CSV 파일로 저장했습니다. 아래는 그 결과를 불러와서 시각화하는 코드입니다.</p>
<div id="cell-3" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb2-4"></span>
<span id="cb2-5">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../typing_count.csv"</span>)</span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 날짜 열을 datetime 형식으로 변환</span></span>
<span id="cb2-7">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.to_datetime(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>])</span>
<span id="cb2-8">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Date</th>
<th data-quarto-table-cell-role="th">Count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>2024-12-12</td>
<td>14246</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2024-12-13</td>
<td>19144</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>2024-12-14</td>
<td>18096</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2024-12-15</td>
<td>24999</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>2024-12-16</td>
<td>23141</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<section id="평균-타이핑-시각화" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="평균-타이핑-시각화"><span class="header-section-number">2.1</span> 평균 타이핑 시각화</h2>
<div id="cell-5" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전체 평균값 계산</span></span>
<span id="cb3-2">overall_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>].mean()</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 서브플롯 생성 (비율 조정)</span></span>
<span id="cb3-5">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb3-6">gs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_gridspec(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4:1 비율로 그리드 설정</span></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 첫 번째 플롯: 선 그래프 (4칸 차지)</span></span>
<span id="cb3-9">ax1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(gs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb3-10">ax1.plot(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>], df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>], marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>)</span>
<span id="cb3-11">ax1.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-12">ax1.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-13">ax1.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb3-14">ax1.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb3-15">ax1.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb3-16">fig.autofmt_xdate()</span>
<span id="cb3-17">ax1.set_ylim(bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, count <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>]):</span>
<span id="cb3-19">    ax1.annotate(</span>
<span id="cb3-20">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(count),</span>
<span id="cb3-21">        (df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date"</span>][i], count),</span>
<span id="cb3-22">        textcoords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"offset points"</span>,</span>
<span id="cb3-23">        xytext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>),</span>
<span id="cb3-24">        ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb3-25">    )</span>
<span id="cb3-26"></span>
<span id="cb3-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 두 번째 플롯: 스웜 플롯 (1칸 차지)</span></span>
<span id="cb3-28">ax2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(gs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb3-29">sns.swarmplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"All Dates"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df), y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax2)</span>
<span id="cb3-30">ax2.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-31">ax2.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-32">ax2.axhline(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>overall_mean, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Mean: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>overall_mean<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-33">ax2.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb3-34">ax2.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb3-35">ax2.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb3-36"></span>
<span id="cb3-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 레이아웃 조정 및 출력</span></span>
<span id="cb3-38">plt.tight_layout()</span>
<span id="cb3-39">plt.show()</span>
<span id="cb3-40"></span>
<span id="cb3-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 평균값 출력</span></span>
<span id="cb3-42"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Overall Mean: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>overall_mean<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="typecount_files/figure-html/cell-3-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/typecount_files/figure-html/cell-3-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Overall Mean: 18511.13</code></pre>
</div>
</div>
<p>위 결과를 통해 하루에 타이핑으로 소비되는 총 칼로리를 계산 할 수 있습니다.</p>
</section>
</section>
<section id="하루-타이핑-총-소모-칼로리-계산" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 하루 타이핑 총 소모 칼로리 계산</h1>
<p>하루 평균 타이핑 횟수가 <strong>18,511회</strong> 임으로</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7B%EC%9D%BC%EC%9D%BC%20%EC%B9%BC%EB%A1%9C%EB%A6%AC%20%EC%86%8C%EB%B9%84%EB%9F%89%7D%20=%2018,511%20%5Ctimes%200.0016%20%5Capprox%2029.6176%20%5Ctext%7B%20Kcal%7D%0A"></p>
<p>타이핑으로 하루 동안 소모되는 칼로리는 약 <strong>29.6 Kcal</strong>입니다.</p>
<section id="결론" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="결론"><span class="header-section-number">3.1</span> 결론</h2>
<p>29.6 Kcal는 제 예상보다는 높은 수치지만 초콜릿 한 조각에 해당하는 열량이라고 합니다. 만약 운동으로 이 정도의 칼로리를 소모하려면 걷기 10분 정도가 필요하다고 합니다. 역시 앉아서 타이핑만 하지 말고 좀 걸어야 겠습니다.</p>
</section>
</section>
<section id="reference" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Reference</h1>
<p>[^1] : https://qiita.com/mercy-333/items/cf2e0f0b040926184004</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>Visualization</category>
  <category>Health</category>
  <category>Fitness</category>
  <category>Productivity</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/typecount.html</guid>
  <pubDate>Wed, 22 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Calplot: 파이썬으로 만드는 멋진 캘린더 히트맵</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/ipynb/Python_calplot.html</link>
  <description><![CDATA[ 





<p><a href="https://github.com/tomkwok/calplot">calplot</a>은 파이썬에서 시계열 데이터를 시각적으로 표현할 수 있는 라이브러리입니다. 이 라이브러리를 사용하면 GitHub의 기여도 그래프와 유사한 캘린더 형태의 히트맵을 쉽게 만들 수 있습니다. 이번 포스팅에서는 <a href="https://meteostat.net">Meteostat</a> 라이브러리를 사용하여 날씨 데이터를 가져오고 캘린더 형태로 시각화하는 방법을 소개합니다. 라이브러리를 통해 연도별 데이터를 직관적으로 표현합니다. 특히, 평균 기온과 일교차를 시각화하는 과정을 다룹니다.</p>
<section id="사용한-기술-및-라이브러리" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 사용한 기술 및 라이브러리</h1>
<ul>
<li>Meteostat: 기상 데이터를 편리하게 가져오는 라이브러리로, 특정 지역의 기상 관측소 데이터를 활용합니다.</li>
<li>Calplot: 캘린더 형식으로 데이터를 시각화할 수 있는 강력한 도구입니다.</li>
</ul>
</section>
<section id="초기-설정" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 초기 설정</h1>
<p>필요한 상수와 폰트를 설정해야 합니다. 서울 날씨를 가져오기 위해서는 GPS 좌표를 상수로 제공해야 하고 한글 폰트를 설정해 그래프에서 한글이 깨지지 않도록 합니다. 날씨 데이터는 2020년부터 2024년까지 4년치를 불러오도록 하겠습니다.</p>
<section id="초기-설정-1" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="초기-설정-1"><span class="header-section-number">2.1</span> 초기 설정</h2>
<p>먼저, 필요한 상수와 한글 폰트를 설정합니다. 서울의 GPS 좌표를 기반으로 데이터를 가져오며, 한글 폰트를 설정해 그래프에서 한글이 깨지지 않도록 합니다.</p>
<div id="8a8ba9e4-83e7-4a58-81f1-37da6d9128b6" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> calplot</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> meteostat <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Daily, Point, Stations</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Constants</span></span>
<span id="cb1-9">NAME: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"서울"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 지역 이름</span></span>
<span id="cb1-10">GPS: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">37.5667</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">126.9667</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPS 좌표</span></span>
<span id="cb1-11">START: datetime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조회 시작</span></span>
<span id="cb1-12">END: datetime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2024</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">31</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조회 끝</span></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 한글 폰트 설정</span></span>
<span id="cb1-15">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font.family"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pretendard Variable"</span></span>
<span id="cb1-16">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"axes.unicode_minus"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
</div>
</section>
</section>
<section id="기상-관측소-데이터와서-편집하기" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 기상 관측소 데이터와서 편집하기</h1>
<p><a href="https://github.com/meteostat/meteostat-python">Meteostat</a> 라이브러리를 사용하여 서울 근처 기상 관측소 데이터를 선택합니다. 날씨 데이터를 가져온 뒤에는 일교차(최고 기온(tmax)과 최저 기온(tmin)의 차이), 눈/비 여부(강수량(prcp) 또는 적설량(snow)이 있는 경우 1, 없는 경우 NaN)에 대한 데이터를 열을 추가해줍니다.</p>
<div id="3e6bab5c-d759-471f-a462-b15367967d76" class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">stations: Stations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Stations()</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get nearby weather stations based on latitude and longitude</span></span>
<span id="cb2-4">nearby_stations: Stations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stations.nearby(GPS[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], GPS[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPS 튜플 언패킹</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fetch the first station's data</span></span>
<span id="cb2-7">station_data: pd.DataFrame <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nearby_stations.fetch(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print station information</span></span>
<span id="cb2-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"선택된 관측소: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>station_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>values[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the coordinates of the selected station</span></span>
<span id="cb2-13">location: Point <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Point(station_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latitude"</span>].values[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], station_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"longitude"</span>].values[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fetch weather data</span></span>
<span id="cb2-16">weather_data: pd.DataFrame <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Daily(location, start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>START, end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>END).fetch()</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 일교차 계산</span></span>
<span id="cb2-19">weather_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"diurnal_range"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> weather_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmax"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> weather_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmin"</span>]</span>
<span id="cb2-20"></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 눈이나 비가 온 날은 1로, 오지 않은 날은 NaN으로 표기하는 새로운 열 추가</span></span>
<span id="cb2-22">weather_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rain_or_snow"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> weather_data.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(</span>
<span id="cb2-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> row: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prcp"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"snow"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nan"</span>), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-24">)</span>
<span id="cb2-25"></span>
<span id="cb2-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the last few rows of the data</span></span>
<span id="cb2-27">weather_data.tail()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>선택된 관측소: Seoul</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="32">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">tavg</th>
<th data-quarto-table-cell-role="th">tmin</th>
<th data-quarto-table-cell-role="th">tmax</th>
<th data-quarto-table-cell-role="th">prcp</th>
<th data-quarto-table-cell-role="th">snow</th>
<th data-quarto-table-cell-role="th">wdir</th>
<th data-quarto-table-cell-role="th">wspd</th>
<th data-quarto-table-cell-role="th">wpgt</th>
<th data-quarto-table-cell-role="th">pres</th>
<th data-quarto-table-cell-role="th">tsun</th>
<th data-quarto-table-cell-role="th">diurnal_range</th>
<th data-quarto-table-cell-role="th">rain_or_snow</th>
</tr>
<tr class="even">
<th data-quarto-table-cell-role="th">time</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">2024-12-27</td>
<td>-2.6</td>
<td>-5.5</td>
<td>-0.7</td>
<td>0.0</td>
<td>NaN</td>
<td>283.0</td>
<td>8.7</td>
<td>NaN</td>
<td>1026.6</td>
<td>NaN</td>
<td>4.8</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2024-12-28</td>
<td>-2.1</td>
<td>-6.7</td>
<td>-1.4</td>
<td>0.0</td>
<td>NaN</td>
<td>284.0</td>
<td>8.2</td>
<td>NaN</td>
<td>1024.3</td>
<td>NaN</td>
<td>5.3</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2024-12-29</td>
<td>2.6</td>
<td>-4.2</td>
<td>4.1</td>
<td>0.0</td>
<td>NaN</td>
<td>70.0</td>
<td>5.1</td>
<td>NaN</td>
<td>1024.9</td>
<td>NaN</td>
<td>8.3</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2024-12-30</td>
<td>4.8</td>
<td>1.9</td>
<td>9.3</td>
<td>0.2</td>
<td>NaN</td>
<td>351.0</td>
<td>8.6</td>
<td>NaN</td>
<td>1018.7</td>
<td>NaN</td>
<td>7.4</td>
<td>1.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2024-12-31</td>
<td>0.1</td>
<td>-1.4</td>
<td>4.4</td>
<td>0.0</td>
<td>NaN</td>
<td>281.0</td>
<td>9.9</td>
<td>NaN</td>
<td>1020.6</td>
<td>NaN</td>
<td>5.8</td>
<td>NaN</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="시각화-하기" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 시각화 하기</h1>
<section id="평균-기온-캘린더-플롯" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="평균-기온-캘린더-플롯"><span class="header-section-number">4.1</span> 평균 기온 캘린더 플롯</h2>
<p>calplot을 사용해 연도별 평균 기온을 캘린더 형태로 시각화합니다. 색상 맵은 coolwarm으로 설정해 표현합니다.</p>
<div id="061c73c4" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 시각화</span></span>
<span id="cb4-2">calplot.calplot(</span>
<span id="cb4-3">    weather_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tavg"</span>],</span>
<span id="cb4-4">    cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"coolwarm"</span>,</span>
<span id="cb4-5">    yearascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb4-6">    yearlabel_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>},</span>
<span id="cb4-7">    suptitle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>NAME<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> 평균 기온"</span>,</span>
<span id="cb4-8">    suptitle_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>},</span>
<span id="cb4-9">)</span>
<span id="cb4-10">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="Python_calplot_files/figure-html/cell-4-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/ipynb/Python_calplot_files/figure-html/cell-4-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>위 시각화 결과를 보면 2021년 1월달의 평균 기온이 유난히 낮았다는 것과 2024년 12월의 평균기온이 상당히 높다는 것을 알 수 있습니다. 그리고 여름이 계속 더워지고 있다는 추세가 보이는 것 같습니다.</p>
</section>
<section id="일교차-캘린더-플롯" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="일교차-캘린더-플롯"><span class="header-section-number">4.2</span> 일교차 캘린더 플롯</h2>
<p>일반적으로 일교차는 봄과 가을이 심하다고 알고있는데 실제로 그런지 확인해보겠습니다. 일교차 데이터를 캘린더 플롯으로 표현하고 색상 맵은 YlGn으로 설정해 녹색 계열로 변화를 나타냅니다.</p>
<div id="e17a18d3" class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 시각화</span></span>
<span id="cb5-2">calplot.calplot(</span>
<span id="cb5-3">    weather_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"diurnal_range"</span>],</span>
<span id="cb5-4">    cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YlGn"</span>,</span>
<span id="cb5-5">    yearascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb5-6">    yearlabel_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>},</span>
<span id="cb5-7">    suptitle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>NAME<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> 일교차"</span>,</span>
<span id="cb5-8">    suptitle_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>},</span>
<span id="cb5-9">)</span>
<span id="cb5-10">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><a href="Python_calplot_files/figure-html/cell-5-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://tomorrow-lab.github.io/posts/ipynb/Python_calplot_files/figure-html/cell-5-output-1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
</div>
<p>일교차는 더운 기간(7-9월) 제외하고는 패턴을 찾기 힘들어 보입니다. 그리고 가을 보다 봄(3-4월)이 확실히 일교차가 심한 것을 알 수 있네요.</p>
</section>
</section>
<section id="마치며" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 마치며</h1>
<p>이 글에서는 calplot을 활용해 서울의 날씨 데이터를 효과적으로 시각화하는 방법을 보여줬습니다. calplot은 날씨 데이터 이외에도 건강 및 피트니스 데이터, 생산성 및 업무 관리 데이터, 환경 모니터링 데이터등의 시계열 데이터를 효과적으로 시각해서 데이터의 패턴과 추세를 직관적으로 파악하는 데 큰 도움을 줍니다. 그러면 데이터 분석과 의사 결정에 큰 도움이 될 것입니다. 여러분의 분야에서도 calplot을 활용해 새로운 통찰을 발견해보세요.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>Visualization</category>
  <category>Calplot</category>
  <guid>https://tomorrow-lab.github.io/posts/ipynb/Python_calplot.html</guid>
  <pubDate>Sat, 18 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>코딩테스트 입문</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Codingtest_beginer.html</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Codingtest_beginer.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Codingtest_beginer.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>코딩테스트 입문 테스트의 출처는 https://school.programmers.co.kr 입니다.</p>
<section id="day1-사칙연산" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Day1 사칙연산</h1>
<section id="두-수의-합" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="두-수의-합"><span class="header-section-number">1.1</span> 두 수의 합</h2>
<p>정수&nbsp;<code>num1</code> 과&nbsp;<code>num2</code> 가 주어질 때,&nbsp;<code>num1</code> 과&nbsp;<code>num2</code> 의 합을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬" class="level3" data-number="1.1.1">
<h3 data-number="1.1.1" class="anchored" data-anchor-id="파이썬"><span class="header-section-number">1.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb1-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num2</span></code></pre></div>
</section>
<section id="러스트" class="level3" data-number="1.1.2">
<h3 data-number="1.1.2" class="anchored" data-anchor-id="러스트"><span class="header-section-number">1.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-2">    num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num2</span>
<span id="cb2-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The sum of {} and {} is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="두-수의-차" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="두-수의-차"><span class="header-section-number">1.2</span> 두 수의 차</h2>
<p>정수&nbsp;<code>num1</code> 과&nbsp;<code>num2</code> 가 주어질 때,&nbsp;<code>num1</code> 에서&nbsp;<code>num2</code> 를 뺀 값을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-1" class="level3" data-number="1.2.1">
<h3 data-number="1.2.1" class="anchored" data-anchor-id="파이썬-1"><span class="header-section-number">1.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb3-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> num2</span></code></pre></div>
</section>
<section id="러스트-1" class="level3" data-number="1.2.2">
<h3 data-number="1.2.2" class="anchored" data-anchor-id="러스트-1"><span class="header-section-number">1.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-2">    num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> num2</span>
<span id="cb4-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result of {} - {} is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="두-수의-곱" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="두-수의-곱"><span class="header-section-number">1.3</span> 두 수의 곱</h2>
<p>정수&nbsp;<code>num1</code>,&nbsp;<code>num2</code> 가 매개변수 주어집니다.&nbsp;<code>num1</code> 과&nbsp;<code>num2</code> 를 곱한 값을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-2" class="level3" data-number="1.3.1">
<h3 data-number="1.3.1" class="anchored" data-anchor-id="파이썬-2"><span class="header-section-number">1.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb5-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> num2</span></code></pre></div>
</section>
<section id="러스트-2" class="level3" data-number="1.3.2">
<h3 data-number="1.3.2" class="anchored" data-anchor-id="러스트-2"><span class="header-section-number">1.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-2">    num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> num2</span>
<span id="cb6-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result of {} * {} is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="몫-구하기" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="몫-구하기"><span class="header-section-number">1.4</span> 몫 구하기</h2>
<p>정수&nbsp;<code>num1</code>,&nbsp;<code>num2</code> 가 매개변수로 주어질 때,&nbsp;<code>num1</code> 을&nbsp;<code>num2</code> 로 나눈 몫을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-3" class="level3" data-number="1.4.1">
<h3 data-number="1.4.1" class="anchored" data-anchor-id="파이썬-3"><span class="header-section-number">1.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> , num2:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb7-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> num2</span></code></pre></div>
</section>
<section id="러스트-3" class="level3" data-number="1.4.2">
<h3 data-number="1.4.2" class="anchored" data-anchor-id="러스트-3"><span class="header-section-number">1.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-2">    num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> num2</span>
<span id="cb8-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-8"></span>
<span id="cb8-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ensure num2 is not zero to avoid division by zero error</span></span>
<span id="cb8-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-12">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result of {} // {} is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-14">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error: Division by zero is not allowed."</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day2-사칙연산-조건문-배열" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Day2 사칙연산, 조건문, 배열</h1>
<section id="두-수의-나눗셈" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="두-수의-나눗셈"><span class="header-section-number">2.1</span> 두 수의 나눗셈</h2>
<p>정수 num1 과 num2 가 매개변수로 주어질 때, num1 을 num2 로 나눈 값에 1,000 을 곱한 후 정수 부분을 return 하도록 soltuion 함수를 완성해주세요.</p>
<section id="파이썬-4" class="level3" data-number="2.1.1">
<h3 data-number="2.1.1" class="anchored" data-anchor-id="파이썬-4"><span class="header-section-number">2.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1L <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb9-2">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb9-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(answer)</span></code></pre></div>
</section>
<section id="러스트-4" class="level3" data-number="2.1.2">
<h3 data-number="2.1.2" class="anchored" data-anchor-id="러스트-4"><span class="header-section-number">2.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> num2 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-3">    answer <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb10-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Using f64 for floating-point division</span></span>
<span id="cb10-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-9"></span>
<span id="cb10-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-12">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result of ({} / {}) * 1000 is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-14">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error: Division by zero is not allowed."</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="숫자-비교하기" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="숫자-비교하기"><span class="header-section-number">2.2</span> 숫자 비교하기</h2>
<p>정수 num1 과 num2 가 매개변수로 주어집니다. 두 수가 같으면 1 다르면 -1 을 retrun 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-5" class="level3" data-number="2.2.1">
<h3 data-number="2.2.1" class="anchored" data-anchor-id="파이썬-5"><span class="header-section-number">2.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb11-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> num2:</span>
<span id="cb11-3">        answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb11-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span>
<span id="cb11-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb11-6">        answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb11-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-5" class="level3" data-number="2.2.2">
<h3 data-number="2.2.2" class="anchored" data-anchor-id="러스트-5"><span class="header-section-number">2.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-8"></span>
<span id="cb12-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-12"></span>
<span id="cb12-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result of comparing {} and {} is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="분수의-덧셈" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="분수의-덧셈"><span class="header-section-number">2.3</span> 분수의 덧셈</h2>
<p>첫 번째 분수의 분자와 분모를 뜻하는 numer1, denom1, 두 번째 분수의 분자와 분모를 뜻하는 numer2, denom2 가 매개변수로 주어집니다. 두 분수를 더한 값을 기약 분수로 나타냈을 때 분자와 분모를 순서대로 담은 배열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-6" class="level3" data-number="2.3.1">
<h3 data-number="2.3.1" class="anchored" data-anchor-id="파이썬-6"><span class="header-section-number">2.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gcd(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb13-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b:</span>
<span id="cb13-5">        a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> b</span>
<span id="cb13-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a</span>
<span id="cb13-7"></span>
<span id="cb13-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numer1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, denom1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, numer2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, denom2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb13-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fraction addition</span></span>
<span id="cb13-10">    numer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numer1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> denom2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> numer2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> denom1</span>
<span id="cb13-11">    denom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> denom1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> denom2</span>
<span id="cb13-12"></span>
<span id="cb13-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reduce to simplest form</span></span>
<span id="cb13-14">    divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gcd(numer, denom)</span>
<span id="cb13-15">    numer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> divisor</span>
<span id="cb13-16">    denom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> divisor</span>
<span id="cb13-17"></span>
<span id="cb13-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [numer, denom]</span></code></pre></div>
</section>
<section id="러스트-6" class="level3" data-number="2.3.2">
<h3 data-number="2.3.2" class="anchored" data-anchor-id="러스트-6"><span class="header-section-number">2.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb14-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> gcd(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-6">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-7">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-9">    a</span>
<span id="cb14-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-11"></span>
<span id="cb14-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numer1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> denom1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> numer2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> denom2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fraction addition</span></span>
<span id="cb14-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numer1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> denom2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> numer2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> denom1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> denom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> denom1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> denom2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-16"></span>
<span id="cb14-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Reduce to simplest form</span></span>
<span id="cb14-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gcd(numer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> denom)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> reduced_numer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> divisor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> reduced_denom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> denom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> divisor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-21"></span>
<span id="cb14-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[reduced_numer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> reduced_denom]</span>
<span id="cb14-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-24"></span>
<span id="cb14-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numer1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// First numerator</span></span>
<span id="cb14-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> denom1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// First denominator</span></span>
<span id="cb14-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numer2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Second numerator</span></span>
<span id="cb14-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> denom2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Second denominator</span></span>
<span id="cb14-30"></span>
<span id="cb14-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(numer1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> denom1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> numer2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> denom2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-32">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result of adding fractions is {}/{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-33"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-두-배-만들기" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="배열-두-배-만들기"><span class="header-section-number">2.4</span> 배열 두 배 만들기</h2>
<p>정수 배열 numbers 가 매개변수로 주어집니다. numbers 의 각 원소에 두배한 원소를 가진 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-7" class="level3" data-number="2.4.1">
<h3 data-number="2.4.1" class="anchored" data-anchor-id="파이썬-7"><span class="header-section-number">2.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb15-2"></span>
<span id="cb15-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb15-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numbers]</span></code></pre></div>
</section>
<section id="러스트-7" class="level3" data-number="2.4.2">
<h3 data-number="2.4.2" class="anchored" data-anchor-id="러스트-7"><span class="header-section-number">2.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb16-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-2">    numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb16-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-4"></span>
<span id="cb16-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb16-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> doubled_numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-8"></span>
<span id="cb16-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doubled numbers: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> doubled_numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day3-사칙연산-배열-수학" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Day3 사칙연산, 배열, 수학</h1>
<section id="나머지-구하기" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="나머지-구하기"><span class="header-section-number">3.1</span> 나머지 구하기</h2>
<p>정수 num1, num2 가 매개변수로 주어질 때, num1 를 num2 로 나눈 나머지를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-8" class="level3" data-number="3.1.1">
<h3 data-number="3.1.1" class="anchored" data-anchor-id="파이썬-8"><span class="header-section-number">3.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb17-2">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> num2</span>
<span id="cb17-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-8" class="level3" data-number="3.1.2">
<h3 data-number="3.1.2" class="anchored" data-anchor-id="러스트-8"><span class="header-section-number">3.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-3">    answer</span>
<span id="cb18-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-5"></span>
<span id="cb18-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb18-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb18-9"></span>
<span id="cb18-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The remainder of {} % {} is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="중앙값-구하기" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="중앙값-구하기"><span class="header-section-number">3.2</span> 중앙값 구하기</h2>
<p>중앙값은 어떤 주어진 값들을 크기의 순서대로 정렬했을 때 가장 중앙에 위치하는 값을 의미합니다. 예를 들어 1, 2, 7, 10, 11 의 중앙값은 7 입니다. 정수 배열 array 가 매개변수로 주어질 때, 중앙값을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-9" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="파이썬-9"><span class="header-section-number">3.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb19-2"></span>
<span id="cb19-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb19-4">    sorted_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(array)</span>
<span id="cb19-5">    middle_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(array) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb19-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> sorted_array[middle_index]</span></code></pre></div>
</section>
<section id="러스트-9" class="level3" data-number="3.2.2">
<h3 data-number="3.2.2" class="anchored" data-anchor-id="러스트-9"><span class="header-section-number">3.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb20-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> sorted_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clone the input array to sort it</span></span>
<span id="cb20-3">    sorted_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort the array</span></span>
<span id="cb20-4"></span>
<span id="cb20-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> middle_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sorted_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the middle index</span></span>
<span id="cb20-6">    sorted_array[middle_index] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Return the middle element</span></span>
<span id="cb20-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-8"></span>
<span id="cb20-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb20-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> median <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(array)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-12"></span>
<span id="cb20-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The median is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> median)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="최빈값-구하기" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="최빈값-구하기"><span class="header-section-number">3.3</span> 최빈값 구하기</h2>
<p>최빈값은 주어진 값 중에서 가장 자주 나오는 값을 의미합니다. 정수 배열 array 가 매개변수로 주어질 때, 최빈값을 return 하도록 solution 함수를 완성해보세요. 최빈값이 여러 개면 -1 을 return 합니다.</p>
<section id="파이썬-10" class="level3" data-number="3.3.1">
<h3 data-number="3.3.1" class="anchored" data-anchor-id="파이썬-10"><span class="header-section-number">3.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb21-2"></span>
<span id="cb21-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb21-4">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb21-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> array:</span>
<span id="cb21-6">        count[num] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count.get(num, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb21-7"></span>
<span id="cb21-8">    max_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(count.values())</span>
<span id="cb21-9">    mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [num <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num, freq <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> count.items() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> freq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> max_count]</span>
<span id="cb21-10"></span>
<span id="cb21-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> mode[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(mode) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-10" class="level3" data-number="3.3.2">
<h3 data-number="3.3.2" class="anchored" data-anchor-id="러스트-10"><span class="header-section-number">3.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb22-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-2"></span>
<span id="cb22-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashMap::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-5"></span>
<span id="cb22-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count the frequency of each number</span></span>
<span id="cb22-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>entry(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>or_insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-10"></span>
<span id="cb22-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find the maximum frequency</span></span>
<span id="cb22-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>values()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap_or(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-13"></span>
<span id="cb22-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Collect numbers that have the maximum frequency</span></span>
<span id="cb22-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb22-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>freq)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> freq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> max_count)</span>
<span id="cb22-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num)</span>
<span id="cb22-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-19"></span>
<span id="cb22-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Return the mode or -1 if there is no unique mode</span></span>
<span id="cb22-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-22">        mode[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb22-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-24">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb22-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-27"></span>
<span id="cb22-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb22-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(array)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-31"></span>
<span id="cb22-32">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The mode is {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-33"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="짝수는-싫어요" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="짝수는-싫어요"><span class="header-section-number">3.4</span> 짝수는 싫어요</h2>
<p>정수 n 이 매개변수로 주어질 때, n 이하의 홀수가 오름차순으로 담긴 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-11" class="level3" data-number="3.4.1">
<h3 data-number="3.4.1" class="anchored" data-anchor-id="파이썬-11"><span class="header-section-number">3.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb23-2"></span>
<span id="cb23-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb23-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]</span></code></pre></div>
</section>
<section id="러스트-11" class="level3" data-number="3.4.2">
<h3 data-number="3.4.2" class="anchored" data-anchor-id="러스트-11"><span class="header-section-number">3.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb24-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-2">    (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate odd numbers from 1 to n</span></span>
<span id="cb24-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-4"></span>
<span id="cb24-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb24-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> odd_numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-8"></span>
<span id="cb24-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Odd numbers from 1 to {}: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> odd_numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day4-수학-배열" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Day4 수학, 배열</h1>
<section id="피자-나눠-먹기-1" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="피자-나눠-먹기-1"><span class="header-section-number">4.1</span> 피자 나눠 먹기 (1)</h2>
<p>머쓱이네 피자가게는 피자를 일곱 조각으로 잘라 줍니다. 피자를 나눠먹을 사람의 수&nbsp;n 이 주어질 때, 모든 사람이 피자를 한 조각 이상 먹기 위해 필요한 피자의 수를 return 하는 solution 함수를 완성해보세요.</p>
<section id="파이썬-12" class="level3" data-number="4.1.1">
<h3 data-number="4.1.1" class="anchored" data-anchor-id="파이썬-12"><span class="header-section-number">4.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb25-2">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb25-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-12" class="level3" data-number="4.1.2">
<h3 data-number="4.1.2" class="anchored" data-anchor-id="러스트-12"><span class="header-section-number">4.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb26-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-2">    (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb26-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb26-4"></span>
<span id="cb26-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb26-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="피자-나눠-먹기-2" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="피자-나눠-먹기-2"><span class="header-section-number">4.2</span> 피자 나눠 먹기 (2)</h2>
<p>머쓱이네 피자가게는 피자를 여섯 조각으로 잘라 줍니다. 피자를 나눠먹을 사람의 수&nbsp;n 이 매개변수로 주어질 때,&nbsp;n 명이 주문한 피자를 남기지 않고 모두 같은 수의 피자 조각을 먹어야 한다면 최소 몇 판을 시켜야 하는지를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-13" class="level3" data-number="4.2.1">
<h3 data-number="4.2.1" class="anchored" data-anchor-id="파이썬-13"><span class="header-section-number">4.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb27-2"></span>
<span id="cb27-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb27-4">    slices_per_pizza <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb27-5">    lcm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>slices_per_pizza) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> math.gcd(n, slices_per_pizza)</span>
<span id="cb27-6">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lcm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> slices_per_pizza</span>
<span id="cb27-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-13" class="level3" data-number="4.2.2">
<h3 data-number="4.2.2" class="anchored" data-anchor-id="러스트-13"><span class="header-section-number">4.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb28-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">num::integer::</span>lcm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-2"></span>
<span id="cb28-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> slices_per_pizza <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> lcm_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lcm(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> slices_per_pizza)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-6">    lcm_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> slices_per_pizza</span>
<span id="cb28-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb28-8"></span>
<span id="cb28-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb28-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="피자-나눠-먹기-3" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="피자-나눠-먹기-3"><span class="header-section-number">4.3</span> 피자 나눠 먹기 (3)</h2>
<p>머쓱이네 피자가게는 피자를 두 조각에서 열 조각까지 원하는 조각 수로 잘라줍니다. 피자 조각 수&nbsp;<code>slice</code> 와 피자를 먹는 사람의 수&nbsp;<code>n</code> 이 매개변수로 주어질 때,&nbsp;<code>n</code> 명의 사람이 최소 한 조각 이상 피자를 먹으려면 최소 몇 판의 피자를 시켜야 하는지를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-14" class="level3" data-number="4.3.1">
<h3 data-number="4.3.1" class="anchored" data-anchor-id="파이썬-14"><span class="header-section-number">4.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">slice</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb29-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 피자 판 수는 n을 slice로 나누고 올림한 값</span></span>
<span id="cb29-3">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">slice</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">slice</span></span>
<span id="cb29-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-14" class="level3" data-number="4.3.2">
<h3 data-number="4.3.2" class="anchored" data-anchor-id="러스트-14"><span class="header-section-number">4.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb30-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(slice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-2">    (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> slice <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> slice</span>
<span id="cb30-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb30-4"></span>
<span id="cb30-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb30-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열의-평균값" class="level2" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="배열의-평균값"><span class="header-section-number">4.4</span> 배열의 평균값</h2>
<p>정수 배열&nbsp;<code>numbers</code> 가 매개변수로 주어집니다.&nbsp;<code>numbers</code> 의 원소의 평균값을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-15" class="level3" data-number="4.4.1">
<h3 data-number="4.4.1" class="anchored" data-anchor-id="파이썬-15"><span class="header-section-number">4.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb31-2"></span>
<span id="cb31-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb31-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># numbers의 합계를 구하고, 이를 numbers의 길이로 나누어 평균을 구합니다.</span></span>
<span id="cb31-5">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(numbers) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(numbers)</span>
<span id="cb31-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-15" class="level3" data-number="4.4.2">
<h3 data-number="4.4.2" class="anchored" data-anchor-id="러스트-15"><span class="header-section-number">4.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb32-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-4">    sum <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> count</span>
<span id="cb32-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-6"></span>
<span id="cb32-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb32-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day5-수학-배열" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Day5 수학, 배열</h1>
<section id="옷가게-할인-받기" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="옷가게-할인-받기"><span class="header-section-number">5.1</span> 옷가게 할인 받기</h2>
<p>머쓱이네 옷가게는 10 만 원 이상 사면 5%, 30 만 원 이상 사면 10%, 50 만 원 이상 사면 20% 를 할인해줍니다. 구매한 옷의 가격&nbsp;<code>price</code> 가 주어질 때, 지불해야 할 금액을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-16" class="level3" data-number="5.1.1">
<h3 data-number="5.1.1" class="anchored" data-anchor-id="파이썬-16"><span class="header-section-number">5.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(price: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb33-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500000</span>:</span>
<span id="cb33-3">        price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span></span>
<span id="cb33-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300000</span>:</span>
<span id="cb33-5">        price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span></span>
<span id="cb33-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span>:</span>
<span id="cb33-7">        price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span></span>
<span id="cb33-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(price)</span></code></pre></div>
</section>
<section id="러스트-16" class="level3" data-number="5.1.2">
<h3 data-number="5.1.2" class="anchored" data-anchor-id="러스트-16"><span class="header-section-number">5.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb34-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(price<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> discounted_price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500000</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-3">        (price <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb34-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300000</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-5">        (price <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb34-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-7">        (price <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb34-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-9">        price</span>
<span id="cb34-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb34-11"></span>
<span id="cb34-12">    discounted_price</span>
<span id="cb34-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-14"></span>
<span id="cb34-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb34-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-18">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="아이스-아메리카노" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="아이스-아메리카노"><span class="header-section-number">5.2</span> 아이스 아메리카노</h2>
<p>머쓱이는 추운 날에도 아이스 아메리카노만 마십니다. 아이스 아메리카노는 한잔에 5,500 원입니다. 머쓱이가 가지고 있는 돈&nbsp;<code>money</code> 가 매개변수로 주어질 때, 머쓱이가 최대로 마실 수 있는 아메리카노의 잔 수와 남는 돈을 순서대로 담은 배열을 return&nbsp;하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-17" class="level3" data-number="5.2.1">
<h3 data-number="5.2.1" class="anchored" data-anchor-id="파이썬-17"><span class="header-section-number">5.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb35-2"></span>
<span id="cb35-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(money: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb35-4">    price_per_americano: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5500</span></span>
<span id="cb35-5">    number_of_americanos: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> money <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> price_per_americano</span>
<span id="cb35-6">    remaining_money: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> money <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> price_per_americano</span>
<span id="cb35-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [number_of_americanos, remaining_money]</span></code></pre></div>
</section>
<section id="러스트-17" class="level3" data-number="5.2.2">
<h3 data-number="5.2.2" class="anchored" data-anchor-id="러스트-17"><span class="header-section-number">5.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb36-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(money<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> price_per_americano<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> number_of_americanos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> money <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> price_per_americano<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> remaining_money<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> money <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> price_per_americano<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[number_of_americanos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> remaining_money]</span>
<span id="cb36-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-7"></span>
<span id="cb36-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb36-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25000</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="나이-출력" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="나이-출력"><span class="header-section-number">5.3</span> 나이 출력</h2>
<p>머쓱이는 선생님이 몇 년도에 태어났는지 궁금해졌습니다. 2022 년 기준 선생님의 나이&nbsp;<code>age</code> 가 주어질 때, 선생님의 출생 연도를 return 하는 solution 함수를 완성해주세요</p>
<section id="파이썬-18" class="level3" data-number="5.3.1">
<h3 data-number="5.3.1" class="anchored" data-anchor-id="파이썬-18"><span class="header-section-number">5.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(age: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb37-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-18" class="level3" data-number="5.3.2">
<h3 data-number="5.3.2" class="anchored" data-anchor-id="러스트-18"><span class="header-section-number">5.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb38-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(age<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-2">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb38-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-4"></span>
<span id="cb38-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb38-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-뒤집기" class="level2" data-number="5.4">
<h2 data-number="5.4" class="anchored" data-anchor-id="배열-뒤집기"><span class="header-section-number">5.4</span> 배열 뒤집기</h2>
<p>정수가 들어 있는 배열&nbsp;<code>num_list</code> 가 매개변수로 주어집니다.&nbsp;<code>num_list</code> 의 원소의 순서를 거꾸로 뒤집은 배열을 return 하도록 solution 함수를 완성해주세요</p>
<section id="파이썬-19" class="level3" data-number="5.4.1">
<h3 data-number="5.4.1" class="anchored" data-anchor-id="파이썬-19"><span class="header-section-number">5.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb39-2"></span>
<span id="cb39-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb39-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb39-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-19" class="level3" data-number="5.4.2">
<h3 data-number="5.4.2" class="anchored" data-anchor-id="러스트-19"><span class="header-section-number">5.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb40-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-2">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>rev()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb40-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-4"></span>
<span id="cb40-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb40-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day6-문자열-반복문-출력-배열-조건문" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Day6 문자열, 반복문, 출력, 배열, 조건문</h1>
<section id="문자열-뒤집기" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="문자열-뒤집기"><span class="header-section-number">6.1</span> 문자열 뒤집기</h2>
<p>문자열&nbsp;<code>my_string</code> 이 매개변수로 주어집니다.&nbsp;<code>my_string</code> 을 거꾸로 뒤집은 문자열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-20" class="level3" data-number="6.1.1">
<h3 data-number="6.1.1" class="anchored" data-anchor-id="파이썬-20"><span class="header-section-number">6.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb41-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</section>
<section id="러스트-20" class="level3" data-number="6.1.2">
<h3 data-number="6.1.2" class="anchored" data-anchor-id="러스트-20"><span class="header-section-number">6.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb42-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>rev()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb42-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="직각삼각형-출력하기" class="level2" data-number="6.2">
<h2 data-number="6.2" class="anchored" data-anchor-id="직각삼각형-출력하기"><span class="header-section-number">6.2</span> 직각삼각형 출력하기</h2>
<p><code>*</code> 의 높이와 너비를 1 이라고 했을 때, <code>*</code> 을 이용해 직각 이등변 삼각형을 그리려고합니다. 정수 n 이 주어지면 높이와 너비가 n 인 직각 이등변 삼각형을 출력하도록 코드를 작성해보세요.</p>
<section id="파이썬-21" class="level3" data-number="6.2.1">
<h3 data-number="6.2.1" class="anchored" data-anchor-id="파이썬-21"><span class="header-section-number">6.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>())</span>
<span id="cb43-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span></code></pre></div>
</section>
<section id="러스트-21" class="level3" data-number="6.2.2">
<h3 data-number="6.2.2" class="anchored" data-anchor-id="러스트-21"><span class="header-section-number">6.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb44-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::io::</span>stdin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-2"></span>
<span id="cb44-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb44-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-5"></span>
<span id="cb44-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Read input from the user</span></span>
<span id="cb44-7">    stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to read line"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-8"></span>
<span id="cb44-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Parse input to an integer</span></span>
<span id="cb44-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Please enter a valid number"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-11"></span>
<span id="cb44-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate and print the star pattern</span></span>
<span id="cb44-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb44-14">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>repeat(i))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb44-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="짝수-홀수-개수" class="level2" data-number="6.3">
<h2 data-number="6.3" class="anchored" data-anchor-id="짝수-홀수-개수"><span class="header-section-number">6.3</span> 짝수 홀수 개수</h2>
<p>정수가 담긴 리스트&nbsp;<code>num_list</code> 가 주어질 때,&nbsp;<code>num_list</code> 의 원소 중 짝수와 홀수의 개수를 담은 배열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-22" class="level3" data-number="6.3.1">
<h3 data-number="6.3.1" class="anchored" data-anchor-id="파이썬-22"><span class="header-section-number">6.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb45-2"></span>
<span id="cb45-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb45-4">    even_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_list <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb45-5">    odd_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(num_list) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> even_count</span>
<span id="cb45-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [even_count, odd_count]</span></code></pre></div>
</section>
<section id="러스트-22" class="level3" data-number="6.3.2">
<h3 data-number="6.3.2" class="anchored" data-anchor-id="러스트-22"><span class="header-section-number">6.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb46-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb46-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> even_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> odd_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> even_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb46-4">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[even_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> odd_count]</span>
<span id="cb46-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자-반복-출력하기" class="level2" data-number="6.4">
<h2 data-number="6.4" class="anchored" data-anchor-id="문자-반복-출력하기"><span class="header-section-number">6.4</span> 문자 반복 출력하기</h2>
<p>문자열&nbsp;<code>my_string</code> 과 정수&nbsp;<code>n</code> 이 매개변수로 주어질 때,&nbsp;<code>my_string</code> 에 들어있는 각 문자를&nbsp;<code>n</code> 만큼 반복한 문자열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-23" class="level3" data-number="6.4.1">
<h3 data-number="6.4.1" class="anchored" data-anchor-id="파이썬-23"><span class="header-section-number">6.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb47-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string])</span></code></pre></div>
</section>
<section id="러스트-23" class="level3" data-number="6.4.2">
<h3 data-number="6.4.2" class="anchored" data-anchor-id="러스트-23"><span class="header-section-number">6.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb48-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>repeat(n))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb48-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day7-문자열-조건문-수학-반복문" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Day7 문자열, 조건문, 수학, 반복문</h1>
<section id="특정-문자-제거하기" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="특정-문자-제거하기"><span class="header-section-number">7.1</span> 특정 문자 제거하기</h2>
<p>문자열&nbsp;<code>my_string</code> 과 문자&nbsp;<code>letter</code> 이 매개변수로 주어집니다.&nbsp;<code>my_string</code> 에서&nbsp;<code>letter</code> 를 제거한 문자열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-24" class="level3" data-number="7.1.1">
<h3 data-number="7.1.1" class="anchored" data-anchor-id="파이썬-24"><span class="header-section-number">7.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, letter: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb49-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string.replace(letter, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
</section>
<section id="러스트-24" class="level3" data-number="7.1.2">
<h3 data-number="7.1.2" class="anchored" data-anchor-id="러스트-24"><span class="header-section-number">7.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb50-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> letter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb50-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>replace(letter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb50-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb50-4"></span>
<span id="cb50-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb50-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, World!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-7">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// "Hell, Wrld!" 출력</span></span>
<span id="cb50-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="각도기" class="level2" data-number="7.2">
<h2 data-number="7.2" class="anchored" data-anchor-id="각도기"><span class="header-section-number">7.2</span> 각도기</h2>
<p>각에서 0 도 초과 90 도 미만은 예각, 90 도는 직각, 90 도 초과 180 도 미만은 둔각 180 도는 평각으로 분류합니다. 각&nbsp;<code>angle</code> 이 매개변수로 주어질 때 예각일 때 1, 직각일 때 2, 둔각일 때 3, 평각일 때 4 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-25" class="level3" data-number="7.2.1">
<h3 data-number="7.2.1" class="anchored" data-anchor-id="파이썬-25"><span class="header-section-number">7.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(angle: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb51-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>:</span>
<span id="cb51-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 직각</span></span>
<span id="cb51-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>:</span>
<span id="cb51-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 평각</span></span>
<span id="cb51-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>:</span>
<span id="cb51-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예각</span></span>
<span id="cb51-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>:</span>
<span id="cb51-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 둔각</span></span></code></pre></div>
</section>
<section id="러스트-25" class="level3" data-number="7.2.2">
<h3 data-number="7.2.2" class="anchored" data-anchor-id="러스트-25"><span class="header-section-number">7.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb52-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(angle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-3">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb52-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb52-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> angle) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> (angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-7">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb52-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> angle) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> (angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-9">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb52-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-11">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb52-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb52-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb52-14"></span>
<span id="cb52-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 2 출력</span></span>
<span id="cb52-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 4 출력</span></span>
<span id="cb52-18">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 1 출력</span></span>
<span id="cb52-19">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 3 출력</span></span>
<span id="cb52-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="양꼬치" class="level2" data-number="7.3">
<h2 data-number="7.3" class="anchored" data-anchor-id="양꼬치"><span class="header-section-number">7.3</span> 양꼬치</h2>
<p>머쓱이네 양꼬치 가게는 10 인분을 먹으면 음료수 하나를 서비스로 줍니다. 양꼬치는 1 인분에 12,000 원, 음료수는 2,000 원입니다. 정수&nbsp;<code>n</code> 과&nbsp;<code>k</code> 가 매개변수로 주어졌을 때, 양꼬치&nbsp;<code>n</code> 인분과 음료수&nbsp;<code>k</code> 개를 먹었다면 총얼마를 지불해야 하는지 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-26" class="level3" data-number="7.3.1">
<h3 data-number="7.3.1" class="anchored" data-anchor-id="파이썬-26"><span class="header-section-number">7.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, k:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb53-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 양꼬치 가격 계산</span></span>
<span id="cb53-3">    cost_of_kebabs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12000</span></span>
<span id="cb53-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 음료수 가격 계산</span></span>
<span id="cb53-5">    cost_of_drinks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span></span>
<span id="cb53-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 총 지불 금액 계산</span></span>
<span id="cb53-7">    total_cost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cost_of_kebabs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cost_of_drinks</span>
<span id="cb53-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total_cost</span></code></pre></div>
</section>
<section id="러스트-26" class="level3" data-number="7.3.2">
<h3 data-number="7.3.2" class="anchored" data-anchor-id="러스트-26"><span class="header-section-number">7.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb54-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 양꼬치 가격 계산</span></span>
<span id="cb54-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> cost_of_kebabs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 음료수 가격 계산</span></span>
<span id="cb54-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> cost_of_drinks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 총 지불 금액 계산</span></span>
<span id="cb54-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> total_cost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cost_of_kebabs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cost_of_drinks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-8">    total_cost</span>
<span id="cb54-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-10"></span>
<span id="cb54-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"총 지불 금액: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="짝수의-합" class="level2" data-number="7.4">
<h2 data-number="7.4" class="anchored" data-anchor-id="짝수의-합"><span class="header-section-number">7.4</span> 짝수의 합</h2>
<p>정수&nbsp;<code>n</code> 이 주어질 때,&nbsp;<code>n</code> 이하의 짝수를 모두 더한 값을 return 하도록 solution 함수를 작성해주세요.</p>
<section id="파이썬-27" class="level3" data-number="7.4.1">
<h3 data-number="7.4.1" class="anchored" data-anchor-id="파이썬-27"><span class="header-section-number">7.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb55-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 짝수의 합을 저장할 변수</span></span>
<span id="cb55-3">    total_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb55-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2부터 n까지 짝수만 더함</span></span>
<span id="cb55-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>):</span>
<span id="cb55-6">        total_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> i</span>
<span id="cb55-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total_sum</span></code></pre></div>
</section>
<section id="러스트-27" class="level3" data-number="7.4.2">
<h3 data-number="7.4.2" class="anchored" data-anchor-id="러스트-27"><span class="header-section-number">7.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb56-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 짝수의 합을 저장할 변수</span></span>
<span id="cb56-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> total_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 2부터 n까지 짝수만 더함</span></span>
<span id="cb56-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-6">        total_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb56-8">    total_sum</span>
<span id="cb56-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb56-10"></span>
<span id="cb56-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1부터 10까지 짝수의 합: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day8-배열-구현-수학" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> Day8 배열, 구현, 수학</h1>
<section id="배열-자르기" class="level2" data-number="8.1">
<h2 data-number="8.1" class="anchored" data-anchor-id="배열-자르기"><span class="header-section-number">8.1</span> 배열 자르기</h2>
<p>정수 배열&nbsp;<code>numbers</code> 와 정수&nbsp;<code>num1</code>,&nbsp;<code>num2</code> 가 매개변수로 주어질 때,&nbsp;<code>numbers</code> 의&nbsp;<code>num1</code> 번 째 인덱스부터&nbsp;<code>num2</code> 번째 인덱스까지 자른 정수 배열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-28" class="level3" data-number="8.1.1">
<h3 data-number="8.1.1" class="anchored" data-anchor-id="파이썬-28"><span class="header-section-number">8.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb57-2"></span>
<span id="cb57-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb57-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트 슬라이싱을 사용하여 num1번째 인덱스부터 num2번째 인덱스까지 추출</span></span>
<span id="cb57-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> numbers[num1:num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</section>
<section id="러스트-28" class="level3" data-number="8.1.2">
<h3 data-number="8.1.2" class="anchored" data-anchor-id="러스트-28"><span class="header-section-number">8.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb58-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// num1 인덱스부터 num2+1 인덱스까지의 요소들을 새 벡터로 복사</span></span>
<span id="cb58-3">    numbers[num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>num2]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()</span>
<span id="cb58-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-5"></span>
<span id="cb58-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 출력: [2, 3, 4]</span></span>
<span id="cb58-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="외계행성의-나이" class="level2" data-number="8.2">
<h2 data-number="8.2" class="anchored" data-anchor-id="외계행성의-나이"><span class="header-section-number">8.2</span> 외계행성의 나이</h2>
<p>우주여행을 하던 머쓱이는 엔진 고장으로 PROGRAMMERS-962 행성에 불시착하게 됐습니다. 입국심사에서 나이를 말해야 하는데, PROGRAMMERS-962 행성에서는 나이를 알파벳으로 말하고 있습니다. a 는 0, b 는 1, c 는 2, …, j 는 9 입니다. 예를 들어 23 살은 cd, 51 살은 fb 로 표현합니다. 나이&nbsp;<code>age</code> 가 매개변수로 주어질 때 PROGRAMMER-962 식 나이를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-29" class="level3" data-number="8.2.1">
<h3 data-number="8.2.1" class="anchored" data-anchor-id="파이썬-29"><span class="header-section-number">8.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(age: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb59-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 숫자를 알파벳으로 매핑하는 딕셔너리 생성</span></span>
<span id="cb59-3">    age_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(i): <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">chr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">97</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)}</span>
<span id="cb59-4"></span>
<span id="cb59-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># age를 문자열로 변환하고 각 숫자를 해당하는 알파벳으로 변환</span></span>
<span id="cb59-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(age_map[digit] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> digit <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(age))</span></code></pre></div>
</section>
<section id="러스트-29" class="level3" data-number="8.2.2">
<h3 data-number="8.2.2" class="anchored" data-anchor-id="러스트-29"><span class="header-section-number">8.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb60-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(age<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 숫자를 알파벳으로 매핑하는 배열 생성</span></span>
<span id="cb60-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> age_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'f'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'g'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'h'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'i'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'j'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-4"></span>
<span id="cb60-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// age를 문자열로 변환하고 각 숫자를 해당하는 알파벳으로 변환</span></span>
<span id="cb60-6">    age<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb60-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb60-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> age_map[c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_digit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>])</span>
<span id="cb60-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb60-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-11"></span>
<span id="cb60-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 출력: "cd"</span></span>
<span id="cb60-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="진료-순서-정하기" class="level2" data-number="8.3">
<h2 data-number="8.3" class="anchored" data-anchor-id="진료-순서-정하기"><span class="header-section-number">8.3</span> 진료 순서 정하기</h2>
<p>외과의사 머쓱이는 응급실에 온 환자의 응급도를 기준으로 진료 순서를 정하려고 합니다. 정수 배열&nbsp;<code>emergency</code> 가 매개변수로 주어질 때 응급도가 높은 순서대로 진료 순서를 정한 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-30" class="level3" data-number="8.3.1">
<h3 data-number="8.3.1" class="anchored" data-anchor-id="파이썬-30"><span class="header-section-number">8.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb61-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb61-2"></span>
<span id="cb61-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(emergency: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb61-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 응급도와 인덱스를 함께 저장한 리스트 생성</span></span>
<span id="cb61-5">    sorted_emergency <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>([(e, i) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, e <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(emergency)], reverse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb61-6"></span>
<span id="cb61-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 리스트 초기화</span></span>
<span id="cb61-8">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(emergency)</span>
<span id="cb61-9"></span>
<span id="cb61-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 정렬된 리스트를 순회하며 순서 할당</span></span>
<span id="cb61-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> rank, (_, index) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(sorted_emergency, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb61-12">        result[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank</span>
<span id="cb61-13"></span>
<span id="cb61-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-30" class="level3" data-number="8.3.2">
<h3 data-number="8.3.2" class="anchored" data-anchor-id="러스트-30"><span class="header-section-number">8.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb62-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(emergency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb62-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 응급도와 인덱스를 함께 저장한 벡터 생성</span></span>
<span id="cb62-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> sorted_emergency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> emergency</span>
<span id="cb62-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb62-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate()</span>
<span id="cb62-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>e)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i))</span>
<span id="cb62-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-8"></span>
<span id="cb62-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 응급도를 기준으로 내림차순 정렬</span></span>
<span id="cb62-10">    sorted_emergency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_by(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cmp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>a))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-11"></span>
<span id="cb62-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 결과 벡터 초기화</span></span>
<span id="cb62-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> emergency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-14"></span>
<span id="cb62-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 정렬된 벡터를 순회하며 순서 할당</span></span>
<span id="cb62-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (rank<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> index)) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sorted_emergency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb62-17">        result[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb62-19"></span>
<span id="cb62-20">    result</span>
<span id="cb62-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb62-22"></span>
<span id="cb62-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb62-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> emergency <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">76</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(emergency)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-26">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 출력: [3, 1, 2]</span></span>
<span id="cb62-27"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="순서쌍의-개수" class="level2" data-number="8.4">
<h2 data-number="8.4" class="anchored" data-anchor-id="순서쌍의-개수"><span class="header-section-number">8.4</span> 순서쌍의 개수</h2>
<p>순서쌍이란 두 개의 숫자를 순서를 정하여 짝지어 나타낸 쌍으로 (a, b) 로 표기합니다. 자연수&nbsp;<code>n</code> 이 매개변수로 주어질 때 두 숫자의 곱이&nbsp;<code>n</code> 인 자연수 순서쌍의 개수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-31" class="level3" data-number="8.4.1">
<h3 data-number="8.4.1" class="anchored" data-anchor-id="파이썬-31"><span class="header-section-number">8.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb63-2">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb63-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb63-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb63-5">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (i, n//i)</span></span>
<span id="cb63-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> i:</span>
<span id="cb63-7">                count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (n//i, i) if i and n//i are different</span></span>
<span id="cb63-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count</span></code></pre></div>
</section>
<section id="러스트-31" class="level3" data-number="8.4.2">
<h3 data-number="8.4.2" class="anchored" data-anchor-id="러스트-31"><span class="header-section-number">8.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb64-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sqrt_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sqrt() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-4"></span>
<span id="cb64-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>sqrt_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-7">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (i, n/i)</span></span>
<span id="cb64-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-9">                count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// (n/i, i) if i and n/i are different</span></span>
<span id="cb64-10">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb64-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb64-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb64-13"></span>
<span id="cb64-14">    count</span>
<span id="cb64-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb64-16"></span>
<span id="cb64-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of factors of {}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 출력: Number of factors of 20: 6</span></span>
<span id="cb64-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day9-수학-문자열-해시-완전탐색-조건문" class="level1" data-number="9">
<h1 data-number="9"><span class="header-section-number">9</span> Day9 수학, 문자열, 해시, 완전탐색, 조건문</h1>
<section id="개미-군단" class="level2" data-number="9.1">
<h2 data-number="9.1" class="anchored" data-anchor-id="개미-군단"><span class="header-section-number">9.1</span> 개미 군단</h2>
<p>개미 군단이 사냥을 나가려고 합니다. 개미군단은 사냥감의 체력에 딱 맞는 병력을 데리고 나가려고 합니다. 장군개미는 5 의 공격력을, 병정개미는 3 의 공격력을 일개미는 1 의 공격력을 가지고 있습니다. 예를 들어 체력 23 의 여치를 사냥하려고 할 때, 일개미 23 마리를 데리고 가도 되지만, 장군개미 네 마리와 병정개미 한 마리를 데리고 간다면 더 적은 병력으로 사냥할 수 있습니다. 사냥감의 체력&nbsp;<code>hp</code> 가 매개변수로 주어질 때, 사냥감의 체력에 딱 맞게 최소한의 병력을 구성하려면 몇 마리의 개미가 필요한지를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-32" class="level3" data-number="9.1.1">
<h3 data-number="9.1.1" class="anchored" data-anchor-id="파이썬-32"><span class="header-section-number">9.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(hp: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb65-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 장군개미의 수를 계산</span></span>
<span id="cb65-3">    general_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb65-4">    hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb65-5"></span>
<span id="cb65-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 병정개미의 수를 계산</span></span>
<span id="cb65-7">    soldier_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb65-8">    hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb65-9"></span>
<span id="cb65-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 일개미의 수를 계산</span></span>
<span id="cb65-11">    worker_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb65-12"></span>
<span id="cb65-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 총 개미 수 반환</span></span>
<span id="cb65-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> general_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> soldier_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> worker_ants</span></code></pre></div>
</section>
<section id="러스트-32" class="level3" data-number="9.1.2">
<h3 data-number="9.1.2" class="anchored" data-anchor-id="러스트-32"><span class="header-section-number">9.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb66-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> hp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb66-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 장군개미의 수를 계산</span></span>
<span id="cb66-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> general_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-4">    hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-5"></span>
<span id="cb66-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 병정개미의 수를 계산</span></span>
<span id="cb66-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> soldier_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-8">    hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-9"></span>
<span id="cb66-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 일개미의 수를 계산</span></span>
<span id="cb66-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> worker_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-12"></span>
<span id="cb66-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 총 개미 수 반환</span></span>
<span id="cb66-14">    general_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> soldier_ants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> worker_ants</span>
<span id="cb66-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb66-16"></span>
<span id="cb66-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb66-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> hp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(hp)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total number of ants needed for {} HP: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> hp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 출력: Total number of ants needed for 23 HP: 5</span></span>
<span id="cb66-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="모스부호-1" class="level2" data-number="9.2">
<h2 data-number="9.2" class="anchored" data-anchor-id="모스부호-1"><span class="header-section-number">9.2</span> 모스부호 (1)</h2>
<p>머쓱이는 친구에게 모스부호를 이용한 편지를 받았습니다. 그냥은 읽을 수 없어 이를 해독하는 프로그램을 만들려고 합니다. 문자열&nbsp;<code>letter</code> 가 매개변수로 주어질 때,&nbsp;<code>letter</code> 를 영어 소문자로 바꾼 문자열을 return 하도록 solution 함수를 완성해보세요. 모스부호는 다음과 같습니다.</p>
<section id="파이썬-33" class="level3" data-number="9.2.1">
<h3 data-number="9.2.1" class="anchored" data-anchor-id="파이썬-33"><span class="header-section-number">9.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb67-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(letter: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb67-2">    morse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb67-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-...'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-.-.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-..'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'..-.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'f'</span>,</span>
<span id="cb67-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'g'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'....'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'h'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'..'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'i'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.---'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'j'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-.-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'k'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.-..'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>,</span>
<span id="cb67-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'m'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'---'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.--.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'p'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--.-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'q'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.-.'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>,</span>
<span id="cb67-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'...'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'t'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'..-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'u'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'...-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'v'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.--'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-..-'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>,</span>
<span id="cb67-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-.--'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--..'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'z'</span></span>
<span id="cb67-8">    }</span>
<span id="cb67-9"></span>
<span id="cb67-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 공백을 기준으로 모스 부호를 분리</span></span>
<span id="cb67-11">    morse_codes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> letter.split()</span>
<span id="cb67-12"></span>
<span id="cb67-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 모스 부호를 해당하는 알파벳으로 변환</span></span>
<span id="cb67-14">    decoded <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [morse[code] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> code <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> morse_codes]</span>
<span id="cb67-15"></span>
<span id="cb67-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환된 알파벳들을 하나의 문자열로 결합</span></span>
<span id="cb67-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(decoded)</span></code></pre></div>
</section>
<section id="러스트-33" class="level3" data-number="9.2.2">
<h3 data-number="9.2.2" class="anchored" data-anchor-id="러스트-33"><span class="header-section-number">9.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb68-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-2"></span>
<span id="cb68-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(letter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> morse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb68-5">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-..."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-.-."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-.."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"..-."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'f'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-6">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'g'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"...."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'h'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'i'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".---"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'j'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-.-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'k'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".-.."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-7">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'m'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"---"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".--."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'p'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--.-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'q'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".-."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-8">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"..."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'t'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"..-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'u'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"...-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'v'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".--"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-..-"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-9">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-.--"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--.."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'z'</span>)</span>
<span id="cb68-10">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-11"></span>
<span id="cb68-12">    letter</span>
<span id="cb68-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()</span>
<span id="cb68-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> morse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>get(code)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>copied())</span>
<span id="cb68-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb68-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb68-17"></span>
<span id="cb68-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 테스트 케이스들</span></span>
<span id="cb68-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb68-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".... . .-.. .-.. ---"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".-- --- .-. .-.. -..."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".-. ..- ... -"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-24">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-25"></span>
<span id="cb68-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-27">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(case)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-28">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test case {}: '{}' -&gt; '{}'"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb68-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="가위-바위-보" class="level2" data-number="9.3">
<h2 data-number="9.3" class="anchored" data-anchor-id="가위-바위-보"><span class="header-section-number">9.3</span> 가위 바위 보</h2>
<p>가위는 2 바위는 0 보는 5 로 표현합니다. 가위 바위 보를 내는 순서대로 나타낸 문자열&nbsp;<code>rsp</code> 가 매개변수로 주어질 때, rsp 에 저장된 가위 바위 보를 모두 이기는 경우를 순서대로 나타낸 문자열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-34" class="level3" data-number="9.3.1">
<h3 data-number="9.3.1" class="anchored" data-anchor-id="파이썬-34"><span class="header-section-number">9.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb69-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(rsp: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb69-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 가위(2)는 바위(0)에게 지고, 바위(0)는 보(5)에게 지고, 보(5)는 가위(2)에게 집니다.</span></span>
<span id="cb69-3">    win_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2'</span>}</span>
<span id="cb69-4"></span>
<span id="cb69-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 문자에 대해 이기는 경우를 매핑하여 새로운 문자열 생성</span></span>
<span id="cb69-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(win_map[char] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> rsp)</span></code></pre></div>
</section>
<section id="러스트-34" class="level3" data-number="9.3.2">
<h3 data-number="9.3.2" class="anchored" data-anchor-id="러스트-34"><span class="header-section-number">9.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb70-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-2"></span>
<span id="cb70-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(rsp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb70-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 가위(2)는 바위(0)에게 지고, 바위(0)는 보(5)에게 지고, 보(5)는 가위(2)에게 집니다.</span></span>
<span id="cb70-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> win_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb70-6">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'2'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb70-7">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb70-8">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'2'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb70-9">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-10"></span>
<span id="cb70-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 각 문자에 대해 이기는 경우를 매핑하여 새로운 문자열 생성</span></span>
<span id="cb70-12">    rsp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb70-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> win_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>get(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>c))</span>
<span id="cb70-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb70-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb70-16"></span>
<span id="cb70-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb70-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 테스트 케이스</span></span>
<span id="cb70-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"205"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-20"></span>
<span id="cb70-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb70-22">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(case)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-23">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test case {}: '{}' -&gt; '{}'"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-24">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb70-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="구슬을-나누는-경우의-수" class="level2" data-number="9.4">
<h2 data-number="9.4" class="anchored" data-anchor-id="구슬을-나누는-경우의-수"><span class="header-section-number">9.4</span> 구슬을 나누는 경우의 수</h2>
<p>머쓱이는 구슬을 친구들에게 나누어주려고 합니다. 구슬은 모두 다르게 생겼습니다. 머쓱이가 갖고 있는 구슬의 개수&nbsp;<code>balls</code> 와 친구들에게 나누어 줄 구슬 개수&nbsp;<code>share</code> 이 매개변수로 주어질 때,&nbsp;<code>balls</code> 개의 구슬 중&nbsp;<code>share</code> 개의 구슬을 고르는 가능한 모든 경우의 수를 return 하는 solution 함수를 완성해주세요.</p>
<section id="파이썬-35" class="level3" data-number="9.4.1">
<h3 data-number="9.4.1" class="anchored" data-anchor-id="파이썬-35"><span class="header-section-number">9.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb71-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Union</span>
<span id="cb71-2"></span>
<span id="cb71-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(balls: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, share: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]:</span>
<span id="cb71-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 분자 계산</span></span>
<span id="cb71-5">    numerator: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb71-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(balls, balls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> share, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb71-7">        numerator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> i</span>
<span id="cb71-8"></span>
<span id="cb71-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 분모 계산</span></span>
<span id="cb71-10">    denominator: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb71-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, share <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb71-12">        denominator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> i</span>
<span id="cb71-13"></span>
<span id="cb71-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 반환</span></span>
<span id="cb71-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> numerator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> denominator</span></code></pre></div>
</section>
<section id="러스트-35" class="level3" data-number="9.4.2">
<h3 data-number="9.4.2" class="anchored" data-anchor-id="러스트-35"><span class="header-section-number">9.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb72-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(balls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> share<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 분자 계산</span></span>
<span id="cb72-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> numerator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (balls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> share <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>balls)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>rev() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-5">        numerator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb72-7"></span>
<span id="cb72-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 분모 계산</span></span>
<span id="cb72-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> denominator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>share <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-11">        denominator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb72-13"></span>
<span id="cb72-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 결과 반환</span></span>
<span id="cb72-15">    numerator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> denominator</span>
<span id="cb72-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb72-17"></span>
<span id="cb72-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 테스트</span></span>
<span id="cb72-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-21"></span>
<span id="cb72-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (balls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> share) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-23">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>balls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>share)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-24">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Balls: {}, Share: {} -&gt; Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> balls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> share<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb72-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-10-조건문-배열-수학-시뮬레이션" class="level1" data-number="10">
<h1 data-number="10"><span class="header-section-number">10</span> Day 10 조건문, 배열, 수학, 시뮬레이션</h1>
<section id="점의-위치-구하기" class="level2" data-number="10.1">
<h2 data-number="10.1" class="anchored" data-anchor-id="점의-위치-구하기"><span class="header-section-number">10.1</span> 점의 위치 구하기</h2>
<p>사분면은 한 평면을 x 축과 y 축을 기준으로 나눈 네 부분입니다. 사분면은 아래와 같이 1 부터 4 까지 번호를매깁니다. - x 좌표와 y 좌표가 모두 양수이면 제 1 사분면에 속합니다. - x 좌표가 음수, y 좌표가 양수이면 제 2 사분면에 속합니다. - x 좌표와 y 좌표가 모두 음수이면 제 3 사분면에 속합니다. - x 좌표가 양수, y 좌표가 음수이면 제 4 사분면에 속합니다.</p>
<p>x 좌표 (x, y) 를 차례대로 담은 정수 배열&nbsp;<code>dot</code> 이 매개변수로 주어집니다. 좌표&nbsp;<code>dot</code> 이 사분면 중 어디에 속하는지 1, 2, 3, 4 중 하나를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-36" class="level3" data-number="10.1.1">
<h3 data-number="10.1.1" class="anchored" data-anchor-id="파이썬-36"><span class="header-section-number">10.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb73-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb73-2"></span>
<span id="cb73-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(dot: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb73-4">    x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dot</span>
<span id="cb73-5"></span>
<span id="cb73-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb73-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb73-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb73-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb73-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb73-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb73-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb73-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span></code></pre></div>
</section>
<section id="러스트-36" class="level3" data-number="10.1.2">
<h3 data-number="10.1.2" class="anchored" data-anchor-id="러스트-36"><span class="header-section-number">10.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb74-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(dot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (dot[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> dot[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-3"></span>
<span id="cb74-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb74-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-7">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb74-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-9">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb74-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-11">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb74-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb74-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb74-14"></span>
<span id="cb74-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> dot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dot))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="차원으로-만들기" class="level2" data-number="10.2">
<h2 data-number="10.2" class="anchored" data-anchor-id="차원으로-만들기"><span class="header-section-number">10.2</span> 2 차원으로 만들기</h2>
<p>정수 배열&nbsp;<code>num_list</code> 와 정수&nbsp;<code>n</code> 이 매개변수로 주어집니다.&nbsp;<code>num_list</code> 를 다음 설명과 같이 2 차원 배열로 바꿔 return 하도록 solution 함수를 완성해주세요.</p>
<p><code>num_list</code> 가 [1, 2, 3, 4, 5, 6, 7, 8] 로 길이가 8 이고&nbsp;<code>n</code> 이 2 이므로&nbsp;<code>num_list</code> 를 2 * 4 배열로 다음과 같이 변경합니다. 2 차원으로 바꿀 때에는 num_list 의 원소들을 앞에서부터 n 개씩 나눠 2 차원 배열로 변경합니다.</p>
<section id="파이썬-37" class="level3" data-number="10.2.1">
<h3 data-number="10.2.1" class="anchored" data-anchor-id="파이썬-37"><span class="header-section-number">10.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb75-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb75-2"></span>
<span id="cb75-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]:</span>
<span id="cb75-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num_list[i:i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>n] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(num_list), n)]</span></code></pre></div>
</section>
<section id="러스트-37" class="level3" data-number="10.2.2">
<h3 data-number="10.2.2" class="anchored" data-anchor-id="러스트-37"><span class="header-section-number">10.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb76-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb76-2">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chunks(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>chunk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> chunk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb76-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb76-4"></span>
<span id="cb76-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb76-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>```</span>
<span id="cb76-11"></span>
<span id="cb76-12">## 공 던지기</span>
<span id="cb76-13"></span>
<span id="cb76-14">머쓱이는 친구들과 동그랗게 서서 공 던지기 게임을 하고 있습니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span> 공은 1번부터 던지며 오른쪽으로 한 명을 건너뛰고 그다음 사람에게만 던질 수 있습니다<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span> 친구들의 번호가 들어있는 정수 배열&nbsp;`numbers`와 정수&nbsp;`K`가 주어질 때<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>&nbsp;`k`번째로 공을 던지는 사람의 번호는 무엇인지 <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> 하도록 solution 함수를 완성해보세요<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb76-15">### 파이썬</span>
<span id="cb76-16">```python</span>
<span id="cb76-17">from typing import List</span>
<span id="cb76-18"></span>
<span id="cb76-19">def solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> List[int]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> int) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> int<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb76-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> numbers[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> len(numbers)]</span></code></pre></div>
</section>
<section id="러스트-38" class="level3" data-number="10.2.3">
<h3 data-number="10.2.3" class="anchored" data-anchor-id="러스트-38"><span class="header-section-number">10.2.3</span> 러스트</h3>
<div class="sourceCode" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb77-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb77-2">    numbers[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()]</span>
<span id="cb77-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb77-4"></span>
<span id="cb77-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb77-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb77-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb77-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb77-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb77-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-회전시키기" class="level2" data-number="10.3">
<h2 data-number="10.3" class="anchored" data-anchor-id="배열-회전시키기"><span class="header-section-number">10.3</span> 배열 회전시키기</h2>
<p>정수가 담긴 배열&nbsp;<code>numbers</code> 와 문자열&nbsp;<code>direction</code> 가 매개변수로 주어집니다. 배열&nbsp;<code>numbers</code> 의 원소를&nbsp;<code>direction</code> 방향으로 한 칸씩 회전시킨 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-38" class="level3" data-number="10.3.1">
<h3 data-number="10.3.1" class="anchored" data-anchor-id="파이썬-38"><span class="header-section-number">10.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb78-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Literal</span>
<span id="cb78-2"></span>
<span id="cb78-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], direction: Literal[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb78-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> direction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>:</span>
<span id="cb78-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [numbers[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> numbers[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb78-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># direction == "left"</span></span>
<span id="cb78-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]]</span></code></pre></div>
</section>
<section id="러스트-39" class="level3" data-number="10.3.2">
<h3 data-number="10.3.2" class="anchored" data-anchor-id="러스트-39"><span class="header-section-number">10.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb79" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb79-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">#[</span>derive<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PartialEq</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb79-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">enum</span> Direction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-3">    Right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb79-4">    Left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb79-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb79-6"></span>
<span id="cb79-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> direction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Direction) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>with_capacity(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-9"></span>
<span id="cb79-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> direction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-11">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Direction::</span>Right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-12">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Some</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>last) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>last() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-13">                result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(last)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-14">                result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend_from_slice(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-15">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb79-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb79-17">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Direction::</span>Left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-18">            result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend_from_slice(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-19">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Some</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>first) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>first() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-20">                result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(first)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-21">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb79-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb79-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb79-24"></span>
<span id="cb79-25">    result</span>
<span id="cb79-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb79-27"></span>
<span id="cb79-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb79-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> right_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Direction::</span>Right)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> left_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Direction::</span>Left)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-32"></span>
<span id="cb79-33">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Right rotation: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> right_result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-34">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Left rotation: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> left_result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb79-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day11-수학-반복문" class="level1" data-number="11">
<h1 data-number="11"><span class="header-section-number">11</span> Day11 수학, 반복문</h1>
<p>머쓱이는 직육면체 모양의 상자를 하나 가지고 있는데 이 상자에 정육면체 모양의 주사위를 최대한 많이 채우고 싶습니다. 상자의 가로, 세로, 높이가 저장되어있는 배열&nbsp;<code>box</code> 와 주사위 모서리의 길이 정수&nbsp;<code>n</code> 이 매개변수로 주어졌을 때, 상자에 들어갈 수 있는 주사위의 최대 개수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-39" class="level3" data-number="11.0.1">
<h3 data-number="11.0.1" class="anchored" data-anchor-id="파이썬-39"><span class="header-section-number">11.0.1</span> 파이썬</h3>
<div class="sourceCode" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb80-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb80-2"></span>
<span id="cb80-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(box: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb80-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (box[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (box[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (box[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> n)</span></code></pre></div>
</section>
<section id="러스트-40" class="level3" data-number="11.0.2">
<h3 data-number="11.0.2" class="anchored" data-anchor-id="러스트-40"><span class="header-section-number">11.0.2</span> 러스트</h3>
<div class="sourceCode" id="cb81" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb81-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(box_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb81-2">    (box_dims[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (box_dims[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (box_dims[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n)</span>
<span id="cb81-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb81-4"></span>
<span id="cb81-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb81-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> box_dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb81-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb81-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>box_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb81-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb81-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="합성수-찾기" class="level2" data-number="11.1">
<h2 data-number="11.1" class="anchored" data-anchor-id="합성수-찾기"><span class="header-section-number">11.1</span> 합성수 찾기</h2>
<p>약수의 개수가 세 개 이상인 수를 합성수라고 합니다. 자연수&nbsp;<code>n</code> 이 매개변수로 주어질 때&nbsp;<code>n</code> 이하의 합성수의 개수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-40" class="level3" data-number="11.1.1">
<h3 data-number="11.1.1" class="anchored" data-anchor-id="파이썬-40"><span class="header-section-number">11.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb82" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb82-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb82-2">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb82-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4부터 n까지 순회</span></span>
<span id="cb82-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_composite(num):</span>
<span id="cb82-5">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb82-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count</span>
<span id="cb82-7"></span>
<span id="cb82-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> is_composite(num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb82-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb82-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb82-11">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb82-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
</section>
<section id="러스트-41" class="level3" data-number="11.1.2">
<h3 data-number="11.1.2" class="anchored" data-anchor-id="러스트-41"><span class="header-section-number">11.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb83" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb83-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb83-2">    (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> is_composite(num))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span></span>
<span id="cb83-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb83-4"></span>
<span id="cb83-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> is_composite(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb83-6">    (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>((num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sqrt() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>any(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb83-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb83-8"></span>
<span id="cb83-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb83-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb83-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb83-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of composite numbers up to {}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb83-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="최댓값-만들기-1" class="level2" data-number="11.2">
<h2 data-number="11.2" class="anchored" data-anchor-id="최댓값-만들기-1"><span class="header-section-number">11.2</span> 최댓값 만들기 (1)</h2>
<p>정수 배열&nbsp;<code>numbers</code> 가 매개변수로 주어집니다.&nbsp;<code>numbers</code> 의 원소 중 두 개를 곱해 만들 수 있는 최댓값을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-41" class="level3" data-number="11.2.1">
<h3 data-number="11.2.1" class="anchored" data-anchor-id="파이썬-41"><span class="header-section-number">11.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb84" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb84-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb84-2"></span>
<span id="cb84-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb84-4">    numbers.sort(reverse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트를 내림차순으로 정렬</span></span>
<span id="cb84-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 가장 큰 두 수를 곱함</span></span></code></pre></div>
</section>
<section id="러스트-42" class="level3" data-number="11.2.2">
<h3 data-number="11.2.2" class="anchored" data-anchor-id="러스트-42"><span class="header-section-number">11.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb85" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb85-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb85-2">    numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_unstable_by(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cmp(a))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort in descending order</span></span>
<span id="cb85-3">    numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Multiply the two largest numbers</span></span>
<span id="cb85-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb85-5"></span>
<span id="cb85-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb85-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb85-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb85-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb85-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="팩토리얼" class="level2" data-number="11.3">
<h2 data-number="11.3" class="anchored" data-anchor-id="팩토리얼"><span class="header-section-number">11.3</span> 팩토리얼</h2>
<p><code>i</code> 팩토리얼 <img src="https://latex.codecogs.com/png.latex?i!"> 은 1 부터 i 까지 정수의 곱을 의미합니다. 예를들어 <img src="https://latex.codecogs.com/png.latex?5!%20=%205%20*%204%20*%203%20*%202%20*%201%20=%20120"> 입니다. 정수 n 이 주어질 때 <img src="https://latex.codecogs.com/png.latex?i!%20%E2%89%A4%20n"> 조건을 만족하는 가장 큰 정수 i 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-42" class="level3" data-number="11.3.1">
<h3 data-number="11.3.1" class="anchored" data-anchor-id="파이썬-42"><span class="header-section-number">11.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb86" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb86-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb86-2">    factorial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb86-3">    i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb86-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> factorial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> n:</span>
<span id="cb86-5">        i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb86-6">        factorial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> i</span>
<span id="cb86-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-43" class="level3" data-number="11.3.2">
<h3 data-number="11.3.2" class="anchored" data-anchor-id="러스트-43"><span class="header-section-number">11.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb87" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb87-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb87-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> factorial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> factorial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb87-5">        i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-6">        factorial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb87-8">    i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb87-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb87-10"></span>
<span id="cb87-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb87-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3628800</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb87-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day12-문자열-정렬-사칙연산-수학" class="level1" data-number="12">
<h1 data-number="12"><span class="header-section-number">12</span> Day12 문자열, 정렬, 사칙연산, 수학</h1>
<section id="모음-제거" class="level2" data-number="12.1">
<h2 data-number="12.1" class="anchored" data-anchor-id="모음-제거"><span class="header-section-number">12.1</span> 모음 제거</h2>
<p>영어에선 a, e, i, o, u 다섯 가지 알파벳을 모음으로 분류합니다. 문자열&nbsp;<code>my_string</code> 이 매개변수로 주어질 때 모음을 제거한 문자열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-43" class="level3" data-number="12.1.1">
<h3 data-number="12.1.1" class="anchored" data-anchor-id="파이썬-43"><span class="header-section-number">12.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb88" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb88-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb88-2">    vowels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'aeiou'</span></span>
<span id="cb88-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(char <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> vowels)</span></code></pre></div>
</section>
<section id="러스트-44" class="level3" data-number="12.1.2">
<h3 data-number="12.1.2" class="anchored" data-anchor-id="러스트-44"><span class="header-section-number">12.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb89" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb89-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb89-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> vowels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aeiou"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-3">    my_string</span>
<span id="cb89-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb89-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>vowels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>c))</span>
<span id="cb89-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb89-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb89-8"></span>
<span id="cb89-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb89-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello world"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb89-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output: "hll wrld"</span></span>
<span id="cb89-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-정렬하기-1" class="level2" data-number="12.2">
<h2 data-number="12.2" class="anchored" data-anchor-id="문자열-정렬하기-1"><span class="header-section-number">12.2</span> 문자열 정렬하기 (1)</h2>
<p>문자열&nbsp;<code>my_string</code> 이 매개변수로 주어질 때,&nbsp;<code>my_string</code>&nbsp;안에 있는 숫자만 골라 오름차순 정렬한 리스트를&nbsp;return 하도록 solution 함수를 작성해보세요.</p>
<section id="파이썬-44" class="level3" data-number="12.2.1">
<h3 data-number="12.2.1" class="anchored" data-anchor-id="파이썬-44"><span class="header-section-number">12.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb90" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb90-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb90-2"></span>
<span id="cb90-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb90-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>([<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(char) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char.isdigit()])</span></code></pre></div>
</section>
<section id="러스트-45" class="level3" data-number="12.2.2">
<h3 data-number="12.2.2" class="anchored" data-anchor-id="러스트-45"><span class="header-section-number">12.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb91" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb91-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb91-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> digits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string</span>
<span id="cb91-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb91-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_digit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>))</span>
<span id="cb91-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-6"></span>
<span id="cb91-7">    digits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-8">    digits</span>
<span id="cb91-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb91-10"></span>
<span id="cb91-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb91-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a1b2c3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb91-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output: [1, 2, 3]</span></span>
<span id="cb91-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="숨어있는-숫자의-덧셈-1" class="level2" data-number="12.3">
<h2 data-number="12.3" class="anchored" data-anchor-id="숨어있는-숫자의-덧셈-1"><span class="header-section-number">12.3</span> 숨어있는 숫자의 덧셈 (1)</h2>
<p>문자열&nbsp;<code>my_string</code> 이 매개변수로 주어집니다.&nbsp;<code>my_string</code> 안의 모든 자연수들의 합을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-45" class="level3" data-number="12.3.1">
<h3 data-number="12.3.1" class="anchored" data-anchor-id="파이썬-45"><span class="header-section-number">12.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb92" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb92-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb92-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(char) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char.isdigit())</span></code></pre></div>
</section>
<section id="러스트-46" class="level3" data-number="12.3.2">
<h3 data-number="12.3.2" class="anchored" data-anchor-id="러스트-46"><span class="header-section-number">12.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb93" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb93-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb93-2">    my_string</span>
<span id="cb93-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb93-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_digit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Convert characters to digits</span></span>
<span id="cb93-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sum the digits</span></span>
<span id="cb93-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb93-7"></span>
<span id="cb93-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb93-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a1b2c3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb93-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output: 6</span></span>
<span id="cb93-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="소인수분해" class="level2" data-number="12.4">
<h2 data-number="12.4" class="anchored" data-anchor-id="소인수분해"><span class="header-section-number">12.4</span> 소인수분해</h2>
<p>소인수분해란 어떤 수를 소수들의 곱으로 표현하는 것입니다. 예를 들어 12 를 소인수 분해하면 2 * 2 * 3 으로 나타낼 수 있습니다. 따라서 12 의 소인수는 2 와 3 입니다. 자연수&nbsp;<code>n</code> 이 매개변수로 주어질 때&nbsp;<code>n</code> 의 소인수를 오름차순으로 담은 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-46" class="level3" data-number="12.4.1">
<h3 data-number="12.4.1" class="anchored" data-anchor-id="파이썬-46"><span class="header-section-number">12.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb94" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb94-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb94-2"></span>
<span id="cb94-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb94-4">    factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb94-5">    divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb94-6"></span>
<span id="cb94-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> n:</span>
<span id="cb94-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb94-9">            factors.append(divisor)</span>
<span id="cb94-10">            n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> divisor</span>
<span id="cb94-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb94-12">            divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb94-13"></span>
<span id="cb94-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb94-15">        factors.append(n)</span>
<span id="cb94-16"></span>
<span id="cb94-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(factors))</span></code></pre></div>
</section>
<section id="러스트-47" class="level3" data-number="12.4.2">
<h3 data-number="12.4.2" class="anchored" data-anchor-id="러스트-47"><span class="header-section-number">12.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb95" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb95-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb95-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a mutable copy of n</span></span>
<span id="cb95-5"></span>
<span id="cb95-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb95-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb95-8">            factors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(divisor)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-9">            num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> divisor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Use the mutable copy</span></span>
<span id="cb95-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb95-11">            divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb95-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb95-14"></span>
<span id="cb95-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb95-16">        factors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb95-18"></span>
<span id="cb95-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Use a HashSet to remove duplicates, then collect and sort</span></span>
<span id="cb95-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> unique_factors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> factors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-21">    unique_factors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-22">    unique_factors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>dedup()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove duplicates</span></span>
<span id="cb95-23"></span>
<span id="cb95-24">    unique_factors</span>
<span id="cb95-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb95-26"></span>
<span id="cb95-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb95-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb95-30">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output: [2, 7]</span></span>
<span id="cb95-31"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day13-문자열-배열-사칙연산-수학-조건문" class="level1" data-number="13">
<h1 data-number="13"><span class="header-section-number">13</span> Day13 문자열, 배열, 사칙연산, 수학, 조건문</h1>
<section id="컨트롤-제트" class="level2" data-number="13.1">
<h2 data-number="13.1" class="anchored" data-anchor-id="컨트롤-제트"><span class="header-section-number">13.1</span> 컨트롤 제트</h2>
<p>숫자와 “Z”가 공백으로 구분되어 담긴 문자열이 주어집니다. 문자열에 있는 숫자를 차례대로 더하려고 합니다. 이 때 “Z”가 나오면 바로 전에 더했던 숫자를 뺀다는 뜻입니다. 숫자와 “Z”로 이루어진 문자열&nbsp;<code>s</code> 가 주어질 때, 머쓱이가 구한 값을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-47" class="level3" data-number="13.1.1">
<h3 data-number="13.1.1" class="anchored" data-anchor-id="파이썬-47"><span class="header-section-number">13.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb96" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb96-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb96-2">    stack: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb96-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s.split():</span>
<span id="cb96-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> item <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Z'</span>:</span>
<span id="cb96-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> stack:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 스택이 비어있지 않은 경우에만 pop</span></span>
<span id="cb96-6">                stack.pop()</span>
<span id="cb96-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb96-8">            stack.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(item))</span>
<span id="cb96-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(stack)</span></code></pre></div>
</section>
<section id="러스트-48" class="level3" data-number="13.1.2">
<h3 data-number="13.1.2" class="anchored" data-anchor-id="러스트-48"><span class="header-section-number">13.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb97" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb97-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> stack<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb97-3"></span>
<span id="cb97-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> item <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>stack<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-7">                stack<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pop()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb97-8">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb97-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-10">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Ok</span>(num) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> item<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-11">                stack<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb97-12">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb97-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb97-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb97-15"></span>
<span id="cb97-16">    stack<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb97-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb97-18"></span>
<span id="cb97-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb97-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1 2 3 Z 4 5"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb97-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb97-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output: Result: 12</span></span>
<span id="cb97-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-원소의-길이" class="level2" data-number="13.2">
<h2 data-number="13.2" class="anchored" data-anchor-id="배열-원소의-길이"><span class="header-section-number">13.2</span> 배열 원소의 길이</h2>
<p>문자열 배열&nbsp;<code>strlist</code> 가 매개변수로 주어집니다.&nbsp;<code>strlist</code>&nbsp;각 원소의 길이를 담은 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-48" class="level3" data-number="13.2.1">
<h3 data-number="13.2.1" class="anchored" data-anchor-id="파이썬-48"><span class="header-section-number">13.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb98" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb98-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb98-2"></span>
<span id="cb98-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(strlist:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> ) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb98-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(s) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> strlist]</span></code></pre></div>
</section>
<section id="러스트-49" class="level3" data-number="13.2.2">
<h3 data-number="13.2.2" class="anchored" data-anchor-id="러스트-49"><span class="header-section-number">13.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb99" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb99-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(strlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-2">    strlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb99-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb99-4"></span>
<span id="cb99-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb99-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb99-7">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"We"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-8">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"are"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-9">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"the"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb99-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"world!"</span>)</span>
<span id="cb99-11">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb99-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="중복된-문자-제거" class="level2" data-number="13.3">
<h2 data-number="13.3" class="anchored" data-anchor-id="중복된-문자-제거"><span class="header-section-number">13.3</span> 중복된 문자 제거</h2>
<p>문자열 <code>my_string</code> 이 매개변수로 주어집니다. <code>my_string</code> 에서 중복된 문자를 제거하고 하나의 문자만 남긴 문자열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-49" class="level3" data-number="13.3.1">
<h3 data-number="13.3.1" class="anchored" data-anchor-id="파이썬-49"><span class="header-section-number">13.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb100" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb100-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb100-2">    seen: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb100-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(ch <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ch <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> (ch <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> seen <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> seen.add(ch)))</span></code></pre></div>
</section>
<section id="러스트-50" class="level3" data-number="13.3.2">
<h3 data-number="13.3.2" class="anchored" data-anchor-id="러스트-50"><span class="header-section-number">13.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb101" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb101-1"> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-2"></span>
<span id="cb101-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb101-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> seen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashSet::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-5">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb101-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> seen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>insert(ch))</span>
<span id="cb101-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb101-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb101-9"></span>
<span id="cb101-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb101-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"people"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb101-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="삼각형의-완성조건-1" class="level2" data-number="13.4">
<h2 data-number="13.4" class="anchored" data-anchor-id="삼각형의-완성조건-1"><span class="header-section-number">13.4</span> 삼각형의 완성조건 (1)</h2>
<p>선분 세 개로 삼각형을 만들기 위해서는 다음과 같은 조건을 만족해야 합니다. - 가장 긴 변의 길이는 다른 두 변의 길이의 합보다 작아야 합니다. 삼각형의 세 변의 길이가 담긴 배열 <code>sides</code> 이 매개변수로 주어집니다. 세 변으로 삼각형을 만들 수 있다면 1, 만들 수 없다면 2 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-50" class="level3" data-number="13.4.1">
<h3 data-number="13.4.1" class="anchored" data-anchor-id="파이썬-50"><span class="header-section-number">13.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb102" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb102-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb102-2"></span>
<span id="cb102-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(sides: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb102-4">    sides.sort()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 배열을 오름차순으로 정렬</span></span>
<span id="cb102-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sides[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sides[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> sides[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</section>
<section id="러스트-51" class="level3" data-number="13.4.2">
<h3 data-number="13.4.2" class="anchored" data-anchor-id="러스트-51"><span class="header-section-number">13.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb103" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb103-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb103-2">    sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 배열을 오름차순으로 정렬</span></span>
<span id="cb103-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sides[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sides[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> sides[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb103-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb103-5"></span>
<span id="cb103-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb103-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb103-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb103-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb103-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day14" class="level1" data-number="14">
<h1 data-number="14"><span class="header-section-number">14</span> Day14</h1>
<section id="가까운-수" class="level2" data-number="14.1">
<h2 data-number="14.1" class="anchored" data-anchor-id="가까운-수"><span class="header-section-number">14.1</span> 가까운 수</h2>
<p>정수 배열 array 와 정수 n 이 매개변수로 주어질 때, array 에 들어있는 정수 중 n 과 가장 가까운 수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-51" class="level3" data-number="14.1.1">
<h3 data-number="14.1.1" class="anchored" data-anchor-id="파이썬-51"><span class="header-section-number">14.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb104" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb104-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb104-2"></span>
<span id="cb104-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb104-4">    array.sort()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort the array in ascending order</span></span>
<span id="cb104-5">    closest: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize closest number with the first element</span></span>
<span id="cb104-6">    min_diff: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> array[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize minimum difference</span></span>
<span id="cb104-7"></span>
<span id="cb104-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> array:</span>
<span id="cb104-9">        diff: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> num)</span>
<span id="cb104-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> min_diff:</span>
<span id="cb104-11">            min_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diff</span>
<span id="cb104-12">            closest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num</span>
<span id="cb104-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> min_diff <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> closest:</span>
<span id="cb104-14">            closest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num</span>
<span id="cb104-15"></span>
<span id="cb104-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> closest</span></code></pre></div>
</section>
<section id="러스트-52" class="level3" data-number="14.1.2">
<h3 data-number="14.1.2" class="anchored" data-anchor-id="러스트-52"><span class="header-section-number">14.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb105" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb105-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb105-2">    array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_unstable()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort the array in ascending order</span></span>
<span id="cb105-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> closest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize closest number with the first element</span></span>
<span id="cb105-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> min_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> array[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>abs()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize minimum difference</span></span>
<span id="cb105-5"></span>
<span id="cb105-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb105-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>abs()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> min_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb105-9">            min_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diff<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-10">            closest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> min_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> closest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb105-12">            closest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb105-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb105-15"></span>
<span id="cb105-16">    closest</span>
<span id="cb105-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb105-18"></span>
<span id="cb105-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb105-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-23">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Closest number: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb105-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="게임" class="level2" data-number="14.2">
<h2 data-number="14.2" class="anchored" data-anchor-id="게임"><span class="header-section-number">14.2</span> 369 게임</h2>
<p>머쓱이는 친구들과 369 게임을 하고 있습니다. 369 게임은 1 부터 숫자를 하나씩 대며 3, 6, 9 가 들어가는 숫자는 숫자 대신 3, 6, 9 의 개수만큼 박수를 치는 게임입니다. 머쓱이가 말해야하는 숫자 order 가 매개변수로 주어질 때, 머쓱이가 쳐야할 박수 횟수를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-52" class="level3" data-number="14.2.1">
<h3 data-number="14.2.1" class="anchored" data-anchor-id="파이썬-52"><span class="header-section-number">14.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb106" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb106-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(order: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb106-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(order).count(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(order).count(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'6'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(order).count(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span>)</span></code></pre></div>
</section>
<section id="러스트-53" class="level3" data-number="14.2.2">
<h3 data-number="14.2.2" class="anchored" data-anchor-id="러스트-53"><span class="header-section-number">14.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb107" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb107-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb107-2">    order</span>
<span id="cb107-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb107-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb107-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'3'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'6'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span>)</span>
<span id="cb107-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span></span>
<span id="cb107-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb107-8"></span>
<span id="cb107-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb107-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">29423</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb107-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(order)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb107-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of 3, 6, 9 occurrences: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb107-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="암호해독" class="level2" data-number="14.3">
<h2 data-number="14.3" class="anchored" data-anchor-id="암호해독"><span class="header-section-number">14.3</span> 암호해독</h2>
<p>군 전략가 머쓱이는 전쟁 중 적군이 다음과 같은 암호 체계를 사용한다는 것을 알아냈습니다.</p>
<ul>
<li>암호화된 문자열 cipher 를 주고받습니다.</li>
<li>그 문자열에서 code 의 배수 번째 글자만 진짜 암호입니다.</li>
</ul>
<p>문자열 cipher 와 정수 code 가 매개변수로 주어질 때 해독된 암호 문자열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-53" class="level3" data-number="14.3.1">
<h3 data-number="14.3.1" class="anchored" data-anchor-id="파이썬-53"><span class="header-section-number">14.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb108" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb108-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(cipher: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, code: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb108-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> cipher[code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>::code]</span></code></pre></div>
</section>
<section id="러스트-54" class="level3" data-number="14.3.2">
<h3 data-number="14.3.2" class="anchored" data-anchor-id="러스트-54"><span class="header-section-number">14.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb109" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb109-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(cipher<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb109-2">    cipher<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb109-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>skip(code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb109-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(code)</span>
<span id="cb109-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb109-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb109-7"></span>
<span id="cb109-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb109-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> cipher <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dfjardstddetckdaccccdegk"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb109-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb109-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(cipher<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> code)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb109-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Decoded message: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb109-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="대문자와-소문자" class="level2" data-number="14.4">
<h2 data-number="14.4" class="anchored" data-anchor-id="대문자와-소문자"><span class="header-section-number">14.4</span> 대문자와 소문자</h2>
<p>문자열 <code>my_string</code> 이 매개변수로 주어질 때, 대문자는 소문자로 소문자는 대문자로 변환한 문자열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-54" class="level3" data-number="14.4.1">
<h3 data-number="14.4.1" class="anchored" data-anchor-id="파이썬-54"><span class="header-section-number">14.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb110" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb110-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb110-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string.swapcase()</span></code></pre></div>
</section>
<section id="러스트-55" class="level3" data-number="14.4.2">
<h3 data-number="14.4.2" class="anchored" data-anchor-id="러스트-55"><span class="header-section-number">14.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb111" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb111-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb111-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb111-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_uppercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb111-4">            c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_lowercase()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>next()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()</span>
<span id="cb111-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_lowercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb111-6">            c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_uppercase()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>next()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()</span>
<span id="cb111-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb111-8">            c</span>
<span id="cb111-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb111-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb111-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb111-12"></span>
<span id="cb111-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb111-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb111-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb111-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Swapped case: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb111-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day15-문자열-해시-배열-수하" class="level1" data-number="15">
<h1 data-number="15"><span class="header-section-number">15</span> Day15 문자열, 해시, 배열, 수하</h1>
<section id="영어가-싫어요" class="level2" data-number="15.1">
<h2 data-number="15.1" class="anchored" data-anchor-id="영어가-싫어요"><span class="header-section-number">15.1</span> 영어가 싫어요</h2>
<p>영어가 싫은 머쓱이는 영어로 표기되어있는 숫자를 수로 바꾸려고 합니다. 문자열 numbers 가 매개변수로 주어질 때, numbers 를 정수로 바꿔 return 하도록 solution 함수를 완성해 주세요.</p>
<section id="파이썬-55" class="level3" data-number="15.1.1">
<h3 data-number="15.1.1" class="anchored" data-anchor-id="파이썬-55"><span class="header-section-number">15.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb112" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb112-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb112-2">    num_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb112-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'zero'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'one'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'two'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'three'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'four'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'4'</span>,</span>
<span id="cb112-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'five'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'5'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'six'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'6'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'seven'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'7'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'eight'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'8'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nine'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'9'</span></span>
<span id="cb112-5">    }</span>
<span id="cb112-6"></span>
<span id="cb112-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> word, digit <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_dict.items():</span>
<span id="cb112-8">        numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers.replace(word, digit)</span>
<span id="cb112-9"></span>
<span id="cb112-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(numbers)</span></code></pre></div>
</section>
<section id="러스트-56" class="level3" data-number="15.1.2">
<h3 data-number="15.1.2" class="anchored" data-anchor-id="러스트-56"><span class="header-section-number">15.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb113" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb113-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb113-2"></span>
<span id="cb113-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb113-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_dict<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb113-5">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zero"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"one"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"two"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"three"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"four"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb113-6">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"five"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"six"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seven"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eight"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nine"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9"</span>)</span>
<span id="cb113-7">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb113-8"></span>
<span id="cb113-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb113-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (word<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> digit) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_dict<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb113-11">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>replace(word<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> digit)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb113-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb113-13"></span>
<span id="cb113-14">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()</span>
<span id="cb113-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb113-16"></span>
<span id="cb113-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb113-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"onetwothree"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb113-19">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This will print: 123</span></span>
<span id="cb113-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="인덱스-바꾸기" class="level2" data-number="15.2">
<h2 data-number="15.2" class="anchored" data-anchor-id="인덱스-바꾸기"><span class="header-section-number">15.2</span> 인덱스 바꾸기</h2>
<p>문자열 my_string 과 정수 num1, num2 가 매개변수로 주어질 때, my_string 에서 인덱스 num1 과 인덱스 num2 에 해당하는 문자를 바꾼 문자열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-56" class="level3" data-number="15.2.1">
<h3 data-number="15.2.1" class="anchored" data-anchor-id="파이썬-56"><span class="header-section-number">15.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb114" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb114-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, num1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb114-2">    string_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(my_string)</span>
<span id="cb114-3">    string_list[num1], string_list[num2] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> string_list[num2], string_list[num1]</span>
<span id="cb114-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(string_list)</span></code></pre></div>
</section>
<section id="러스트-57" class="level3" data-number="15.2.2">
<h3 data-number="15.2.2" class="anchored" data-anchor-id="러스트-57"><span class="header-section-number">15.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb115" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb115-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb115-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb115-3">    chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>swap(num1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb115-4">    chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb115-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb115-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb115-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb115-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This will print: "hlelo"</span></span>
<span id="cb115-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="한-번만-등장한-문자" class="level2" data-number="15.3">
<h2 data-number="15.3" class="anchored" data-anchor-id="한-번만-등장한-문자"><span class="header-section-number">15.3</span> 한 번만 등장한 문자</h2>
<p>문자열 s 가 매개변수로 주어집니다. s 에서 한 번만 등장하는 문자를 사전 순으로 정렬한 문자열을 return 하도록 solution 함수를 완성해보세요. 한 번만 등장하는 문자가 없을 경우 빈 문자열을 return 합니다.</p>
<section id="파이썬-57" class="level3" data-number="15.3.1">
<h3 data-number="15.3.1" class="anchored" data-anchor-id="파이썬-57"><span class="header-section-number">15.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb116" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb116-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Counter</span>
<span id="cb116-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb116-3"></span>
<span id="cb116-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb116-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Count the occurrences of each character</span></span>
<span id="cb116-6">    char_counts: Counter[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Counter(s)</span>
<span id="cb116-7"></span>
<span id="cb116-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter characters that appear only once and sort them</span></span>
<span id="cb116-9">    unique_chars: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>([char <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char, count <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> char_counts.items() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb116-10"></span>
<span id="cb116-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Join the characters into a string</span></span>
<span id="cb116-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(unique_chars)</span></code></pre></div>
</section>
<section id="러스트-58" class="level3" data-number="15.3.2">
<h3 data-number="15.3.2" class="anchored" data-anchor-id="러스트-58"><span class="header-section-number">15.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb117" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb117-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-2"></span>
<span id="cb117-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb117-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Count the occurrences of each character</span></span>
<span id="cb117-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> char_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashMap::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb117-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>char_counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>entry(c)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>or_insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb117-9"></span>
<span id="cb117-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Filter characters that appear only once and sort them</span></span>
<span id="cb117-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> unique_chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> char_counts</span>
<span id="cb117-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()</span>
<span id="cb117-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> count)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb117-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>)</span>
<span id="cb117-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-16"></span>
<span id="cb117-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort the unique characters</span></span>
<span id="cb117-18">    unique_chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_unstable()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-19"></span>
<span id="cb117-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Join the characters into a string</span></span>
<span id="cb117-21">    unique_chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb117-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb117-23"></span>
<span id="cb117-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb117-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcabcabc"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-26">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This will print: ""</span></span>
<span id="cb117-27"></span>
<span id="cb117-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcabcabcd"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb117-29">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This will print: "d"</span></span>
<span id="cb117-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="악수-구하기" class="level2" data-number="15.4">
<h2 data-number="15.4" class="anchored" data-anchor-id="악수-구하기"><span class="header-section-number">15.4</span> 악수 구하기</h2>
<p>정수 n 이 매개변수로 주어질 때, n 의 약수를 오름차순으로 담은 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-58" class="level3" data-number="15.4.1">
<h3 data-number="15.4.1" class="anchored" data-anchor-id="파이썬-58"><span class="header-section-number">15.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb118" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb118-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb118-2"></span>
<span id="cb118-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb118-4">    divisors: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb118-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb118-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb118-7">            divisors.append(i)</span>
<span id="cb118-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> i:</span>
<span id="cb118-9">                divisors.append(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> i)</span>
<span id="cb118-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(divisors)</span></code></pre></div>
</section>
<section id="러스트-59" class="level3" data-number="15.4.2">
<h3 data-number="15.4.2" class="anchored" data-anchor-id="러스트-59"><span class="header-section-number">15.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb119" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb119-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb119-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> divisors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb119-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sqrt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sqrt() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb119-4"></span>
<span id="cb119-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>sqrt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb119-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb119-7">            divisors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(i)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb119-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb119-9">                divisors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> i)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb119-10">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb119-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb119-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb119-13"></span>
<span id="cb119-14">    divisors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_unstable()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb119-15">    divisors</span>
<span id="cb119-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb119-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb119-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb119-19">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This will print: [1, 2, 3, 4, 6, 12]</span></span>
<span id="cb119-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day16-문자열-수학-배열-조건문" class="level1" data-number="16">
<h1 data-number="16"><span class="header-section-number">16</span> Day16 문자열, 수학, 배열, 조건문</h1>
<section id="편지" class="level2" data-number="16.1">
<h2 data-number="16.1" class="anchored" data-anchor-id="편지"><span class="header-section-number">16.1</span> 편지</h2>
<p>머쓱이는 할머니께 생신 축하 편지를 쓰려고 합니다. 할머니가 보시기 편하도록 글자 한 자 한 자를 가로 2cm 크기로 적으려고 하며, 편지를 가로로만 적을 때, 축하 문구 message 를 적기 위해 필요한 편지지의 최소 가로길이를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-59" class="level3" data-number="16.1.1">
<h3 data-number="16.1.1" class="anchored" data-anchor-id="파이썬-59"><span class="header-section-number">16.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb120" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb120-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(message: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb120-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(message) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</section>
<section id="러스트-60" class="level3" data-number="16.1.2">
<h3 data-number="16.1.2" class="anchored" data-anchor-id="러스트-60"><span class="header-section-number">16.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb121" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb121-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(message<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb121-2">    (message<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb121-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb121-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb121-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb121-6">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>solution(result))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb121-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="가장-큰-수-찾기" class="level2" data-number="16.2">
<h2 data-number="16.2" class="anchored" data-anchor-id="가장-큰-수-찾기"><span class="header-section-number">16.2</span> 가장 큰 수 찾기</h2>
<p>정수 배열 array 가 매개변수로 주어질 때, 가장 큰 수와 그 수의 인덱스를 담은 배열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-60" class="level3" data-number="16.2.1">
<h3 data-number="16.2.1" class="anchored" data-anchor-id="파이썬-60"><span class="header-section-number">16.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb122" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb122-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Union</span>
<span id="cb122-2"></span>
<span id="cb122-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]]:</span>
<span id="cb122-4">    max_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(array)</span>
<span id="cb122-5">    max_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array.index(max_value)</span>
<span id="cb122-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [max_value, max_index]</span></code></pre></div>
</section>
<section id="러스트-61" class="level3" data-number="16.2.2">
<h3 data-number="16.2.2" class="anchored" data-anchor-id="러스트-61"><span class="header-section-number">16.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb123" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb123-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> (<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb123-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb123-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>position(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> max_value)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb123-4">    (max_value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> max_index)</span>
<span id="cb123-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb123-6"></span>
<span id="cb123-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb123-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Test case</span></span>
<span id="cb123-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb123-10"></span>
<span id="cb123-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Call the solution function</span></span>
<span id="cb123-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (max_value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> max_index) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>array)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb123-13"></span>
<span id="cb123-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Print the results</span></span>
<span id="cb123-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Maximum value: {}, Index: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> max_value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> max_index)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb123-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-계산하기" class="level2" data-number="16.3">
<h2 data-number="16.3" class="anchored" data-anchor-id="문자열-계산하기"><span class="header-section-number">16.3</span> 문자열 계산하기</h2>
<p>my_string 은 <img src="https://latex.codecogs.com/png.latex?3%20+%205"> 처럼 문자열로 된 수식입니다. 문자열 my_string 이 매개변수로 주어질 때, 수식을 계산한 값을 return 하는 solution 함수를 완성해주세요.</p>
<section id="파이썬-61" class="level3" data-number="16.3.1">
<h3 data-number="16.3.1" class="anchored" data-anchor-id="파이썬-61"><span class="header-section-number">16.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb124" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb124-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb124-2">    elements <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string.split()</span>
<span id="cb124-3">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(elements[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb124-4"></span>
<span id="cb124-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(elements), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>):</span>
<span id="cb124-6">        operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> elements[i]</span>
<span id="cb124-7">        number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(elements[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb124-8"></span>
<span id="cb124-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'+'</span>:</span>
<span id="cb124-10">            result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> number</span>
<span id="cb124-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>:</span>
<span id="cb124-12">            result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> number</span>
<span id="cb124-13"></span>
<span id="cb124-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-62" class="level3" data-number="16.3.2">
<h3 data-number="16.3.2" class="anchored" data-anchor-id="러스트-62"><span class="header-section-number">16.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb125" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb125-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb125-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> elements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> elements[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-4"></span>
<span id="cb125-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>elements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb125-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> elements[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> elements[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-8"></span>
<span id="cb125-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb125-10">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"+"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb125-11">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb125-12">            _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">panic!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unsupported operator: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> operator)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb125-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb125-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb125-15"></span>
<span id="cb125-16">    result</span>
<span id="cb125-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb125-18"></span>
<span id="cb125-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb125-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Test case</span></span>
<span id="cb125-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3 + 5 - 2 + 8"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-22"></span>
<span id="cb125-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Call the solution function</span></span>
<span id="cb125-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-25"></span>
<span id="cb125-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Print the result</span></span>
<span id="cb125-27">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb125-28"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열의-유사도" class="level2" data-number="16.4">
<h2 data-number="16.4" class="anchored" data-anchor-id="배열의-유사도"><span class="header-section-number">16.4</span> 배열의 유사도</h2>
<p>두 배열이 얼마나 유사한지 확인해보려고 합니다. 문자열 배열 s1 과 s2 가 주어질 때 같은 원소의 개수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-62" class="level3" data-number="16.4.1">
<h3 data-number="16.4.1" class="anchored" data-anchor-id="파이썬-62"><span class="header-section-number">16.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb126" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb126-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb126-2"></span>
<span id="cb126-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(s1: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], s2: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb126-4">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb126-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s1:</span>
<span id="cb126-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s2:</span>
<span id="cb126-7">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb126-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count</span></code></pre></div>
</section>
<section id="러스트-63" class="level3" data-number="16.4.2">
<h3 data-number="16.4.2" class="anchored" data-anchor-id="러스트-63"><span class="header-section-number">16.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb127" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb127-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(s1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb127-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb127-3"></span>
<span id="cb127-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb127-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> s2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>item) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb127-6">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb127-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb127-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb127-9"></span>
<span id="cb127-10">    count</span>
<span id="cb127-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb127-12"></span>
<span id="cb127-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb127-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Test case</span></span>
<span id="cb127-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> s1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apple"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cherry"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb127-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> s2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kiwi"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apple"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grape"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb127-17"></span>
<span id="cb127-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Call the solution function</span></span>
<span id="cb127-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>s1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>s2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb127-20"></span>
<span id="cb127-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Print the result</span></span>
<span id="cb127-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count of common elements: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb127-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day17-문자열-수학-조건문-배열-사칙연산" class="level1" data-number="17">
<h1 data-number="17"><span class="header-section-number">17</span> Day17 문자열, 수학, 조건문, 배열, 사칙연산</h1>
<section id="숫자-찾기" class="level2" data-number="17.1">
<h2 data-number="17.1" class="anchored" data-anchor-id="숫자-찾기"><span class="header-section-number">17.1</span> 숫자 찾기</h2>
<p>정수 num 과 k 가 매개변수로 주어질 때, num 을 이루는 숫자 중에 k 가 있으면 num 의 그 숫자가 있는 자리 수를 return 하고 없으면 <img src="https://latex.codecogs.com/png.latex?-1"> 을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-63" class="level3" data-number="17.1.1">
<h3 data-number="17.1.1" class="anchored" data-anchor-id="파이썬-63"><span class="header-section-number">17.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb128" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb128-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb128-2">    num_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(num)</span>
<span id="cb128-3">    k_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(k)</span>
<span id="cb128-4">    index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_str.find(k_str)</span>
<span id="cb128-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb128-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb128-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb128-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-64" class="level3" data-number="17.1.2">
<h3 data-number="17.1.2" class="anchored" data-anchor-id="러스트-64"><span class="header-section-number">17.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb129" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb129-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb129-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb129-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb129-4"></span>
<span id="cb129-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> num_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>find(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>k_str) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb129-6">        <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Some</span>(index) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> (index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb129-7">        <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">None</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb129-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb129-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb129-10"></span>
<span id="cb129-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb129-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb129-13">        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb129-14">        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb129-15">        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5678</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb129-16">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb129-17"></span>
<span id="cb129-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb129-19">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb129-20">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number: {}, Search Digit: {}, Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb129-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb129-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="n-의-배수-고르기" class="level2" data-number="17.2">
<h2 data-number="17.2" class="anchored" data-anchor-id="n-의-배수-고르기"><span class="header-section-number">17.2</span> n 의 배수 고르기</h2>
<p>정수 n 과 정수 배열 numlist 가 매개변수로 주어질 때, numlist 에서 n 의 배수가 아닌 수들을 제거한 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-64" class="level3" data-number="17.2.1">
<h3 data-number="17.2.1" class="anchored" data-anchor-id="파이썬-64"><span class="header-section-number">17.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb130" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb130-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, numlist: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb130-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numlist <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</section>
<section id="러스트-65" class="level3" data-number="17.2.2">
<h3 data-number="17.2.2" class="anchored" data-anchor-id="러스트-65"><span class="header-section-number">17.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb131" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb131-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> numlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb131-2">    numlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb131-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb131-4"></span>
<span id="cb131-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb131-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb131-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numlist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb131-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>numlist)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb131-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb131-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="자릿수-더하기" class="level2" data-number="17.3">
<h2 data-number="17.3" class="anchored" data-anchor-id="자릿수-더하기"><span class="header-section-number">17.3</span> 자릿수 더하기</h2>
<p>정수 n 이 매개변수로 주어질 때 n 의 각 자리 숫자의 합을 return 하도록 solution 함수를 완성해주세요</p>
<section id="파이썬-65" class="level3" data-number="17.3.1">
<h3 data-number="17.3.1" class="anchored" data-anchor-id="파이썬-65"><span class="header-section-number">17.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb132" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb132-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb132-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(digit) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> digit <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(n))</span></code></pre></div>
</section>
<section id="러스트-66" class="level3" data-number="17.3.2">
<h3 data-number="17.3.2" class="anchored" data-anchor-id="러스트-66"><span class="header-section-number">17.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb133" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb133-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-2">    n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb133-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb133-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>digit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> digit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_digit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)</span>
<span id="cb133-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb133-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb133-7"></span>
<span id="cb133-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12345</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="ox-퀴즈" class="level2" data-number="17.4">
<h2 data-number="17.4" class="anchored" data-anchor-id="ox-퀴즈"><span class="header-section-number">17.4</span> OX 퀴즈</h2>
<p>덧셈, 뺄셈 수식들이 <img src="https://latex.codecogs.com/png.latex?X%20%5B%EC%97%B0%EC%82%B0%EC%9E%90%5D%20Y%20=%20Z"> 형태로 들어있는 문자열 배열 quiz 가 매개변수로 주어집니다. 수식이 옳다면 “O”를 틀리다면 “X”를 순서대로 담은 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-66" class="level3" data-number="17.4.1">
<h3 data-number="17.4.1" class="anchored" data-anchor-id="파이썬-66"><span class="header-section-number">17.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb134" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb134-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(quiz: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb134-2">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb134-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> equation <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> quiz:</span>
<span id="cb134-4">        left, right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> equation.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span>)</span>
<span id="cb134-5">        left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> left.strip()</span>
<span id="cb134-6">        right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> right.strip()</span>
<span id="cb134-7"></span>
<span id="cb134-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>(left) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(right):</span>
<span id="cb134-9">            result.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span>)</span>
<span id="cb134-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb134-11">            result.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>)</span>
<span id="cb134-12"></span>
<span id="cb134-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-67" class="level3" data-number="17.4.2">
<h3 data-number="17.4.2" class="anchored" data-anchor-id="러스트-67"><span class="header-section-number">17.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb135" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb135-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(quiz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-2">    quiz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>equation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> equation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-6"></span>
<span id="cb135-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> left_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> evaluate_expression(left)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> right_result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-9"></span>
<span id="cb135-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> left_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> right_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-11">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"O"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb135-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-13">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb135-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb135-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-17"></span>
<span id="cb135-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> evaluate_expression(expr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> expr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokens[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-21"></span>
<span id="cb135-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-23">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokens[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-24">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> operand <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokens[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-25"></span>
<span id="cb135-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> operator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-27">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"+"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> operand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-28">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> operand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-29">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> operand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-30">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> operand<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-31">            _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">panic!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unknown operator"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-32">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-33">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-34"></span>
<span id="cb135-35">    result</span>
<span id="cb135-36"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-37"></span>
<span id="cb135-38"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-39">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> quiz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb135-40">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3 + 4 = 7"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-41">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5 * 6 = 30"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-42">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"19 - 6 = 13"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb135-43">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-44"></span>
<span id="cb135-45">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(quiz)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-46">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-47"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day18-문자열-수학-조건문-정렬" class="level1" data-number="18">
<h1 data-number="18"><span class="header-section-number">18</span> Day18 문자열, 수학, 조건문, 정렬</h1>
<section id="문자열안에-문자열" class="level2" data-number="18.1">
<h2 data-number="18.1" class="anchored" data-anchor-id="문자열안에-문자열"><span class="header-section-number">18.1</span> 문자열안에 문자열</h2>
<p>문자열 str1, str2 가 매개변수로 주어집니다. str1 안에 str2 가 있다면 1 을 없다면 2 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-67" class="level3" data-number="18.1.1">
<h3 data-number="18.1.1" class="anchored" data-anchor-id="파이썬-67"><span class="header-section-number">18.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb136" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb136-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(str1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, str2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb136-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> str2 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> str1 <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</section>
<section id="러스트-68" class="level3" data-number="18.1.2">
<h3 data-number="18.1.2" class="anchored" data-anchor-id="러스트-68"><span class="header-section-number">18.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb137" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb137-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(str2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-3">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb137-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb137-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-8"></span>
<span id="cb137-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, world!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb137-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"world"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb137-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb137-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output: 1</span></span>
<span id="cb137-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="제곱수-판별하기" class="level2" data-number="18.2">
<h2 data-number="18.2" class="anchored" data-anchor-id="제곱수-판별하기"><span class="header-section-number">18.2</span> 제곱수 판별하기</h2>
<p>어떤 자연수를 제곱했을 때 나오는 정수를 제곱수라고 합니다. 정수 n 이 매개변수로 주어질 때, n 이 제곱수라면 1 을 아니라면 2 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-68" class="level3" data-number="18.2.1">
<h3 data-number="18.2.1" class="anchored" data-anchor-id="파이썬-68"><span class="header-section-number">18.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb138" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb138-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb138-2"></span>
<span id="cb138-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb138-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> math.isqrt(n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> n <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</section>
<section id="러스트-69" class="level3" data-number="18.2.2">
<h3 data-number="18.2.2" class="anchored" data-anchor-id="러스트-69"><span class="header-section-number">18.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb139" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb139-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i64</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb139-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sqrt()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>powi(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb139-3">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb139-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb139-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb139-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb139-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb139-8"></span>
<span id="cb139-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb139-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb139-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(test_cases))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb139-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="세균증식" class="level2" data-number="18.3">
<h2 data-number="18.3" class="anchored" data-anchor-id="세균증식"><span class="header-section-number">18.3</span> 세균증식</h2>
<p>어떤 세균은 1 시간에 두배만큼 증식한다고 합니다. 처음 세균의 마리수 n 과 경과한 시간 t 가 매개변수로 주어질 때 t 시간 후 세균의 수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-69" class="level3" data-number="18.3.1">
<h3 data-number="18.3.1" class="anchored" data-anchor-id="파이썬-69"><span class="header-section-number">18.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb140" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb140-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, t: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb140-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> t)</span></code></pre></div>
</section>
<section id="러스트-70" class="level3" data-number="18.3.2">
<h3 data-number="18.3.2" class="anchored" data-anchor-id="러스트-70"><span class="header-section-number">18.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb141" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb141-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb141-2">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2_i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pow(t <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span>))</span>
<span id="cb141-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb141-4"></span>
<span id="cb141-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb141-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-9"></span>
<span id="cb141-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result for n = {}, t = {}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-정렬하기-2" class="level2" data-number="18.4">
<h2 data-number="18.4" class="anchored" data-anchor-id="문자열-정렬하기-2"><span class="header-section-number">18.4</span> 문자열 정렬하기 (2)</h2>
<p>영어 대소문자로 이루어진 문자열 my_string 이 매개변수로 주어질 때, my_string 을 모두 소문자로 바꾸고 알파벳 순서대로 정렬한 문자열을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-70" class="level3" data-number="18.4.1">
<h3 data-number="18.4.1" class="anchored" data-anchor-id="파이썬-70"><span class="header-section-number">18.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb142" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb142-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb142-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(my_string.lower()))</span></code></pre></div>
</section>
<section id="러스트-71" class="level3" data-number="18.4.2">
<h3 data-number="18.4.2" class="anchored" data-anchor-id="러스트-71"><span class="header-section-number">18.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb143" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb143-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_lowercase()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-3">    chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_unstable()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-4">    chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb143-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb143-6"></span>
<span id="cb143-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bcad"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day19-문자열-배열-조건문" class="level1" data-number="19">
<h1 data-number="19"><span class="header-section-number">19</span> Day19 문자열, 배열, 조건문</h1>
<section id="의-배수" class="level2" data-number="19.1">
<h2 data-number="19.1" class="anchored" data-anchor-id="의-배수"><span class="header-section-number">19.1</span> 7 의 배수</h2>
<p>머쓱이는 행운의 숫자 7 을 가장 좋아합니다. 정수 배열 array 가 매개변수로 주어질 때, 7 이 총 몇 개 있는지 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-71" class="level3" data-number="19.1.1">
<h3 data-number="19.1.1" class="anchored" data-anchor-id="파이썬-71"><span class="header-section-number">19.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb144" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb144-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb144-2"></span>
<span id="cb144-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb144-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(array).count(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7"</span>)</span></code></pre></div>
</section>
<section id="러스트-72" class="level3" data-number="19.1.2">
<h3 data-number="19.1.2" class="anchored" data-anchor-id="러스트-72"><span class="header-section-number">19.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb145" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb145-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-2">    array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb145-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())</span>
<span id="cb145-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">collect::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()</span>
<span id="cb145-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>matches(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'7'</span>)</span>
<span id="cb145-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count()</span>
<span id="cb145-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb145-8"></span>
<span id="cb145-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">77</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>example_array)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-12"></span>
<span id="cb145-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input array: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_array)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of '7's: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="잘라서-배열로-저장하기" class="level2" data-number="19.2">
<h2 data-number="19.2" class="anchored" data-anchor-id="잘라서-배열로-저장하기"><span class="header-section-number">19.2</span> 잘라서 배열로 저장하기</h2>
<p>문자열 <code>my_str</code> 과 n 이 매개변수로 주어질 때, <code>my_str</code> 을 길이 n 씩 잘라서 저장한 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-72" class="level3" data-number="19.2.1">
<h3 data-number="19.2.1" class="anchored" data-anchor-id="파이썬-72"><span class="header-section-number">19.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb146" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb146-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb146-2"></span>
<span id="cb146-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_str: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb146-4">    answer: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb146-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(my_str), n):</span>
<span id="cb146-6">        answer.append(my_str[i:i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>n])</span>
<span id="cb146-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-73" class="level3" data-number="19.2.2">
<h3 data-number="19.2.2" class="anchored" data-anchor-id="러스트-73"><span class="header-section-number">19.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb147" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb147-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb147-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>my_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb147-4">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(my_str[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::cmp::</span>min(i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> my_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb147-6">    answer</span>
<span id="cb147-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb147-8"></span>
<span id="cb147-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb147-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcdefghij"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="중복된-숫자-개수" class="level2" data-number="19.3">
<h2 data-number="19.3" class="anchored" data-anchor-id="중복된-숫자-개수"><span class="header-section-number">19.3</span> 중복된 숫자 개수</h2>
<p>정수가 담긴 배열 array 와 정수 n 이 매개변수로 주어질 때, array 에 n 이 몇 개 있는 지를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-73" class="level3" data-number="19.3.1">
<h3 data-number="19.3.1" class="anchored" data-anchor-id="파이썬-73"><span class="header-section-number">19.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb148" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb148-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb148-2"></span>
<span id="cb148-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb148-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> array.count(n)</span></code></pre></div>
</section>
<section id="러스트-74" class="level3" data-number="19.3.2">
<h3 data-number="19.3.2" class="anchored" data-anchor-id="러스트-74"><span class="header-section-number">19.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb149" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb149-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb149-2">    array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;&amp;</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count()</span>
<span id="cb149-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb149-4"></span>
<span id="cb149-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb149-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb149-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb149-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb149-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of occurrences of {} in {:?}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb149-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="머쓱이보다-키-큰-사람" class="level2" data-number="19.4">
<h2 data-number="19.4" class="anchored" data-anchor-id="머쓱이보다-키-큰-사람"><span class="header-section-number">19.4</span> 머쓱이보다 키 큰 사람</h2>
<p>머쓱이는 학교에서 키 순으로 줄을 설 때 몇 번째로 서야 하는지 궁금해졌습니다. 머쓱이네 반 친구들의 키가 담긴 정수 배열 array 와 머쓱이의 키 height 가 매개변수로 주어질 때, 머쓱이보다 키 큰 사람 수를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-74" class="level3" data-number="19.4.1">
<h3 data-number="19.4.1" class="anchored" data-anchor-id="파이썬-74"><span class="header-section-number">19.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb150" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb150-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb150-2"></span>
<span id="cb150-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(array: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], height: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb150-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> person <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> array <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> person <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> height)</span></code></pre></div>
</section>
<section id="러스트-75" class="level3" data-number="19.4.2">
<h3 data-number="19.4.2" class="anchored" data-anchor-id="러스트-75"><span class="header-section-number">19.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb151" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb151-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb151-2">    array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;&amp;</span>person<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> person <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count()</span>
<span id="cb151-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb151-4"></span>
<span id="cb151-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb151-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">170</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">165</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">175</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">190</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">160</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb151-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">170</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb151-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb151-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of people taller than {}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb151-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day20-수학-시뮬레이션-문자열-사칙연산" class="level1" data-number="20">
<h1 data-number="20"><span class="header-section-number">20</span> Day20 수학, 시뮬레이션, 문자열, 사칙연산</h1>
<section id="직사각형-넓이-구하기" class="level2" data-number="20.1">
<h2 data-number="20.1" class="anchored" data-anchor-id="직사각형-넓이-구하기"><span class="header-section-number">20.1</span> 직사각형 넓이 구하기</h2>
<p>2 차원 좌표 평면에 변이 축과 평행한 직사각형이 있습니다. 직사각형 네 꼭짓점의 좌표 <img src="https://latex.codecogs.com/png.latex?%5B%5Bx1,%20y1%5D,%20%5Bx2,%20y2%5D,%20%5Bx3,%20y3%5D,%20%5Bx4,%20y4%5D%5D"> 가 담겨있는 배열 dots 가 매개변수로 주어질 때, 직사각형의 넓이를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-75" class="level3" data-number="20.1.1">
<h3 data-number="20.1.1" class="anchored" data-anchor-id="파이썬-75"><span class="header-section-number">20.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb152" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb152-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Tuple</span>
<span id="cb152-2"></span>
<span id="cb152-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(dots: List[Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb152-4">    x_coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [dot[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dot <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> dots]</span>
<span id="cb152-5">    y_coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [dot[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dot <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> dots]</span>
<span id="cb152-6"></span>
<span id="cb152-7">    width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(x_coords) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(x_coords)</span>
<span id="cb152-8">    height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(y_coords) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(y_coords)</span>
<span id="cb152-9"></span>
<span id="cb152-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> height</span></code></pre></div>
</section>
<section id="러스트-76" class="level3" data-number="20.1.2">
<h3 data-number="20.1.2" class="anchored" data-anchor-id="러스트-76"><span class="header-section-number">20.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb153" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb153-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(dots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb153-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> x_coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> x)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> y_coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-4"></span>
<span id="cb153-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x_coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>min()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y_coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y_coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>min()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-7"></span>
<span id="cb153-8">    width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> height</span>
<span id="cb153-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb153-10"></span>
<span id="cb153-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb153-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> dots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Area: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb153-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="캐릭터의-좌표" class="level2" data-number="20.2">
<h2 data-number="20.2" class="anchored" data-anchor-id="캐릭터의-좌표"><span class="header-section-number">20.2</span> 캐릭터의 좌표</h2>
<p>머쓱이는 RPG 게임을 하고 있습니다. 게임에는 up, down, left, right 방향키가 있으며 각 키를 누르면 위, 아래, 왼쪽, 오른쪽으로 한 칸씩 이동합니다. 예를 들어 <code>[0,0]</code> 에서 up 을 누른다면 캐릭터의 좌표는 <code>[0, 1]</code>, down 을 누른다면 <code>[0, -1]</code>, left 를 누른다면 <code>[-1, 0]</code>, right 를 누른다면 <code>[1, 0]</code> 입니다. 머쓱이가 입력한 방향키의 배열 keyinput 와 맵의 크기 board 이 매개변수로 주어집니다. 캐릭터는 항상 <code>[0,0]</code> 에서 시작할 때 키 입력이 모두 끝난 뒤에 캐릭터의 좌표 <code>[x, y]</code> 를 return 하도록 solution 함수를 완성해주세요.</p>
<ul>
<li><code>[0, 0]</code> 은 board 의 정 중앙에 위치합니다. 예를 들어 board 의 가로 크기가 9 라면 캐릭터는 왼쪽으로 최대 <code>[-4, 0]</code> 까지 오른쪽으로 최대 <code>[4, 0]</code> 까지 이동할 수 있습니다.</li>
</ul>
<section id="파이썬-76" class="level3" data-number="20.2.1">
<h3 data-number="20.2.1" class="anchored" data-anchor-id="파이썬-76"><span class="header-section-number">20.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb154" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb154-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb154-2"></span>
<span id="cb154-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(keyinput: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], board: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb154-4">    x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb154-5">    max_x, max_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> board[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, board[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb154-6"></span>
<span id="cb154-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> keyinput:</span>
<span id="cb154-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>max_x:</span>
<span id="cb154-9">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb154-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_x:</span>
<span id="cb154-11">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb154-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_y:</span>
<span id="cb154-13">            y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb154-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"down"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>max_y:</span>
<span id="cb154-15">            y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb154-16"></span>
<span id="cb154-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [x, y]</span></code></pre></div>
</section>
<section id="러스트-77" class="level3" data-number="20.2.2">
<h3 data-number="20.2.2" class="anchored" data-anchor-id="러스트-77"><span class="header-section-number">20.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb155" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb155-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(keyinput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb155-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> board[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> board[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-6"></span>
<span id="cb155-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> keyinput <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb155-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>as_str() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb155-9">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>max_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-10">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-11">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-12">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"down"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>max_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-13">            _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span></span>
<span id="cb155-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb155-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb155-16"></span>
<span id="cb155-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y]</span>
<span id="cb155-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb155-19"></span>
<span id="cb155-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb155-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> keyinput <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb155-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb155-26">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> board <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>keyinput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>board)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-29">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Final position: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb155-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="최댓값-만들기-2" class="level2" data-number="20.3">
<h2 data-number="20.3" class="anchored" data-anchor-id="최댓값-만들기-2"><span class="header-section-number">20.3</span> 최댓값 만들기 (2)</h2>
<p>정수 배열 numbers 가 매개변수로 주어집니다. numbers 의 원소 중 두 개를 곱해 만들 수 있는 최댓값을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-77" class="level3" data-number="20.3.1">
<h3 data-number="20.3.1" class="anchored" data-anchor-id="파이썬-77"><span class="header-section-number">20.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb156" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb156-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb156-2"></span>
<span id="cb156-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb156-4">    numbers.sort()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트를 오름차순으로 정렬</span></span>
<span id="cb156-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], numbers[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> numbers[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span></code></pre></div>
</section>
<section id="러스트-78" class="level3" data-number="20.3.2">
<h3 data-number="20.3.2" class="anchored" data-anchor-id="러스트-78"><span class="header-section-number">20.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb157" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb157-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb157-2">    numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort the vector in ascending order</span></span>
<span id="cb157-3">    numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max(numbers[numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> numbers[numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb157-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb157-5"></span>
<span id="cb157-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb157-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb157-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(numbers)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb157-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb157-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="다항식-더하기" class="level2" data-number="20.4">
<h2 data-number="20.4" class="anchored" data-anchor-id="다항식-더하기"><span class="header-section-number">20.4</span> 다항식 더하기</h2>
<p>한 개 이상의 항의 합으로 이루어진 식을 다항식이라고 합니다. 다항식을 계산할 때는 동류항끼리 계산해 정리합니다. 덧셈으로 이루어진 다항식 polynomial 이 매개변수로 주어질 때, 동류항끼리 더한 결괏값을 문자열로 return 하도록 solution 함수를 완성해보세요. 같은 식이라면 가장 짧은 수식을 return 합니다.</p>
<section id="파이썬-78" class="level3" data-number="20.4.1">
<h3 data-number="20.4.1" class="anchored" data-anchor-id="파이썬-78"><span class="header-section-number">20.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb158" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb158-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(polynomial: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb158-2">    x_terms: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb158-3">    constant: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb158-4"></span>
<span id="cb158-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> term <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> polynomial.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' + '</span>):</span>
<span id="cb158-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> term:</span>
<span id="cb158-7">            coef: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> term.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span></span>
<span id="cb158-8">            x_terms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(coef)</span>
<span id="cb158-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb158-10">            constant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(term)</span>
<span id="cb158-11"></span>
<span id="cb158-12">    result: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb158-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x_terms:</span>
<span id="cb158-14">        result.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>x_terms <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x_terms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">x"</span>)</span>
<span id="cb158-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> constant:</span>
<span id="cb158-16">        result.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(constant))</span>
<span id="cb158-17"></span>
<span id="cb158-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' + '</span>.join(result) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span></span></code></pre></div>
</section>
<section id="러스트-79" class="level3" data-number="20.4.2">
<h3 data-number="20.4.2" class="anchored" data-anchor-id="러스트-79"><span class="header-section-number">20.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb159" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb159-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(polynomial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> x_terms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> constant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-4"></span>
<span id="cb159-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> term <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> polynomial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" + "</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> term<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-7">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> coef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> term<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>replace(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-8">            x_terms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> coef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap_or(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-10">            constant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> term<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb159-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb159-13"></span>
<span id="cb159-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x_terms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-16">        result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x_terms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-17">            <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}x"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> x_terms)</span>
<span id="cb159-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-19">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb159-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb159-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> constant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-23">        result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(constant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-24">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb159-25"></span>
<span id="cb159-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-27">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb159-28">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-29">        result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" + "</span>)</span>
<span id="cb159-30">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb159-31"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb159-32"></span>
<span id="cb159-33"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb159-34">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> polynomial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3x + 7 + x"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-35">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(polynomial)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-36">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb159-37"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-21-문자열-사칙연산-시뮬레이션-2-차원배열-수학-배열" class="level1" data-number="21">
<h1 data-number="21"><span class="header-section-number">21</span> Day 21 문자열, 사칙연산, 시뮬레이션, 2 차원배열, 수학, 배열</h1>
<section id="숨어있는-숫자의-덧셈-2" class="level2" data-number="21.1">
<h2 data-number="21.1" class="anchored" data-anchor-id="숨어있는-숫자의-덧셈-2"><span class="header-section-number">21.1</span> 숨어있는 숫자의 덧셈 (2)</h2>
<p>문자열 my_string 이 매개변수로 주어집니다. my_string 은 소문자, 대문자, 자연수로만 구성되어있습니다. my_string 안의 자연수들의 합을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-79" class="level3" data-number="21.1.1">
<h3 data-number="21.1.1" class="anchored" data-anchor-id="파이썬-79"><span class="header-section-number">21.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb160" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb160-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb160-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb160-3"></span>
<span id="cb160-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb160-5">    numbers: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.findall(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">\d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, my_string)</span>
<span id="cb160-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, numbers))</span></code></pre></div>
</section>
<section id="러스트-80" class="level3" data-number="21.1.2">
<h3 data-number="21.1.2" class="anchored" data-anchor-id="러스트-80"><span class="header-section-number">21.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb161" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb161-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">regex::</span>Regex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb161-2"></span>
<span id="cb161-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb161-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> re <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Regex::</span>new(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\d+"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb161-5">    re<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>find_iter(my_string)</span>
<span id="cb161-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>as_str()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>ok())</span>
<span id="cb161-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb161-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb161-9"></span>
<span id="cb161-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb161-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aAb1B2cC34oOp"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb161-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(test_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb161-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum of numbers in '{}': {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> test_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb161-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="안전지대" class="level2" data-number="21.2">
<h2 data-number="21.2" class="anchored" data-anchor-id="안전지대"><span class="header-section-number">21.2</span> 안전지대</h2>
<p>다음 처럼 지뢰가 있는 지역과 지뢰에 인접한 위, 아래, 좌, 우 대각선 칸을 모두 위험지역으로 분류합니다.</p>
<pre><code>X | X  |  X
X | O  |  X
X | X  |  X</code></pre>
<p>지뢰는 2 차원 배열 board 에 1 로 표시되어 있고 board 에는 지뢰가 매설 된 지역 1 과, 지뢰가 없는 지역 0 만 존재합니다. 지뢰가 매설된 지역의 지도 board 가 매개변수로 주어질 때, 안전한 지역의 칸 수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-80" class="level3" data-number="21.2.1">
<h3 data-number="21.2.1" class="anchored" data-anchor-id="파이썬-80"><span class="header-section-number">21.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb163" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb163-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Set, Tuple</span>
<span id="cb163-2"></span>
<span id="cb163-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(board: List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb163-4">    n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(board)</span>
<span id="cb163-5">    danger_zones: Set[Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb163-6"></span>
<span id="cb163-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> mark_danger_zone(i: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, j: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb163-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> di <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>):</span>
<span id="cb163-9">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dj <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>):</span>
<span id="cb163-10">                ni, nj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> di, j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dj</span>
<span id="cb163-11">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> ni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> nj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n:</span>
<span id="cb163-12">                    danger_zones.add((ni, nj))</span>
<span id="cb163-13"></span>
<span id="cb163-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(board):</span>
<span id="cb163-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j, cell <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(row):</span>
<span id="cb163-16">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> cell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb163-17">                mark_danger_zone(i, j)</span>
<span id="cb163-18"></span>
<span id="cb163-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(danger_zones)</span></code></pre></div>
</section>
<section id="러스트-81" class="level3" data-number="21.2.2">
<h3 data-number="21.2.2" class="anchored" data-anchor-id="러스트-81"><span class="header-section-number">21.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb164" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb164-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> danger_zones <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::HashSet::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-4"></span>
<span id="cb164-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> mark_danger_zone(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> danger_zones<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> di <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dj <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-8">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> ni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> di<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-9">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> nj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-10">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> ni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> nj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> nj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-11">                    danger_zones<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>insert((ni<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> nj))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-12">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-13">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-16"></span>
<span id="cb164-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> row) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>cell) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-19">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> cell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-20">                mark_danger_zone(i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> danger_zones)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-21">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-24"></span>
<span id="cb164-25">    (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> danger_zones<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb164-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-27"></span>
<span id="cb164-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> board <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb164-30">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-31">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-32">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-33">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-34">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb164-35">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-36"></span>
<span id="cb164-37">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Safe squares: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>board))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-38"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="삼각형의-완성조건-2" class="level2" data-number="21.3">
<h2 data-number="21.3" class="anchored" data-anchor-id="삼각형의-완성조건-2"><span class="header-section-number">21.3</span> 삼각형의 완성조건 (2)</h2>
<p>선분 세 개로 삼각형을 만들기 위해서는 다음과 같은 조건을 만족해야 합니다.</p>
<ul>
<li>가장 긴 변의 길이는 다른 두 변의 길이의 합보다 작아야 합니다.</li>
</ul>
<p>삼각형의 두 변의 길이가 담긴 배열 sides 이 매개변수로 주어집니다. 나머지 한 변이 될 수 있는 정수의 개수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-81" class="level3" data-number="21.3.1">
<h3 data-number="21.3.1" class="anchored" data-anchor-id="파이썬-81"><span class="header-section-number">21.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb165" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb165-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb165-2"></span>
<span id="cb165-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(sides: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb165-4">    max_side: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(sides)</span>
<span id="cb165-5">    min_side: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(sides)</span>
<span id="cb165-6"></span>
<span id="cb165-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Case 1: 주어진 두 변 중 긴 변이 가장 긴 경우</span></span>
<span id="cb165-8">    count1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> min_side)</span>
<span id="cb165-9"></span>
<span id="cb165-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Case 2: 새로운 변이 가장 긴 경우</span></span>
<span id="cb165-11">    count2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> min_side) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb165-12"></span>
<span id="cb165-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> count2</span></code></pre></div>
</section>
<section id="러스트-82" class="level3" data-number="21.3.2">
<h3 data-number="21.3.2" class="anchored" data-anchor-id="러스트-82"><span class="header-section-number">21.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb166" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb166-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb166-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> min_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>min()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-4"></span>
<span id="cb166-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Case 1: 주어진 두 변 중 긴 변이 가장 긴 경우</span></span>
<span id="cb166-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> count1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> min_side)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-7"></span>
<span id="cb166-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Case 2: 새로운 변이 가장 긴 경우</span></span>
<span id="cb166-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> count2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> min_side) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> max_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-10"></span>
<span id="cb166-11">    count1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> count2</span>
<span id="cb166-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb166-13"></span>
<span id="cb166-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb166-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>sides))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="외계어-사전" class="level2" data-number="21.4">
<h2 data-number="21.4" class="anchored" data-anchor-id="외계어-사전"><span class="header-section-number">21.4</span> 외계어 사전</h2>
<p>PROGRAMMERS-962 행성에 불시착한 우주비행사 머쓱이는 외계행성의 언어를 공부하려고 합니다. 알파벳이 담긴 배열 spell 과 외계어 사전 dic 이 매개변수로 주어집니다. spell 에 담긴 알파벳을 한번씩만 모두 사용한 단어가 dic 에 존재한다면 1, 존재하지 않는다면 2 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-82" class="level3" data-number="21.4.1">
<h3 data-number="21.4.1" class="anchored" data-anchor-id="파이썬-82"><span class="header-section-number">21.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb167" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb167-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Set</span>
<span id="cb167-2"></span>
<span id="cb167-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(spell: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], dic: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb167-4">    spell_set: Set[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(spell)</span>
<span id="cb167-5"></span>
<span id="cb167-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> dic:</span>
<span id="cb167-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(word) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> spell_set <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(word) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(spell):</span>
<span id="cb167-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb167-9"></span>
<span id="cb167-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</section>
<section id="러스트-83" class="level3" data-number="21.4.2">
<h3 data-number="21.4.2" class="anchored" data-anchor-id="러스트-83"><span class="header-section-number">21.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb168" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb168-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-2"></span>
<span id="cb168-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(spell<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> dic<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> spell_set<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> HashSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spell<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>flat_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-5"></span>
<span id="cb168-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> dic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> word_set<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> HashSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> word_set <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> spell_set <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> word<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> spell<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-9">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb168-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb168-12"></span>
<span id="cb168-13">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb168-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb168-15"></span>
<span id="cb168-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> spell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> dic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sod"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eocd"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"qixm"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"adio"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"soo"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-19"></span>
<span id="cb168-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>spell<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dic))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day22-dp-수학-조건문-배열" class="level1" data-number="22">
<h1 data-number="22"><span class="header-section-number">22</span> Day22 dp, 수학, 조건문, 배열</h1>
<section id="저주의-숫자-3" class="level2" data-number="22.1">
<h2 data-number="22.1" class="anchored" data-anchor-id="저주의-숫자-3"><span class="header-section-number">22.1</span> 저주의 숫자 3</h2>
<p>3x 마을 사람들은 3 을 저주의 숫자라고 생각하기 때문에 3 의 배수와 숫자 3 을 사용하지 않습니다. 3x 마을 사람들의 숫자는 다음과 같습니다.</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th style="text-align: right;">10 진법</th>
<th style="text-align: right;">3x 마을에서 쓰는 숫자</th>
<th>10 진법</th>
<th>3x 마을에서 쓰는 숫자</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
<td>6</td>
<td>8</td>
</tr>
<tr class="even">
<td style="text-align: right;">2</td>
<td style="text-align: right;">2</td>
<td>7</td>
<td>10</td>
</tr>
<tr class="odd">
<td style="text-align: right;">3</td>
<td style="text-align: right;">4</td>
<td>8</td>
<td>11</td>
</tr>
<tr class="even">
<td style="text-align: right;">4</td>
<td style="text-align: right;">5</td>
<td>9</td>
<td>14</td>
</tr>
<tr class="odd">
<td style="text-align: right;">5</td>
<td style="text-align: right;">7</td>
<td>10</td>
<td>16</td>
</tr>
</tbody>
</table>
<p>정수 n 이 매개변수로 주어질 때, n 을 3x 마을에서 사용하는 숫자로 바꿔 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-83" class="level3" data-number="22.1.1">
<h3 data-number="22.1.1" class="anchored" data-anchor-id="파이썬-83"><span class="header-section-number">22.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb169" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb169-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb169-2">    answer: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb169-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n):</span>
<span id="cb169-4">        answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb169-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(answer):</span>
<span id="cb169-6">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb169-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-84" class="level3" data-number="22.1.2">
<h3 data-number="22.1.2" class="anchored" data-anchor-id="러스트-84"><span class="header-section-number">22.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb170" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb170-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-4">        answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'3'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-6">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb170-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb170-9">    answer</span>
<span id="cb170-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb170-11"></span>
<span id="cb170-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solution({}) = {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="평행" class="level2" data-number="22.2">
<h2 data-number="22.2" class="anchored" data-anchor-id="평행"><span class="header-section-number">22.2</span> 평행</h2>
<p>점 네 개의 좌표를 담은 이차원 배열 dots 가 다음과 같이 매개변수로 주어집니다. <code>[[x1, y1], [x2, y2], [x3, y3], [x4, y4]]</code> 주어진 네 개의 점을 두 개씩 이었을 때, 두 직선이 평행이 되는 경우가 있으면 1 을 없으면 0 을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-84" class="level3" data-number="22.2.1">
<h3 data-number="22.2.1" class="anchored" data-anchor-id="파이썬-84"><span class="header-section-number">22.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb171" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb171-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Tuple</span>
<span id="cb171-2"></span>
<span id="cb171-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gradient(arr1: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], arr2: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>:</span>
<span id="cb171-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""두 점 간의 기울기를 계산하는 함수"""</span></span>
<span id="cb171-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기울기 = (y2 - y1) / (x2 - x1)</span></span>
<span id="cb171-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (arr2[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> arr1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (arr2[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> arr1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb171-7"></span>
<span id="cb171-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(dots: List[Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb171-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""주어진 네 개의 점이 이루는 두 직선이 평행한지 확인하는 함수"""</span></span>
<span id="cb171-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 첫 번째와 두 번째 점, 세 번째와 네 번째 점을 이은 직선의 기울기를 비교</span></span>
<span id="cb171-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> gradient(dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gradient(dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]):</span>
<span id="cb171-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb171-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 첫 번째와 세 번째 점, 두 번째와 네 번째 점을 이은 직선의 기울기를 비교</span></span>
<span id="cb171-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> gradient(dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gradient(dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]):</span>
<span id="cb171-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb171-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 첫 번째와 네 번째 점, 두 번째와 세 번째 점을 이은 직선의 기울기를 비교</span></span>
<span id="cb171-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> gradient(dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gradient(dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]):</span>
<span id="cb171-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb171-19"></span>
<span id="cb171-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 어떤 경우에도 평행하지 않은 경우 0 반환</span></span>
<span id="cb171-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-85" class="level3" data-number="22.2.2">
<h3 data-number="22.2.2" class="anchored" data-anchor-id="러스트-85"><span class="header-section-number">22.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb172" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb172-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">type</span> Point <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-2"></span>
<span id="cb172-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> gradient(arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>Point<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>Point) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-4">    (arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span></span>
<span id="cb172-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-6"></span>
<span id="cb172-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(dots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[Point]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> gradient(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gradient(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-9">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb172-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> gradient(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gradient(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-11">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb172-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> gradient(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> gradient(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-13">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb172-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-15">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb172-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-18"></span>
<span id="cb172-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> dots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>dots)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="겹치는-선분의-길이" class="level2" data-number="22.3">
<h2 data-number="22.3" class="anchored" data-anchor-id="겹치는-선분의-길이"><span class="header-section-number">22.3</span> 겹치는 선분의 길이</h2>
<p>선분 3 개가 평행하게 놓여 있습니다. 세 선분의 시작과 끝 좌표가 <code>[[start, end], [start, end], [start, end]]</code> 형태로 들어있는 2 차원 배열 lines 가 매개변수로 주어질 때, 두 개 이상의 선분이 겹치는 부분의 길이를 return 하도록 solution 함수를 완성해보세요.</p>
<p>lines 가 <code>[[0, 2], [-3, -1], [-2, 1]]</code> 일 때 선분이 두 개 이상 겹친 곳은 <code>[-2, -1], [0, 1]</code> 로 길이 2 만큼 겹쳐있습니다.</p>
<section id="파이썬-85" class="level3" data-number="22.3.1">
<h3 data-number="22.3.1" class="anchored" data-anchor-id="파이썬-85"><span class="header-section-number">22.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb173" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb173-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Tuple</span>
<span id="cb173-2"></span>
<span id="cb173-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(lines: List[Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb173-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 좌표에 대해 겹치는 선분의 수를 기록할 리스트 초기화</span></span>
<span id="cb173-5">    line_counts: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">201</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -100 to 100, total 201 positions</span></span>
<span id="cb173-6"></span>
<span id="cb173-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 선분에 대해 시작점부터 끝점까지 겹치는 선분의 수를 증가</span></span>
<span id="cb173-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> start, end <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lines:</span>
<span id="cb173-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>):  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Shift by 100 to handle negative indices</span></span>
<span id="cb173-10">            line_counts[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb173-11"></span>
<span id="cb173-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 겹치는 선분의 수가 2 이상인 구간의 길이를 계산</span></span>
<span id="cb173-13">    overlap_length: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> count <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> line_counts <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb173-14"></span>
<span id="cb173-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> overlap_length</span></code></pre></div>
</section>
<section id="러스트-86" class="level3" data-number="22.3.2">
<h3 data-number="22.3.2" class="anchored" data-anchor-id="러스트-86"><span class="header-section-number">22.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb174" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb174-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(lines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> line_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">201</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// -100 to 100, total 201 positions</span></span>
<span id="cb174-3"></span>
<span id="cb174-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> end) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-6">            line_counts[i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-9"></span>
<span id="cb174-10">    line_counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;&amp;</span>count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb174-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-12"></span>
<span id="cb174-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>lines)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Overlapping length: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="유한소수-판별하기" class="level2" data-number="22.4">
<h2 data-number="22.4" class="anchored" data-anchor-id="유한소수-판별하기"><span class="header-section-number">22.4</span> 유한소수 판별하기</h2>
<p>소수점 아래 숫자가 계속되지 않고 유한개인 소수를 유한소수라고 합니다. 분수를 소수로 고칠 때 유한소수로 나타낼 수 있는 분수인지 판별하려고 합니다. 유한소수가 되기 위한 분수의 조건은 다음과 같습니다.</p>
<ul>
<li>기약분수로 나타내었을 때, 분모의 소인수가 2 와 5 만 존재해야 합니다.</li>
</ul>
<p>두 정수 a 와 b 가 매개변수로 주어질 때, a/b 가 유한소수이면 1 을, 무한소수라면 2 를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-86" class="level3" data-number="22.4.1">
<h3 data-number="22.4.1" class="anchored" data-anchor-id="파이썬-86"><span class="header-section-number">22.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb175" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb175-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gcd(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb175-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b:</span>
<span id="cb175-3">        a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> b</span>
<span id="cb175-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a</span>
<span id="cb175-5"></span>
<span id="cb175-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb175-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기약분수로 만들기</span></span>
<span id="cb175-8">    divisor: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gcd(a, b)</span>
<span id="cb175-9">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> divisor</span>
<span id="cb175-10"></span>
<span id="cb175-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 분모의 소인수 찾기</span></span>
<span id="cb175-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb175-13">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb175-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb175-15">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb175-16"></span>
<span id="cb175-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 분모가 1이면 유한소수, 아니면 무한소수</span></span>
<span id="cb175-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</section>
<section id="러스트-87" class="level3" data-number="22.4.2">
<h3 data-number="22.4.2" class="anchored" data-anchor-id="러스트-87"><span class="header-section-number">22.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb176" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb176-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> gcd(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-4">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-5">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-7">    a</span>
<span id="cb176-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-9"></span>
<span id="cb176-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Simplify the fraction</span></span>
<span id="cb176-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> divisor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gcd(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-13">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> divisor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-14"></span>
<span id="cb176-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find prime factors of the denominator</span></span>
<span id="cb176-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-17">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-20">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-22"></span>
<span id="cb176-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If denominator is 1, it's a finite decimal, otherwise infinite</span></span>
<span id="cb176-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-26"></span>
<span id="cb176-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-31">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result for {}/{}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-32"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-23-배열-정렬-문자열" class="level1" data-number="23">
<h1 data-number="23"><span class="header-section-number">23</span> Day 23 배열, 정렬, 문자열</h1>
<section id="특이한-정렬" class="level2" data-number="23.1">
<h2 data-number="23.1" class="anchored" data-anchor-id="특이한-정렬"><span class="header-section-number">23.1</span> 특이한 정렬</h2>
<p>정수 n 을 기준으로 n 과 가까운 수부터 정렬하려고 합니다. 이때 n 으로부터의 거리가 같다면 더 큰 수를 앞에 오도록 배치합니다. 정수가 담긴 배열 numlist 와 정수 n 이 주어질 때 numlist 의 원소를 n 으로부터 가까운 순서대로 정렬한 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-87" class="level3" data-number="23.1.1">
<h3 data-number="23.1.1" class="anchored" data-anchor-id="파이썬-87"><span class="header-section-number">23.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb177" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb177-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb177-2"></span>
<span id="cb177-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numlist: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb177-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(numlist, key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n), <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>x))</span></code></pre></div>
</section>
<section id="러스트-88" class="level3" data-number="23.1.2">
<h3 data-number="23.1.2" class="anchored" data-anchor-id="러스트-88"><span class="header-section-number">23.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb178" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb178-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> numlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb178-2">    numlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_by(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb178-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> diff_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>abs()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> diff_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>abs()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-5">        diff_a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cmp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>diff_b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>then(b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cmp(a))</span>
<span id="cb178-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-7">    numlist</span>
<span id="cb178-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb178-9"></span>
<span id="cb178-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb178-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numlist <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(numlist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sorted list: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="등수-매기기" class="level2" data-number="23.2">
<h2 data-number="23.2" class="anchored" data-anchor-id="등수-매기기"><span class="header-section-number">23.2</span> 등수 매기기</h2>
<p>영어 점수와 수학 점수의 평균 점수를 기준으로 학생들의 등수를 매기려고 합니다. 영어 점수와 수학 점수를 담은 2 차원 정수 배열 score 가 주어질 때, 영어 점수와 수학 점수의 평균을 기준으로 매긴 등수를 담은 배열을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-88" class="level3" data-number="23.2.1">
<h3 data-number="23.2.1" class="anchored" data-anchor-id="파이썬-88"><span class="header-section-number">23.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb179" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb179-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb179-2"></span>
<span id="cb179-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(score: List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb179-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 평균 점수 계산</span></span>
<span id="cb179-5">    averages: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(s) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> score]</span>
<span id="cb179-6"></span>
<span id="cb179-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 평균 점수를 기준으로 내림차순 정렬한 리스트 생성</span></span>
<span id="cb179-8">    sorted_averages: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(averages, reverse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb179-9"></span>
<span id="cb179-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 점수의 등수 계산</span></span>
<span id="cb179-11">    ranks: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [sorted_averages.index(avg) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> avg <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> averages]</span>
<span id="cb179-12"></span>
<span id="cb179-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ranks</span></code></pre></div>
</section>
<section id="러스트-89" class="level3" data-number="23.2.2">
<h3 data-number="23.2.2" class="anchored" data-anchor-id="러스트-89"><span class="header-section-number">23.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb180" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb180-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb180-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 평균 점수 계산</span></span>
<span id="cb180-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> averages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb180-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">sum::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>)</span>
<span id="cb180-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-6"></span>
<span id="cb180-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a sorted list of averages in descending order</span></span>
<span id="cb180-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> sorted_averages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> averages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-9">    sorted_averages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_by(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>partial_cmp(a)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-10"></span>
<span id="cb180-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate ranks for each score</span></span>
<span id="cb180-12">    averages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb180-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>avg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> sorted_averages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>position(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> avg)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb180-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb180-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb180-16"></span>
<span id="cb180-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb180-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>score)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ranks: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="옹알이-1" class="level2" data-number="23.3">
<h2 data-number="23.3" class="anchored" data-anchor-id="옹알이-1"><span class="header-section-number">23.3</span> 옹알이 (1)</h2>
<p>머쓱이는 태어난 지 6 개월 된 조카를 돌보고 있습니다. 조카는 아직 “aya”, “ye”, “woo”, “ma” 네 가지 발음을 최대 한 번씩 사용해 조합한 (이어 붙인) 발음밖에 하지 못합니다. 문자열 배열 babbling 이 매개변수로 주어질 때, 머쓱이의 조카가 발음할 수 있는 단어의 개수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-89" class="level3" data-number="23.3.1">
<h3 data-number="23.3.1" class="anchored" data-anchor-id="파이썬-89"><span class="header-section-number">23.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb181" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb181-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb181-2"></span>
<span id="cb181-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(babbling: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb181-4">    possible: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aya"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ye"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"woo"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ma"</span>]</span>
<span id="cb181-5">    count: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb181-6"></span>
<span id="cb181-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> babbling:</span>
<span id="cb181-8">        temp: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word</span>
<span id="cb181-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> sound <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> possible:</span>
<span id="cb181-10">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sound <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> temp:</span>
<span id="cb181-11">                temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp.replace(sound, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb181-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> temp.strip() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>:</span>
<span id="cb181-13">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb181-14"></span>
<span id="cb181-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count</span></code></pre></div>
</section>
<section id="러스트-90" class="level3" data-number="23.3.2">
<h3 data-number="23.3.2" class="anchored" data-anchor-id="러스트-90"><span class="header-section-number">23.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb182" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb182-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(babbling<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> possible <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aya"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ye"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"woo"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ma"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-4"></span>
<span id="cb182-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> babbling <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> sound <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>possible <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(sound) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-9">                temp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>replacen(sound<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-10">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-13">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-16"></span>
<span id="cb182-17">    count</span>
<span id="cb182-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-19"></span>
<span id="cb182-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> babbling <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb182-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aya"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb182-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yee"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb182-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"u"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb182-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maa"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb182-26">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(babbling)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-28">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count of possible words: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-29"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="로그인-성공" class="level2" data-number="23.4">
<h2 data-number="23.4" class="anchored" data-anchor-id="로그인-성공"><span class="header-section-number">23.4</span> 로그인 성공?</h2>
<p>머쓱이는 프로그래머스에 로그인하려고 합니다. 머쓱이가 입력한 아이디와 패스워드가 담긴 배열 id_pw 와 회원들의 정보가 담긴 2 차원 배열 db 가 주어질 때, 다음과 같이 로그인 성공, 실패에 따른 메시지를 return 하도록 solution 함수를 완성해주세요.</p>
<ul>
<li>아이디와 비밀번호가 모두 일치하는 회원정보가 있으면 “login”을 return 합니다.</li>
<li>로그인이 실패했을 때 아이디가 일치하는 회원이 없다면 “fail”를, 아이디는 일치하지만 비밀번호가 일치하는 회원이 없다면 “wrong pw”를 return 합니다.</li>
</ul>
<section id="파이썬-90" class="level3" data-number="23.4.1">
<h3 data-number="23.4.1" class="anchored" data-anchor-id="파이썬-90"><span class="header-section-number">23.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb183" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb183-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Tuple</span>
<span id="cb183-2"></span>
<span id="cb183-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(id_pw: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], db: List[Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb183-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb183-5">    pw: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb183-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, pw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> id_pw</span>
<span id="cb183-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> db_id, db_pw <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> db:</span>
<span id="cb183-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> db_id:</span>
<span id="cb183-9">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> db_pw:</span>
<span id="cb183-10">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"login"</span></span>
<span id="cb183-11">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb183-12">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wrong pw"</span></span>
<span id="cb183-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fail"</span></span></code></pre></div>
</section>
<section id="러스트-91" class="level3" data-number="23.4.2">
<h3 data-number="23.4.2" class="anchored" data-anchor-id="러스트-91"><span class="header-section-number">23.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb184" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb184-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(id_pw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> (<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> db<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pw) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> id_pw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (db_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> db_pw) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> db <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> db_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> db_pw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-6">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"login"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-7">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-8">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wrong pw"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-9">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb184-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb184-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb184-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fail"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb184-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb184-14"></span>
<span id="cb184-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> id_pw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"programmer"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"111"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> db <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb184-18">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"programmer"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"111"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb184-19">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"coder"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"222"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb184-20">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(id_pw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> db)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day24-수학-시뮬레이션-문자열-조건문-반복문" class="level1" data-number="24">
<h1 data-number="24"><span class="header-section-number">24</span> Day24 수학, 시뮬레이션, 문자열, 조건문, 반복문</h1>
<section id="치킨-쿠폰" class="level2" data-number="24.1">
<h2 data-number="24.1" class="anchored" data-anchor-id="치킨-쿠폰"><span class="header-section-number">24.1</span> 치킨 쿠폰</h2>
<p>프로그래머스 치킨은 치킨을 시켜먹으면 한 마리당 쿠폰을 한 장 발급합니다. 쿠폰을 열 장 모으면 치킨을 한 마리 서비스로 받을 수 있고, 서비스 치킨에도 쿠폰이 발급됩니다. 시켜먹은 치킨의 수 chicken 이 매개변수로 주어질 때 받을 수 있는 최대 서비스 치킨의 수를 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-91" class="level3" data-number="24.1.1">
<h3 data-number="24.1.1" class="anchored" data-anchor-id="파이썬-91"><span class="header-section-number">24.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb185" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb185-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(chicken: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb185-2">    service_chicken: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb185-3">    coupons: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chicken</span>
<span id="cb185-4"></span>
<span id="cb185-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb185-6">        new_chicken: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb185-7">        service_chicken <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> new_chicken</span>
<span id="cb185-8">        coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> new_chicken</span>
<span id="cb185-9"></span>
<span id="cb185-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> service_chicken</span></code></pre></div>
</section>
<section id="러스트-92" class="level3" data-number="24.1.2">
<h3 data-number="24.1.2" class="anchored" data-anchor-id="러스트-92"><span class="header-section-number">24.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb186" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb186-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(chicken<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb186-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> service_chicken <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chicken<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-4"></span>
<span id="cb186-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb186-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> new_chicken <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-7">        service_chicken <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> new_chicken<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-8">        coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (coupons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> new_chicken<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb186-10"></span>
<span id="cb186-11">    service_chicken</span>
<span id="cb186-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb186-13"></span>
<span id="cb186-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb186-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1081</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(test_input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input: {}, Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> test_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="이진수-더하기" class="level2" data-number="24.2">
<h2 data-number="24.2" class="anchored" data-anchor-id="이진수-더하기"><span class="header-section-number">24.2</span> 이진수 더하기</h2>
<p>이진수를 의미하는 두 개의 문자열 bin1 과 bin2 가 매개변수로 주어질 때, 두 이진수의 합을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-92" class="level3" data-number="24.2.1">
<h3 data-number="24.2.1" class="anchored" data-anchor-id="파이썬-92"><span class="header-section-number">24.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb187" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb187-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(bin1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, bin2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb187-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이진수 문자열을 10진수 정수로 변환</span></span>
<span id="cb187-3">    num1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(bin1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb187-4">    num2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(bin2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb187-5"></span>
<span id="cb187-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 두 수를 더함</span></span>
<span id="cb187-7">    sum_num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num2</span>
<span id="cb187-8"></span>
<span id="cb187-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과를 다시 이진수 문자열로 변환</span></span>
<span id="cb187-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bin</span>(sum_num)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span></code></pre></div>
</section>
<section id="러스트-93" class="level3" data-number="24.2.2">
<h3 data-number="24.2.2" class="anchored" data-anchor-id="러스트-93"><span class="header-section-number">24.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb188" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb188-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(bin1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb188-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 이진수 문자열을 10진수 정수로 변환</span></span>
<span id="cb188-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from_str_radix(bin1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from_str_radix(bin2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-5"></span>
<span id="cb188-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 두 수를 더함</span></span>
<span id="cb188-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sum_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-8"></span>
<span id="cb188-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 결과를 다시 이진수 문자열로 변환</span></span>
<span id="cb188-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:b}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> sum_num)</span>
<span id="cb188-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb188-12"></span>
<span id="cb188-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb188-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Test case</span></span>
<span id="cb188-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> bin1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1001"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> bin2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1111"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-17"></span>
<span id="cb188-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(bin1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-19"></span>
<span id="cb188-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binary 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binary 2: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum (binary): {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="a-로-b-만들기" class="level2" data-number="24.3">
<h2 data-number="24.3" class="anchored" data-anchor-id="a-로-b-만들기"><span class="header-section-number">24.3</span> A 로 B 만들기</h2>
<p>문자열 before 와 after 가 매개변수로 주어질 때, before 의 순서를 바꾸어 after 를 만들 수 있으면 1 을, 만들 수 없으면 0 을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-93" class="level3" data-number="24.3.1">
<h3 data-number="24.3.1" class="anchored" data-anchor-id="파이썬-93"><span class="header-section-number">24.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb189" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb189-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(before: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, after: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb189-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(before) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(after) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-94" class="level3" data-number="24.3.2">
<h3 data-number="24.3.2" class="anchored" data-anchor-id="러스트-94"><span class="header-section-number">24.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb190" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb190-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(bin1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb190-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 이진수 문자열을 10진수 정수로 변환</span></span>
<span id="cb190-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from_str_radix(bin1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u32</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from_str_radix(bin2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-5"></span>
<span id="cb190-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 두 수를 더함</span></span>
<span id="cb190-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sum_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-8"></span>
<span id="cb190-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 결과를 다시 이진수 문자열로 변환</span></span>
<span id="cb190-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:b}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> sum_num)</span>
<span id="cb190-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb190-12"></span>
<span id="cb190-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb190-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Test case</span></span>
<span id="cb190-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> bin1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1001"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> bin2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1111"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-17"></span>
<span id="cb190-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(bin1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-19"></span>
<span id="cb190-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binary 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binary 2: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bin2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum (binary): {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="k-의-개수" class="level2" data-number="24.4">
<h2 data-number="24.4" class="anchored" data-anchor-id="k-의-개수"><span class="header-section-number">24.4</span> k 의 개수</h2>
<p>1 부터 13 까지의 수에서, 1 은 1, 10, 11, 12, 13 이렇게 총 6 번 등장합니다. 정수 i, j, k 가 매개변수로 주어질 때, i 부터 j 까지 k 가 몇 번 등장하는지 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-94" class="level3" data-number="24.4.1">
<h3 data-number="24.4.1" class="anchored" data-anchor-id="파이썬-94"><span class="header-section-number">24.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb191" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb191-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(i: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, j: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb191-2">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb191-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(i, j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb191-4">        count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(num).count(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(k))</span>
<span id="cb191-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count</span></code></pre></div>
</section>
<section id="러스트-95" class="level3" data-number="24.4.2">
<h3 data-number="24.4.2" class="anchored" data-anchor-id="러스트-95"><span class="header-section-number">24.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb192" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb192-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb192-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb192-4">        count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>next()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>count() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb192-6">    count</span>
<span id="cb192-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb192-8"></span>
<span id="cb192-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb192-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Simple test</span></span>
<span id="cb192-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day25-시뮬레이션-조건문-수학" class="level1" data-number="25">
<h1 data-number="25"><span class="header-section-number">25</span> Day25 시뮬레이션, 조건문, 수학</h1>
<section id="문자열-밀기" class="level2" data-number="25.1">
<h2 data-number="25.1" class="anchored" data-anchor-id="문자열-밀기"><span class="header-section-number">25.1</span> 문자열 밀기</h2>
<p>문자열 “hello”에서 각 문자를 오른쪽으로 한 칸씩 밀고 마지막 문자는 맨 앞으로 이동시키면 “ohell”이 됩니다. 이것을 문자열을 민다고 정의한다면 문자열 A 와 B 가 매개변수로 주어질 때, A 를 밀어서 B 가 될 수 있다면 밀어야 하는 최소 횟수를 return 하고 밀어서 B 가 될 수 없으면 -1 을 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-95" class="level3" data-number="25.1.1">
<h3 data-number="25.1.1" class="anchored" data-anchor-id="파이썬-95"><span class="header-section-number">25.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb193" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb193-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(A: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, B: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb193-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> A <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> B:</span>
<span id="cb193-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb193-4"></span>
<span id="cb193-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(A)):</span>
<span id="cb193-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> A[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> A[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> B:</span>
<span id="cb193-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i</span>
<span id="cb193-8"></span>
<span id="cb193-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-96" class="level3" data-number="25.1.2">
<h3 data-number="25.1.2" class="anchored" data-anchor-id="러스트-96"><span class="header-section-number">25.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb194" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb194-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb194-5"></span>
<span id="cb194-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>a[a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>a[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>i]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb194-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb194-11"></span>
<span id="cb194-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb194-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb194-14"></span>
<span id="cb194-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ollo"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solution = {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="종이-자르기" class="level2" data-number="25.2">
<h2 data-number="25.2" class="anchored" data-anchor-id="종이-자르기"><span class="header-section-number">25.2</span> 종이 자르기</h2>
<p>머쓱이는 큰 종이를 1 x 1 크기로 자르려고 합니다. 예를 들어 2 x 2 크기의 종이를 1 x 1 크기로 자르려면 최소 가위질 세 번이 필요합니다.</p>
<section id="파이썬-96" class="level3" data-number="25.2.1">
<h3 data-number="25.2.1" class="anchored" data-anchor-id="파이썬-96"><span class="header-section-number">25.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb195" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb195-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(M: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, N: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb195-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> M <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> N <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> M <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> N <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-97" class="level3" data-number="25.2.2">
<h3 data-number="25.2.2" class="anchored" data-anchor-id="러스트-97"><span class="header-section-number">25.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb196" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb196-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-3">        m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb196-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb196-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb196-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb196-8"></span>
<span id="cb196-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb196-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solution = {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb196-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="연속된-수의-합" class="level2" data-number="25.3">
<h2 data-number="25.3" class="anchored" data-anchor-id="연속된-수의-합"><span class="header-section-number">25.3</span> 연속된 수의 합</h2>
<p>연속된 세 개의 정수를 더해 12 가 되는 경우는 3, 4, 5 입니다. 두 정수 num 과 total 이 주어집니다. 연속된 수 num 개를 더한 값이 total 이 될 때, 정수 배열을 오름차순으로 담아 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-97" class="level3" data-number="25.3.1">
<h3 data-number="25.3.1" class="anchored" data-anchor-id="파이썬-97"><span class="header-section-number">25.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb197" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb197-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb197-2"></span>
<span id="cb197-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, total: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb197-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 연속된 수의 시작값 계산</span></span>
<span id="cb197-5">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(num))) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> num</span>
<span id="cb197-6"></span>
<span id="cb197-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시작값부터 num개의 연속된 수 리스트 생성</span></span>
<span id="cb197-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(start, start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num))</span></code></pre></div>
</section>
<section id="러스트-98" class="level3" data-number="25.3.2">
<h3 data-number="25.3.2" class="anchored" data-anchor-id="러스트-98"><span class="header-section-number">25.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb198" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb198-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb198-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">sum::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-3">    (start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb198-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb198-5"></span>
<span id="cb198-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb198-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> total)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"solution({}, {}) = {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="다음에-올-숫자" class="level2" data-number="25.4">
<h2 data-number="25.4" class="anchored" data-anchor-id="다음에-올-숫자"><span class="header-section-number">25.4</span> 다음에 올 숫자</h2>
<p>등차수열 혹은 등비수열 common 이 매개변수로 주어질 때, 마지막 원소 다음으로 올 숫자를 return 하도록 solution 함수를 완성해보세요.</p>
<section id="파이썬-98" class="level3" data-number="25.4.1">
<h3 data-number="25.4.1" class="anchored" data-anchor-id="파이썬-98"><span class="header-section-number">25.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb199" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb199-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb199-2"></span>
<span id="cb199-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(common: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb199-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]:</span>
<span id="cb199-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 등차수열인 경우</span></span>
<span id="cb199-6">        diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb199-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> common[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> diff</span>
<span id="cb199-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb199-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 등비수열인 경우</span></span>
<span id="cb199-10">        ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb199-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(common[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ratio)</span></code></pre></div>
</section>
<section id="러스트-99" class="level3" data-number="25.4.2">
<h3 data-number="25.4.2" class="anchored" data-anchor-id="러스트-99"><span class="header-section-number">25.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb200" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb200-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(common<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Arithmetic sequence</span></span>
<span id="cb200-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-5">        common[common<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> diff</span>
<span id="cb200-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Geometric sequence</span></span>
<span id="cb200-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> common[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-9">        (common[common<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ratio)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>round() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb200-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb200-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb200-12"></span>
<span id="cb200-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(sequence)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Next number in the sequence: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="마치며" class="level1" data-number="26">
<h1 data-number="26"><span class="header-section-number">26</span> 마치며</h1>
<p>이 글에서 파이썬과 러스트 두 언어로 다양한 문제 해결 방법을 살펴보았습니다. 두 언어를 서로 비교하면서 각각의 특성과 장단점을 이해하는 데 도움이 되었을 것입니다. 중요한 것은 포기하지 않고 꾸준히 공부하는 자세입니다. 어려움을 극복하고 문제를 해결해 나가는 과정에서 실력이 향상될 것입니다. 코딩테스트는 개발자로서의 논리적 사고력과 문제 해결 능력을 키우는 좋은 기회라는 점을 잊지 마세요. 여러분의 노력이 반드시 결실을 맺기를 바랍니다!</p>


</section>

 ]]></description>
  <category>Coding test</category>
  <category>Python</category>
  <category>Rust</category>
  <category>Programming</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Codingtest_beginer.html</guid>
  <pubDate>Sat, 11 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>코딩테스트 기초</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Codingtest_training.html</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Codingtest_training.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Codingtest_training.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>코딩테스트 기초 테스트의 출처는 https://school.programmers.co.kr 입니다.</p>
<section id="day1-출력" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Day1 출력</h1>
<section id="문자열-출력하기" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="문자열-출력하기"><span class="header-section-number">1.1</span> 문자열 출력하기</h2>
<p>문자열&nbsp;<code>str</code> 이 주어질 때,&nbsp;<code>str</code> 을 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬" class="level3" data-number="1.1.1">
<h3 data-number="1.1.1" class="anchored" data-anchor-id="파이썬"><span class="header-section-number">1.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>()</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>)</span></code></pre></div>
</section>
<section id="러스트" class="level3" data-number="1.1.2">
<h3 data-number="1.1.2" class="anchored" data-anchor-id="러스트"><span class="header-section-number">1.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::</span>io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> s)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-6">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="a-와-b-출력하기" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="a-와-b-출력하기"><span class="header-section-number">1.2</span> a 와 b 출력하기</h2>
<p>정수&nbsp;<code>a</code> 와&nbsp;<code>b</code> 가 주어집니다. 각 수를 입력받아 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-1" class="level3" data-number="1.2.1">
<h3 data-number="1.2.1" class="anchored" data-anchor-id="파이썬-1"><span class="header-section-number">1.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>().strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>))</span>
<span id="cb3-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"a = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"b = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</section>
<section id="러스트-1" class="level3" data-number="1.2.2">
<h3 data-number="1.2.2" class="anchored" data-anchor-id="러스트-1"><span class="header-section-number">1.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::</span>io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to read line"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-6"></span>
<span id="cb4-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input</span>
<span id="cb4-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()</span>
<span id="cb4-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()</span>
<span id="cb4-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Parse error"</span>))</span>
<span id="cb4-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-12"></span>
<span id="cb4-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-15"></span>
<span id="cb4-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a = {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b = {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-반복해서-출력하기" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="문자열-반복해서-출력하기"><span class="header-section-number">1.3</span> 문자열 반복해서 출력하기</h2>
<p>문자열&nbsp;<code>str</code> 과 정수&nbsp;<code>n</code> 이 주어집니다. <code>str</code> 이&nbsp;<code>n</code> 번 반복된 문자열을 만들어 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-2" class="level3" data-number="1.3.1">
<h3 data-number="1.3.1" class="anchored" data-anchor-id="파이썬-2"><span class="header-section-number">1.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>().strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb5-2">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n)</span>
<span id="cb5-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n)</span></code></pre></div>
</section>
<section id="러스트-2" class="level3" data-number="1.3.2">
<h3 data-number="1.3.2" class="anchored" data-anchor-id="러스트-2"><span class="header-section-number">1.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::</span>io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to read line"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-6"></span>
<span id="cb6-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-8"></span>
<span id="cb6-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid input format"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-13"></span>
<span id="cb6-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str_part <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to parse number"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-16"></span>
<span id="cb6-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str_part<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>repeat(n))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="대소문자-바꿔서-출력하기" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="대소문자-바꿔서-출력하기"><span class="header-section-number">1.4</span> 대소문자 바꿔서 출력하기</h2>
<p>영어 알파벳으로 이루어진 문자열&nbsp;<code>str</code> 이 주어집니다. 각 알파벳을 대문자는 소문자로 소문자는 대문자로 변환해서 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-3" class="level3" data-number="1.4.1">
<h3 data-number="1.4.1" class="anchored" data-anchor-id="파이썬-3"><span class="header-section-number">1.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>()</span>
<span id="cb7-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.swapcase())</span></code></pre></div>
</section>
<section id="러스트-3" class="level3" data-number="1.4.2">
<h3 data-number="1.4.2" class="anchored" data-anchor-id="러스트-3"><span class="header-section-number">1.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::io::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">self</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">BufRead</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>lock()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-6"></span>
<span id="cb8-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> swapped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_uppercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-9">            c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_lowercase()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>next()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()</span>
<span id="cb8-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_lowercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-11">            c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_uppercase()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>next()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()</span>
<span id="cb8-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-13">            c</span>
<span id="cb8-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">collect::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-16"></span>
<span id="cb8-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">print!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> swapped)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="특수문자-출력하기" class="level2" data-number="1.5">
<h2 data-number="1.5" class="anchored" data-anchor-id="특수문자-출력하기"><span class="header-section-number">1.5</span> 특수문자 출력하기</h2>
<p><code>!@#$%^&amp;*(\'"&lt;&gt;?:;</code> 과 같이 출력하도록 코드를 작성해 주세요.</p>
<section id="파이썬-4" class="level3" data-number="1.5.1">
<h3 data-number="1.5.1" class="anchored" data-anchor-id="파이썬-4"><span class="header-section-number">1.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"!@#$%^&amp;*(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;&gt;?:;"</span>)</span></code></pre></div>
</section>
<section id="러스트-4" class="level3" data-number="1.5.2">
<h3 data-number="1.5.2" class="anchored" data-anchor-id="러스트-4"><span class="header-section-number">1.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-2">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"!@#$%^&amp;*(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;&gt;?:;"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day2-출력-연산" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Day2 출력, 연산</h1>
<section id="덧셈식-출력하기" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="덧셈식-출력하기"><span class="header-section-number">2.1</span> 덧셈식 출력하기</h2>
<p>두 정수&nbsp;<code>a</code>,&nbsp;<code>b</code> 가 주어질 때 계산식을 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-5" class="level3" data-number="2.1.1">
<h3 data-number="2.1.1" class="anchored" data-anchor-id="파이썬-5"><span class="header-section-number">2.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>().strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>))</span>
<span id="cb11-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> + </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</section>
<section id="러스트-5" class="level3" data-number="2.1.2">
<h3 data-number="2.1.2" class="anchored" data-anchor-id="러스트-5"><span class="header-section-number">2.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::</span>io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-2"></span>
<span id="cb12-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to read line"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-6"></span>
<span id="cb12-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input</span>
<span id="cb12-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()</span>
<span id="cb12-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()</span>
<span id="cb12-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Parse error"</span>))</span>
<span id="cb12-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-12"></span>
<span id="cb12-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-14">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid input: expected two numbers"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-17"></span>
<span id="cb12-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-20"></span>
<span id="cb12-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{} + {} = {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-붙여서-출력하기" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="문자열-붙여서-출력하기"><span class="header-section-number">2.2</span> 문자열 붙여서 출력하기</h2>
<p>두 개의 문자열&nbsp;<code>str1</code>,&nbsp;<code>str2</code> 가 공백으로 구분되어 입력으로 주어집니다. &nbsp;<code>str1</code> 과&nbsp;<code>str2</code> 을 이어서 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-6" class="level3" data-number="2.2.1">
<h3 data-number="2.2.1" class="anchored" data-anchor-id="파이썬-6"><span class="header-section-number">2.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">str1, str2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>().strip().split()</span>
<span id="cb13-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>str1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>str2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</section>
<section id="러스트-6" class="level3" data-number="2.2.2">
<h3 data-number="2.2.2" class="anchored" data-anchor-id="러스트-6"><span class="header-section-number">2.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb14-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::</span>io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to read line"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-6"></span>
<span id="cb14-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-8"></span>
<span id="cb14-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid input: expected two strings"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-13"></span>
<span id="cb14-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-16"></span>
<span id="cb14-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-돌리기" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="문자열-돌리기"><span class="header-section-number">2.3</span> 문자열 돌리기</h2>
<p>문자열&nbsp;<code>str</code> 이 주어집니다. 문자열을 시계방향으로 90 도 돌려서 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-7" class="level3" data-number="2.3.1">
<h3 data-number="2.3.1" class="anchored" data-anchor-id="파이썬-7"><span class="header-section-number">2.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>()</span>
<span id="cb15-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb15-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(i)</span></code></pre></div>
</section>
<section id="러스트-7" class="level3" data-number="2.3.2">
<h3 data-number="2.3.2" class="anchored" data-anchor-id="러스트-7"><span class="header-section-number">2.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb16-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::io::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">self</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">BufRead</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb16-2"></span>
<span id="cb16-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> stdin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stdin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>lock()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>lines()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>next()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-6"></span>
<span id="cb16-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-8">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="홀짝-구분하기" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="홀짝-구분하기"><span class="header-section-number">2.4</span> 홀짝 구분하기</h2>
<p>자연수&nbsp;<code>n</code> 이 입력으로 주어졌을 때 만약&nbsp;<code>n</code> 이 짝수이면 “<code>n</code>&nbsp;is even”을, 홀수이면 “<code>n</code>&nbsp;is odd”를 출력하는 코드를 작성해 보세요.</p>
<section id="파이썬-8" class="level3" data-number="2.4.1">
<h3 data-number="2.4.1" class="anchored" data-anchor-id="파이썬-8"><span class="header-section-number">2.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>())</span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb17-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> is even"</span>)</span>
<span id="cb17-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb17-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> is odd"</span>)</span></code></pre></div>
</section>
<section id="러스트-8" class="level3" data-number="2.4.2">
<h3 data-number="2.4.2" class="anchored" data-anchor-id="러스트-8"><span class="header-section-number">2.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::</span>io<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-2"></span>
<span id="cb18-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">io::</span>stdin()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_line(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to read line"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-6"></span>
<span id="cb18-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>trim()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>expect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Please enter a valid integer"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-8"></span>
<span id="cb18-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{} is even"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-12">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{} is odd"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-겹쳐쓰기" class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="문자열-겹쳐쓰기"><span class="header-section-number">2.5</span> 문자열 겹쳐쓰기</h2>
<p>문자열&nbsp;<code>my_string</code>,&nbsp;<code>overwrite_string</code> 과 정수&nbsp;<code>s</code> 가 주어집니다. 문자열&nbsp;<code>my_string</code> 의 인덱스&nbsp;<code>s</code> 부터&nbsp;<code>overwrite_string</code> 의 길이만큼을 문자열&nbsp;<code>overwrite_string</code> 으로 바꾼 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-9" class="level3" data-number="2.5.1">
<h3 data-number="2.5.1" class="anchored" data-anchor-id="파이썬-9"><span class="header-section-number">2.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, overwrite_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb19-2">    prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string[:s]</span>
<span id="cb19-3">    middle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> overwrite_string</span>
<span id="cb19-4">    suffix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string[s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(overwrite_string):]</span>
<span id="cb19-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> middle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> suffix</span></code></pre></div>
</section>
<section id="러스트-9" class="level3" data-number="2.5.2">
<h3 data-number="2.5.2" class="anchored" data-anchor-id="러스트-9"><span class="header-section-number">2.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb20-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> overwrite_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>my_string[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>s]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> middle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> overwrite_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> suffix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>my_string[s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> overwrite_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-5"></span>
<span id="cb20-6">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}{}{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> prefix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> middle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> suffix)</span>
<span id="cb20-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-8"></span>
<span id="cb20-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb20-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day3-연산" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Day3 연산</h1>
<section id="문자열-섞기" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="문자열-섞기"><span class="header-section-number">3.1</span> 문자열 섞기</h2>
<p>길이가 같은 두 문자열&nbsp;<code>str1</code> 과&nbsp;<code>str2</code> 가 주어집니다. 두 문자열의 각 문자가 앞에서부터 서로 번갈아가면서 한 번씩 등장하는 문자열을 만들어 return 하는 solution 함수를 완성해 주세요</p>
<section id="파이썬-10" class="level3" data-number="3.1.1">
<h3 data-number="3.1.1" class="anchored" data-anchor-id="파이썬-10"><span class="header-section-number">3.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(str1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, str2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb21-2">    answer: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb21-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(str1)):</span>
<span id="cb21-4">        answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> str1[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> str2[i]</span>
<span id="cb21-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-10" class="level3" data-number="3.1.2">
<h3 data-number="3.1.2" class="anchored" data-anchor-id="러스트-10"><span class="header-section-number">3.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb22-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-3"></span>
<span id="cb22-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (c1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c2) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>zip(str2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-5">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(c1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-6">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(c2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-8"></span>
<span id="cb22-9">    answer</span>
<span id="cb22-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-11"></span>
<span id="cb22-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb22-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abc"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"def"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자-리스트를-문자열로-변환하기" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="문자-리스트를-문자열로-변환하기"><span class="header-section-number">3.2</span> 문자 리스트를 문자열로 변환하기</h2>
<p>문자들이 담겨있는 배열&nbsp;<code>arr</code> 가 주어집니다.&nbsp;<code>arr</code> 의 원소들을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-11" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="파이썬-11"><span class="header-section-number">3.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb23-2"></span>
<span id="cb23-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb23-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(arr)</span></code></pre></div>
</section>
<section id="러스트-11" class="level3" data-number="3.2.2">
<h3 data-number="3.2.2" class="anchored" data-anchor-id="러스트-11"><span class="header-section-number">3.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb24-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-2">    arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb24-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-4"></span>
<span id="cb24-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb24-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb24-8">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb24-9">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb24-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"World"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb24-11">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-곱하기" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="문자열-곱하기"><span class="header-section-number">3.3</span> 문자열 곱하기</h2>
<p>문자열&nbsp;<code>my_string</code> 과 정수&nbsp;<code>k</code> 가 주어질 때,&nbsp;<code>my_string</code> 을&nbsp;<code>k</code> 번 반복한 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-12" class="level3" data-number="3.3.1">
<h3 data-number="3.3.1" class="anchored" data-anchor-id="파이썬-12"><span class="header-section-number">3.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb25-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>k</span></code></pre></div>
</section>
<section id="러스트-12" class="level3" data-number="3.3.2">
<h3 data-number="3.3.2" class="anchored" data-anchor-id="러스트-12"><span class="header-section-number">3.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb26-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>repeat(k)</span>
<span id="cb26-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb26-4"></span>
<span id="cb26-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb26-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="더-크게-합치기" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="더-크게-합치기"><span class="header-section-number">3.4</span> 더 크게 합치기</h2>
<p>연산 <img src="https://latex.codecogs.com/png.latex?%E2%8A%95"> 는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다. <img src="https://latex.codecogs.com/png.latex?12%20%E2%8A%95%203%20=%20123">, <img src="https://latex.codecogs.com/png.latex?3%20%E2%8A%95%2012%20=%20312"> . 양의 정수&nbsp;a 와&nbsp;b 가 주어졌을 때,&nbsp;<img src="https://latex.codecogs.com/png.latex?a%E2%8A%95b"> 와&nbsp;<img src="https://latex.codecogs.com/png.latex?b%E2%8A%95a">&nbsp;중 더 큰 값을 return 하는 solution 함수를 완성해 주세요. 단,&nbsp;<img src="https://latex.codecogs.com/png.latex?a%E2%8A%95b"> 와&nbsp;<img src="https://latex.codecogs.com/png.latex?b%E2%8A%95a"> 가 같다면&nbsp;<img src="https://latex.codecogs.com/png.latex?a%E2%8A%95b"> 를 return 합니다.</p>
<section id="파이썬-13" class="level3" data-number="3.4.1">
<h3 data-number="3.4.1" class="anchored" data-anchor-id="파이썬-13"><span class="header-section-number">3.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb27-2">    ab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(a) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(b))</span>
<span id="cb27-3">    ba <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(b) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(a))</span>
<span id="cb27-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(ab, ba)</span></code></pre></div>
</section>
<section id="러스트-13" class="level3" data-number="3.4.2">
<h3 data-number="3.4.2" class="anchored" data-anchor-id="러스트-13"><span class="header-section-number">3.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb28-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> ab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> ba <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-4">    ab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max(ba)</span>
<span id="cb28-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb28-6"></span>
<span id="cb28-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb28-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="두-수의-연산값-비교하기" class="level2" data-number="3.5">
<h2 data-number="3.5" class="anchored" data-anchor-id="두-수의-연산값-비교하기"><span class="header-section-number">3.5</span> 두 수의 연산값 비교하기</h2>
<p>연산 <img src="https://latex.codecogs.com/png.latex?%E2%8A%95"> 는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다. <img src="https://latex.codecogs.com/png.latex?12%E2%8A%953=123">, <img src="https://latex.codecogs.com/png.latex?3%E2%8A%9512=312"> 양의 정수 a 와 b 가 주어졌을 때, <img src="https://latex.codecogs.com/png.latex?a%E2%8A%95b"> 와 <img src="https://latex.codecogs.com/png.latex?2*a*b"> 중 더 큰 값을 return 하는 solution 함수를 완성해 주세요. 단, <img src="https://latex.codecogs.com/png.latex?a%E2%8A%95b"> 와 <img src="https://latex.codecogs.com/png.latex?2*a*b"> 가 같으면 <img src="https://latex.codecogs.com/png.latex?a%E2%8A%95b"> 를 return 합니다.</p>
<section id="파이썬-14" class="level3" data-number="3.5.1">
<h3 data-number="3.5.1" class="anchored" data-anchor-id="파이썬-14"><span class="header-section-number">3.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb29-2">    concat_op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(a) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(b))</span>
<span id="cb29-3">    multiply_op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b</span>
<span id="cb29-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(concat_op, multiply_op)</span></code></pre></div>
</section>
<section id="러스트-14" class="level3" data-number="3.5.2">
<h3 data-number="3.5.2" class="anchored" data-anchor-id="러스트-14"><span class="header-section-number">3.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb30-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> concat_op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">format!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> multiply_op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-4">    concat_op<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max(multiply_op)</span>
<span id="cb30-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb30-6"></span>
<span id="cb30-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example usage</span></span>
<span id="cb30-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">91</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-4-연산-조건문" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Day 4 연산, 조건문</h1>
<section id="n-의-배수" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="n-의-배수"><span class="header-section-number">4.1</span> n 의 배수</h2>
<p>정수&nbsp;<code>num</code> 과&nbsp;<code>n</code> 이 매개 변수로 주어질 때,&nbsp;<code>num</code> 이&nbsp;<code>n</code> 의 배수이면 1 을 return&nbsp;<code>n</code> 의 배수가 아니라면 0 을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-15" class="level3" data-number="4.1.1">
<h3 data-number="4.1.1" class="anchored" data-anchor-id="파이썬-15"><span class="header-section-number">4.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb31-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb31-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb31-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb31-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-15" class="level3" data-number="4.1.2">
<h3 data-number="4.1.2" class="anchored" data-anchor-id="러스트-15"><span class="header-section-number">4.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb32-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-3">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb32-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb32-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-8"></span>
<span id="cb32-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result for num={} and n={}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="공배수" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="공배수"><span class="header-section-number">4.2</span> 공배수</h2>
<p>정수&nbsp;<code>number</code> 와&nbsp;<code>n</code>,&nbsp;<code>m</code> 이 주어집니다.&nbsp;<code>number</code> 가&nbsp;<code>n</code> 의 배수이면서&nbsp;<code>m</code> 의 배수이면 1 을 아니라면 0 을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-16" class="level3" data-number="4.2.1">
<h3 data-number="4.2.1" class="anchored" data-anchor-id="파이썬-16"><span class="header-section-number">4.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(number: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, m:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb33-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb33-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb33-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb33-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-16" class="level3" data-number="4.2.2">
<h3 data-number="4.2.2" class="anchored" data-anchor-id="러스트-16"><span class="header-section-number">4.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb34-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-3">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb34-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb34-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-8"></span>
<span id="cb34-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="홀짝에-따른-다른-값-반환하기" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="홀짝에-따른-다른-값-반환하기"><span class="header-section-number">4.3</span> 홀짝에 따른 다른 값 반환하기</h2>
<p>양의 정수&nbsp;<code>n</code> 이 매개변수로 주어질 때,&nbsp;<code>n</code> 이 홀수라면&nbsp;<code>n</code>&nbsp;이하의 홀수인 모든 양의 정수의 합을 return 하고&nbsp;<code>n</code> 이 짝수라면&nbsp;<code>n</code>&nbsp;이하의 짝수인 모든 양의 정수의 제곱의 합을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-17" class="level3" data-number="4.3.1">
<h3 data-number="4.3.1" class="anchored" data-anchor-id="파이썬-17"><span class="header-section-number">4.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb35-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># n이 홀수인 경우</span></span>
<span id="cb35-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb35-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># n이 짝수인 경우</span></span>
<span id="cb35-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
</section>
<section id="러스트-17" class="level3" data-number="4.3.2">
<h3 data-number="4.3.2" class="anchored" data-anchor-id="러스트-17"><span class="header-section-number">4.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb36-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If `n` is odd, sum all odd numbers from 1 to `n`</span></span>
<span id="cb36-4">        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb36-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If `n` is even, sum the squares of all even numbers from 2 to `n`</span></span>
<span id="cb36-7">        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> i)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb36-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-10"></span>
<span id="cb36-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example with an odd number</span></span>
<span id="cb36-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="조건-문자열" class="level2" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="조건-문자열"><span class="header-section-number">4.4</span> 조건 문자열</h2>
<p>문자열에 따라 다음과 같이 두 수의 크기를 비교하려고 합니다.</p>
<ul>
<li>두 수가&nbsp;<code>n</code> 과&nbsp;<code>m</code> 이라면
<ul>
<li>“&gt;”, “=” :&nbsp;<code>n</code>&nbsp;&gt;=&nbsp;<code>m</code></li>
<li>“&lt;”, “=” :&nbsp;<code>n</code>&nbsp;&lt;=&nbsp;<code>m</code></li>
<li>“&gt;”, “!” :&nbsp;<code>n</code>&nbsp;&gt;&nbsp;<code>m</code></li>
<li>“&lt;”, “!” :&nbsp;<code>n</code>&nbsp;&lt;&nbsp;<code>m</code></li>
</ul></li>
</ul>
<p>두 문자열&nbsp;<code>ineq</code> 와&nbsp;<code>eq</code> 가 주어집니다.&nbsp;<code>ineq</code> 는 “&lt;”와 “&gt;”중 하나고,&nbsp;<code>eq</code> 는 “=”와 “!”중 하나입니다. 그리고 두 정수&nbsp;<code>n</code> 과&nbsp;<code>m</code> 이 주어질 때,&nbsp;<code>n</code> 과&nbsp;<code>m</code> 이&nbsp;<code>ineq</code> 와&nbsp;<code>eq</code> 의 조건에 맞으면 1 을 아니면 0 을 return 하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-18" class="level3" data-number="4.4.1">
<h3 data-number="4.4.1" class="anchored" data-anchor-id="파이썬-18"><span class="header-section-number">4.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(ineq:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, eq:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, n:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, m:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb37-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ineq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> eq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span>:</span>
<span id="cb37-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> m <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb37-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> ineq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> eq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span>:</span>
<span id="cb37-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> m <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb37-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> ineq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> eq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"!"</span>:</span>
<span id="cb37-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> m <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb37-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> ineq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> eq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"!"</span>:</span>
<span id="cb37-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> m <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-18" class="level3" data-number="4.4.2">
<h3 data-number="4.4.2" class="anchored" data-anchor-id="러스트-18"><span class="header-section-number">4.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb38-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(ineq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> eq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> (ineq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> eq) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-3">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'&gt;'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb38-4">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb38-5">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'&gt;'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'!'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb38-6">        (<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'!'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb38-7">        _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">panic!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid input combination"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb38-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-10"></span>
<span id="cb38-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'&gt;'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 2: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
</section>
<section id="flag-에-따라-다른-값-반환하기" class="level2" data-number="4.5">
<h2 data-number="4.5" class="anchored" data-anchor-id="flag-에-따라-다른-값-반환하기"><span class="header-section-number">4.5</span> flag 에 따라 다른 값 반환하기</h2>
<p>두 정수&nbsp;<code>a</code>,&nbsp;<code>b</code> 와 boolean 변수&nbsp;<code>flag</code> 가 매개변수로 주어질 때,&nbsp;<code>flag</code> 가 true 면&nbsp;<code>a</code>&nbsp;+&nbsp;<code>b</code> 를 false 면&nbsp;<code>a</code>&nbsp;-&nbsp;<code>b</code> 를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-19" class="level3" data-number="4.5.1">
<h3 data-number="4.5.1" class="anchored" data-anchor-id="파이썬-19"><span class="header-section-number">4.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, flag:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb39-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> flag <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b</span></code></pre></div>
</section>
<section id="러스트-19" class="level3" data-number="4.5.2">
<h3 data-number="4.5.2" class="anchored" data-anchor-id="러스트-19"><span class="header-section-number">4.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb40-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> flag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-3">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="cb40-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-5">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b</span>
<span id="cb40-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-8"></span>
<span id="cb40-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 2: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-5-조건문" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Day 5 조건문</h1>
<section id="코드-처리하기" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="코드-처리하기"><span class="header-section-number">5.1</span> 코드 처리하기</h2>
<p>문자열&nbsp;<code>code</code> 가 주어집니다. <code>code</code> 를 앞에서부터 읽으면서 만약 문자가 “1”이면&nbsp;<code>mode</code> 를 바꿉니다.&nbsp;<code>mode</code> 에 따라&nbsp;<code>code</code> 를 읽어가면서 문자열&nbsp;<code>ret</code> 을 만들어냅니다. <code>mode</code> 는 0 과 1 이 있으며,&nbsp;<code>idx</code> 를 0 부터&nbsp;<code>code의 길이 - 1</code>&nbsp;까지 1 씩 키워나가면서&nbsp;<code>code[idx]</code> 의 값에 따라 다음과 같이 행동합니다.</p>
<ul>
<li><code>mode</code> 가 0 일 때
<ul>
<li><code>code[idx]</code> 가 “1”이 아니면&nbsp;<code>idx</code> 가 짝수일 때만&nbsp;<code>ret</code> 의 맨 뒤에&nbsp;<code>code[idx]</code> 를 추가합니다.</li>
<li><code>code[idx]</code> 가 “1”이면&nbsp;<code>mode</code> 를 0 에서 1 로 바꿉니다.</li>
</ul></li>
<li><code>mode</code> 가 1 일 때
<ul>
<li><code>code[idx]</code> 가 “1”이 아니면&nbsp;<code>idx</code> 가 홀수일 때만&nbsp;<code>ret</code> 의 맨 뒤에&nbsp;<code>code[idx]</code> 를 추가합니다.</li>
<li><code>code[idx]</code> 가 “1”이면&nbsp;<code>mode</code> 를 1 에서 0 으로 바꿉니다.</li>
</ul></li>
</ul>
<p>문자열&nbsp;<code>code</code> 를 통해 만들어진 문자열&nbsp;<code>ret</code> 를 return 하는 solution 함수를 완성해 주세요.</p>
<p>단, 시작할 때&nbsp;<code>mode</code> 는 0 이며, return 하려는&nbsp;<code>ret</code> 가 만약 빈 문자열이라면 대신 “EMPTY”를 return 합니다.</p>
<section id="파이썬-20" class="level3" data-number="5.1.1">
<h3 data-number="5.1.1" class="anchored" data-anchor-id="파이썬-20"><span class="header-section-number">5.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(code: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb41-2">    ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb41-3">    mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시작할 때 mode는 0입니다.</span></span>
<span id="cb41-4"></span>
<span id="cb41-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> idx, char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(code):</span>
<span id="cb41-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span>:</span>
<span id="cb41-7">            mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mode  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mode를 전환합니다.</span></span>
<span id="cb41-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb41-9">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> (mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb41-10">                ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> char</span>
<span id="cb41-11"></span>
<span id="cb41-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>:</span>
<span id="cb41-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'EMPTY'</span></span>
<span id="cb41-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span></code></pre></div>
</section>
<section id="러스트-20" class="level3" data-number="5.1.2">
<h3 data-number="5.1.2" class="anchored" data-anchor-id="러스트-20"><span class="header-section-number">5.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb42-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb42-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start with mode 0</span></span>
<span id="cb42-4"></span>
<span id="cb42-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-7">            mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Toggle the mode</span></span>
<span id="cb42-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-9">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> (mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-10">                ret<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb42-11">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb42-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb42-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb42-14"></span>
<span id="cb42-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ret<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EMPTY"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb42-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-18">        ret</span>
<span id="cb42-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb42-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb42-21"></span>
<span id="cb42-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-23">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"012345"</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb42-24">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 2: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1101010"</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb42-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="등차수열의-특정한-항만-더하기" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="등차수열의-특정한-항만-더하기"><span class="header-section-number">5.2</span> 등차수열의 특정한 항만 더하기</h2>
<p>두 정수&nbsp;<code>a</code>,&nbsp;<code>d</code> 와 길이가 n 인 boolean 배열&nbsp;<code>included</code> 가 주어집니다. 첫째항이&nbsp;<code>a</code>, 공차가&nbsp;<code>d</code> 인 등차수열에서&nbsp;<code>included[i]</code> 가 i + 1 항을 의미할 때, 이 등차수열의 1 항부터 n 항까지&nbsp;<code>included</code> 가 true 인 항들만 더한 값을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-21" class="level3" data-number="5.2.1">
<h3 data-number="5.2.1" class="anchored" data-anchor-id="파이썬-21"><span class="header-section-number">5.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb43-2"></span>
<span id="cb43-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, d:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, included: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb43-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb43-5"></span>
<span id="cb43-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(included)):</span>
<span id="cb43-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> included[i]:</span>
<span id="cb43-8">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (i+1)번째 항 계산</span></span>
<span id="cb43-9">            term <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d</span>
<span id="cb43-10">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> term</span>
<span id="cb43-11"></span>
<span id="cb43-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-21" class="level3" data-number="5.2.2">
<h3 data-number="5.2.2" class="anchored" data-anchor-id="러스트-21"><span class="header-section-number">5.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb44-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> included<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb44-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-3"></span>
<span id="cb44-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>is_included) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> included<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb44-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_included <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb44-6">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the (i+1)th term</span></span>
<span id="cb44-7">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> term <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-8">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> term<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb44-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb44-11"></span>
<span id="cb44-12">    answer</span>
<span id="cb44-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb44-14"></span>
<span id="cb44-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb44-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-6-조건문-반복문" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Day 6 조건문, 반복문</h1>
<section id="마지막-두-원소" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="마지막-두-원소"><span class="header-section-number">6.1</span> 마지막 두 원소</h2>
<p>정수 리스트&nbsp;<code>num_list</code>가 주어질 때, 마지막 원소가 그전 원소보다 크면 마지막 원소에서 그전 원소를 뺀 값을 마지막 원소가 그전 원소보다 크지 않다면 마지막 원소를 두 배한 값을 추가하여 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-22" class="level3" data-number="6.1.1">
<h3 data-number="6.1.1" class="anchored" data-anchor-id="파이썬-22"><span class="header-section-number">6.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb45-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb45-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 마지막 원소와 그 전 원소 추출</span></span>
<span id="cb45-4">    last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb45-5">    second_last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb45-6"></span>
<span id="cb45-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 리스트를 복사하여 추가할 값 결정</span></span>
<span id="cb45-8">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list.copy()</span>
<span id="cb45-9"></span>
<span id="cb45-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> second_last:</span>
<span id="cb45-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 마지막 원소가 그 전 원소보다 크면 차를 추가</span></span>
<span id="cb45-12">        result.append(last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> second_last)</span>
<span id="cb45-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb45-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그렇지 않으면 마지막 원소의 두 배를 추가</span></span>
<span id="cb45-15">        result.append(last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb45-16"></span>
<span id="cb45-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-22" class="level3" data-number="6.1.2">
<h3 data-number="6.1.2" class="anchored" data-anchor-id="러스트-22"><span class="header-section-number">6.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"></code></pre></div>
</section>
</section>
<section id="수-조작하기-1" class="level2" data-number="6.2">
<h2 data-number="6.2" class="anchored" data-anchor-id="수-조작하기-1"><span class="header-section-number">6.2</span> 수 조작하기 1</h2>
<p>정수&nbsp;<code>n</code>과 문자열&nbsp;<code>control</code>이 주어집니다.&nbsp;<code>control</code>은 “w”, “a”, “s”, “d”의 4개의 문자로 이루어져 있으며,&nbsp;<code>control</code>의 앞에서부터 순서대로 문자에 따라&nbsp;<code>n</code>의 값을 바꿉니다.</p>
<ul>
<li>“w” :&nbsp;<code>n</code>이 1 커집니다.</li>
<li>“s” :&nbsp;<code>n</code>이 1 작아집니다.</li>
<li>“d” :&nbsp;<code>n</code>이 10 커집니다.</li>
<li>“a” :&nbsp;<code>n</code>이 10 작아집니다.</li>
</ul>
<p>위 규칙에 따라&nbsp;<code>n</code>을 바꿨을 때 가장 마지막에 나오는&nbsp;<code>n</code>의 값을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-23" class="level3" data-number="6.2.1">
<h3 data-number="6.2.1" class="anchored" data-anchor-id="파이썬-23"><span class="header-section-number">6.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, control:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb47-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># control 문자열을 순회하면서 n의 값을 조작합니다.</span></span>
<span id="cb47-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> control:</span>
<span id="cb47-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>:</span>
<span id="cb47-5">            n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb47-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span>:</span>
<span id="cb47-7">            n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb47-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span>:</span>
<span id="cb47-9">            n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb47-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>:</span>
<span id="cb47-11">            n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb47-12"></span>
<span id="cb47-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> n</span></code></pre></div>
</section>
<section id="러스트-23" class="level3" data-number="6.2.2">
<h3 data-number="6.2.2" class="anchored" data-anchor-id="러스트-23"><span class="header-section-number">6.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb48-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> control<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> control<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-4">            <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-5">            <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-6">            <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-7">            <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-8">            _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> ()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ignore any other characters</span></span>
<span id="cb48-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb48-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb48-11">    n</span>
<span id="cb48-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb48-13"></span>
<span id="cb48-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> initial_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> control_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wsdawsdassw"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(initial_n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> control_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-18">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="수-조작하기-2" class="level2" data-number="6.3">
<h2 data-number="6.3" class="anchored" data-anchor-id="수-조작하기-2"><span class="header-section-number">6.3</span> 수 조작하기 2</h2>
<p>정수 배열&nbsp;<code>numLog</code>가 주어집니다. 처음에&nbsp;<code>numLog[0]</code>에서 부터 시작해 “w”, “a”, “s”, “d”로 이루어진 문자열을 입력으로 받아 순서대로 다음과 같은 조작을 했다고 합시다.</p>
<ul>
<li>“w” : 수에 1을 더한다.</li>
<li>“s” : 수에 1을 뺀다.</li>
<li>“d” : 수에 10을 더한다.</li>
<li>“a” : 수에 10을 뺀다.</li>
</ul>
<p>그리고 매번 조작을 할 때마다 결괏값을 기록한 정수 배열이&nbsp;<code>numLog</code>입니다. 즉,&nbsp;<code>numLog[i]</code>는&nbsp;<code>numLog[0]</code>로부터 총&nbsp;<code>i</code>번의 조작을 가한 결과가 저장되어 있습니다.</p>
<p>주어진 정수 배열&nbsp;<code>numLog</code>에 대해 조작을 위해 입력받은 문자열을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-24" class="level3" data-number="6.3.1">
<h3 data-number="6.3.1" class="anchored" data-anchor-id="파이썬-24"><span class="header-section-number">6.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb49-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numLog:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb49-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조작 문자열을 저장할 변수</span></span>
<span id="cb49-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb49-5"></span>
<span id="cb49-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># numLog 배열의 길이</span></span>
<span id="cb49-7">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(numLog)</span>
<span id="cb49-8"></span>
<span id="cb49-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 인접 원소 간의 차이를 확인하고 조작 문자열 생성</span></span>
<span id="cb49-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n):</span>
<span id="cb49-11">        diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numLog[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> numLog[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb49-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb49-13">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span></span>
<span id="cb49-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb49-15">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span></span>
<span id="cb49-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb49-17">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span></span>
<span id="cb49-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb49-19">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span></span>
<span id="cb49-20"></span>
<span id="cb49-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-24" class="level3" data-number="6.3.2">
<h3 data-number="6.3.2" class="anchored" data-anchor-id="러스트-24"><span class="header-section-number">6.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb50-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_log<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb50-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-3"></span>
<span id="cb50-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>num_log<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb50-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_log[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> num_log[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb50-7">            <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb50-8">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'s'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb50-9">            <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb50-10">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb50-11">            _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> ()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ignore any other differences</span></span>
<span id="cb50-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb50-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb50-14"></span>
<span id="cb50-15">    answer</span>
<span id="cb50-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb50-17"></span>
<span id="cb50-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb50-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_log <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num_log)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num_log)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb50-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="수열-구간-쿼리-3" class="level2" data-number="6.4">
<h2 data-number="6.4" class="anchored" data-anchor-id="수열-구간-쿼리-3"><span class="header-section-number">6.4</span> 수열 구간 쿼리 3</h2>
<p>정수 배열&nbsp;<code>arr</code>와 2차원 정수 배열&nbsp;<code>queries</code>이 주어집니다.&nbsp;<code>queries</code>의 원소는 각각 하나의&nbsp;<code>query</code>를 나타내며,&nbsp;<code>[i, j]</code>&nbsp;꼴입니다.</p>
<p>각&nbsp;<code>query</code>마다 순서대로&nbsp;<code>arr[i]</code>의 값과&nbsp;<code>arr[j]</code>의 값을 서로 바꿉니다.</p>
<p>위 규칙에 따라&nbsp;<code>queries</code>를 처리한 이후의&nbsp;<code>arr</code>를 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-25" class="level3" data-number="6.4.1">
<h3 data-number="6.4.1" class="anchored" data-anchor-id="파이썬-25"><span class="header-section-number">6.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb51-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], queries:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb51-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 쿼리 처리</span></span>
<span id="cb51-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries:</span>
<span id="cb51-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 인덱스 i와 j의 값을 서로 교환</span></span>
<span id="cb51-6">        arr[i], arr[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr[j], arr[i]</span>
<span id="cb51-7"></span>
<span id="cb51-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> arr</span></code></pre></div>
</section>
<section id="러스트-25" class="level3" data-number="6.4.2">
<h3 data-number="6.4.2" class="anchored" data-anchor-id="러스트-25"><span class="header-section-number">6.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb52-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> queries<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> j) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-3">        arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>swap(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> j)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb52-5">    arr</span>
<span id="cb52-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb52-7"></span>
<span id="cb52-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb52-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-11"></span>
<span id="cb52-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>queries)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb52-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="수열-구간-쿼리2" class="level2" data-number="6.5">
<h2 data-number="6.5" class="anchored" data-anchor-id="수열-구간-쿼리2"><span class="header-section-number">6.5</span> 수열 구간 쿼리2</h2>
<p>정수 배열&nbsp;<code>arr</code>와 2차원 정수 배열&nbsp;<code>queries</code>이 주어집니다.&nbsp;<code>queries</code>의 원소는 각각 하나의&nbsp;<code>query</code>를 나타내며,&nbsp;<code>[s, e, k]</code>&nbsp;꼴입니다.</p>
<p>각&nbsp;<code>query</code>마다 순서대로&nbsp;<code>s</code>&nbsp;≤&nbsp;<code>i</code>&nbsp;≤&nbsp;<code>e</code>인 모든&nbsp;<code>i</code>에 대해&nbsp;<code>k</code>보다 크면서 가장 작은&nbsp;<code>arr[i]</code>를 찾습니다.</p>
<p>각 쿼리의 순서에 맞게 답을 저장한 배열을 반환하는 solution 함수를 완성해 주세요. 단, 특정 쿼리의 답이 존재하지 않으면 -1을 저장합니다. ### 파이썬</p>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb53-2"></span>
<span id="cb53-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], queries:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb53-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb53-5"></span>
<span id="cb53-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s, e, k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries:</span>
<span id="cb53-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 범위 내의 값을 추출</span></span>
<span id="cb53-8">        subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr[s:e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb53-9"></span>
<span id="cb53-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># k보다 큰 값을 필터링</span></span>
<span id="cb53-11">        filtered <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [num <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> subset <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> k]</span>
<span id="cb53-12"></span>
<span id="cb53-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> filtered:</span>
<span id="cb53-14">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 필터링된 값 중 가장 작은 값 선택</span></span>
<span id="cb53-15">            answer.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(filtered))</span>
<span id="cb53-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb53-17">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># k보다 큰 값이 없는 경우 -1</span></span>
<span id="cb53-18">            answer.append(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb53-19"></span>
<span id="cb53-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
<section id="러스트-26" class="level3" data-number="6.5.1">
<h3 data-number="6.5.1" class="anchored" data-anchor-id="러스트-26"><span class="header-section-number">6.5.1</span> 러스트</h3>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb54-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> queries<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-3"></span>
<span id="cb54-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr[s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>e]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-6"></span>
<span id="cb54-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> min_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb54-8">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> k)</span>
<span id="cb54-9">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>min()</span>
<span id="cb54-10">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>copied()</span>
<span id="cb54-11">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap_or(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-12"></span>
<span id="cb54-13">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(min_value)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-15"></span>
<span id="cb54-16">    answer</span>
<span id="cb54-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb54-18"></span>
<span id="cb54-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb54-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-22"></span>
<span id="cb54-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>queries)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-24">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb54-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-7-반복문" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Day 7 반복문</h1>
<section id="수열-구간-쿼리-4" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="수열-구간-쿼리-4"><span class="header-section-number">7.1</span> 수열 구간 쿼리 4</h2>
<p>정수 배열&nbsp;<code>arr</code>와 2차원 정수 배열&nbsp;<code>queries</code>이 주어집니다.&nbsp;<code>queries</code>의 원소는 각각 하나의&nbsp;<code>query</code>를 나타내며,&nbsp;<code>[s, e, k]</code>&nbsp;꼴입니다.</p>
<p>각&nbsp;<code>query</code>마다 순서대로&nbsp;<code>s</code>&nbsp;≤&nbsp;<code>i</code>&nbsp;≤&nbsp;<code>e</code>인 모든&nbsp;<code>i</code>에 대해&nbsp;<code>i</code>가&nbsp;<code>k</code>의 배수이면&nbsp;<code>arr[i]</code>에 1을 더합니다.</p>
<p>위 규칙에 따라&nbsp;<code>queries</code>를 처리한 이후의&nbsp;<code>arr</code>를 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-26" class="level3" data-number="7.1.1">
<h3 data-number="7.1.1" class="anchored" data-anchor-id="파이썬-26"><span class="header-section-number">7.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb55-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], queries:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb55-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s, e, k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries:</span>
<span id="cb55-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(s, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb55-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb55-6">                arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb55-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> arr</span></code></pre></div>
</section>
<section id="러스트-27" class="level3" data-number="7.1.2">
<h3 data-number="7.1.2" class="anchored" data-anchor-id="러스트-27"><span class="header-section-number">7.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb56-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> queries<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-5">                arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-6">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb56-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb56-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb56-9">    arr</span>
<span id="cb56-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb56-11"></span>
<span id="cb56-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb56-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-15"></span>
<span id="cb56-16">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>queries)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb56-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-8-조건문-문자열" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> Day 8 조건문, 문자열</h1>
<section id="간단한-논리-연산" class="level2" data-number="8.1">
<h2 data-number="8.1" class="anchored" data-anchor-id="간단한-논리-연산"><span class="header-section-number">8.1</span> 간단한 논리 연산</h2>
<p>boolean 변수&nbsp;<code>x1</code>,&nbsp;<code>x2</code>,&nbsp;<code>x3</code>,&nbsp;<code>x4</code>가 매개변수로 주어질 때, 다음의 <img src="https://latex.codecogs.com/png.latex?(x1%E2%88%A8x2)%E2%88%A7(x3%E2%88%A8x4)"> 식의 true/false를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-27" class="level3" data-number="8.1.1">
<h3 data-number="8.1.1" class="anchored" data-anchor-id="파이썬-27"><span class="header-section-number">8.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(x1:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>, x2:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>, x3:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>, x4:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb57-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (x1 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> x2) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> (x3 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> x4)</span></code></pre></div>
</section>
<section id="러스트-28" class="level3" data-number="8.1.2">
<h3 data-number="8.1.2" class="anchored" data-anchor-id="러스트-28"><span class="header-section-number">8.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb58-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(x1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> x2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> x3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> x4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-2">    (x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> x2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> (x3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> x4)</span>
<span id="cb58-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb58-4"></span>
<span id="cb58-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb58-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-7">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result is: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb58-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="주사위-게임" class="level2" data-number="8.2">
<h2 data-number="8.2" class="anchored" data-anchor-id="주사위-게임"><span class="header-section-number">8.2</span> 주사위 게임</h2>
<p>1부터 6까지 숫자가 적힌 주사위가 네 개 있습니다. 네 주사위를 굴렸을 때 나온 숫자에 따라 다음과 같은 점수를 얻습니다.</p>
<ul>
<li>네 주사위에서 나온 숫자가 모두 p로 같다면 1111 × p점을 얻습니다.</li>
<li>세 주사위에서 나온 숫자가 p로 같고 나머지 다른 주사위에서 나온 숫자가 q(p ≠ q)라면 (10 × p + q)2&nbsp;점을 얻습니다.</li>
<li>주사위가 두 개씩 같은 값이 나오고, 나온 숫자를 각각 p, q(p ≠ q)라고 한다면 (p + q) × |p - q|점을 얻습니다.</li>
<li>어느 두 주사위에서 나온 숫자가 p로 같고 나머지 두 주사위에서 나온 숫자가 각각 p와 다른 q, r(q ≠ r)이라면 q × r점을 얻습니다.</li>
<li>네 주사위에 적힌 숫자가 모두 다르다면 나온 숫자 중 가장 작은 숫자 만큼의 점수를 얻습니다.</li>
</ul>
<p>네 주사위를 굴렸을 때 나온 숫자가 정수 매개변수&nbsp;<code>a</code>,&nbsp;<code>b</code>,&nbsp;<code>c</code>,&nbsp;<code>d</code>로 주어질 때, 얻는 점수를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-28" class="level3" data-number="8.2.1">
<h3 data-number="8.2.1" class="anchored" data-anchor-id="파이썬-28"><span class="header-section-number">8.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Counter</span>
<span id="cb59-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb59-3"></span>
<span id="cb59-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, c: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, d: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb59-5">    counts: Counter[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Counter([a, b, c, d])</span>
<span id="cb59-6"></span>
<span id="cb59-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조건 1: 네 주사위의 숫자가 모두 같은 경우</span></span>
<span id="cb59-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(counts) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb59-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1111</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a</span>
<span id="cb59-10"></span>
<span id="cb59-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조건 2: 세 주사위의 숫자가 같고 나머지 한 주사위의 숫자가 다른 경우</span></span>
<span id="cb59-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(counts) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb59-13">        p, q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts.most_common()</span>
<span id="cb59-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> p[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (숫자, 빈도)</span></span>
<span id="cb59-15">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb59-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 두 쌍의 주사위가 같은 경우</span></span>
<span id="cb59-17">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (p[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(p[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> q[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb59-18"></span>
<span id="cb59-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조건 3: 두 주사위가 같은 숫자를 가질 경우, 나머지 두 주사위가 각각 다른 숫자일 경우</span></span>
<span id="cb59-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(counts) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb59-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> counts:</span>
<span id="cb59-22">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> counts[key] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb59-23">                remaining: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [k <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> counts <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> counts[k] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb59-24">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> remaining[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> remaining[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb59-25"></span>
<span id="cb59-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조건 4: 모든 주사위의 숫자가 다를 경우</span></span>
<span id="cb59-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(counts) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:</span>
<span id="cb59-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(a, b, c, d)</span></code></pre></div>
</section>
<section id="러스트-29" class="level3" data-number="8.2.2">
<h3 data-number="8.2.2" class="anchored" data-anchor-id="러스트-29"><span class="header-section-number">8.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb60-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-2"></span>
<span id="cb60-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashMap::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>entry(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>or_insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-8"></span>
<span id="cb60-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Condition 1: All four dice have the same number</span></span>
<span id="cb60-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1111</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-13"></span>
<span id="cb60-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Condition 2: Three dice have the same number, and one is different</span></span>
<span id="cb60-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-16">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> pairs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-17">        pairs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_by(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cmp(a))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort by frequency in descending order</span></span>
<span id="cb60-18">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (p_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> p_count) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pairs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-19">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (q_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pairs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>p_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-21">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q_num) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q_num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-23">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (p_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q_num) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (p_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> q_num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>abs()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-24">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-26"></span>
<span id="cb60-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Condition 3: Two dice have the same number, and the other two are different</span></span>
<span id="cb60-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>value) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-31">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> remaining<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> counts</span>
<span id="cb60-32">                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb60-33">                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>v)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb60-34">                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> k)</span>
<span id="cb60-35">                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-36">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> remaining[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> remaining[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-37">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-38">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-39">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-40"></span>
<span id="cb60-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Condition 4: All four dice have different numbers</span></span>
<span id="cb60-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-43">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>min()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-44">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-45"></span>
<span id="cb60-46">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Default return value (shouldn't reach here)</span></span>
<span id="cb60-47"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb60-48"></span>
<span id="cb60-49"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb60-50">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-51">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The result is: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb60-52"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="글자-이어-붙여-문자열-만들기" class="level2" data-number="8.3">
<h2 data-number="8.3" class="anchored" data-anchor-id="글자-이어-붙여-문자열-만들기"><span class="header-section-number">8.3</span> 글자 이어 붙여 문자열 만들기</h2>
<p>문자열&nbsp;<code>my_string</code>과 정수 배열&nbsp;<code>index_list</code>가 매개변수로 주어집니다.&nbsp;<code>my_string</code>의&nbsp;<code>index_list</code>의 원소들에 해당하는 인덱스의 글자들을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-29" class="level3" data-number="8.3.1">
<h3 data-number="8.3.1" class="anchored" data-anchor-id="파이썬-29"><span class="header-section-number">8.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb61-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb61-2"></span>
<span id="cb61-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, index_list:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb61-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(my_string[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> index_list)</span>
<span id="cb61-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-30" class="level3" data-number="8.3.2">
<h3 data-number="8.3.2" class="anchored" data-anchor-id="러스트-30"><span class="header-section-number">8.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb62-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> index_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb62-2">    index_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb62-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>nth(i))</span>
<span id="cb62-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb62-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb62-6"></span>
<span id="cb62-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb62-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcdef"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> index_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>index_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb62-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="로-나눈-나머지" class="level2" data-number="8.4">
<h2 data-number="8.4" class="anchored" data-anchor-id="로-나눈-나머지"><span class="header-section-number">8.4</span> 9로 나눈 나머지</h2>
<p>음이 아닌 정수를 9로 나눈 나머지는 그 정수의 각 자리 숫자의 합을 9로 나눈 나머지와 같은 것이 알려져 있습니다. 이 사실을 이용하여 음이 아닌 정수가&nbsp;<strong>문자열</strong>&nbsp;<code>number</code>로 주어질 때, 이 정수를 9로 나눈 나머지를 return 하는 solution 함수를 작성해주세요.</p>
<section id="파이썬-30" class="level3" data-number="8.4.1">
<h3 data-number="8.4.1" class="anchored" data-anchor-id="파이썬-30"><span class="header-section-number">8.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(number:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb63-2">    digit_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(digit) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> digit <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> number)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 자리 숫자의 합을 구합니다.</span></span>
<span id="cb63-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> digit_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그 합을 9로 나눈 나머지를 반환합니다.</span></span></code></pre></div>
</section>
<section id="러스트-31" class="level3" data-number="8.4.2">
<h3 data-number="8.4.2" class="anchored" data-anchor-id="러스트-31"><span class="header-section-number">8.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb64-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> digit_sum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> number</span>
<span id="cb64-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb64-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_digit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb64-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)</span>
<span id="cb64-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-7"></span>
<span id="cb64-8">    digit_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span></span>
<span id="cb64-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb64-10"></span>
<span id="cb64-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb64-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb64-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-여러-번-뒤집기" class="level2" data-number="8.5">
<h2 data-number="8.5" class="anchored" data-anchor-id="문자열-여러-번-뒤집기"><span class="header-section-number">8.5</span> 문자열 여러 번 뒤집기</h2>
<p>문자열&nbsp;<code>my_string</code>과 이차원 정수 배열&nbsp;<code>queries</code>가 매개변수로 주어집니다.&nbsp;<code>queries</code>의 원소는 [s, e] 형태로,&nbsp;<code>my_string</code>의 인덱스 s부터 인덱스 e까지를 뒤집으라는 의미입니다.&nbsp;<code>my_string</code>에&nbsp;<code>queries</code>의 명령을 순서대로 처리한 후의 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-31" class="level3" data-number="8.5.1">
<h3 data-number="8.5.1" class="anchored" data-anchor-id="파이썬-31"><span class="header-section-number">8.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb65-2"></span>
<span id="cb65-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, queries:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb65-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 문자열을 리스트로 변환하여 수정 가능하게 만듭니다.</span></span>
<span id="cb65-5">    s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(my_string)</span>
<span id="cb65-6"></span>
<span id="cb65-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 쿼리 처리</span></span>
<span id="cb65-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s_idx, e_idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries:</span>
<span id="cb65-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># s_idx부터 e_idx까지 부분 문자열을 뒤집습니다.</span></span>
<span id="cb65-10">        s[s_idx:e_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s[s_idx:e_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb65-11"></span>
<span id="cb65-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트를 문자열로 변환하여 반환합니다.</span></span>
<span id="cb65-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(s)</span></code></pre></div>
</section>
<section id="러스트-32" class="level3" data-number="8.5.2">
<h3 data-number="8.5.2" class="anchored" data-anchor-id="러스트-32"><span class="header-section-number">8.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb66-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> queries<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb66-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-3"></span>
<span id="cb66-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>(s_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> e_idx) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb66-5">        s[s_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>e_idx]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>reverse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb66-7"></span>
<span id="cb66-8">    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb66-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb66-10"></span>
<span id="cb66-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb66-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rermgorpsam"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>queries)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb66-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-9-문자열" class="level1" data-number="9">
<h1 data-number="9"><span class="header-section-number">9</span> Day 9 문자열</h1>
<section id="배열-만들기-5" class="level2" data-number="9.1">
<h2 data-number="9.1" class="anchored" data-anchor-id="배열-만들기-5"><span class="header-section-number">9.1</span> 배열 만들기 5</h2>
<p>문자열 배열&nbsp;<code>intStrs</code>와 정수&nbsp;<code>k</code>,&nbsp;<code>s</code>,&nbsp;<code>l</code>가 주어집니다.&nbsp;<code>intStrs</code>의 원소는 숫자로 이루어져 있습니다.</p>
<p>배열&nbsp;<code>intStrs</code>의 각 원소마다&nbsp;<code>s</code>번 인덱스에서 시작하는 길이&nbsp;<code>l</code>짜리 부분 문자열을 잘라내 정수로 변환합니다. 이때 변환한 정수값이&nbsp;<code>k</code>보다 큰 값들을 담은 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-32" class="level3" data-number="9.1.1">
<h3 data-number="9.1.1" class="anchored" data-anchor-id="파이썬-32"><span class="header-section-number">9.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb67-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb67-2"></span>
<span id="cb67-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(intStrs: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, s: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, l: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb67-4">    answer: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb67-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> string <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> intStrs:</span>
<span id="cb67-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># s번 인덱스부터 l 길이만큼 부분 문자열을 잘라내고 정수로 변환</span></span>
<span id="cb67-7">        num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(string[s:s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>l])</span>
<span id="cb67-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환한 정수가 k보다 크면 answer 리스트에 추가</span></span>
<span id="cb67-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> k:</span>
<span id="cb67-10">            answer.append(num)</span>
<span id="cb67-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-33" class="level3" data-number="9.1.2">
<h3 data-number="9.1.2" class="anchored" data-anchor-id="러스트-33"><span class="header-section-number">9.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb68-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(int_strs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> l<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> string <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> int_strs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-4">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// s번 인덱스부터 l 길이만큼 부분 문자열을 잘라내고 정수로 변환</span></span>
<span id="cb68-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Ok</span>(num) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> string[s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>l]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-6">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 변환한 정수가 k보다 크면 answer 벡터에 추가</span></span>
<span id="cb68-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-8">                answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-9">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb68-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb68-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb68-12">    answer</span>
<span id="cb68-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb68-14"></span>
<span id="cb68-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb68-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> int_strs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb68-17">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12345"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-18">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"67890"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb68-19">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"54321"</span>)</span>
<span id="cb68-20">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">340</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-24"></span>
<span id="cb68-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(int_strs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> l)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-26">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb68-27"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="부분-문자열-이어-붙여-문자열-만들기" class="level2" data-number="9.2">
<h2 data-number="9.2" class="anchored" data-anchor-id="부분-문자열-이어-붙여-문자열-만들기"><span class="header-section-number">9.2</span> 부분 문자열 이어 붙여 문자열 만들기</h2>
<p>길이가 같은 문자열 배열&nbsp;<code>my_strings</code>와 이차원 정수 배열&nbsp;<code>parts</code>가 매개변수로 주어집니다.&nbsp;<code>parts[i]</code>는 [s, e] 형태로,&nbsp;<code>my_string[i]</code>의 인덱스 s부터 인덱스 e까지의 부분 문자열을 의미합니다. 각&nbsp;<code>my_strings</code>의 원소의&nbsp;<code>parts</code>에 해당하는 부분 문자열을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-33" class="level3" data-number="9.2.1">
<h3 data-number="9.2.1" class="anchored" data-anchor-id="파이썬-33"><span class="header-section-number">9.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb69-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List, Tuple</span>
<span id="cb69-2"></span>
<span id="cb69-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_strings: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], parts: List[Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb69-4">    answer: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb69-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(my_strings)):</span>
<span id="cb69-6">        s, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[i]</span>
<span id="cb69-7">        answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> my_strings[i][s:e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb69-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-34" class="level3" data-number="9.2.2">
<h3 data-number="9.2.2" class="anchored" data-anchor-id="러스트-34"><span class="header-section-number">9.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb70-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb70-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>my_strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb70-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> e) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-5">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push_str(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>my_strings[i][s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>e])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb70-7">    answer</span>
<span id="cb70-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb70-9"></span>
<span id="cb70-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb70-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_strings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb70-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"progressive"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb70-13">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hamburger"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb70-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hammer"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb70-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ahocorasick"</span>)</span>
<span id="cb70-16">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> parts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-18"></span>
<span id="cb70-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_strings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> parts)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb70-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-뒤의-n글자" class="level2" data-number="9.3">
<h2 data-number="9.3" class="anchored" data-anchor-id="문자열-뒤의-n글자"><span class="header-section-number">9.3</span> 문자열 뒤의 n글자</h2>
<p>문자열&nbsp;<code>my_string</code>과 정수&nbsp;<code>n</code>이 매개변수로 주어질 때,&nbsp;<code>my_string</code>의 뒤의&nbsp;<code>n</code>글자로 이루어진 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-34" class="level3" data-number="9.3.1">
<h3 data-number="9.3.1" class="anchored" data-anchor-id="파이썬-34"><span class="header-section-number">9.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb71-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb71-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n:]</span></code></pre></div>
</section>
<section id="러스트-35" class="level3" data-number="9.3.2">
<h3 data-number="9.3.2" class="anchored" data-anchor-id="러스트-35"><span class="header-section-number">9.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb72-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>rev()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>take(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>rev()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb72-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb72-4"></span>
<span id="cb72-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb72-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HelloWorld"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb72-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="접미사-배열" class="level2" data-number="9.4">
<h2 data-number="9.4" class="anchored" data-anchor-id="접미사-배열"><span class="header-section-number">9.4</span> 접미사 배열</h2>
<p>어떤 문자열에 대해서 접미사는 특정 인덱스부터 시작하는 문자열을 의미합니다. 예를 들어, “banana”의 모든 접미사는 “banana”, “anana”, “nana”, “ana”, “na”, “a”입니다. 문자열&nbsp;<code>my_string</code>이 매개변수로 주어질 때,&nbsp;<code>my_string</code>의 모든 접미사를 사전순으로 정렬한 문자열 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-35" class="level3" data-number="9.4.1">
<h3 data-number="9.4.1" class="anchored" data-anchor-id="파이썬-35"><span class="header-section-number">9.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb73-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb73-2"></span>
<span id="cb73-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb73-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모든 접미사 생성</span></span>
<span id="cb73-5">    suffixes: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [my_string[i:] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(my_string))]</span>
<span id="cb73-6"></span>
<span id="cb73-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 접미사들을 사전순으로 정렬</span></span>
<span id="cb73-8">    answer: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(suffixes)</span>
<span id="cb73-9"></span>
<span id="cb73-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-36" class="level3" data-number="9.4.2">
<h3 data-number="9.4.2" class="anchored" data-anchor-id="러스트-36"><span class="header-section-number">9.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb74-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> suffixes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-3"></span>
<span id="cb74-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 모든 접미사 생성</span></span>
<span id="cb74-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-6">        suffixes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(my_string[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb74-8"></span>
<span id="cb74-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 접미사들을 사전순으로 정렬</span></span>
<span id="cb74-10">    suffixes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-11"></span>
<span id="cb74-12">    suffixes</span>
<span id="cb74-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb74-14"></span>
<span id="cb74-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb74-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-18">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb74-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="접미사인지-확인하기" class="level2" data-number="9.5">
<h2 data-number="9.5" class="anchored" data-anchor-id="접미사인지-확인하기"><span class="header-section-number">9.5</span> 접미사인지 확인하기</h2>
<p>어떤 문자열에 대해서 접미사는 특정 인덱스부터 시작하는 문자열을 의미합니다. 예를 들어, “banana”의 모든 접미사는 “banana”, “anana”, “nana”, “ana”, “na”, “a”입니다. 문자열&nbsp;<code>my_string</code>과&nbsp;<code>is_suffix</code>가 주어질 때,&nbsp;<code>is_suffix</code>가&nbsp;<code>my_string</code>의 접미사라면 1을, 아니면 0을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-36" class="level3" data-number="9.5.1">
<h3 data-number="9.5.1" class="anchored" data-anchor-id="파이썬-36"><span class="header-section-number">9.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb75-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, is_suffix: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb75-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># my_string이 is_suffix로 끝나는지 확인</span></span>
<span id="cb75-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> my_string.endswith(is_suffix):</span>
<span id="cb75-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb75-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb75-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-37" class="level3" data-number="9.5.2">
<h3 data-number="9.5.2" class="anchored" data-anchor-id="러스트-37"><span class="header-section-number">9.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb76-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> is_suffix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb76-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// my_string이 is_suffix로 끝나는지 확인</span></span>
<span id="cb76-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>ends_with(is_suffix) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb76-4">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb76-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb76-6">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb76-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb76-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb76-9"></span>
<span id="cb76-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb76-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> is_suffix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> is_suffix)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb76-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-10-문자열" class="level1" data-number="10">
<h1 data-number="10"><span class="header-section-number">10</span> Day 10 문자열</h1>
<section id="문자열의-앞-n글자" class="level2" data-number="10.1">
<h2 data-number="10.1" class="anchored" data-anchor-id="문자열의-앞-n글자"><span class="header-section-number">10.1</span> 문자열의 앞 n글자</h2>
<p>문자열&nbsp;<code>my_string</code>과 정수&nbsp;<code>n</code>이 매개변수로 주어질 때,&nbsp;<code>my_string</code>의 앞의&nbsp;<code>n</code>글자로 이루어진 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-37" class="level3" data-number="10.1.1">
<h3 data-number="10.1.1" class="anchored" data-anchor-id="파이썬-37"><span class="header-section-number">10.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb77-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb77-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string[:n]</span></code></pre></div>
</section>
<section id="러스트-38" class="level3" data-number="10.1.2">
<h3 data-number="10.1.2" class="anchored" data-anchor-id="러스트-38"><span class="header-section-number">10.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb78-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb78-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>take(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb78-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb78-4"></span>
<span id="cb78-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb78-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HelloWorld"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb78-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb78-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb78-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb78-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="접두사인지-확인하기" class="level2" data-number="10.2">
<h2 data-number="10.2" class="anchored" data-anchor-id="접두사인지-확인하기"><span class="header-section-number">10.2</span> 접두사인지 확인하기</h2>
<p>어떤 문자열에 대해서 접두사는 특정 인덱스까지의 문자열을 의미합니다. 예를 들어, “banana”의 모든 접두사는 “b”, “ba”, “ban”, “bana”, “banan”, “banana”입니다. 문자열 my_string과 is_prefix가 주어질 때, is_prefix가 my_string의 접두사라면 1을, 아니면 0을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-38" class="level3" data-number="10.2.1">
<h3 data-number="10.2.1" class="anchored" data-anchor-id="파이썬-38"><span class="header-section-number">10.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb79" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb79-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, is_prefix:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb79-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(my_string.startswith(is_prefix))</span></code></pre></div>
</section>
<section id="러스트-39" class="level3" data-number="10.2.2">
<h3 data-number="10.2.2" class="anchored" data-anchor-id="러스트-39"><span class="header-section-number">10.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb80-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> is_prefix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb80-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>starts_with(is_prefix) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb80-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb80-4"></span>
<span id="cb80-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb80-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, world!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb80-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb80-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(test_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> test_prefix)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb80-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Is '{}' a prefix of '{}'? {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> test_prefix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> test_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb80-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-뒤집기" class="level2" data-number="10.3">
<h2 data-number="10.3" class="anchored" data-anchor-id="문자열-뒤집기"><span class="header-section-number">10.3</span> 문자열 뒤집기</h2>
<p>문자열 my_string과 정수 s, e가 매개변수로 주어질 때, my_string에서 인덱스 s부터 인덱스 e까지를 뒤집은 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-39" class="level3" data-number="10.3.1">
<h3 data-number="10.3.1" class="anchored" data-anchor-id="파이썬-39"><span class="header-section-number">10.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb81" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb81-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, s:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, e:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb81-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 문자열을 리스트로 변환</span></span>
<span id="cb81-3">    chars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(my_string)</span>
<span id="cb81-4"></span>
<span id="cb81-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># s부터 e까지의 부분을 뒤집기</span></span>
<span id="cb81-6">    chars[s:e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chars[s:e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb81-7"></span>
<span id="cb81-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트를 다시 문자열로 변환하여 반환</span></span>
<span id="cb81-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(chars)</span></code></pre></div>
</section>
<section id="러스트-40" class="level3" data-number="10.3.2">
<h3 data-number="10.3.2" class="anchored" data-anchor-id="러스트-40"><span class="header-section-number">10.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb82" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb82-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb82-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb82-3"></span>
<span id="cb82-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> slice <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> chars[s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>e]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb82-5">    slice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>reverse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb82-6"></span>
<span id="cb82-7">    chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb82-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb82-9"></span>
<span id="cb82-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb82-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcde"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb82-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb82-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="세로-읽기" class="level2" data-number="10.4">
<h2 data-number="10.4" class="anchored" data-anchor-id="세로-읽기"><span class="header-section-number">10.4</span> 세로 읽기</h2>
<p>문자열 my_string과 두 정수 m, c가 주어집니다. my_string을 한 줄에 m 글자씩 가로로 적었을 때 왼쪽부터 세로로 c번째 열에 적힌 글자들을 문자열로 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-40" class="level3" data-number="10.4.1">
<h3 data-number="10.4.1" class="anchored" data-anchor-id="파이썬-40"><span class="header-section-number">10.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb83" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb83-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, m: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, c: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb83-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과를 저장할 문자열 초기화</span></span>
<span id="cb83-3">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb83-4"></span>
<span id="cb83-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># c번째 열의 문자를 세로로 읽기</span></span>
<span id="cb83-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(my_string), m):</span>
<span id="cb83-7">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> my_string[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb83-8"></span>
<span id="cb83-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-41" class="level3" data-number="10.4.2">
<h3 data-number="10.4.2" class="anchored" data-anchor-id="러스트-41"><span class="header-section-number">10.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb84" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb84-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb84-2">    my_string</span>
<span id="cb84-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb84-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>skip(c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb84-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(m)</span>
<span id="cb84-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb84-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb84-8"></span>
<span id="cb84-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb84-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ihrhbakrfpndopljhygc"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb84-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="qr-code" class="level2" data-number="10.5">
<h2 data-number="10.5" class="anchored" data-anchor-id="qr-code"><span class="header-section-number">10.5</span> qr code</h2>
<p>두 정수 q, r과 문자열 code가 주어질 때, code의 각 인덱스를 q로 나누었을 때 나머지가 r인 위치의 문자를 앞에서부터 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-41" class="level3" data-number="10.5.1">
<h3 data-number="10.5.1" class="anchored" data-anchor-id="파이썬-41"><span class="header-section-number">10.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb85" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb85-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(q: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, r: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, code: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb85-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(code[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(code)) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> r)</span></code></pre></div>
</section>
<section id="러스트-42" class="level3" data-number="10.5.2">
<h3 data-number="10.5.2" class="anchored" data-anchor-id="러스트-42"><span class="header-section-number">10.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb86" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb86-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb86-2">    code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb86-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate()</span>
<span id="cb86-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> r)</span>
<span id="cb86-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c)</span>
<span id="cb86-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb86-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb86-8"></span>
<span id="cb86-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb86-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"qjnwezgrpirldywt"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb86-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb86-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-11-리스트-배열" class="level1" data-number="11">
<h1 data-number="11"><span class="header-section-number">11</span> Day 11 리스트 (배열)</h1>
<section id="문자-개수-세기" class="level2" data-number="11.1">
<h2 data-number="11.1" class="anchored" data-anchor-id="문자-개수-세기"><span class="header-section-number">11.1</span> 문자 개수 세기</h2>
<p>알파벳 대소문자로만 이루어진 문자열 my_string이 주어질 때, my_string에서 ’A’의 개수, my_string에서 ’B’의 개수,…, my_string에서 ’Z’의 개수, my_string에서 ’a’의 개수, my_string에서 ’b’의 개수,…, my_string에서 ’z’의 개수를 순서대로 담은 길이 52의 정수 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-42" class="level3" data-number="11.1.1">
<h3 data-number="11.1.1" class="anchored" data-anchor-id="파이썬-42"><span class="header-section-number">11.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb87" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb87-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb87-2"></span>
<span id="cb87-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb87-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 52개의 0으로 초기화된 리스트 생성</span></span>
<span id="cb87-5"></span>
<span id="cb87-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string:</span>
<span id="cb87-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char.isupper():</span>
<span id="cb87-8">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 대문자인 경우</span></span>
<span id="cb87-9">            index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(char) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span>)</span>
<span id="cb87-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> char.islower():</span>
<span id="cb87-11">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 소문자인 경우</span></span>
<span id="cb87-12">            index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(char) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span></span>
<span id="cb87-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb87-14">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 알파벳이 아닌 경우 (이 문제에서는 발생하지 않지만, 안전성을 위해 추가)</span></span>
<span id="cb87-15">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb87-16"></span>
<span id="cb87-17">        answer[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb87-18"></span>
<span id="cb87-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-43" class="level3" data-number="11.1.2">
<h3 data-number="11.1.2" class="anchored" data-anchor-id="러스트-43"><span class="header-section-number">11.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb88" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb88-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb88-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize a vector with 52 zeros</span></span>
<span id="cb88-3"></span>
<span id="cb88-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb88-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_ascii_uppercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb88-6">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// For uppercase letters</span></span>
<span id="cb88-7">            (<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">b'A'</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span></span>
<span id="cb88-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_ascii_lowercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb88-9">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// For lowercase letters</span></span>
<span id="cb88-10">            (<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">u8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">b'a'</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span></span>
<span id="cb88-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb88-12">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// For non-alphabetic characters (not expected in this problem, but added for safety)</span></span>
<span id="cb88-13">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb88-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb88-15"></span>
<span id="cb88-16">        answer[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb88-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb88-18"></span>
<span id="cb88-19">    answer</span>
<span id="cb88-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb88-21"></span>
<span id="cb88-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb88-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust is awesome!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb88-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(test_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb88-25">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result for '{}': {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> test_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb88-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-만들기-1" class="level2" data-number="11.2">
<h2 data-number="11.2" class="anchored" data-anchor-id="배열-만들기-1"><span class="header-section-number">11.2</span> 배열 만들기 1</h2>
<p>정수 n과 k가 주어졌을 때, 1 이상 n이하의 정수 중에서 k의 배수를 오름차순으로 저장한 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-43" class="level3" data-number="11.2.1">
<h3 data-number="11.2.1" class="anchored" data-anchor-id="파이썬-43"><span class="header-section-number">11.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb89" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb89-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tpying <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb89-2"></span>
<span id="cb89-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb89-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(k, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, k)]</span></code></pre></div>
</section>
<section id="러스트-44" class="level3" data-number="11.2.2">
<h3 data-number="11.2.2" class="anchored" data-anchor-id="러스트-44"><span class="header-section-number">11.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb90" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb90-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb90-2">    (k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(k <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb90-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb90-4"></span>
<span id="cb90-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb90-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb90-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb90-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb90-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result for n={} and k={}: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb90-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="글자-지우기" class="level2" data-number="11.3">
<h2 data-number="11.3" class="anchored" data-anchor-id="글자-지우기"><span class="header-section-number">11.3</span> 글자 지우기</h2>
<p>문자열 my_string과 정수 배열 indices가 주어질 때, my_string에서 indices의 원소에 해당하는 인덱스의 글자를 지우고 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-44" class="level3" data-number="11.3.1">
<h3 data-number="11.3.1" class="anchored" data-anchor-id="파이썬-44"><span class="header-section-number">11.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb91" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb91-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb91-2"></span>
<span id="cb91-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, indices: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb91-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 문자열을 리스트로 변환</span></span>
<span id="cb91-5">    chars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(my_string)</span>
<span id="cb91-6"></span>
<span id="cb91-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># indices의 원소에 해당하는 인덱스의 문자를 빈 문자로 대체</span></span>
<span id="cb91-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> index <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> indices:</span>
<span id="cb91-9">        chars[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb91-10"></span>
<span id="cb91-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 리스트를 다시 문자열로 결합</span></span>
<span id="cb91-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(chars)</span></code></pre></div>
</section>
<section id="러스트-45" class="level3" data-number="11.3.2">
<h3 data-number="11.3.2" class="anchored" data-anchor-id="러스트-45"><span class="header-section-number">11.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb92" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb92-1">from typing import List</span>
<span id="cb92-2"></span>
<span id="cb92-3">def solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> List[int]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb92-4">    # 문자열을 리스트로 변환</span>
<span id="cb92-5">    chars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> list(my_string)</span>
<span id="cb92-6"></span>
<span id="cb92-7">    # indices의 원소에 해당하는 인덱스의 문자를 빈 문자로 대체</span>
<span id="cb92-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> index <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb92-9">        chars[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb92-10"></span>
<span id="cb92-11">    # 리스트를 다시 문자열로 결합</span>
<span id="cb92-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(chars)</span></code></pre></div>
</section>
</section>
<section id="카운트-다운" class="level2" data-number="11.4">
<h2 data-number="11.4" class="anchored" data-anchor-id="카운트-다운"><span class="header-section-number">11.4</span> 카운트 다운</h2>
<p>정수 start_num와 end_num가 주어질 때, start_num에서 end_num까지 1씩 감소하는 수들을 차례로 담은 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-45" class="level3" data-number="11.4.1">
<h3 data-number="11.4.1" class="anchored" data-anchor-id="파이썬-45"><span class="header-section-number">11.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb93" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb93-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb93-2"></span>
<span id="cb93-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(start_num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, end_num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb93-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(start_num, end_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</section>
<section id="러스트-46" class="level3" data-number="11.4.2">
<h3 data-number="11.4.2" class="anchored" data-anchor-id="러스트-46"><span class="header-section-number">11.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb94" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb94-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(start_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> end_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb94-2">    (end_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>start_num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>rev()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb94-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb94-4"></span>
<span id="cb94-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb94-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> start_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb94-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> end_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb94-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(start_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> end_num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb94-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result from {} to {}: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> start_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> end_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb94-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="가까운-1-찾기" class="level2" data-number="11.5">
<h2 data-number="11.5" class="anchored" data-anchor-id="가까운-1-찾기"><span class="header-section-number">11.5</span> 가까운 1 찾기</h2>
<p>정수 배열 arr가 주어집니다. 이때 arr의 원소는 1 또는 0입니다. 정수 idx가 주어졌을 때, idx보다 크면서 배열의 값이 1인 가장 작은 인덱스를 찾아서 반환하는 solution 함수를 완성해 주세요.만약 그러한 인덱스가 없다면 -1을 반환합니다.</p>
<section id="파이썬-46" class="level3" data-number="11.5.1">
<h3 data-number="11.5.1" class="anchored" data-anchor-id="파이썬-46"><span class="header-section-number">11.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb95" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb95-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb95-2"></span>
<span id="cb95-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], idx:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb95-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(idx, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr)):</span>
<span id="cb95-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb95-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i</span>
<span id="cb95-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-47" class="level3" data-number="11.5.2">
<h3 data-number="11.5.2" class="anchored" data-anchor-id="러스트-47"><span class="header-section-number">11.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb96" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb96-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb96-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>value) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>skip(idx) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb96-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb96-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb96-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb96-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb96-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb96-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb96-9"></span>
<span id="cb96-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb96-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb96-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb96-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> idx)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb96-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb96-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-12-리스트-배열" class="level1" data-number="12">
<h1 data-number="12"><span class="header-section-number">12</span> Day 12 리스트 (배열)</h1>
<section id="리스트-자르기" class="level2" data-number="12.1">
<h2 data-number="12.1" class="anchored" data-anchor-id="리스트-자르기"><span class="header-section-number">12.1</span> 리스트 자르기</h2>
<p>정수 n과 정수 3개가 담긴 리스트 slicer 그리고 정수 여러 개가 담긴 리스트 num_list가 주어집니다. slicer에 담긴 정수를 차례대로 a, b, c라고 할 때, n에 따라 다음과 같이 num_list를 슬라이싱 하려고 합니다.</p>
<ul>
<li>n = 1 : num_list의 0번 인덱스부터 b번 인덱스까지</li>
<li>n = 2 : num_list의 a번 인덱스부터 마지막 인덱스까지</li>
<li>n = 3 : num_list의 a번 인덱스부터 b번 인덱스까지</li>
<li>n = 4 : num_list의 a번 인덱스부터 b번 인덱스까지 c 간격으로</li>
</ul>
<p>올바르게 슬라이싱한 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-47" class="level3" data-number="12.1.1">
<h3 data-number="12.1.1" class="anchored" data-anchor-id="파이썬-47"><span class="header-section-number">12.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb97" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb97-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb97-2"></span>
<span id="cb97-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, slicer: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb97-4">    a, b, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> slicer</span>
<span id="cb97-5"></span>
<span id="cb97-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb97-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[:b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb97-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb97-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[a:]</span>
<span id="cb97-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb97-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[a:b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb97-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:</span>
<span id="cb97-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[a:b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:c]</span></code></pre></div>
</section>
<section id="러스트-48" class="level3" data-number="12.1.2">
<h3 data-number="12.1.2" class="anchored" data-anchor-id="러스트-48"><span class="header-section-number">12.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb98" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb98-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> slicer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb98-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> c) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (slicer[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> slicer[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> slicer[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-3"></span>
<span id="cb98-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb98-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> num_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>b]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb98-6">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> num_list[a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb98-7">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> num_list[a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>b]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb98-8">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> num_list[a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>b]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(c)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb98-9">        _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Handle unexpected n values</span></span>
<span id="cb98-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb98-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb98-12"></span>
<span id="cb98-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb98-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> slicer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-16"></span>
<span id="cb98-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n = 1: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>slicer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num_list))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb98-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="첫-번째로-나오는-음수" class="level2" data-number="12.2">
<h2 data-number="12.2" class="anchored" data-anchor-id="첫-번째로-나오는-음수"><span class="header-section-number">12.2</span> 첫 번째로 나오는 음수</h2>
<p>정수 리스트 num_list가 주어질 때, 첫 번째로 나오는 음수의 인덱스를 return하도록 solution 함수를 완성해주세요. 음수가 없다면 -1을 return합니다.</p>
<section id="파이썬-48" class="level3" data-number="12.2.1">
<h3 data-number="12.2.1" class="anchored" data-anchor-id="파이썬-48"><span class="header-section-number">12.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb99" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb99-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb99-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb99-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(num_list):</span>
<span id="cb99-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb99-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i</span>
<span id="cb99-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-49" class="level3" data-number="12.2.2">
<h3 data-number="12.2.2" class="anchored" data-anchor-id="러스트-49"><span class="header-section-number">12.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb100" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb100-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb100-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb100-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb100-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb100-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb100-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb100-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb100-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb100-9"></span>
<span id="cb100-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb100-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb100-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num_list))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb100-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-만들기-3" class="level2" data-number="12.3">
<h2 data-number="12.3" class="anchored" data-anchor-id="배열-만들기-3"><span class="header-section-number">12.3</span> 배열 만들기 3</h2>
<p>정수 배열 arr와 2개의 구간이 담긴 배열 intervals가 주어집니다.</p>
<p>intervals는 항상 <code>[[a1, b1], [a2, b2]]</code>의 꼴로 주어지며 각 구간은 닫힌 구간입니다. 닫힌 구간은 양 끝값과 그 사이의 값을 모두 포함하는 구간을 의미합니다.</p>
<p>이때 배열 arr의 첫 번째 구간에 해당하는 배열과 두 번째 구간에 해당하는 배열을 앞뒤로 붙여 새로운 배열을 만들어 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-49" class="level3" data-number="12.3.1">
<h3 data-number="12.3.1" class="anchored" data-anchor-id="파이썬-49"><span class="header-section-number">12.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb101" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb101-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb101-2"></span>
<span id="cb101-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], intervals: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb101-4">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb101-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> interval <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> intervals:</span>
<span id="cb101-6">        start, end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> interval</span>
<span id="cb101-7">        result.extend(arr[start:end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb101-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-50" class="level3" data-number="12.3.2">
<h3 data-number="12.3.2" class="anchored" data-anchor-id="러스트-50"><span class="header-section-number">12.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb102" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb102-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> intervals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb102-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> interval <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb102-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> interval[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-6">        result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend_from_slice(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr[start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>end])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb102-8">    result</span>
<span id="cb102-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb102-10"></span>
<span id="cb102-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb102-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> intervals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>intervals)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb102-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="의-영역" class="level2" data-number="12.4">
<h2 data-number="12.4" class="anchored" data-anchor-id="의-영역"><span class="header-section-number">12.4</span> 2의 영역</h2>
<p>정수 배열 arr가 주어집니다. 배열 안의 2가 모두 포함된 가장 작은 연속된 부분 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<p>단, arr에 2가 없는 경우 <code>[-1]</code>을 return 합니다.</p>
<section id="파이썬-50" class="level3" data-number="12.4.1">
<h3 data-number="12.4.1" class="anchored" data-anchor-id="파이썬-50"><span class="header-section-number">12.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb103" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb103-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb103-2"></span>
<span id="cb103-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb103-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2의 위치를 모두 찾습니다</span></span>
<span id="cb103-5">    indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(arr) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb103-6"></span>
<span id="cb103-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2가 없는 경우 [-1]을 반환합니다</span></span>
<span id="cb103-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> indices:</span>
<span id="cb103-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb103-10"></span>
<span id="cb103-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 첫 번째 2와 마지막 2의 인덱스를 찾습니다</span></span>
<span id="cb103-12">    start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> indices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb103-13">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> indices[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb103-14"></span>
<span id="cb103-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 해당 범위의 부분 배열을 반환합니다</span></span>
<span id="cb103-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> arr[start:end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</section>
<section id="러스트-51" class="level3" data-number="12.4.2">
<h3 data-number="12.4.2" class="anchored" data-anchor-id="러스트-51"><span class="header-section-number">12.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb104" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb104-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb104-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 2의 위치를 모두 찾습니다</span></span>
<span id="cb104-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb104-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate()</span>
<span id="cb104-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>x)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb104-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> i)</span>
<span id="cb104-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-8"></span>
<span id="cb104-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 2가 없는 경우 [-1]을 반환합니다</span></span>
<span id="cb104-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb104-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb104-13"></span>
<span id="cb104-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 첫 번째 2와 마지막 2의 인덱스를 찾습니다</span></span>
<span id="cb104-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> indices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> indices[indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-17"></span>
<span id="cb104-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 해당 범위의 부분 배열을 반환합니다</span></span>
<span id="cb104-19">    arr[start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>end]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()</span>
<span id="cb104-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb104-21"></span>
<span id="cb104-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb104-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-25">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb104-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-조각하기" class="level2" data-number="12.5">
<h2 data-number="12.5" class="anchored" data-anchor-id="배열-조각하기"><span class="header-section-number">12.5</span> 배열 조각하기</h2>
<p>정수 배열 arr와 query가 주어집니다.</p>
<p>query를 순회하면서 다음 작업을 반복합니다.</p>
<ul>
<li>짝수 인덱스에서는 arr에서 <code>query[i]</code>번 인덱스를 제외하고 배열의 <code>query[i]</code>번 인덱스 뒷부분을 잘라서 버립니다.</li>
<li>홀수 인덱스에서는 arr에서 <code>query[i]</code>번 인덱스는 제외하고 배열의 <code>query[i]</code>번 인덱스 앞부분을 잘라서 버립니다.</li>
</ul>
<p>위 작업을 마친 후 남은 arr의 부분 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-51" class="level3" data-number="12.5.1">
<h3 data-number="12.5.1" class="anchored" data-anchor-id="파이썬-51"><span class="header-section-number">12.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb105" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb105-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb105-2"></span>
<span id="cb105-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], query: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb105-4">    start, end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr)</span>
<span id="cb105-5"></span>
<span id="cb105-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, q <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(query):</span>
<span id="cb105-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 짝수 인덱스</span></span>
<span id="cb105-8">            end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb105-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 홀수 인덱스</span></span>
<span id="cb105-10">            start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> q</span>
<span id="cb105-11"></span>
<span id="cb105-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> arr[start:end]</span></code></pre></div>
</section>
<section id="러스트-52" class="level3" data-number="12.5.2">
<h3 data-number="12.5.2" class="anchored" data-anchor-id="러스트-52"><span class="header-section-number">12.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb106" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb106-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> query<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb106-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-4"></span>
<span id="cb106-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>q) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> query<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb106-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 짝수 인덱스</span></span>
<span id="cb106-7">            end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 홀수 인덱스</span></span>
<span id="cb106-9">            start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> q <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb106-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb106-12"></span>
<span id="cb106-13">    arr[start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>end]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()</span>
<span id="cb106-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb106-15"></span>
<span id="cb106-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb106-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>query)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb106-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-13-리스트-배열" class="level1" data-number="13">
<h1 data-number="13"><span class="header-section-number">13</span> Day 13 리스트 (배열)</h1>
<section id="n-번째-원소부터" class="level2" data-number="13.1">
<h2 data-number="13.1" class="anchored" data-anchor-id="n-번째-원소부터"><span class="header-section-number">13.1</span> n 번째 원소부터</h2>
<p>정수 리스트 num_list와 정수 n이 주어질 때, n 번째 원소부터 마지막 원소까지의 모든 원소를 담은 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-52" class="level3" data-number="13.1.1">
<h3 data-number="13.1.1" class="anchored" data-anchor-id="파이썬-52"><span class="header-section-number">13.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb107" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb107-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb107-2"></span>
<span id="cb107-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb107-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]</span></code></pre></div>
</section>
<section id="러스트-53" class="level3" data-number="13.1.2">
<h3 data-number="13.1.2" class="anchored" data-anchor-id="러스트-53"><span class="header-section-number">13.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb108" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb108-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>[<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb108-2">    num_list[n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()</span>
<span id="cb108-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb108-4"></span>
<span id="cb108-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb108-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb108-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb108-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb108-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb108-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="순서-바꾸기" class="level2" data-number="13.2">
<h2 data-number="13.2" class="anchored" data-anchor-id="순서-바꾸기"><span class="header-section-number">13.2</span> 순서 바꾸기</h2>
<p>정수 리스트 num_list와 정수 n이 주어질 때, num_list를 n 번째 원소 이후의 원소들과 n 번째까지의 원소들로 나눠 n 번째 원소 이후의 원소들을 n 번째까지의 원소들 앞에 붙인 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-53" class="level3" data-number="13.2.1">
<h3 data-number="13.2.1" class="anchored" data-anchor-id="파이썬-53"><span class="header-section-number">13.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb109" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb109-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb109-2"></span>
<span id="cb109-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb109-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[n:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num_list[:n]</span></code></pre></div>
</section>
<section id="러스트-54" class="level3" data-number="13.2.2">
<h3 data-number="13.2.2" class="anchored" data-anchor-id="러스트-54"><span class="header-section-number">13.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb110" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb110-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb110-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list[n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb110-3">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend_from_slice(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb110-4">    result</span>
<span id="cb110-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb110-6"></span>
<span id="cb110-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb110-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb110-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb110-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb110-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb110-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="왼쪽-오른쪽" class="level2" data-number="13.3">
<h2 data-number="13.3" class="anchored" data-anchor-id="왼쪽-오른쪽"><span class="header-section-number">13.3</span> 왼쪽 오른쪽</h2>
<p>문자열 리스트 str_list에는 “u”, “d”, “l”, “r” 네 개의 문자열이 여러 개 저장되어 있습니다. str_list에서 “l”과 “r” 중 먼저 나오는 문자열이 “l”이라면 해당 문자열을 기준으로 왼쪽에 있는 문자열들을 순서대로 담은 리스트를, 먼저 나오는 문자열이 “r”이라면 해당 문자열을 기준으로 오른쪽에 있는 문자열들을 순서대로 담은 리스트를 return하도록 solution 함수를 완성해주세요. “l”이나 “r”이 없다면 빈 리스트를 return합니다.</p>
<section id="파이썬-54" class="level3" data-number="13.3.1">
<h3 data-number="13.3.1" class="anchored" data-anchor-id="파이썬-54"><span class="header-section-number">13.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb111" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb111-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb111-2"></span>
<span id="cb111-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(str_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb111-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(str_list):</span>
<span id="cb111-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>:</span>
<span id="cb111-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> str_list[:i]</span>
<span id="cb111-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>:</span>
<span id="cb111-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> str_list[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]</span>
<span id="cb111-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> []</span></code></pre></div>
</section>
<section id="러스트-55" class="level3" data-number="13.3.2">
<h3 data-number="13.3.2" class="anchored" data-anchor-id="러스트-55"><span class="header-section-number">13.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb112" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb112-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb112-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> str_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb112-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb112-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> str_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb112-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb112-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> str_list[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb112-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb112-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb112-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()</span>
<span id="cb112-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb112-11"></span>
<span id="cb112-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb112-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb112-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"u"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb112-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"u"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb112-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb112-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb112-18">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb112-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb112-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb112-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="n번째-원소까지" class="level2" data-number="13.4">
<h2 data-number="13.4" class="anchored" data-anchor-id="n번째-원소까지"><span class="header-section-number">13.4</span> n번째 원소까지</h2>
<p>정수 리스트 num_list와 정수 n이 주어질 때, num_list의 첫 번째 원소부터 n 번째 원소까지의 모든 원소를 담은 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-55" class="level3" data-number="13.4.1">
<h3 data-number="13.4.1" class="anchored" data-anchor-id="파이썬-55"><span class="header-section-number">13.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb113" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb113-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb113-2"></span>
<span id="cb113-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb113-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[:n]</span></code></pre></div>
</section>
<section id="러스트-56" class="level3" data-number="13.4.2">
<h3 data-number="13.4.2" class="anchored" data-anchor-id="러스트-56"><span class="header-section-number">13.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb114" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb114-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb114-2">    num_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec()</span>
<span id="cb114-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb114-4"></span>
<span id="cb114-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb114-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb114-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb114-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb114-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb114-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="n개-간격의-원소들" class="level2" data-number="13.5">
<h2 data-number="13.5" class="anchored" data-anchor-id="n개-간격의-원소들"><span class="header-section-number">13.5</span> n개 간격의 원소들</h2>
<p>정수 리스트 num_list와 정수 n이 주어질 때, num_list의 첫 번째 원소부터 마지막 원소까지 n개 간격으로 저장되어있는 원소들을 차례로 담은 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-56" class="level3" data-number="13.5.1">
<h3 data-number="13.5.1" class="anchored" data-anchor-id="파이썬-56"><span class="header-section-number">13.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb115" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb115-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb115-2"></span>
<span id="cb115-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb115-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num_list[::n]</span></code></pre></div>
</section>
<section id="러스트-57" class="level3" data-number="13.5.2">
<h3 data-number="13.5.2" class="anchored" data-anchor-id="러스트-57"><span class="header-section-number">13.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb116" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb116-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb116-2">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>cloned()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb116-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb116-4"></span>
<span id="cb116-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb116-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb116-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb116-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb116-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb116-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-14-리스트-배열" class="level1" data-number="14">
<h1 data-number="14"><span class="header-section-number">14</span> Day 14 리스트 (배열)</h1>
<section id="홀수-vs-짝수" class="level2" data-number="14.1">
<h2 data-number="14.1" class="anchored" data-anchor-id="홀수-vs-짝수"><span class="header-section-number">14.1</span> 홀수 vs 짝수</h2>
<p>정수 리스트 num_list가 주어집니다. 가장 첫 번째 원소를 1번 원소라고 할 때, 홀수 번째 원소들의 합과 짝수 번째 원소들의 합 중 큰 값을 return 하도록 solution 함수를 완성해주세요. 두 값이 같을 경우 그 값을 return합니다.</p>
<section id="파이썬-57" class="level3" data-number="14.1.1">
<h3 data-number="14.1.1" class="anchored" data-anchor-id="파이썬-57"><span class="header-section-number">14.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb117" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb117-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb117-2"></span>
<span id="cb117-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb117-4">    odd_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(num_list[::<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 홀수 번째 원소들의 합</span></span>
<span id="cb117-5">    even_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(num_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>::<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 짝수 번째 원소들의 합</span></span>
<span id="cb117-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(odd_sum, even_sum)</span></code></pre></div>
</section>
<section id="러스트-58" class="level3" data-number="14.1.2">
<h3 data-number="14.1.2" class="anchored" data-anchor-id="러스트-58"><span class="header-section-number">14.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb118" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb118-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb118-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> odd_sum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb118-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> even_sum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>skip(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb118-4">    odd_sum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max(even_sum)</span>
<span id="cb118-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb118-6"></span>
<span id="cb118-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb118-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb118-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb118-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb118-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="명씩" class="level2" data-number="14.2">
<h2 data-number="14.2" class="anchored" data-anchor-id="명씩"><span class="header-section-number">14.2</span> 5명씩</h2>
<p>최대 5명씩 탑승가능한 놀이기구를 타기 위해 줄을 서있는 사람들의 이름이 담긴 문자열 리스트 names가 주어질 때, 앞에서 부터 5명씩 묶은 그룹의 가장 앞에 서있는 사람들의 이름을 담은 리스트를 return하도록 solution 함수를 완성해주세요. 마지막 그룹이 5명이 되지 않더라도 가장 앞에 있는 사람의 이름을 포함합니다.</p>
<section id="파이썬-58" class="level3" data-number="14.2.1">
<h3 data-number="14.2.1" class="anchored" data-anchor-id="파이썬-58"><span class="header-section-number">14.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb119" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb119-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb119-2"></span>
<span id="cb119-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(names: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]):</span>
<span id="cb119-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> names[::<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
</section>
<section id="러스트-59" class="level3" data-number="14.2.2">
<h3 data-number="14.2.2" class="anchored" data-anchor-id="러스트-59"><span class="header-section-number">14.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb120" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb120-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb120-2">    names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>step_by(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb120-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb120-4"></span>
<span id="cb120-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb120-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb120-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jane"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb120-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kim"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb120-9">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb120-10"></span>
<span id="cb120-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(names)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb120-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb120-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="할-일-목록" class="level2" data-number="14.3">
<h2 data-number="14.3" class="anchored" data-anchor-id="할-일-목록"><span class="header-section-number">14.3</span> 할 일 목록</h2>
<p>오늘 해야 할 일이 담긴 문자열 배열 todo_list와 각각의 일을 지금 마쳤는지를 나타내는 boolean 배열 finished가 매개변수로 주어질 때, todo_list에서 아직 마치지 못한 일들을 순서대로 담은 문자열 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-59" class="level3" data-number="14.3.1">
<h3 data-number="14.3.1" class="anchored" data-anchor-id="파이썬-59"><span class="header-section-number">14.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb121" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb121-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb121-2"></span>
<span id="cb121-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(todo_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], finished: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb121-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [task <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> task, is_finished <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(todo_list, finished) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> is_finished]</span></code></pre></div>
</section>
<section id="러스트-60" class="level3" data-number="14.3.2">
<h3 data-number="14.3.2" class="anchored" data-anchor-id="러스트-60"><span class="header-section-number">14.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb122" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb122-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(todo_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> finished<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb122-2">    todo_list</span>
<span id="cb122-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()</span>
<span id="cb122-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>zip(finished)</span>
<span id="cb122-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> is_finished)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>is_finished)</span>
<span id="cb122-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(task<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> task)</span>
<span id="cb122-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb122-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb122-9"></span>
<span id="cb122-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb122-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> todo_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb122-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"laundry"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb122-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dishes"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb122-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vacuum"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb122-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"groceries"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb122-16">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb122-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> finished <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb122-18"></span>
<span id="cb122-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(todo_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> finished)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb122-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unfinished tasks: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb122-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="n보다-커질-때까지-더하기" class="level2" data-number="14.4">
<h2 data-number="14.4" class="anchored" data-anchor-id="n보다-커질-때까지-더하기"><span class="header-section-number">14.4</span> n보다 커질 때까지 더하기</h2>
<p>정수 배열 numbers와 정수 n이 매개변수로 주어집니다. numbers의 원소를 앞에서부터 하나씩 더하다가 그 합이 n보다 커지는 순간 이때까지 더했던 원소들의 합을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-60" class="level3" data-number="14.4.1">
<h3 data-number="14.4.1" class="anchored" data-anchor-id="파이썬-60"><span class="header-section-number">14.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb123" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb123-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb123-2"></span>
<span id="cb123-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(numbers: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb123-4">    total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb123-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numbers:</span>
<span id="cb123-6">        total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> num</span>
<span id="cb123-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> n:</span>
<span id="cb123-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total</span>
<span id="cb123-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total</span></code></pre></div>
</section>
<section id="러스트-61" class="level3" data-number="14.4.2">
<h3 data-number="14.4.2" class="anchored" data-anchor-id="러스트-61"><span class="header-section-number">14.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb124" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb124-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb124-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb124-4">        total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb124-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb124-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb124-9">    total</span>
<span id="cb124-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb124-11"></span>
<span id="cb124-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb124-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb124-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb124-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb124-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb124-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb124-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb124-19">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-21"></span>
<span id="cb124-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(numbers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-23">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb124-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="수열과-구간-쿼리-1" class="level2" data-number="14.5">
<h2 data-number="14.5" class="anchored" data-anchor-id="수열과-구간-쿼리-1"><span class="header-section-number">14.5</span> 수열과 구간 쿼리 1</h2>
<p>정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, <code>[s, e]</code> 꼴입니다. 각 query마다 순서대로 s ≤ i ≤ e인 모든 i에 대해 <code>arr[i]</code>에 1을 더합니다. 위 규칙에 따라 queries를 처리한 이후의 arr를 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-61" class="level3" data-number="14.5.1">
<h3 data-number="14.5.1" class="anchored" data-anchor-id="파이썬-61"><span class="header-section-number">14.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb125" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb125-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb125-2"></span>
<span id="cb125-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], queries: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb125-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s, e <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries:</span>
<span id="cb125-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(s, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb125-6">            arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb125-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> arr</span></code></pre></div>
</section>
<section id="러스트-62" class="level3" data-number="14.5.2">
<h3 data-number="14.5.2" class="anchored" data-anchor-id="러스트-62"><span class="header-section-number">14.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb126" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb126-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> queries<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb126-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> e) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb126-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb126-4">            arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb126-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb126-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb126-7">    arr</span>
<span id="cb126-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb126-9"></span>
<span id="cb126-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb126-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb126-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> queries <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb126-13"></span>
<span id="cb126-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> queries)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb126-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb126-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-15-리스트-배열-문자열" class="level1" data-number="15">
<h1 data-number="15"><span class="header-section-number">15</span> Day 15 리스트 (배열), 문자열</h1>
<section id="조건에-맞게-수열-변환하기-1" class="level2" data-number="15.1">
<h2 data-number="15.1" class="anchored" data-anchor-id="조건에-맞게-수열-변환하기-1"><span class="header-section-number">15.1</span> 조건에 맞게 수열 변환하기 1</h2>
<p>정수 배열 arr가 주어집니다. arr의 각 원소에 대해 값이 50보다 크거나 같은 짝수라면 2로 나누고, 50보다 작은 홀수라면 2를 곱합니다. 그 결과인 정수 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-62" class="level3" data-number="15.1.1">
<h3 data-number="15.1.1" class="anchored" data-anchor-id="파이썬-62"><span class="header-section-number">15.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb127" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb127-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb127-2"></span>
<span id="cb127-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb127-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> num <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr]</span></code></pre></div>
</section>
<section id="러스트-63" class="level3" data-number="15.1.2">
<h3 data-number="15.1.2" class="anchored" data-anchor-id="러스트-63"><span class="header-section-number">15.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb128" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb128-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb128-2">    arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb128-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb128-4">            num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb128-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb128-6">            num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb128-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb128-8">            num</span>
<span id="cb128-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb128-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb128-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb128-12"></span>
<span id="cb128-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb128-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb128-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb128-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb128-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="조건에-맞게-수열-변환하기-2" class="level2" data-number="15.2">
<h2 data-number="15.2" class="anchored" data-anchor-id="조건에-맞게-수열-변환하기-2"><span class="header-section-number">15.2</span> 조건에 맞게 수열 변환하기 2</h2>
<p>정수 배열 arr가 주어집니다. arr의 각 원소에 대해 값이 50보다 크거나 같은 짝수라면 2로 나누고, 50보다 작은 홀수라면 2를 곱하고 다시 1을 더합니다.</p>
<p>이러한 작업을 x번 반복한 결과인 배열을 <code>arr(x)</code>라고 표현했을 때, <code>arr(x) = arr(x + 1)</code>인 x가 항상 존재합니다. 이러한 x 중 가장 작은 값을 return 하는 solution 함수를 완성해 주세요.</p>
<p>단, 두 배열에 대한 “=”는 두 배열의 크기가 서로 같으며, 같은 인덱스의 원소가 각각 서로 같음을 의미합니다.</p>
<section id="파이썬-63" class="level3" data-number="15.2.1">
<h3 data-number="15.2.1" class="anchored" data-anchor-id="파이썬-63"><span class="header-section-number">15.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb129" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb129-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb129-2"></span>
<span id="cb129-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb129-4">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb129-5">    prev_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr.copy()</span>
<span id="cb129-6"></span>
<span id="cb129-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb129-8">        new_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb129-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> prev_arr:</span>
<span id="cb129-10">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb129-11">                new_arr.append(num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb129-12">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb129-13">                new_arr.append(num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb129-14">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb129-15">                new_arr.append(num)</span>
<span id="cb129-16"></span>
<span id="cb129-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> new_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> prev_arr:</span>
<span id="cb129-18">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x</span>
<span id="cb129-19"></span>
<span id="cb129-20">        prev_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_arr</span>
<span id="cb129-21">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-64" class="level3" data-number="15.2.2">
<h3 data-number="15.2.2" class="anchored" data-anchor-id="러스트-64"><span class="header-section-number">15.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb130" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb130-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> prev_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-4"></span>
<span id="cb130-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">loop</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> new_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prev_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-8">                num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb130-9">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-10">                num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb130-11">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-12">                num</span>
<span id="cb130-13">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb130-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-15"></span>
<span id="cb130-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> new_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> prev_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-17">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb130-19"></span>
<span id="cb130-20">        prev_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-21">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb130-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb130-24"></span>
<span id="cb130-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb130-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb130-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-28">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb130-29"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="로-만들기" class="level2" data-number="15.3">
<h2 data-number="15.3" class="anchored" data-anchor-id="로-만들기"><span class="header-section-number">15.3</span> 1로 만들기</h2>
<p>정수가 있을 때, 짝수라면 반으로 나누고, 홀수라면 1을 뺀 뒤 반으로 나누면, 마지막엔 1이 됩니다. 예를 들어 10이 있다면 다음과 같은 과정으로 1이 됩니다.</p>
<pre><code>10 / 2 = 5
(5 - 1) / 2 = 2
2 / 2 = 1</code></pre>
<p>위와 같이 3번의 나누기 연산으로 1이 되었습니다.</p>
<p>정수들이 담긴 리스트 num_list가 주어질 때, num_list의 모든 원소를 1로 만들기 위해서 필요한 나누기 연산의 횟수를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-64" class="level3" data-number="15.3.1">
<h3 data-number="15.3.1" class="anchored" data-anchor-id="파이썬-64"><span class="header-section-number">15.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb132" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb132-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb132-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb132-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> count_operations(num):</span>
<span id="cb132-4">        count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb132-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb132-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb132-7">                num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb132-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb132-9">                num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb132-10">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb132-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> count</span>
<span id="cb132-12"></span>
<span id="cb132-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(count_operations(num) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_list)</span></code></pre></div>
</section>
<section id="러스트-65" class="level3" data-number="15.3.2">
<h3 data-number="15.3.2" class="anchored" data-anchor-id="러스트-65"><span class="header-section-number">15.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb133" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb133-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> count_operations(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-6">                num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-7">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-8">                num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-9">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb133-10">            count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb133-12">        count</span>
<span id="cb133-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb133-14"></span>
<span id="cb133-15">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> count_operations(num))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb133-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb133-17"></span>
<span id="cb133-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb133-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb133-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb133-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="길이에-따른-연산" class="level2" data-number="15.4">
<h2 data-number="15.4" class="anchored" data-anchor-id="길이에-따른-연산"><span class="header-section-number">15.4</span> 길이에 따른 연산</h2>
<p>정수가 담긴 리스트 num_list가 주어질 때, 리스트의 길이가 11 이상이면 리스트에 있는 모든 원소의 합을 10 이하이면 모든 원소의 곱을 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-65" class="level3" data-number="15.4.1">
<h3 data-number="15.4.1" class="anchored" data-anchor-id="파이썬-65"><span class="header-section-number">15.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb134" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb134-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb134-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb134-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb134-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(num_list) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>:</span>
<span id="cb134-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(num_list)</span>
<span id="cb134-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb134-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> math.prod(num_list)</span></code></pre></div>
</section>
<section id="러스트-66" class="level3" data-number="15.4.2">
<h3 data-number="15.4.2" class="anchored" data-anchor-id="러스트-66"><span class="header-section-number">15.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb135" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb135-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-3">        num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb135-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-5">        num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>product()</span>
<span id="cb135-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb135-8"></span>
<span id="cb135-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb135-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input with less than 11 elements</span></span>
<span id="cb135-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input with 11 elements</span></span>
<span id="cb135-12"></span>
<span id="cb135-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 1: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(num_list1))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result 2: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> solution(num_list2))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb135-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="원하는-문자열-찾기" class="level2" data-number="15.5">
<h2 data-number="15.5" class="anchored" data-anchor-id="원하는-문자열-찾기"><span class="header-section-number">15.5</span> 원하는 문자열 찾기</h2>
<p>알파벳으로 이루어진 문자열 myString과 pat이 주어집니다. myString의 연속된 부분 문자열 중 pat이 존재하면 1을 그렇지 않으면 0을 return 하는 solution 함수를 완성해 주세요. 단, 알파벳 대문자와 소문자는 구분하지 않습니다.</p>
<section id="파이썬-66" class="level3" data-number="15.5.1">
<h3 data-number="15.5.1" class="anchored" data-anchor-id="파이썬-66"><span class="header-section-number">15.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb136" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb136-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, pat: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb136-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pat.lower() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> myString.lower())</span></code></pre></div>
</section>
<section id="러스트-67" class="level3" data-number="15.5.2">
<h3 data-number="15.5.2" class="anchored" data-anchor-id="러스트-67"><span class="header-section-number">15.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb137" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb137-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Import necessary modules</span></span>
<span id="cb137-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example import</span></span>
<span id="cb137-3"></span>
<span id="cb137-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define structs or enums if needed</span></span>
<span id="cb137-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> MyStruct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-6">    field1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb137-7">    field2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb137-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-9"></span>
<span id="cb137-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Implement methods for structs if needed</span></span>
<span id="cb137-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">impl</span> MyStruct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> new(value1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> value2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Self</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-13">        MyStruct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-14">            field1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> value1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb137-15">            field2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> value2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb137-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-18"></span>
<span id="cb137-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> some_method(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">self</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method implementation</span></span>
<span id="cb137-21">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">self</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>field1</span>
<span id="cb137-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-24"></span>
<span id="cb137-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Main function</span></span>
<span id="cb137-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Your converted code logic here</span></span>
<span id="cb137-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_instance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">MyStruct::</span>new(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb137-29">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> my_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>some_method())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb137-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb137-31"></span>
<span id="cb137-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Helper functions</span></span>
<span id="cb137-33"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> helper_function(param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb137-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Function implementation</span></span>
<span id="cb137-35">    param <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb137-36"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-16-문자열" class="level1" data-number="16">
<h1 data-number="16"><span class="header-section-number">16</span> Day 16 문자열</h1>
<section id="대문자로-바꾸기" class="level2" data-number="16.1">
<h2 data-number="16.1" class="anchored" data-anchor-id="대문자로-바꾸기"><span class="header-section-number">16.1</span> 대문자로 바꾸기</h2>
<p>알파벳으로 이루어진 문자열 myString이 주어집니다. 모든 알파벳을 대문자로 변환하여 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-67" class="level3" data-number="16.1.1">
<h3 data-number="16.1.1" class="anchored" data-anchor-id="파이썬-67"><span class="header-section-number">16.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb138" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb138-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb138-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> myString.upper()</span></code></pre></div>
</section>
<section id="러스트-68" class="level3" data-number="16.1.2">
<h3 data-number="16.1.2" class="anchored" data-anchor-id="러스트-68"><span class="header-section-number">16.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb139" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb139-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb139-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_uppercase()</span>
<span id="cb139-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb139-4"></span>
<span id="cb139-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb139-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, World!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb139-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb139-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb139-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Uppercase: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb139-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="소문자로-바꾸기" class="level2" data-number="16.2">
<h2 data-number="16.2" class="anchored" data-anchor-id="소문자로-바꾸기"><span class="header-section-number">16.2</span> 소문자로 바꾸기</h2>
<p>알파벳으로 이루어진 문자열 myString이 주어집니다. 모든 알파벳을 소문자로 변환하여 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-68" class="level3" data-number="16.2.1">
<h3 data-number="16.2.1" class="anchored" data-anchor-id="파이썬-68"><span class="header-section-number">16.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb140" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb140-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb140-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> myString.lower()</span></code></pre></div>
</section>
<section id="러스트-69" class="level3" data-number="16.2.2">
<h3 data-number="16.2.2" class="anchored" data-anchor-id="러스트-69"><span class="header-section-number">16.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb141" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb141-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb141-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_lowercase()</span>
<span id="cb141-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb141-4"></span>
<span id="cb141-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb141-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, World!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lowercase: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb141-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열에서-문자열-대소문자-변환" class="level2" data-number="16.3">
<h2 data-number="16.3" class="anchored" data-anchor-id="배열에서-문자열-대소문자-변환"><span class="header-section-number">16.3</span> 배열에서 문자열 대소문자 변환</h2>
<p>문자열 배열 strArr가 주어집니다. 모든 원소가 알파벳으로만 이루어져 있을 때, 배열에서 홀수번째 인덱스의 문자열은 모든 문자를 대문자로, 짝수번째 인덱스의 문자열은 모든 문자를 소문자로 바꿔서 반환하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-69" class="level3" data-number="16.3.1">
<h3 data-number="16.3.1" class="anchored" data-anchor-id="파이썬-69"><span class="header-section-number">16.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb142" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb142-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb142-2"></span>
<span id="cb142-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(strArr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb142-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [s.lower() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> s.upper() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(strArr)]</span></code></pre></div>
</section>
<section id="러스트-70" class="level3" data-number="16.3.2">
<h3 data-number="16.3.2" class="anchored" data-anchor-id="러스트-70"><span class="header-section-number">16.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb143" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb143-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-2">    str_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> s)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-4">            s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_lowercase()</span>
<span id="cb143-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-6">            s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_uppercase()</span>
<span id="cb143-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb143-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb143-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb143-10"></span>
<span id="cb143-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb143-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_vec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb143-13">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb143-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"World"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb143-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb143-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Programming"</span>)</span>
<span id="cb143-17">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-18"></span>
<span id="cb143-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_vec<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-20"></span>
<span id="cb143-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_vec)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result:   {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb143-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="a-강조하기" class="level2" data-number="16.4">
<h2 data-number="16.4" class="anchored" data-anchor-id="a-강조하기"><span class="header-section-number">16.4</span> A 강조하기</h2>
<p>문자열 myString이 주어집니다. myString에서 알파벳 “a”가 등장하면 전부 “A”로 변환하고, “A”가 아닌 모든 대문자 알파벳은 소문자 알파벳으로 변환하여 return 하는 solution 함수를 완성하세요.</p>
<section id="파이썬-70" class="level3" data-number="16.4.1">
<h3 data-number="16.4.1" class="anchored" data-anchor-id="파이썬-70"><span class="header-section-number">16.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb144" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb144-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb144-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c.lower() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> c.lower() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> myString])</span></code></pre></div>
</section>
<section id="러스트-71" class="level3" data-number="16.4.2">
<h3 data-number="16.4.2" class="anchored" data-anchor-id="러스트-71"><span class="header-section-number">16.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb145" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb145-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_ascii_lowercase() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-4">            <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span></span>
<span id="cb145-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-6">            c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_ascii_lowercase()</span>
<span id="cb145-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb145-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb145-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb145-10"></span>
<span id="cb145-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb145-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AbCdEfG"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-15">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result:   {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb145-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="특정한-문자를-대문자로-바꾸기" class="level2" data-number="16.5">
<h2 data-number="16.5" class="anchored" data-anchor-id="특정한-문자를-대문자로-바꾸기"><span class="header-section-number">16.5</span> 특정한 문자를 대문자로 바꾸기</h2>
<p>영소문자로 이루어진 문자열 my_string과 영소문자 1글자로 이루어진 문자열 alp가 매개변수로 주어질 때, my_string에서 alp에 해당하는 모든 글자를 대문자로 바꾼 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-71" class="level3" data-number="16.5.1">
<h3 data-number="16.5.1" class="anchored" data-anchor-id="파이썬-71"><span class="header-section-number">16.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb146" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb146-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, alp:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb146-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string.replace(alp, alp.upper())</span></code></pre></div>
</section>
<section id="러스트-72" class="level3" data-number="16.5.2">
<h3 data-number="16.5.2" class="anchored" data-anchor-id="러스트-72"><span class="header-section-number">16.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb147" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb147-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> alp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb147-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>replace(alp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>alp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_uppercase())</span>
<span id="cb147-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb147-4"></span>
<span id="cb147-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb147-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello world"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_alp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_alp)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Replace '{}' with '{}': {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_alp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_alp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_uppercase()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb147-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-17-문자열" class="level1" data-number="17">
<h1 data-number="17"><span class="header-section-number">17</span> Day 17 문자열</h1>
<section id="특정-문자열로-끝나는-가장-긴-부분-문자열-찾기" class="level2" data-number="17.1">
<h2 data-number="17.1" class="anchored" data-anchor-id="특정-문자열로-끝나는-가장-긴-부분-문자열-찾기"><span class="header-section-number">17.1</span> 특정 문자열로 끝나는 가장 긴 부분 문자열 찾기</h2>
<section id="파이썬-72" class="level3" data-number="17.1.1">
<h3 data-number="17.1.1" class="anchored" data-anchor-id="파이썬-72"><span class="header-section-number">17.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb148" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb148-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString, pat):</span>
<span id="cb148-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(myString), <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb148-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> myString[:i].endswith(pat):</span>
<span id="cb148-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> myString[:i]</span></code></pre></div>
</section>
</section>
<section id="문자열이-몇-번-등장하는지-세기" class="level2" data-number="17.2">
<h2 data-number="17.2" class="anchored" data-anchor-id="문자열이-몇-번-등장하는지-세기"><span class="header-section-number">17.2</span> 문자열이 몇 번 등장하는지 세기</h2>
<section id="파이썬-73" class="level3" data-number="17.2.1">
<h3 data-number="17.2.1" class="anchored" data-anchor-id="파이썬-73"><span class="header-section-number">17.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb149" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb149-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString, pat):</span>
<span id="cb149-2">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb149-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(myString) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pat) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb149-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> myString[i:i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(pat)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pat:</span>
<span id="cb149-5">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb149-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-73" class="level3" data-number="17.2.2">
<h3 data-number="17.2.2" class="anchored" data-anchor-id="러스트-73"><span class="header-section-number">17.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb150" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb150-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb150-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> pat_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-4"></span>
<span id="cb150-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pat_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb150-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>my_string[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>pat_len] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb150-7">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb150-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb150-10"></span>
<span id="cb150-11">    answer</span>
<span id="cb150-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb150-13"></span>
<span id="cb150-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb150-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> pat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pat)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-18">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb150-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열에서-ad-제거하기" class="level2" data-number="17.3">
<h2 data-number="17.3" class="anchored" data-anchor-id="문자열에서-ad-제거하기"><span class="header-section-number">17.3</span> 문자열에서 ad 제거하기</h2>
<section id="파이썬-74" class="level3" data-number="17.3.1">
<h3 data-number="17.3.1" class="anchored" data-anchor-id="파이썬-74"><span class="header-section-number">17.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb151" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb151-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(strArr):</span>
<span id="cb151-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [s <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> strArr <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ad"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s]</span></code></pre></div>
</section>
<section id="러스트-74" class="level3" data-number="17.3.2">
<h3 data-number="17.3.2" class="anchored" data-anchor-id="러스트-74"><span class="header-section-number">17.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb152" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb152-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb152-2">    str_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ad"</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb152-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb152-4"></span>
<span id="cb152-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb152-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb152-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bad"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb152-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"good"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb152-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mad"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb152-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glad"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb152-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sad"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb152-12">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb152-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str_arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb152-14">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb152-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="공백으로-구분하기-1" class="level2" data-number="17.4">
<h2 data-number="17.4" class="anchored" data-anchor-id="공백으로-구분하기-1"><span class="header-section-number">17.4</span> 공백으로 구분하기 1</h2>
<p>단어가 공백 한 개로 구분되어 있는 문자열 my_string이 매개변수로 주어질 때, my_string에 나온 단어를 앞에서부터 순서대로 담은 문자열 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-75" class="level3" data-number="17.4.1">
<h3 data-number="17.4.1" class="anchored" data-anchor-id="파이썬-75"><span class="header-section-number">17.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb153" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb153-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb153-2"></span>
<span id="cb153-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb153-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string.split()</span></code></pre></div>
</section>
<section id="러스트-75" class="level3" data-number="17.4.2">
<h3 data-number="17.4.2" class="anchored" data-anchor-id="러스트-75"><span class="header-section-number">17.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb154" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb154-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb154-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb154-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb154-4"></span>
<span id="cb154-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb154-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello world Rust programming"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb154-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb154-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original string: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb154-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Split result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb154-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="공백으로-구분하기-2" class="level2" data-number="17.5">
<h2 data-number="17.5" class="anchored" data-anchor-id="공백으로-구분하기-2"><span class="header-section-number">17.5</span> 공백으로 구분하기 2</h2>
<p>단어가 공백 한 개 이상으로 구분되어 있는 문자열 my_string이 매개변수로 주어질 때, my_string에 나온 단어를 앞에서부터 순서대로 담은 문자열 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-76" class="level3" data-number="17.5.1">
<h3 data-number="17.5.1" class="anchored" data-anchor-id="파이썬-76"><span class="header-section-number">17.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb155" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb155-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb155-2"></span>
<span id="cb155-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb155-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> my_string.split()</span></code></pre></div>
</section>
<section id="러스트-76" class="level3" data-number="17.5.2">
<h3 data-number="17.5.2" class="anchored" data-anchor-id="러스트-76"><span class="header-section-number">17.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb156" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb156-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb156-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb156-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb156-4"></span>
<span id="cb156-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb156-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> example_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello world Rust programming"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb156-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb156-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Original string: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> example_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb156-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Split result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb156-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-18-문자열" class="level1" data-number="18">
<h1 data-number="18"><span class="header-section-number">18</span> Day 18 문자열</h1>
<section id="x사이의-개수" class="level2" data-number="18.1">
<h2 data-number="18.1" class="anchored" data-anchor-id="x사이의-개수"><span class="header-section-number">18.1</span> x사이의 개수</h2>
<p>문자열 myString이 주어집니다. myString을 문자 “x”를 기준으로 나눴을 때 나눠진 문자열 각각의 길이를 순서대로 저장한 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-77" class="level3" data-number="18.1.1">
<h3 data-number="18.1.1" class="anchored" data-anchor-id="파이썬-77"><span class="header-section-number">18.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb157" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb157-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb157-2"></span>
<span id="cb157-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb157-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(s) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> myString.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>)]</span></code></pre></div>
</section>
<section id="러스트-77" class="level3" data-number="18.1.2">
<h3 data-number="18.1.2" class="anchored" data-anchor-id="러스트-77"><span class="header-section-number">18.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb158" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb158-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb158-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb158-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb158-4"></span>
<span id="cb158-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb158-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"examplexstringxhere"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb158-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb158-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb158-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-잘라서-정렬하기" class="level2" data-number="18.2">
<h2 data-number="18.2" class="anchored" data-anchor-id="문자열-잘라서-정렬하기"><span class="header-section-number">18.2</span> 문자열 잘라서 정렬하기</h2>
<p>문자열 myString이 주어집니다. “x”를 기준으로 해당 문자열을 잘라내 배열을 만든 후 사전순으로 정렬한 배열을 return 하는 solution 함수를 완성해 주세요. 단, 빈 문자열은 반환할 배열에 넣지 않습니다.</p>
<section id="파이썬-78" class="level3" data-number="18.2.1">
<h3 data-number="18.2.1" class="anchored" data-anchor-id="파이썬-78"><span class="header-section-number">18.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb159" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb159-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb159-2"></span>
<span id="cb159-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb159-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>([s <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> myString.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> s])</span></code></pre></div>
</section>
<section id="러스트-78" class="level3" data-number="18.2.2">
<h3 data-number="18.2.2" class="anchored" data-anchor-id="러스트-78"><span class="header-section-number">18.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb160" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb160-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb160-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split(<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'x'</span>)</span>
<span id="cb160-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty())</span>
<span id="cb160-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from)</span>
<span id="cb160-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb160-6">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb160-7">    result</span>
<span id="cb160-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb160-9"></span>
<span id="cb160-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb160-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"axbxcxxdxe"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb160-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb160-13">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb160-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="간단한-식-계산하기" class="level2" data-number="18.3">
<h2 data-number="18.3" class="anchored" data-anchor-id="간단한-식-계산하기"><span class="header-section-number">18.3</span> 간단한 식 계산하기</h2>
<p>문자열 binomial이 매개변수로 주어집니다. binomial은 “a op b” 형태의 이항식이고 a와 b는 음이 아닌 정수, op는 ‘+’, ‘-’, ’*’ 중 하나입니다. 주어진 식을 계산한 정수를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-79" class="level3" data-number="18.3.1">
<h3 data-number="18.3.1" class="anchored" data-anchor-id="파이썬-79"><span class="header-section-number">18.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb161" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb161-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(binomial: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb161-2">    a, op, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> binomial.split()</span>
<span id="cb161-3">    a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(a), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(b)</span>
<span id="cb161-4"></span>
<span id="cb161-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'+'</span>:</span>
<span id="cb161-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="cb161-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>:</span>
<span id="cb161-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b</span>
<span id="cb161-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># op == '*'</span></span>
<span id="cb161-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b</span></code></pre></div>
</section>
<section id="러스트-79" class="level3" data-number="18.3.2">
<h3 data-number="18.3.2" class="anchored" data-anchor-id="러스트-79"><span class="header-section-number">18.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb162" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb162-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(binomial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb162-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> binomial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_whitespace()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> op<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-6"></span>
<span id="cb162-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb162-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"+"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb162-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb162-10">        _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Assumes '*' for any other operator</span></span>
<span id="cb162-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb162-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb162-13"></span>
<span id="cb162-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb162-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> binomial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3 + 4"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(binomial)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb162-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-바꿔서-찾기" class="level2" data-number="18.4">
<h2 data-number="18.4" class="anchored" data-anchor-id="문자열-바꿔서-찾기"><span class="header-section-number">18.4</span> 문자열 바꿔서 찾기</h2>
<p>문자 “A”와 “B”로 이루어진 문자열 myString과 pat가 주어집니다. myString의 “A”를 “B”로, “B”를 “A”로 바꾼 문자열의 연속하는 부분 문자열 중 pat이 있으면 1을 아니면 0을 return 하는 solution 함수를 완성하세요.</p>
<section id="파이썬-80" class="level3" data-number="18.4.1">
<h3 data-number="18.4.1" class="anchored" data-anchor-id="파이썬-80"><span class="header-section-number">18.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb163" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb163-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, pat: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb163-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># myString의 "A"를 "B"로, "B"를 "A"로 바꾸는 함수</span></span>
<span id="cb163-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> swap(s):</span>
<span id="cb163-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'B'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'B'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s)</span>
<span id="cb163-5"></span>
<span id="cb163-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># myString을 변환하고 pat이 포함되어 있는지 확인</span></span>
<span id="cb163-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> swap(pat) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> myString <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-80" class="level3" data-number="18.4.2">
<h3 data-number="18.4.2" class="anchored" data-anchor-id="러스트-80"><span class="header-section-number">18.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb164" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb164-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> swap(s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-2">    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">match</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-3">        <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'B'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-4">        <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'B'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'A'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-5">        _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb164-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb164-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-8"></span>
<span id="cb164-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>swap(pat)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-11">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb164-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-13">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb164-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb164-16"></span>
<span id="cb164-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb164-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> my_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ABBAA"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> pat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AABB"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pat)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb164-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="rny_string" class="level2" data-number="18.5">
<h2 data-number="18.5" class="anchored" data-anchor-id="rny_string"><span class="header-section-number">18.5</span> rny_string</h2>
<p>’m’과 “rn”이 모양이 비슷하게 생긴 점을 활용해 문자열에 장난을 하려고 합니다. 문자열 rny_string이 주어질 때, rny_string의 모든 ’m’을 “rn”으로 바꾼 문자열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-81" class="level3" data-number="18.5.1">
<h3 data-number="18.5.1" class="anchored" data-anchor-id="파이썬-81"><span class="header-section-number">18.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb165" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb165-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(rny_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb165-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> rny_string.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'m'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rn'</span>)</span></code></pre></div>
</section>
<section id="러스트-81" class="level3" data-number="18.5.2">
<h3 data-number="18.5.2" class="anchored" data-anchor-id="러스트-81"><span class="header-section-number">18.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb166" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb166-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(rny_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb166-2">    rny_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rn"</span>)</span>
<span id="cb166-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb166-4"></span>
<span id="cb166-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb166-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"programmer"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-8">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb166-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-19-문자열-리스트배열" class="level1" data-number="19">
<h1 data-number="19"><span class="header-section-number">19</span> Day 19 문자열, 리스트(배열)</h1>
<section id="세-개의-구분자" class="level2" data-number="19.1">
<h2 data-number="19.1" class="anchored" data-anchor-id="세-개의-구분자"><span class="header-section-number">19.1</span> 세 개의 구분자</h2>
<p>임의의 문자열이 주어졌을 때 문자 “a”, “b”, “c”를 구분자로 사용해 문자열을 나누고자 합니다.</p>
<p>예를 들어 주어진 문자열이 “baconlettucetomato”라면 나눠진 문자열 목록은 <code>["onlettu", "etom", "to"]</code> 가 됩니다.</p>
<p>문자열 myStr이 주어졌을 때 위 예시와 같이 “a”, “b”, “c”를 사용해 나눠진 문자열을 순서대로 저장한 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<p>단, 두 구분자 사이에 다른 문자가 없을 경우에는 아무것도 저장하지 않으며, return할 배열이 빈 배열이라면 <code>["EMPTY"]</code>를 return 합니다.</p>
<section id="파이썬-82" class="level3" data-number="19.1.1">
<h3 data-number="19.1.1" class="anchored" data-anchor-id="파이썬-82"><span class="header-section-number">19.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb167" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb167-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb167-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb167-3"></span>
<span id="cb167-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myStr: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb167-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'a', 'b', 'c'를 구분자로 사용하여 문자열을 분할</span></span>
<span id="cb167-6">    parts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[abc]'</span>, myStr)</span>
<span id="cb167-7"></span>
<span id="cb167-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 빈 문자열을 제거하고 남은 부분들만 저장</span></span>
<span id="cb167-9">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [part <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> part <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> parts <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> part]</span>
<span id="cb167-10"></span>
<span id="cb167-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 배열이 비어있으면 ["EMPTY"] 반환</span></span>
<span id="cb167-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> answer <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EMPTY"</span>]</span></code></pre></div>
</section>
<section id="러스트-82" class="level3" data-number="19.1.2">
<h3 data-number="19.1.2" class="anchored" data-anchor-id="러스트-82"><span class="header-section-number">19.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb168" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb168-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">regex::</span>Regex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-2"></span>
<span id="cb168-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 'a', 'b', 'c'를 구분자로 사용하여 문자열을 분할</span></span>
<span id="cb168-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> re <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Regex::</span>new(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[abc]"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split(my_str)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-7"></span>
<span id="cb168-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 빈 문자열을 제거하고 남은 부분들만 저장</span></span>
<span id="cb168-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>part<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>part<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>from)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-10"></span>
<span id="cb168-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 결과 배열이 비어있으면 ["EMPTY"] 반환</span></span>
<span id="cb168-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-13">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EMPTY"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb168-15"></span>
<span id="cb168-16">    answer</span>
<span id="cb168-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb168-18"></span>
<span id="cb168-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb168-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"baconlettucetomato"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb168-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb168-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열의-원소만큼-추가하기" class="level2" data-number="19.2">
<h2 data-number="19.2" class="anchored" data-anchor-id="배열의-원소만큼-추가하기"><span class="header-section-number">19.2</span> 배열의 원소만큼 추가하기</h2>
<p>아무 원소도 들어있지 않은 빈 배열 X가 있습니다. 양의 정수 배열 arr가 매개변수로 주어질 때, arr의 앞에서부터 차례대로 원소를 보면서 원소가 a라면 X의 맨 뒤에 a를 a번 추가하는 일을 반복한 뒤의 배열 X를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-83" class="level3" data-number="19.2.1">
<h3 data-number="19.2.1" class="anchored" data-anchor-id="파이썬-83"><span class="header-section-number">19.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb169" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb169-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb169-2"></span>
<span id="cb169-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb169-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb169-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr:</span>
<span id="cb169-6">        answer.extend([num] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> num)</span>
<span id="cb169-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-83" class="level3" data-number="19.2.2">
<h3 data-number="19.2.2" class="anchored" data-anchor-id="러스트-83"><span class="header-section-number">19.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb170" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb170-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-4">        answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend(<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb170-6">    answer</span>
<span id="cb170-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb170-8"></span>
<span id="cb170-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb170-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb170-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(input)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-12">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb170-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="빈-배열에-추가-삭제하기" class="level2" data-number="19.3">
<h2 data-number="19.3" class="anchored" data-anchor-id="빈-배열에-추가-삭제하기"><span class="header-section-number">19.3</span> 빈 배열에 추가, 삭제하기</h2>
<p>아무 원소도 들어있지 않은 빈 배열 X가 있습니다. 길이가 같은 정수 배열 arr과 boolean 배열 flag가 매개변수로 주어질 때, flag를 차례대로 순회하며 <code>flag[i]</code>가 true라면 X의 뒤에 <code>arr[i]</code>를 <code>arr[i] × 2</code> 번 추가하고, <code>flag[i]</code>가 false라면 X에서 마지막 <code>arr[i]</code>개의 원소를 제거한 뒤 X를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-84" class="level3" data-number="19.3.1">
<h3 data-number="19.3.1" class="anchored" data-anchor-id="파이썬-84"><span class="header-section-number">19.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb171" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb171-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb171-2"></span>
<span id="cb171-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], flag: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb171-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb171-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, f <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(flag):</span>
<span id="cb171-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> f:</span>
<span id="cb171-7">            answer.extend([arr[i]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb171-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb171-9">            answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> answer[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>arr[i]] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(answer) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> []</span>
<span id="cb171-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-84" class="level3" data-number="19.3.2">
<h3 data-number="19.3.2" class="anchored" data-anchor-id="러스트-84"><span class="header-section-number">19.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb172" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb172-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> flag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>f) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> flag<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-5">            answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend(<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[arr[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> (arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-7">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> remove_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr[i] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> remove_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-9">                answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>truncate(answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> remove_count)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-10">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-11">                answer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-12">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-15">    answer</span>
<span id="cb172-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb172-17"></span>
<span id="cb172-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb172-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> flag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> flag)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-22">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb172-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-만들기-6" class="level2" data-number="19.4">
<h2 data-number="19.4" class="anchored" data-anchor-id="배열-만들기-6"><span class="header-section-number">19.4</span> 배열 만들기 6</h2>
<p>0과 1로만 이루어진 정수 배열 arr가 주어집니다. arr를 이용해 새로운 배열 stk을 만드려고 합니다.</p>
<p>i의 초기값을 0으로 설정하고 i가 arr의 길이보다 작으면 다음을 반복합니다.</p>
<ul>
<li>만약 stk이 빈 배열이라면 <code>arr[i]</code>를 stk에 추가하고 i에 1을 더합니다.</li>
<li>stk에 원소가 있고, stk의 마지막 원소가 <code>arr[i]</code>와 같으면 stk의 마지막 원소를 stk에서 제거하고 i에 1을 더합니다.</li>
<li>stk에 원소가 있는데 stk의 마지막 원소가 <code>arr[i]</code>와 다르면 stk의 맨 마지막에 <code>arr[i]</code>를 추가하고 i에 1을 더합니다. 위 작업을 마친 후 만들어진 stk을 return 하는 solution 함수를 완성해 주세요. 단, 만약 빈 배열을 return 해야한다면 [-1]을 return 합니다.</li>
</ul>
<section id="파이썬-85" class="level3" data-number="19.4.1">
<h3 data-number="19.4.1" class="anchored" data-anchor-id="파이썬-85"><span class="header-section-number">19.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb173" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb173-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb173-2"></span>
<span id="cb173-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb173-4">    stk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb173-5">    i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb173-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr):</span>
<span id="cb173-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> stk:</span>
<span id="cb173-8">            stk.append(arr[i])</span>
<span id="cb173-9">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb173-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> stk[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arr[i]:</span>
<span id="cb173-11">            stk.pop()</span>
<span id="cb173-12">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb173-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb173-14">            stk.append(arr[i])</span>
<span id="cb173-15">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb173-16"></span>
<span id="cb173-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> stk <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> stk <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</section>
<section id="러스트-85" class="level3" data-number="19.4.2">
<h3 data-number="19.4.2" class="anchored" data-anchor-id="러스트-85"><span class="header-section-number">19.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb174" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb174-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> stk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-4"></span>
<span id="cb174-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-7">            stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(arr[i])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-8">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>last()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arr[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-10">            stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pop()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-11">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-13">            stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(arr[i])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-14">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-17"></span>
<span id="cb174-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> stk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>is_empty() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-19">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb174-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-21">        stk</span>
<span id="cb174-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb174-24"></span>
<span id="cb174-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb174-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-28">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb174-29"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="무작위로-k의-수-뽑기" class="level2" data-number="19.5">
<h2 data-number="19.5" class="anchored" data-anchor-id="무작위로-k의-수-뽑기"><span class="header-section-number">19.5</span> 무작위로 k의 수 뽑기</h2>
<p>랜덤으로 서로 다른 k개의 수를 저장한 배열을 만드려고 합니다. 적절한 방법이 떠오르지 않기 때문에 일정한 범위 내에서 무작위로 수를 뽑은 후, 지금까지 나온적이 없는 수이면 배열 맨 뒤에 추가하는 방식으로 만들기로 합니다.</p>
<p>이미 어떤 수가 무작위로 주어질지 알고 있다고 가정하고, 실제 만들어질 길이 k의 배열을 예상해봅시다.</p>
<p>정수 배열 arr가 주어집니다. 문제에서의 무작위의 수는 arr에 저장된 순서대로 주어질 예정이라고 했을 때, 완성될 배열을 return 하는 solution 함수를 완성해 주세요.</p>
<p>단, 완성될 배열의 길이가 k보다 작으면 나머지 값을 전부 -1로 채워서 return 합니다.</p>
<section id="파이썬-86" class="level3" data-number="19.5.1">
<h3 data-number="19.5.1" class="anchored" data-anchor-id="파이썬-86"><span class="header-section-number">19.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb175" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb175-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb175-2"></span>
<span id="cb175-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb175-4">    unique_nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb175-5">    seen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb175-6"></span>
<span id="cb175-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr:</span>
<span id="cb175-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> seen <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_nums) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> k:</span>
<span id="cb175-9">            unique_nums.append(num)</span>
<span id="cb175-10">            seen.add(num)</span>
<span id="cb175-11"></span>
<span id="cb175-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_nums) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> k:</span>
<span id="cb175-13">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb175-14"></span>
<span id="cb175-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># k개의 숫자를 채우지 못했다면 -1로 채움</span></span>
<span id="cb175-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_nums) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> k:</span>
<span id="cb175-17">        unique_nums.append(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb175-18"></span>
<span id="cb175-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> unique_nums</span></code></pre></div>
</section>
<section id="러스트-86" class="level3" data-number="19.5.2">
<h3 data-number="19.5.2" class="anchored" data-anchor-id="러스트-86"><span class="header-section-number">19.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb176" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb176-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashSet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-2"></span>
<span id="cb176-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> unique_nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> seen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashSet::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-6"></span>
<span id="cb176-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>seen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>num) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> unique_nums<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-9">            unique_nums<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-10">            seen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>insert(num)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-12"></span>
<span id="cb176-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> unique_nums<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-14">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-17"></span>
<span id="cb176-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// k개의 숫자를 채우지 못했다면 -1로 채움</span></span>
<span id="cb176-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> unique_nums<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-20">        unique_nums<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-22"></span>
<span id="cb176-23">    unique_nums</span>
<span id="cb176-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb176-25"></span>
<span id="cb176-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb176-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-30">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb176-31"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-20-함수메서드" class="level1" data-number="20">
<h1 data-number="20"><span class="header-section-number">20</span> Day 20 함수(메서드)</h1>
<section id="배열의-길이를-2의-거듭제곱으로-만들기" class="level2" data-number="20.1">
<h2 data-number="20.1" class="anchored" data-anchor-id="배열의-길이를-2의-거듭제곱으로-만들기"><span class="header-section-number">20.1</span> 배열의 길이를 2의 거듭제곱으로 만들기</h2>
<p>정수 배열 arr이 매개변수로 주어집니다. arr의 길이가 2의 정수 거듭제곱이 되도록 arr 뒤에 정수 0을 추가하려고 합니다. arr에 최소한의 개수로 0을 추가한 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-87" class="level3" data-number="20.1.1">
<h3 data-number="20.1.1" class="anchored" data-anchor-id="파이썬-87"><span class="header-section-number">20.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb177" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb177-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb177-2"></span>
<span id="cb177-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb177-4">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr)</span>
<span id="cb177-5">    target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb177-6"></span>
<span id="cb177-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n:</span>
<span id="cb177-8">        target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb177-9"></span>
<span id="cb177-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n)</span></code></pre></div>
</section>
<section id="러스트-87" class="level3" data-number="20.1.2">
<h3 data-number="20.1.2" class="anchored" data-anchor-id="러스트-87"><span class="header-section-number">20.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb178" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb178-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb178-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-4"></span>
<span id="cb178-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb178-6">        target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb178-8"></span>
<span id="cb178-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-10">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>extend(<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> target_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-11">    result</span>
<span id="cb178-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb178-13"></span>
<span id="cb178-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb178-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb178-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb178-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열-비교하기" class="level2" data-number="20.2">
<h2 data-number="20.2" class="anchored" data-anchor-id="배열-비교하기"><span class="header-section-number">20.2</span> 배열 비교하기</h2>
<p>이 문제에서 두 정수 배열의 대소관계를 다음과 같이 정의합니다.</p>
<ul>
<li>두 배열의 길이가 다르다면, 배열의 길이가 긴 쪽이 더 큽니다.</li>
<li>배열의 길이가 같다면 각 배열에 있는 모든 원소의 합을 비교하여 다르다면 더 큰 쪽이 크고, 같다면 같습니다.</li>
</ul>
<p>두 정수 배열 arr1과 arr2가 주어질 때, 위에서 정의한 배열의 대소관계에 대하여 arr2가 크다면 -1, arr1이 크다면 1, 두 배열이 같다면 0을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-88" class="level3" data-number="20.2.1">
<h3 data-number="20.2.1" class="anchored" data-anchor-id="파이썬-88"><span class="header-section-number">20.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb179" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb179-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb179-2"></span>
<span id="cb179-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr1: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], arr2: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb179-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr1) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr2):</span>
<span id="cb179-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr1) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb179-6"></span>
<span id="cb179-7">    sum1, sum2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(arr1), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(arr2)</span>
<span id="cb179-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sum1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> sum2:</span>
<span id="cb179-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sum2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> sum1 <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb179-10"></span>
<span id="cb179-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-88" class="level3" data-number="20.2.2">
<h3 data-number="20.2.2" class="anchored" data-anchor-id="러스트-88"><span class="header-section-number">20.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb180" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb180-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb180-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb180-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb180-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb180-5"></span>
<span id="cb180-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sum1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> sum2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sum1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> sum2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb180-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sum2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> sum1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb180-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb180-11"></span>
<span id="cb180-12">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb180-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb180-14"></span>
<span id="cb180-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb180-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb180-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb180-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> arr2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-19">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb180-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-묶기" class="level2" data-number="20.3">
<h2 data-number="20.3" class="anchored" data-anchor-id="문자열-묶기"><span class="header-section-number">20.3</span> 문자열 묶기</h2>
<p>문자열 배열 strArr이 주어집니다. strArr의 원소들을 길이가 같은 문자열들끼리 그룹으로 묶었을 때 가장 개수가 많은 그룹의 크기를 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-89" class="level3" data-number="20.3.1">
<h3 data-number="20.3.1" class="anchored" data-anchor-id="파이썬-89"><span class="header-section-number">20.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb181" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb181-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Counter</span>
<span id="cb181-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb181-3"></span>
<span id="cb181-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(strArr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb181-5">    length_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Counter(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(s) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> strArr)</span>
<span id="cb181-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(length_counts.values())</span></code></pre></div>
</section>
<section id="러스트-89" class="level3" data-number="20.3.2">
<h3 data-number="20.3.2" class="anchored" data-anchor-id="러스트-89"><span class="header-section-number">20.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb182" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb182-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-2"></span>
<span id="cb182-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> length_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashMap::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-5"></span>
<span id="cb182-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>str_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>length_counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>entry(len)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>or_insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-10"></span>
<span id="cb182-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>length_counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>values()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap_or(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb182-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb182-13"></span>
<span id="cb182-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb182-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apple"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cherry"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fig"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grape"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str_arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb182-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열의-길이에-따라-다른-연산하기" class="level2" data-number="20.4">
<h2 data-number="20.4" class="anchored" data-anchor-id="배열의-길이에-따라-다른-연산하기"><span class="header-section-number">20.4</span> 배열의 길이에 따라 다른 연산하기</h2>
<p>정수 배열 arr과 정수 n이 매개변수로 주어집니다. arr의 길이가 홀수라면 arr의 모든 짝수 인덱스 위치에 n을 더한 배열을, arr의 길이가 짝수라면 arr의 모든 홀수 인덱스 위치에 n을 더한 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-90" class="level3" data-number="20.4.1">
<h3 data-number="20.4.1" class="anchored" data-anchor-id="파이썬-90"><span class="header-section-number">20.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb183" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb183-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb183-2"></span>
<span id="cb183-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb183-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 배열의 길이가 홀수인 경우</span></span>
<span id="cb183-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> num <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(arr)]</span>
<span id="cb183-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 배열의 길이가 짝수인 경우</span></span>
<span id="cb183-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> num <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(arr)]</span></code></pre></div>
</section>
<section id="러스트-90" class="level3" data-number="20.4.2">
<h3 data-number="20.4.2" class="anchored" data-anchor-id="러스트-90"><span class="header-section-number">20.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb184" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb184-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">use</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::collections::</span>HashMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-2"></span>
<span id="cb184-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str_arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> length_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">HashMap::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-5"></span>
<span id="cb184-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>str_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>length_counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>entry(len)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>or_insert(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb184-10"></span>
<span id="cb184-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>length_counts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>values()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap_or(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb184-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb184-13"></span>
<span id="cb184-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb184-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str_arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apple"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cherry"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fig"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grape"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str_arr)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-17">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb184-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="뒤에서-5등까지" class="level2" data-number="20.5">
<h2 data-number="20.5" class="anchored" data-anchor-id="뒤에서-5등까지"><span class="header-section-number">20.5</span> 뒤에서 5등까지</h2>
<p>정수로 이루어진 리스트 num_list가 주어집니다. num_list에서 가장 작은 5개의 수를 오름차순으로 담은 리스트를 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-91" class="level3" data-number="20.5.1">
<h3 data-number="20.5.1" class="anchored" data-anchor-id="파이썬-91"><span class="header-section-number">20.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb185" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb185-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb185-2"></span>
<span id="cb185-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb185-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(num_list)[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
</section>
<section id="러스트-91" class="level3" data-number="20.5.2">
<h3 data-number="20.5.2" class="anchored" data-anchor-id="러스트-91"><span class="header-section-number">20.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb186" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb186-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb186-2">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-3">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>take(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb186-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb186-5"></span>
<span id="cb186-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb186-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example input</span></span>
<span id="cb186-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb186-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-21-함수메서드" class="level1" data-number="21">
<h1 data-number="21"><span class="header-section-number">21</span> Day 21 함수(메서드)</h1>
<section id="뒤에서-5등-위로" class="level2" data-number="21.1">
<h2 data-number="21.1" class="anchored" data-anchor-id="뒤에서-5등-위로"><span class="header-section-number">21.1</span> 뒤에서 5등 위로</h2>
<p>수로 이루어진 리스트 num_list가 주어집니다. num_list에서 가장 작은 5개의 수를 제외한 수들을 오름차순으로 담은 리스트를 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb187" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb187-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb187-2"></span>
<span id="cb187-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb187-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(num_list)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:]</span></code></pre></div>
<section id="러스트-92" class="level3" data-number="21.1.1">
<h3 data-number="21.1.1" class="anchored" data-anchor-id="러스트-92"><span class="header-section-number">21.1.1</span> 러스트</h3>
<div class="sourceCode" id="cb188" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb188-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb188-2">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-3">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split_off(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb188-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb188-5"></span>
<span id="cb188-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb188-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> num_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">46</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">56</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-9">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb188-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="전국-대회-선발-고사" class="level2" data-number="21.2">
<h2 data-number="21.2" class="anchored" data-anchor-id="전국-대회-선발-고사"><span class="header-section-number">21.2</span> 전국 대회 선발 고사</h2>
<p>0번부터 n - 1번까지 n명의 학생 중 3명을 선발하는 전국 대회 선발 고사를 보았습니다. 등수가 높은 3명을 선발해야 하지만, 개인 사정으로 전국 대회에 참여하지 못하는 학생들이 있어 참여가 가능한 학생 중 등수가 높은 3명을 선발하기로 했습니다.</p>
<p>각 학생들의 선발 고사 등수를 담은 정수 배열 rank와 전국 대회 참여 가능 여부가 담긴 boolean 배열 attendance가 매개변수로 주어집니다. 전국 대회에 선발된 학생 번호들을 등수가 높은 순서대로 각각 a, b, c번이라고 할 때 <code>10000 × a + 100 × b + c</code>를 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-92" class="level3" data-number="21.2.1">
<h3 data-number="21.2.1" class="anchored" data-anchor-id="파이썬-92"><span class="header-section-number">21.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb189" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb189-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb189-2"></span>
<span id="cb189-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(rank: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], attendance: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb189-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 참석 가능한 학생들의 등수와 번호를 저장</span></span>
<span id="cb189-5">    available <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(r, i) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, r <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(rank) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> attendance[i]]</span>
<span id="cb189-6"></span>
<span id="cb189-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 등수를 기준으로 정렬</span></span>
<span id="cb189-8">    available.sort()</span>
<span id="cb189-9"></span>
<span id="cb189-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 상위 3명 선택</span></span>
<span id="cb189-11">    top_3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb189-12"></span>
<span id="cb189-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 계산</span></span>
<span id="cb189-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> top_3[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> top_3[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> top_3[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</section>
<section id="러스트-93" class="level3" data-number="21.2.2">
<h3 data-number="21.2.2" class="anchored" data-anchor-id="러스트-93"><span class="header-section-number">21.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb190" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb190-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(rank<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> attendance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb190-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> available<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()</span>
<span id="cb190-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate()</span>
<span id="cb190-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> attendance[i])</span>
<span id="cb190-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>r)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i))</span>
<span id="cb190-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-7"></span>
<span id="cb190-8">    available<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sort_by_key(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>(r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> r)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-9"></span>
<span id="cb190-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> top_3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&amp;</span>(<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>take(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-11"></span>
<span id="cb190-12">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> top_3[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> top_3[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> top_3[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb190-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb190-14"></span>
<span id="cb190-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb190-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> attendance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-18"></span>
<span id="cb190-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(rank<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> attendance)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-20">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb190-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="정수-부분" class="level2" data-number="21.3">
<h2 data-number="21.3" class="anchored" data-anchor-id="정수-부분"><span class="header-section-number">21.3</span> 정수 부분</h2>
<p>실수 flo가 매개 변수로 주어질 때, flo의 정수 부분을 return하도록 solution 함수를 완성해주세요.</p>
<section id="파이썬-93" class="level3" data-number="21.3.1">
<h3 data-number="21.3.1" class="anchored" data-anchor-id="파이썬-93"><span class="header-section-number">21.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb191" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb191-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(flo: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb191-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(flo)</span></code></pre></div>
</section>
<section id="러스트-94" class="level3" data-number="21.3.2">
<h3 data-number="21.3.2" class="anchored" data-anchor-id="러스트-94"><span class="header-section-number">21.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb192" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb192-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(flo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">f64</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb192-2">    flo <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb192-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb192-4"></span>
<span id="cb192-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb192-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.42</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">69.32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.14</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-7"></span>
<span id="cb192-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> flo <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb192-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(flo)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"입력: {}, 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> flo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb192-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb192-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열-정수의-합" class="level2" data-number="21.4">
<h2 data-number="21.4" class="anchored" data-anchor-id="문자열-정수의-합"><span class="header-section-number">21.4</span> 문자열 정수의 합</h2>
<p>한 자리 정수로 이루어진 문자열 num_str이 주어질 때, 각 자리수의 합을 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb193" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb193-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_str: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb193-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(digit) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> digit <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_str)</span></code></pre></div>
<section id="러스트-95" class="level3" data-number="21.4.1">
<h3 data-number="21.4.1" class="anchored" data-anchor-id="러스트-95"><span class="header-section-number">21.4.1</span> 러스트</h3>
<div class="sourceCode" id="cb194" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb194-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-2">    num_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()</span>
<span id="cb194-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_digit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb194-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>)</span>
<span id="cb194-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sum()</span>
<span id="cb194-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb194-7"></span>
<span id="cb194-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"456"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"789"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9999"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-10"></span>
<span id="cb194-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num_str <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb194-12">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_str)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-13">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"입력: {}, 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb194-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb194-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열을-정수로-변환하기" class="level2" data-number="21.5">
<h2 data-number="21.5" class="anchored" data-anchor-id="문자열을-정수로-변환하기"><span class="header-section-number">21.5</span> 문자열을 정수로 변환하기</h2>
<p>숫자로만 이루어진 문자열 n_str이 주어질 때, n_str을 정수로 변환하여 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb195" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb195-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n_str:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb195-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n_str)</span></code></pre></div>
<section id="러스트-96" class="level3" data-number="21.5.1">
<h3 data-number="21.5.1" class="anchored" data-anchor-id="러스트-96"><span class="header-section-number">21.5.1</span> 러스트</h3>
<div class="sourceCode" id="cb196" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb196-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-2">    n_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()</span>
<span id="cb196-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb196-4"></span>
<span id="cb196-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"456"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"789"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9999"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb196-7"></span>
<span id="cb196-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n_str <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb196-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n_str)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb196-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"입력: {}, 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb196-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb196-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-22-함수메서드-조건문-활용" class="level1" data-number="22">
<h1 data-number="22"><span class="header-section-number">22</span> Day 22 함수(메서드), 조건문 활용</h1>
<section id="떼기" class="level2" data-number="22.1">
<h2 data-number="22.1" class="anchored" data-anchor-id="떼기"><span class="header-section-number">22.1</span> 0 떼기</h2>
<p>정수로 이루어진 문자열 n_str이 주어질 때, n_str의 가장 왼쪽에 처음으로 등장하는 0들을 뗀 문자열을 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb197" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb197-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n_str:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb197-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n_str))</span></code></pre></div>
<section id="러스트-97" class="level3" data-number="22.1.1">
<h3 data-number="22.1.1" class="anchored" data-anchor-id="러스트-97"><span class="header-section-number">22.1.1</span> 러스트</h3>
<div class="sourceCode" id="cb198" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb198-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb198-2">    n_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb198-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb198-4"></span>
<span id="cb198-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb198-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"00123"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0456"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"000789"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0000"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-7"></span>
<span id="cb198-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n_str <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb198-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n_str)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"입력: {}, 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb198-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb198-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="두-수의-합" class="level2" data-number="22.2">
<h2 data-number="22.2" class="anchored" data-anchor-id="두-수의-합"><span class="header-section-number">22.2</span> 두 수의 합</h2>
<p>0 이상의 두 정수가 문자열 a, b로 주어질 때, a + b의 값을 문자열로 return 하는 solution 함수를 작성해 주세요. ### 파이썬</p>
<div class="sourceCode" id="cb199" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb199-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb199-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(a) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(b))</span></code></pre></div>
<section id="러스트-98" class="level3" data-number="22.2.1">
<h3 data-number="22.2.1" class="anchored" data-anchor-id="러스트-98"><span class="header-section-number">22.2.1</span> 러스트</h3>
<div class="sourceCode" id="cb200" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb200-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-2">    (a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">parse::</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unwrap())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb200-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb200-4"></span>
<span id="cb200-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"456"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"200"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"999"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-7"></span>
<span id="cb200-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb200-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"입력: ({} + {}), 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb200-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb200-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="문자열로-변환" class="level2" data-number="22.3">
<h2 data-number="22.3" class="anchored" data-anchor-id="문자열로-변환"><span class="header-section-number">22.3</span> 문자열로 변환</h2>
<p>정수 n이 주어질 때, n을 문자열로 변환하여 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb201" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb201-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb201-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(n)</span></code></pre></div>
<section id="러스트-99" class="level3" data-number="22.3.1">
<h3 data-number="22.3.1" class="anchored" data-anchor-id="러스트-99"><span class="header-section-number">22.3.1</span> 러스트</h3>
<div class="sourceCode" id="cb202" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb202-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb202-2">    n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()</span>
<span id="cb202-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb202-4"></span>
<span id="cb202-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb202-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">456</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">789</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb202-7"></span>
<span id="cb202-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb202-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb202-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"입력: {}, 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb202-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb202-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="배열의-원소-삭제하기" class="level2" data-number="22.4">
<h2 data-number="22.4" class="anchored" data-anchor-id="배열의-원소-삭제하기"><span class="header-section-number">22.4</span> 배열의 원소 삭제하기</h2>
<p>정수 배열 arr과 delete_list가 있습니다. arr의 원소 중 delete_list의 원소를 모두 삭제하고 남은 원소들은 기존의 arr에 있던 순서를 유지한 배열을 return 하는 solution 함수를 작성해 주세요. ### 파이썬</p>
<div class="sourceCode" id="cb203" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb203-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb203-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], delete_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb203-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [x <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> delete_list]</span></code></pre></div>
<section id="러스트-100" class="level3" data-number="22.4.1">
<h3 data-number="22.4.1" class="anchored" data-anchor-id="러스트-100"><span class="header-section-number">22.4.1</span> 러스트</h3>
<div class="sourceCode" id="cb204" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb204-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> delete_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb204-2">    arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&amp;</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>delete_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>x))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb204-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb204-4"></span>
<span id="cb204-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb204-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb204-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> delete_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb204-8"></span>
<span id="cb204-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> delete_list)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb204-10">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb204-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="부분-문자열인지-확인하기" class="level2" data-number="22.5">
<h2 data-number="22.5" class="anchored" data-anchor-id="부분-문자열인지-확인하기"><span class="header-section-number">22.5</span> 부분 문자열인지 확인하기</h2>
<p>부분 문자열이란 문자열에서 연속된 일부분에 해당하는 문자열을 의미합니다. 예를 들어, 문자열 “ana”, “ban”, “anana”, “banana”, “n”는 모두 문자열 “banana”의 부분 문자열이지만, “aaa”, “bnana”, “wxyz”는 모두 “banana”의 부분 문자열이 아닙니다.</p>
<p>문자열 my_string과 target이 매개변수로 주어질 때, target이 문자열 my_string의 부분 문자열이라면 1을, 아니라면 0을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-94" class="level3" data-number="22.5.1">
<h3 data-number="22.5.1" class="anchored" data-anchor-id="파이썬-94"><span class="header-section-number">22.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb205" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb205-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(my_string: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, target: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb205-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(target <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_string)</span></code></pre></div>
</section>
<section id="러스트-101" class="level3" data-number="22.5.2">
<h3 data-number="22.5.2" class="anchored" data-anchor-id="러스트-101"><span class="header-section-number">22.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb206" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb206-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb206-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(target) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb206-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb206-4"></span>
<span id="cb206-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb206-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb206-7">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcdef"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ab"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb206-8">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello world"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bye"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb206-9">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"on"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb206-10">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rust"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb206-11">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb206-12"></span>
<span id="cb206-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> target) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb206-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> target)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb206-15">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_string: '{}', target: '{}', 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> target<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb206-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb206-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-23-조건문-활용" class="level1" data-number="23">
<h1 data-number="23"><span class="header-section-number">23</span> Day 23 조건문 활용</h1>
<section id="부분-문자열" class="level2" data-number="23.1">
<h2 data-number="23.1" class="anchored" data-anchor-id="부분-문자열"><span class="header-section-number">23.1</span> 부분 문자열</h2>
<p>어떤 문자열 A가 다른 문자열 B안에 속하면 A를 B의 부분 문자열이라고 합니다. 예를 들어 문자열 “abc”는 문자열 “aabcc”의 부분 문자열입니다.</p>
<p>문자열 str1과 str2가 주어질 때, str1이 str2의 부분 문자열이라면 1을 부분 문자열이 아니라면 0을 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb207" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb207-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(str1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, str2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb207-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> str1 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> str2 <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
<section id="러스트-102" class="level3" data-number="23.1.1">
<h3 data-number="23.1.1" class="anchored" data-anchor-id="러스트-102"><span class="header-section-number">23.1.1</span> 러스트</h3>
<div class="sourceCode" id="cb208" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb208-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb208-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> str2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(str1) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb208-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb208-4"></span>
<span id="cb208-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb208-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb208-7">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abc"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcdef"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb208-8">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"world"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb208-9">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rust"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rust is great"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb208-10">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"empty"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb208-11">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb208-12"></span>
<span id="cb208-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb208-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb208-15">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"str1: '{}', str2: '{}', 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> str2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb208-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb208-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="꼬리-문자열" class="level2" data-number="23.2">
<h2 data-number="23.2" class="anchored" data-anchor-id="꼬리-문자열"><span class="header-section-number">23.2</span> 꼬리 문자열</h2>
<p>문자열들이 담긴 리스트가 주어졌을 때, 모든 문자열들을 순서대로 합친 문자열을 꼬리 문자열이라고 합니다. 꼬리 문자열을 만들 때 특정 문자열을 포함한 문자열은 제외시키려고 합니다. 예를 들어 문자열 리스트 <code>["abc", "def", "ghi"]</code>가 있고 문자열 “ef”를 포함한 문자열은 제외하고 꼬리 문자열을 만들면 “abcghi”가 됩니다.</p>
<p>문자열 리스트 str_list와 제외하려는 문자열 ex가 주어질 때, str_list에서 ex를 포함한 문자열을 제외하고 만든 꼬리 문자열을 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb209" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb209-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb209-2"></span>
<span id="cb209-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(str_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], ex: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb209-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([s <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> s <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> str_list <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ex <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> s])</span></code></pre></div>
<section id="러스트-103" class="level3" data-number="23.2.1">
<h3 data-number="23.2.1" class="anchored" data-anchor-id="러스트-103"><span class="header-section-number">23.2.1</span> 러스트</h3>
<div class="sourceCode" id="cb210" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb210-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(str_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> ex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb210-2">    str_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()</span>
<span id="cb210-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>filter(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(ex))</span>
<span id="cb210-4">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb210-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb210-6"></span>
<span id="cb210-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb210-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> str_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"world"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"example"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rust"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb210-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> ex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ex"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb210-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(str_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ex)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb210-11">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb210-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="정수-찾기" class="level2" data-number="23.3">
<h2 data-number="23.3" class="anchored" data-anchor-id="정수-찾기"><span class="header-section-number">23.3</span> 정수 찾기</h2>
<p>정수 리스트 num_list와 찾으려는 정수 n이 주어질 때, num_list안에 n이 있으면 1을 없으면 0을 return하도록 solution 함수를 완성해주세요. ### 파이썬</p>
<div class="sourceCode" id="cb211" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb211-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb211-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(num_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb211-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> num_list)</span></code></pre></div>
<section id="러스트-104" class="level3" data-number="23.3.1">
<h3 data-number="23.3.1" class="anchored" data-anchor-id="러스트-104"><span class="header-section-number">23.3.1</span> 러스트</h3>
<div class="sourceCode" id="cb212" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb212-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb212-2">    num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>n) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span></span>
<span id="cb212-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb212-4"></span>
<span id="cb212-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb212-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb212-7">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb212-8">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">98</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">67</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb212-9">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb212-10">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb212-11">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb212-12"></span>
<span id="cb212-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb212-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb212-15">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num_list: {:?}, n: {}, 결과: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> num_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb212-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb212-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="주사위-게임-1" class="level2" data-number="23.4">
<h2 data-number="23.4" class="anchored" data-anchor-id="주사위-게임-1"><span class="header-section-number">23.4</span> 주사위 게임 1</h2>
<p>1부터 6까지 숫자가 적힌 주사위가 두 개 있습니다. 두 주사위를 굴렸을 때 나온 숫자를 각각 a, b라고 했을 때 얻는 점수는 다음과 같습니다.</p>
<ul>
<li>a와 b가 모두 홀수라면 <img src="https://latex.codecogs.com/png.latex?a2%20+%20b2"> 점을 얻습니다.</li>
<li>a와 b 중 하나만 홀수라면 <img src="https://latex.codecogs.com/png.latex?2%20%C3%97%20(a%20+%20b)"> 점을 얻습니다.</li>
<li>a와 b 모두 홀수가 아니라면 <img src="https://latex.codecogs.com/png.latex?%7Ca%20-%20b%7C"> 점을 얻습니다.</li>
</ul>
<p>두 정수 a와 b가 매개변수로 주어질 때, 얻는 점수를 return 하는 solution 함수를 작성해 주세요. ### 파이썬</p>
<div class="sourceCode" id="cb213" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb213-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb213-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb213-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb213-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb213-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b)</span>
<span id="cb213-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb213-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b)</span></code></pre></div>
<section id="러스트-105" class="level3" data-number="23.4.1">
<h3 data-number="23.4.1" class="anchored" data-anchor-id="러스트-105"><span class="header-section-number">23.4.1</span> 러스트</h3>
<div class="sourceCode" id="cb214" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb214-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb214-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb214-3">        a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pow(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>pow(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb214-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb214-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b)</span>
<span id="cb214-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb214-7">        (a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>abs()</span>
<span id="cb214-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb214-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb214-10"></span>
<span id="cb214-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb214-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb214-13"></span>
<span id="cb214-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb214-15">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb214-16">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a: {}, b: {}, result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb214-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb214-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="날짜-비교하기" class="level2" data-number="23.5">
<h2 data-number="23.5" class="anchored" data-anchor-id="날짜-비교하기"><span class="header-section-number">23.5</span> 날짜 비교하기</h2>
<p>정수 배열 date1과 date2가 주어집니다. 두 배열은 각각 날짜를 나타내며 <img src="https://latex.codecogs.com/png.latex?%5Byear,%20month,%20day%5D"> 꼴로 주어집니다. 각 배열에서 year는 연도를, month는 월을, day는 날짜를 나타냅니다. 만약 date1이 date2보다 앞서는 날짜라면 1을, 아니면 0을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-95" class="level3" data-number="23.5.1">
<h3 data-number="23.5.1" class="anchored" data-anchor-id="파이썬-95"><span class="header-section-number">23.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb215" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb215-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb215-2"></span>
<span id="cb215-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(date1:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], date2:List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb215-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb215-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> date1[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> date2[i]:</span>
<span id="cb215-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb215-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> date1[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> date2[i]:</span>
<span id="cb215-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb215-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
</section>
<section id="러스트-106" class="level3" data-number="23.5.2">
<h3 data-number="23.5.2" class="anchored" data-anchor-id="러스트-106"><span class="header-section-number">23.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb216" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb216-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(date1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> date2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb216-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb216-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> date1[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> date2[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb216-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb216-5">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> date1[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> date2[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb216-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb216-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb216-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb216-9">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb216-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb216-11"></span>
<span id="cb216-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb216-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb216-14">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">29</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb216-15">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb216-16">        (<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">31</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb216-17">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb216-18"></span>
<span id="cb216-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (date1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> date2) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb216-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(date1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> date2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb216-21">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date1: {:?}, date2: {:?}, result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> date1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> date2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb216-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb216-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-24-조건문-활용-반복문-활용-이차원-리스트배열" class="level1" data-number="24">
<h1 data-number="24"><span class="header-section-number">24</span> Day 24 조건문 활용, 반복문 활용, 이차원 리스트(배열)</h1>
<section id="커피-심부름" class="level2" data-number="24.1">
<h2 data-number="24.1" class="anchored" data-anchor-id="커피-심부름"><span class="header-section-number">24.1</span> 커피 심부름</h2>
<p>팀의 막내인 철수는 아메리카노와 카페 라테만 판매하는 카페에서 팀원들의 커피를 사려고 합니다. 아메리카노와 카페 라테의 가격은 차가운 것과 뜨거운 것 상관없이 각각 4500, 5000원입니다. 각 팀원에게 마실 메뉴를 적어달라고 하였고, 그 중에서 메뉴만 적은 팀원의 것은 차가운 것으로 통일하고 “아무거나”를 적은 팀원의 것은 차가운 아메리카노로 통일하기로 하였습니다.</p>
<p>각 직원이 적은 메뉴가 문자열 배열 order로 주어질 때, 카페에서 결제하게 될 금액을 return 하는 solution 함수를 작성해주세요. order의 원소는 아래의 것들만 들어오고, 각각의 의미는 다음과 같습니다. ### 파이썬</p>
<div class="sourceCode" id="cb217" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb217-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb217-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(order: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb217-3">    total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb217-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> drink <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> order:</span>
<span id="cb217-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cafelatte'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> drink:</span>
<span id="cb217-6">            total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span></span>
<span id="cb217-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb217-8">            total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4500</span></span>
<span id="cb217-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total</span></code></pre></div>
<section id="러스트-107" class="level3" data-number="24.1.1">
<h3 data-number="24.1.1" class="anchored" data-anchor-id="러스트-107"><span class="header-section-number">24.1.1</span> 러스트</h3>
<div class="sourceCode" id="cb218" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb218-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb218-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb218-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> drink <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb218-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> drink<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cafelatte"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb218-5">            total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb218-6">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb218-7">            total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb218-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb218-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb218-10">    total</span>
<span id="cb218-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb218-12"></span>
<span id="cb218-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb218-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_orders <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb218-15">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cafelatte"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"americano"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cafelatte"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb218-16">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"americano"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"americano"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb218-17">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cafelatte"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"americano"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"espresso"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb218-18">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb218-19"></span>
<span id="cb218-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> order <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_orders <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb218-21">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb218-22">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Order: {:?}, Total: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> total)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb218-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb218-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="그림-확대" class="level2" data-number="24.2">
<h2 data-number="24.2" class="anchored" data-anchor-id="그림-확대"><span class="header-section-number">24.2</span> 그림 확대</h2>
<p>직사각형 형태의 그림 파일이 있고, 이 그림 파일은 1 × 1 크기의 정사각형 크기의 픽셀로 이루어져 있습니다. 이 그림 파일을 나타낸 문자열 배열 picture과 정수 k가 매개변수로 주어질 때, 이 그림 파일을 가로 세로로 k배 늘린 그림 파일을 나타내도록 문자열 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-96" class="level3" data-number="24.2.1">
<h3 data-number="24.2.1" class="anchored" data-anchor-id="파이썬-96"><span class="header-section-number">24.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb219" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb219-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb219-2"></span>
<span id="cb219-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(picture: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb219-4">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb219-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> picture:</span>
<span id="cb219-6">        expanded_row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([char <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> row])</span>
<span id="cb219-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(k):</span>
<span id="cb219-8">            result.append(expanded_row)</span>
<span id="cb219-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
</section>
<section id="러스트-108" class="level3" data-number="24.2.2">
<h3 data-number="24.2.2" class="anchored" data-anchor-id="러스트-108"><span class="header-section-number">24.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb220" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb220-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(picture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb220-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> picture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb220-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> expanded_row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>flat_map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">std::iter::</span>repeat(c)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>take(k))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb220-6">            result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(expanded_row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clone())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb220-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb220-9">    result</span>
<span id="cb220-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb220-11"></span>
<span id="cb220-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb220-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> picture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abc"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"def"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_string()]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(picture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-16">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb220-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="조건에-맞게-수열-변환하기-3" class="level2" data-number="24.3">
<h2 data-number="24.3" class="anchored" data-anchor-id="조건에-맞게-수열-변환하기-3"><span class="header-section-number">24.3</span> 조건에 맞게 수열 변환하기 3</h2>
<p>정수 배열 arr와 자연수 k가 주어집니다. 만약 k가 홀수라면 arr의 모든 원소에 k를 곱하고, k가 짝수라면 arr의 모든 원소에 k를 더합니다. 이러한 변환을 마친 후의 arr를 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-97" class="level3" data-number="24.3.1">
<h3 data-number="24.3.1" class="anchored" data-anchor-id="파이썬-97"><span class="header-section-number">24.3.1</span> 파이썬</h3>
<div class="sourceCode" id="cb221" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb221-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb221-2"></span>
<span id="cb221-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb221-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># k가 홀수인 경우</span></span>
<span id="cb221-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr]</span>
<span id="cb221-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># k가 짝수인 경우</span></span>
<span id="cb221-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr]</span></code></pre></div>
</section>
<section id="러스트-109" class="level3" data-number="24.3.2">
<h3 data-number="24.3.2" class="anchored" data-anchor-id="러스트-109"><span class="header-section-number">24.3.2</span> 러스트</h3>
<div class="sourceCode" id="cb222" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb222-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb222-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb222-3">        arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb222-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb222-5">        arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>into_iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb222-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb222-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="l로-만들기" class="level2" data-number="24.4">
<h2 data-number="24.4" class="anchored" data-anchor-id="l로-만들기"><span class="header-section-number">24.4</span> l로 만들기</h2>
<p>알파벳 소문자로 이루어진 문자열 myString이 주어집니다. 알파벳 순서에서 “l”보다 앞서는 모든 문자를 “l”로 바꾼 문자열을 return 하는 solution 함수를 완성해 주세요. ### 파이썬</p>
<div class="sourceCode" id="cb223" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb223-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(myString: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb223-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> c <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> myString])</span></code></pre></div>
<section id="러스트-110" class="level3" data-number="24.4.1">
<h3 data-number="24.4.1" class="anchored" data-anchor-id="러스트-110"><span class="header-section-number">24.4.1</span> 러스트</h3>
<div class="sourceCode" id="cb224" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb224-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">String</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb224-2">    my_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>chars()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb224-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb224-4"></span>
<span id="cb224-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb224-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"abcdevwxyz"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jjnnllkkmm"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"task"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb224-7"></span>
<span id="cb224-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> case <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb224-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(case)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb224-10">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input: {}, Output: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb224-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb224-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="특별한-이차원-배열-1" class="level2" data-number="24.5">
<h2 data-number="24.5" class="anchored" data-anchor-id="특별한-이차원-배열-1"><span class="header-section-number">24.5</span> 특별한 이차원 배열 1</h2>
<p>정수 n이 매개변수로 주어질 때, 다음과 같은 <img src="https://latex.codecogs.com/png.latex?n%20%C3%97%20n"> 크기의 이차원 배열 arr를 return 하는 solution 함수를 작성해 주세요. - <img src="https://latex.codecogs.com/png.latex?arr%5Bi%5D%5Bj%5D%20(0%20%E2%89%A4%20i,%20j%20%3C%20n)%EC%9D%98%20%EA%B0%92%EC%9D%80%20i%20=%20j%EB%9D%BC%EB%A9%B4%201,%20%EC%95%84%EB%8B%88%EB%9D%BC%EB%A9%B4%200%EC%9E%85%EB%8B%88%EB%8B%A4."></p>
<section id="파이썬-98" class="level3" data-number="24.5.1">
<h3 data-number="24.5.1" class="anchored" data-anchor-id="파이썬-98"><span class="header-section-number">24.5.1</span> 파이썬</h3>
<div class="sourceCode" id="cb225" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb225-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb225-2"></span>
<span id="cb225-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]:</span>
<span id="cb225-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n)] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n)]</span></code></pre></div>
</section>
<section id="러스트-111" class="level3" data-number="24.5.2">
<h3 data-number="24.5.2" class="anchored" data-anchor-id="러스트-111"><span class="header-section-number">24.5.2</span> 러스트</h3>
<div class="sourceCode" id="cb226" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb226-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb226-2">    (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb226-3">        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>map(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb226-4">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb226-5">        )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb226-6">    )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>collect()</span>
<span id="cb226-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb226-8"></span>
<span id="cb226-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb226-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb226-11"></span>
<span id="cb226-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb226-13">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb226-14">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n = {}:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb226-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb226-16">            <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> row)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb226-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb226-18">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb226-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb226-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="day-25-이차원-리스트배열" class="level1" data-number="25">
<h1 data-number="25"><span class="header-section-number">25</span> Day 25 이차원 리스트(배열)</h1>
<section id="정수를-나선형으로-배치하기" class="level2" data-number="25.1">
<h2 data-number="25.1" class="anchored" data-anchor-id="정수를-나선형으로-배치하기"><span class="header-section-number">25.1</span> 정수를 나선형으로 배치하기</h2>
<p>양의 정수 n이 매개변수로 주어집니다. <img src="https://latex.codecogs.com/png.latex?n%20%C3%97%20n"> 배열에 1부터 n2 까지 정수를 인덱스 <img src="https://latex.codecogs.com/png.latex?%5B0%5D%5B0%5D">부터 시계방향 나선형으로 배치한 이차원 배열을 return 하는 solution 함수를 작성해 주세요.</p>
<section id="파이썬-99" class="level3" data-number="25.1.1">
<h3 data-number="25.1.1" class="anchored" data-anchor-id="파이썬-99"><span class="header-section-number">25.1.1</span> 파이썬</h3>
<div class="sourceCode" id="cb227" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb227-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb227-2"></span>
<span id="cb227-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(n:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb227-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># n x n 크기의 2차원 배열 초기화</span></span>
<span id="cb227-5">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n)] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n)]</span>
<span id="cb227-6"></span>
<span id="cb227-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시작 위치와 방향 설정</span></span>
<span id="cb227-8">    x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb227-9">    dx, dy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 처음에는 오른쪽으로 이동</span></span>
<span id="cb227-10"></span>
<span id="cb227-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1부터 n^2까지 숫자 채우기</span></span>
<span id="cb227-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb227-13">        answer[x][y] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i</span>
<span id="cb227-14"></span>
<span id="cb227-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다음 위치 계산</span></span>
<span id="cb227-16">        nx, ny <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dx, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dy</span>
<span id="cb227-17"></span>
<span id="cb227-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 방향 전환이 필요한 경우</span></span>
<span id="cb227-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> nx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> nx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> ny <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> ny <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> answer[nx][ny] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb227-20">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 방향 전환 (시계 방향)</span></span>
<span id="cb227-21">            dx, dy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dy, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>dx</span>
<span id="cb227-22">            nx, ny <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dx, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dy</span>
<span id="cb227-23"></span>
<span id="cb227-24">        x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nx, ny</span>
<span id="cb227-25"></span>
<span id="cb227-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-112" class="level3" data-number="25.1.2">
<h3 data-number="25.1.2" class="anchored" data-anchor-id="러스트-112"><span class="header-section-number">25.1.2</span> 러스트</h3>
<div class="sourceCode" id="cb228" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb228-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb228-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> n]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> n]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize a 2D array with zeros</span></span>
<span id="cb228-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Starting position</span></span>
<span id="cb228-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> dy) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initial direction: right</span></span>
<span id="cb228-5"></span>
<span id="cb228-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..=</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb228-7">        answer[x][y] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fill the current cell</span></span>
<span id="cb228-8"></span>
<span id="cb228-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the next position</span></span>
<span id="cb228-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (nx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ny) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">isize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">isize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dy)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb228-11"></span>
<span id="cb228-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if we need to change direction</span></span>
<span id="cb228-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> nx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> nx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">isize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ny <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> ny <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">isize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> answer[nx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>][ny <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb228-14">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Change direction (clockwise)</span></span>
<span id="cb228-15">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> (new_dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> new_dy) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (dy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>dx)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb228-16">            dx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb228-17">            dy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_dy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb228-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb228-19"></span>
<span id="cb228-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update position</span></span>
<span id="cb228-21">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">isize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dx) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb228-22">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (y <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">isize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dy) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">usize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb228-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb228-24"></span>
<span id="cb228-25">    answer</span>
<span id="cb228-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="특별한-이차원-배열-2" class="level2" data-number="25.2">
<h2 data-number="25.2" class="anchored" data-anchor-id="특별한-이차원-배열-2"><span class="header-section-number">25.2</span> 특별한 이차원 배열 2</h2>
<p><img src="https://latex.codecogs.com/png.latex?n%20%C3%97%20n"> 크기의 이차원 배열 arr이 매개변수로 주어질 때, arr이 다음을 만족하면 1을 아니라면 0을 return 하는 solution 함수를 작성해 주세요.</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?0%20%E2%89%A4%20i,%20j%20%3C%20n%EC%9D%B8%20%EC%A0%95%EC%88%98%20i,%20j%EC%97%90%20%EB%8C%80%ED%95%98%EC%97%AC%20arr%5Bi%5D%5Bj%5D%20=%20arr%5Bj%5D%5Bi%5D"></li>
</ul>
<section id="파이썬-100" class="level3" data-number="25.2.1">
<h3 data-number="25.2.1" class="anchored" data-anchor-id="파이썬-100"><span class="header-section-number">25.2.1</span> 파이썬</h3>
<div class="sourceCode" id="cb229" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb229-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb229-2"></span>
<span id="cb229-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb229-4">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr)</span>
<span id="cb229-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n):</span>
<span id="cb229-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n):</span>
<span id="cb229-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> arr[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> arr[j][i]:</span>
<span id="cb229-8">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb229-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
</section>
<section id="러스트-113" class="level3" data-number="25.2.2">
<h3 data-number="25.2.2" class="anchored" data-anchor-id="러스트-113"><span class="header-section-number">25.2.2</span> 러스트</h3>
<div class="sourceCode" id="cb230" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb230-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb230-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb230-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb230-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb230-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> arr[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> arr[j][i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb230-6">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb230-7">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb230-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb230-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb230-10">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb230-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb230-12"></span>
<span id="cb230-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb230-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb230-15">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">95</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">95</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb230-16">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">498</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">258</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">587</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">63</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">93</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">754</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">258</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">723</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">587</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">754</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">723</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">81</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb230-17">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb230-18"></span>
<span id="cb230-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb230-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(case<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb230-21">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test case {}: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb230-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb230-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="정사각형으로-만들기" class="level2" data-number="25.3">
<h2 data-number="25.3" class="anchored" data-anchor-id="정사각형으로-만들기"><span class="header-section-number">25.3</span> 정사각형으로 만들기</h2>
<p>이차원 정수 배열 arr이 매개변수로 주어집니다. arr의 행의 수가 더 많다면 열의 수가 행의 수와 같아지도록 각 행의 끝에 0을 추가하고, 열의 수가 더 많다면 행의 수가 열의 수와 같아지도록 각 열의 끝에 0을 추가한 이차원 배열을 return 하는 solution 함수를 작성해 주세요. ### 파이썬</p>
<div class="sourceCode" id="cb231" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb231-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb231-2"></span>
<span id="cb231-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(arr: List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]]:</span>
<span id="cb231-4">    rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr)</span>
<span id="cb231-5">    cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(arr[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb231-6">    max_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(rows, cols)</span>
<span id="cb231-7"></span>
<span id="cb231-8">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb231-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr:</span>
<span id="cb231-10">        new_row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (max_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(row))</span>
<span id="cb231-11">        result.append(new_row)</span>
<span id="cb231-12"></span>
<span id="cb231-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(result) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_size:</span>
<span id="cb231-14">        result.append([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> max_size)</span>
<span id="cb231-15"></span>
<span id="cb231-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span></code></pre></div>
<section id="러스트-114" class="level3" data-number="25.3.1">
<h3 data-number="25.3.1" class="anchored" data-anchor-id="러스트-114"><span class="header-section-number">25.3.1</span> 러스트</h3>
<div class="sourceCode" id="cb232" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb232-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb232-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arr[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> max_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>max(cols)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-5"></span>
<span id="cb232-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">::</span>new()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> arr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb232-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> new_row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-9">        new_row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize(max_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-10">        result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push(new_row)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb232-12"></span>
<span id="cb232-13">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize_with(max_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> max_size])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-14"></span>
<span id="cb232-15">    result</span>
<span id="cb232-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb232-17"></span>
<span id="cb232-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb232-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> test_cases <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb232-20">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb232-21">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb232-22">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb232-23">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-24"></span>
<span id="cb232-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> case) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> test_cases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>iter()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>enumerate() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb232-26">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(case<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>to_vec())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-27">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test case {}:"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb232-29">            <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{:?}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> row)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-30">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb232-31">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb232-32">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb232-33"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="이차원-배열-대각선-순회하기" class="level2" data-number="25.4">
<h2 data-number="25.4" class="anchored" data-anchor-id="이차원-배열-대각선-순회하기"><span class="header-section-number">25.4</span> 이차원 배열 대각선 순회하기</h2>
<p>2차원 정수 배열 board와 정수 k가 주어집니다. <img src="https://latex.codecogs.com/png.latex?i%20+%20j%20%3C=%20k">를 만족하는 모든 <img src="https://latex.codecogs.com/png.latex?(i,%20j)">에 대한 <code>board[i][j]</code>의 합을 return 하는 solution 함수를 완성해 주세요.</p>
<section id="파이썬-101" class="level3" data-number="25.4.1">
<h3 data-number="25.4.1" class="anchored" data-anchor-id="파이썬-101"><span class="header-section-number">25.4.1</span> 파이썬</h3>
<div class="sourceCode" id="cb233" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb233-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb233-2"></span>
<span id="cb233-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> solution(board: List[List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]], k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb233-4">    answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb233-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(board)):</span>
<span id="cb233-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(board[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])):</span>
<span id="cb233-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> k:</span>
<span id="cb233-8">                answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> board[i][j]</span>
<span id="cb233-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> answer</span></code></pre></div>
</section>
<section id="러스트-115" class="level3" data-number="25.4.2">
<h3 data-number="25.4.2" class="anchored" data-anchor-id="러스트-115"><span class="header-section-number">25.4.2</span> 러스트</h3>
<div class="sourceCode" id="cb234" style="background: #f1f3f5;"><pre class="sourceCode rust code-with-copy"><code class="sourceCode rust"><span id="cb234-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> solution(board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Vec</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb234-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">mut</span> answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb234-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb234-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>board[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>len() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb234-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">as</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">i32</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb234-6">                answer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> board[i][j]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb234-7">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb234-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb234-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb234-10">    answer</span>
<span id="cb234-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb234-12"></span>
<span id="cb234-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fn</span> main() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb234-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> board <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[</span>
<span id="cb234-15">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb234-16">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb234-17">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">vec!</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb234-18">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb234-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb234-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> solution(board<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb234-21">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">println!</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result: {}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb234-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>


</section>
</section>
</section>

 ]]></description>
  <category>Coding test</category>
  <category>Python</category>
  <category>Rust</category>
  <category>Programming</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Codingtest_training.html</guid>
  <pubDate>Sat, 11 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>쿼토로 시작하는 블로그</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Quarto_blog.html</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Quarto_blog.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Quarto_blog.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:50.0%"></a></p>
</figure>
</div>
<p>블로그는 많은 이유로 훌륭한 글쓰기 도구입니다. 그리고 쿼토(Quarto)는 몇번의 클릭만으로 블로그를 만들 수 있습니다. 게다가 커스터마이징이 쉽기도 합니다. 이 글은 쿼토를 이용한 블로그 만들기 가이드로 여러분의 소중한 시간을 절약하고 멋진 블로그를 시작하는 데 도움을 주기 위해 작성되었습니다.<sup>1</sup></p>
<section id="쿼토-블로그-시작하기" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 쿼토 블로그 시작하기</h1>
<p>솔직히 말해서 블로그를 처음 시작하는 단계에서 블로그 툴을 다루는데 많은 시간을 쓰는 것은 좋은 생각이 아닙니다. 중요한 것은 <strong>꾸준히 글을 쓰는 것</strong>이지 블로그를 화려하게 꾸미는 것이 아닙니다. 따라서 처음에는 기본 제공되는 테마와 랜딩 페이지를 사용하세요.</p>
<section id="당신이-블로그를-해야하는-이유" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="당신이-블로그를-해야하는-이유"><span class="header-section-number">1.1</span> 당신이 블로그를 해야하는 이유</h2>
<p>블로그를 시작하는 이유가 명확하지 않다면 몇 가지 예시를 제공하겠습니다.</p>
<ol type="1">
<li>배우기: 글쓰기는 얕은 지식을 막아줍니다. 블로그 글을 작성하는 과정에서 종종 제가 틀렸다는 사실을 깨닫곤 합니다. 글쓰기가 효과적인 학습 도구인 이유가 바로 이 때문이죠.</li>
<li>다른 사람에 도움주기: 자기가 아는 것을 공유하면서 비슷한 문제에 봉착한 다른 이들을 도와줄 수 있습니다. 전문가가 아니더라도 걱정하지는 마세요. 사실 사람들은 보통 전문가보다는 다른 학습자, 즉 자신보다 단계만 조금 앞선 사람에게서 배우는 것을 더 선호합니다. 왜냐하면 전문가들은 초심자들이 겪는 어려움을 간과하는 경향이 있기 때문이죠.</li>
<li>포트폴리오 및 취업 기회: 인터넷에 콘텐츠를 게시하면 누구든지 볼 수 있습니다. 이는 자신의 기술을 과시하는 데 유용합니다. 또한 개인적인 경험을 이야기하자면 공개적으로 글을 쓰는 것은 새로운 직업 기회로 연결될 수도 있습니다. 누가 당신의 블로그를 읽고 함께 일하기를 원할 수도 있으니까요.</li>
</ol>
</section>
<section id="블로그-초기-설정하기" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="블로그-초기-설정하기"><span class="header-section-number">1.2</span> 블로그 초기 설정하기</h2>
<p>쿼토를 로컬에 설치했다면 블로그를 만드는 것은 정말 간단합니다. 터미널에 다음 입력어를 입력합니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> create-project myblog <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--type</span> website:blog</span></code></pre></div>
<p>더 자세한 것은 Beatriz Milz가 작성한 <a href="https://beamilz.com/posts/2022-06-05-creating-a-blog-with-quarto/en/">10 단계로 쿼토 블로그를 시작하는 방법</a>을 참고하세요.</p>
</section>
<section id="간단한-설정하기" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="간단한-설정하기"><span class="header-section-number">1.3</span> 간단한 설정하기</h2>
<p>루트 폴더에 있는 <code>_quarto.yml</code> 파일에는 쿼토 블로그에 대한 여러가지 설정이 존재합니다. 아래 예시 파일을 참고하세요.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>_quarto.yml</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="_quarto.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> website</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">website</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quarto blog"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 블로그 제목 설정</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">site-url</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://quarto-blog.com</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 블로그 URL 설정 (나중에 RSS 피드에 중요)</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">description</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This is personal Blog."</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 블로그 설명</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navbar</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 메뉴바 설정</span></span>
<span id="cb2-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">right</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Blog</span></span>
<span id="cb2-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> index.qmd </span></span>
<span id="cb2-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> github</span></span>
<span id="cb2-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/[xxxx]</span></span>
<span id="cb2-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> twitter</span></span>
<span id="cb2-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://twitter.com/[xxx]</span></span>
<span id="cb2-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> youtube</span></span>
<span id="cb2-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://www.youtube.com/user/[xxx]</span></span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># You can ignore this part in the first step</span></span>
<span id="cb2-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> rss</span></span>
<span id="cb2-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> blog.xml</span></span>
<span id="cb2-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Ressources</span></span>
<span id="cb2-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">menu</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb2-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> DataViz Portfolio</span></span>
<span id="cb2-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> dataviz_portfolio.html</span></span>
<span id="cb2-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> YARDS</span></span>
<span id="cb2-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://yards.albert-rapp.de/</span></span>
<span id="cb2-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> R Weekly</span></span>
<span id="cb2-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://rweekly.org/</span></span>
<span id="cb2-30"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> R Bloggers</span></span>
<span id="cb2-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://www.r-bloggers.com/</span></span>
<span id="cb2-32"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Archive</span></span>
<span id="cb2-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> archive.qmd</span></span>
<span id="cb2-34"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">google-analytics</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;Insert your ID here&gt;</span></span>
<span id="cb2-35"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cookie-consent</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb2-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">twitter-card</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb2-37"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> thumbnail_blog.png</span></span>
<span id="cb2-38"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card-style</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> summary_large_image</span></span>
<span id="cb2-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">creator</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"@rappa753"</span></span>
<span id="cb2-40"></span>
<span id="cb2-41"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filters</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> code-filename</span></span>
<span id="cb2-43"></span>
<span id="cb2-44"></span>
<span id="cb2-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-46"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-47"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> theme.scss</span></span></code></pre></div>
</div>
</section>
<section id="첫-번째-게시물-쓰기" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="첫-번째-게시물-쓰기"><span class="header-section-number">1.4</span> 첫 번째 게시물 쓰기</h2>
<p>블로그 게시물은 <code>posts</code> 디렉토리에 파일을 생성해서 만듭니다. 간단하게 <code>qmd</code> 파일을 만들어 시작해보세요.</p>
<section id="메타데이터" class="level3" data-number="1.4.1">
<h3 data-number="1.4.1" class="anchored" data-anchor-id="메타데이터"><span class="header-section-number">1.4.1</span> 메타데이터</h3>
<p>게시물에 대한 설정에 대한 것은 <code>posts/_metadata.yml</code> 파일이 처리합니다. 제가 사용하는 설정은 아래 파일을 참고하세요.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>posts/_metadata.yml</strong></pre>
</div>
<div class="sourceCode" id="cb3" data-filename="posts/_metadata.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Options specified here will apply to all posts in this folder</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># freeze computational output</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">freeze</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enable banner style title blocks</span></span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title-block-banner</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Author name of all blog posts</span></span>
<span id="cb3-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">author</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Albert Rapp'</span></span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Table of content settings</span></span>
<span id="cb3-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toc</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb3-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toc-depth</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb3-15"></span>
<span id="cb3-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page-layout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> article</span></span></code></pre></div>
</div>
</section>
</section>
<section id="목록-페이지-rss-피드-포함" class="level2" data-number="1.5">
<h2 data-number="1.5" class="anchored" data-anchor-id="목록-페이지-rss-피드-포함"><span class="header-section-number">1.5</span> 목록 페이지 (RSS 피드 포함)</h2>
<p>블로그 글에 대한 목록 페이지를 만들어보죠. <code>blog.qmd</code> 파일을 만들고 YAML 헤더에다음과 같이 작성합니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>blog.qmd</strong></pre>
</div>
<div class="sourceCode" id="cb4" data-filename="blog.qmd" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">listing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contents</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> posts/**/*.qmd</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # posts 디렉토리 (및 하위 디렉토리) 에 있는 모든 .qmd 파일을 이 목록 페이지에 포함한다는 의미</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date desc"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 날짜순으로 정렬 및 필터링 기능</span></span>
<span id="cb4-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default </span></span>
<span id="cb4-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">categories</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb4-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort-ui</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb4-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter-ui</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb4-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fields</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> reading-time</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> description</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> categories</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 자세한 것은 쿼토 공식 페이지를 참조</span></span>
<span id="cb4-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">feed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 이 목록 페이지가 RSS 페이지를 생성</span></span>
<span id="cb4-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page-layout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> full</span></span>
<span id="cb4-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title-block-banner</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 배너를 보여주지 않음</span></span>
<span id="cb4-13"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
</div>
</section>
<section id="아카이브-만들기" class="level2" data-number="1.6">
<h2 data-number="1.6" class="anchored" data-anchor-id="아카이브-만들기"><span class="header-section-number">1.6</span> 아카이브 만들기</h2>
<p>모든 글을 나열하는 아카이브 페이지도 만들어 보겠습니다. 루트 디렉토리에 새로운 파일 <code>archive.qmd</code> 를 만들고 다음과 같은 내용을 채웠습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>archive.qmd</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="archive.qmd" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Archive"</span></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page-layout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> full</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # 좌우 여백을 제거</span></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">listing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contents</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> posts/**/*.qmd</span></span>
<span id="cb5-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb5-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fields</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb5-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date desc'</span></span>
<span id="cb5-9"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
</div>
</section>
<section id="댓글-기능-추가하기" class="level2" data-number="1.7">
<h2 data-number="1.7" class="anchored" data-anchor-id="댓글-기능-추가하기"><span class="header-section-number">1.7</span> 댓글 기능 추가하기</h2>
<p>이제 댓글 기능을 추가해 보겠습니다. 이 기능을 통해 독자들은 훌륭한 콘텐츠에 대한 댓글을 달 수 있습니다. 제가 주로 사용하는 도구는 utterances 입니다. 이 도구는 GitHub 를 통해 작동하기 때문에 GitHub 에서 별도의 공개 저장소를 만들어야 합니다. 이 저장소는 블로그의 댓글을 저장하는 공간이 될 것입니다. 하지만 먼저 새로 생성한 저장소에 utterances 를 설치해야 합니다. 설치 방법은 공식 페이지를 참고하세요.</p>
<p>블로그 게시글 하단에만 댓글을 보여주기 위해 <code>posts/_metadata.yml</code>파일에 아래 내용을 추가합니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>posts/_metadata.yml</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="posts/_metadata.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">comments</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">utterances</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb6-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">/blogComments</span></span></code></pre></div>
</div>
</section>
<section id="뉴스레터" class="level2" data-number="1.8">
<h2 data-number="1.8" class="anchored" data-anchor-id="뉴스레터"><span class="header-section-number">1.8</span> 뉴스레터</h2>
<p>정기적으로 구독자에게 새로운 콘텐츠 알림을 주기 위해서 뉴스레터를 발송하기 위해 서비스 제공 업체들의 코드를 원하는 위치에 배치하세요.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb7-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">iframe</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"beehiiv-form"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://embeds.beehiiv.com/9232d2a2-6e85-4beb-b8ed-1de94e9e4f01?slim=true"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> data-test-id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"beehiiv-embed"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> frameborder</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> scrolling</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"margin: 0; border-radius: 0px !important; background-color: transparent; height: 75px; width: 90%;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">iframe</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>블로그 목록 페이지 상단에 해당 코드를 추가하는 방법은 아래와 같습니다.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>blog.qmd</strong></pre>
</div>
<div class="sourceCode" id="cb8" data-filename="blog.qmd" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb8-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">listing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contents</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> posts/**/*.qmd</span></span>
<span id="cb8-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date desc"</span></span>
<span id="cb8-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> default</span></span>
<span id="cb8-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">categories</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb8-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort-ui</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb8-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter-ui</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb8-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fields</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> reading-time</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> description</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> categories</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb8-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">feed</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb8-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page-layout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> full</span></span>
<span id="cb8-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title-block-banner</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb8-13"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb8-14"></span>
<span id="cb8-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.columns</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb8-16"></span>
<span id="cb8-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.column width=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"40%"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb8-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Series</span></span>
<span id="cb8-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##### [ggplot2-series](ggplot-series.html)</span></span>
<span id="cb8-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">This series contains a great deal of tips, tricks and packages </span></span>
<span id="cb8-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">that you can use to level up your ggplot game.</span></span>
<span id="cb8-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-23"></span>
<span id="cb8-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.column width=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"60%"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb8-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Subscribe</span></span>
<span id="cb8-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">&lt;iframe id="beehiiv-form" src="https</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">://embeds.beehiiv.com/9232d2a2-6e85-4beb-b8ed-1de94e9e4f01?slim=true" data-test-id="beehiiv-embed" frameborder="0" scrolling="no" style="margin</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 0; border-radius: 0px !important; background-color: transparent; height: 75px; width: 90%;"&gt;&lt;/iframe&gt;</span></span>
<span id="cb8-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb8-28"></span>
<span id="cb8-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span></code></pre></div>
</div>
</section>
<section id="바닥글-추가" class="level2" data-number="1.9">
<h2 data-number="1.9" class="anchored" data-anchor-id="바닥글-추가"><span class="header-section-number">1.9</span> 바닥글 추가</h2>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>posts/_metadata.yml</strong></pre>
</div>
<div class="sourceCode" id="cb9" data-filename="posts/_metadata.yml" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb9-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb9-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">include-after-body</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ../footer.html</span></span></code></pre></div>
</div>
</section>
</section>
<section id="reference" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Reference</h1>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html#create-your-own-series↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Quarto blog</category>
  <category>Blog</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Quarto_blog.html</guid>
  <pubDate>Fri, 10 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Mojo 프로그래밍 언어</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Mojo_lang.html</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Mojo_lang.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Mojo_lang.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>Python 은 세계에서 가장 널리 사용되는 프로그래밍 언어 중 하나로 사용자 친화적인 성격 덕분에 다양한 분야에서 활발하게 활용되고 있습니다. 웹 개발자, 데이터 과학자, 마케터, 그리고 AI 전문가들까지, 여러 분야의 전문가들이 Python 을 선호하는 이유는 초보자도 쉽게 배울 수 있고 읽기와 쓰기가 쉽기 때문입니다.</p>
<p>그러나 Python 은 C++ 이나 Rust 와 비교했을 때 실행 속도가 느리고 배포 과정이 복잡하다는 단점이 있습니다. 반면, C++ 은 속도가 빠르지만 배우고 사용하기 어렵다는 문제점이 있죠. 이런 문제를 해결하기 위해 등장한 언어가 바로 <strong>Mojo</strong>입니다.</p>
<section id="mojo의-특징" class="level2" data-number="0.1">
<h2 data-number="0.1" class="anchored" data-anchor-id="mojo의-특징"><span class="header-section-number">0.1</span> Mojo🔥의 특징</h2>
<p>Mojo 는 Python 과 유사한 구문을 제공하면서도 병렬 처리를 최적화한 컴파일러 인프라인 MLIR 을 사용하여 성능을 크게 향상시킵니다. 특히, Mojo 를 사용하면 AI 모델을 병렬 처리하여 더 빠르고 효율적으로 실행할 수 있습니다. 실제로 Mojo 는 Python 보다 <strong>약 35,000배 빠른 속도</strong>를 자랑합니다. 또한 Mojo 는 <strong>Python 과 완벽한 호환성</strong>을 목표로 하고 있어, 기존의 Python 코드를 거의 그대로 사용할 수 있으며 추가적인 강력한 기능도 제공합니다.</p>
<p>따라서, 현재 사용 중인 모든 Python 패키지와 라이브러리는 Mojo 에서 문제없이 동작합니다. 특히 Mojo 는 <strong>AI 하드웨어를 프로그래밍</strong>하는 데 사용할 수 있는데, 이는 기존의 언어로는 구현하기 어려운 복잡한 AI 하드웨어의 구조를 쉽게 처리할 수 있도록 도와줍니다.</p>
<p><code>C++</code> 이나 CUDA 와 같은 기존의 고성능 프로그래밍 언어는 배우기 어렵다는 단점이 있지만, Mojo 는 이러한 복잡성을 없애고 누구나 쉽게 AI 하드웨어를 프로그래밍할 수 있게 합니다. 더불어, 사전 및 사후 처리 작업을 통해 모델을 쉽게 확장하거나 커스텀 연산을 적용할 수 있어 다양한 AI 작업에서 큰 유연성을 제공합니다. 커널 퓨전, 그래프 재작성, 형상 함수 등 고급 기능을 통해 더욱 효율적인 AI 프로그래밍이 가능합니다.</p>
<p>Mojo 는 Python 의 단점을 보완하면서도, 그 친숙한 구문과 강력한 성능을 결합하여 차세대 AI 프로그래밍을 이끄는 도구로 자리 잡고 있습니다.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Mojo 프로젝트는 이제 막 초기 단계에 있지만, 그 가능성과 전망은 매우 인상적입니다. 아직 시작 단계이지만, Mojo 가 앞으로 가져올 변화와 잠재력을 생각하면 기대감이 큽니다. Mojo 가 제공하는 풍부한 기능과 강력한 성능 향상은 그 자체로 큰 매력이며, 이것이 인공지능과 머신러닝 분야에 어떤 혁신을 가져올지 기대됩니다.</p>
</div>
</div>
</section>
<section id="mojo-시작하기" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Mojo🔥 시작하기</h1>
<p>이 글에서는 Mojo로 “Hello world”를 출력하는 방법을 보여드리겠습니다. 다른 Mojo 코드를 작성하는 방법을 읽고 싶으시다면 <a href="https://docs.modular.com/mojo/manual/basics">Mojo 문법 소개</a>를 참조하세요.</p>
<section id="새-프로젝트-만들기" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="새-프로젝트-만들기"><span class="header-section-number">1.1</span> 1. 새 프로젝트 만들기</h2>
<p>새로운 Mojo 프로젝트를 생성하기 위해 콘다 (Conda) 기반의 가상 환경 관리자이자 패키지 관리자인 <code>magic</code> 을 사용하겠습니다.</p>
<ol type="1">
<li><p>다음 명령어로 macOS 또는 우분투 리눅스에서 <code>magic</code> 을 설치합니다:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ssL</span> https://magic.modular.com/94d3e79d-46f1-4fa6-9d1b-ee5b81f4b079 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span></span></code></pre></div>
<p>그런 다음 터미널에 출력된 <code>source</code> 명령을 실행합니다.</p></li>
<li><p>hello-world 라는 Mojo 프로젝트를 생성합니다:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">magic</span> init hello-world <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--format</span> mojoproject</span></code></pre></div>
<p>이렇게 하면 <code>hello-world</code> 라는 디렉터리가 생성되고 Mojo 프로젝트 종속성이 설치됩니다 (Mojo 프로젝트의 유일한 종속성은 <code>max</code> 패키지로 <a href="https://docs.modular.com/max/faq#why-bundle-mojo-with-max">MAX와 번들</a> 로 제공됩니다.).</p></li>
<li><p>프로젝트 가상 환경에서 셸을 시작합니다:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> hello-world <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">magic</span> shell</span></code></pre></div></li>
</ol>
<p>이제 가상 환경이 활성화되어 Mojo를 사용해 볼 수 있습니다. 예를 들어 다음과 같이 Mojo 버전을 확인할 수 있습니다:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mojo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span></span></code></pre></div>
</section>
<section id="repl에서-코드-실행하기" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="repl에서-코드-실행하기"><span class="header-section-number">1.2</span> 2. REPL에서 코드 실행하기</h2>
<p>명령 프롬프트에서 Mojo 코드를 작성하고 실행할 수 있는 Mojo <a href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop">REPL</a>을 사용해 보겠습니다:</p>
<ol type="1">
<li><p>REPL 세션을 시작하려면 <code>mojo</code> 를 입력합니다.</p></li>
<li><p>REPL을 종료하려면 <code>:quit</code> 을 입력하고 <code>Enter</code> 키를 누르거나 <code>Ctrl + D</code> 를 누릅니다.</p></li>
</ol>
<p>REPL에서 원하는 만큼 코드를 작성할 수 있습니다. 새 줄을 시작하고 코드 작성을 계속하려면 Enter키를 누르고, Mojo가 코드를 실행하게 하려면 Enter키를 두 번 누릅니다. REPL은 코드가 저장되지 않으므로 주로 짧은 실험에 유용합니다. 따라서 실제 프로그램을 작성하려면 <code>.mojo</code> 소스 파일에 코드를 작성하는 편이 좋습니다.</p>
</section>
<section id="mojo-파일-실행하기" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="mojo-파일-실행하기"><span class="header-section-number">1.3</span> 3. Mojo 파일 실행하기</h2>
<p>이제 Mojo 코드를 파일로 작성하고 <a href="https://docs.modular.com/mojo/cli/"><code>mojo</code></a>로 실행해 보겠습니다:</p>
<ol type="1">
<li><p><code>hello.mojo</code>(또는 <code>hello.🔥</code>) 라는 이름의 파일을 만들고 다음 코드를 추가합니다:</p>
<pre class="mojo"><code>fn main():
 print(“Hello, world!”)</code></pre>
<p>이 정도면 충분합니다. 파일을 저장하고 터미널로 돌아갑니다.</p></li>
<li><p>이제 <code>mojo</code> 명령어로 실행합니다:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mojo</span> hello.mojo</span></code></pre></div></li>
</ol>
</section>
<section id="실행-가능한-바이너리-빌드" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="실행-가능한-바이너리-빌드"><span class="header-section-number">1.4</span> 4. 실행 가능한 바이너리 빌드</h2>
<p>마지막으로 동일한 코드를 실행 파일로 빌드하고 실행해 보겠습니다:</p>
<ol type="1">
<li><p><code>build</code> 명령어로 실행 파일을 만듭니다:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mojo</span> build hello.mojo</span></code></pre></div>
<p>실행 파일은 <code>.mojo</code> 파일과 동일한 이름을 사용하지만 <code>-o</code> 옵션을 사용해 변경할 수도 있습니다.</p></li>
<li><p>그런 다음 실행 파일을 실행합니다:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./hello</span></span></code></pre></div></li>
</ol>
<p><code>build</code> 명령어는 정적으로 컴파일된 바이너리 파일을 생성하므로 실행에 필요한 모든 코드와 라이브러리가 포함되어 있습니다. 그리고 가상 환경을 비활성화 하려면 <code>exit</code>를 입력합니다.</p>
<pre><code>exit</code></pre>
</section>
<section id="github-에서-예제-실행하기" class="level2" data-number="1.5">
<h2 data-number="1.5" class="anchored" data-anchor-id="github-에서-예제-실행하기"><span class="header-section-number">1.5</span> 5. GitHub 에서 예제 실행하기</h2>
<p>GitHub 의 Mojo 코드 예제에는 Magic 구성 파일이 포함되어 있으므로 간단히 리포지토리를 복제하고 <code>magic</code> 으로 코드를 실행할 수 있습니다. 예를 들어</p>
<ol type="1">
<li><p>Mojo 리포지토리를 복제합니다:</p>
<pre><code>git clone https://github.com/modularml/mojo.git</code></pre>
<p>나이틀리(nightly) 빌드를 설치한 경우에만 nightly 브랜치로 체크 아웃하세요:</p>
<pre><code>git checkout nightly</code></pre></li>
<li><p>예제로 이동합니다:</p>
<pre><code>cd mojo/examples</code></pre></li>
<li><p>코드를 실행합니다:</p>
<pre><code>magic run mojo hello_interop.mojo</code></pre></li>
</ol>
</section>
</section>
<section id="다음-단계" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 다음 단계</h1>
<ul>
<li>Mojo 를 처음 사용하는 경우 <a href="https://docs.modular.com/mojo/manual/basics">Mojo 소개</a>에서 언어 기초를 익히는 것이 좋습니다.</li>
<li><code>magic</code> 도구에 대해 자세히 알아보려면 <a href="https://docs.modular.com/magic/">Magic 시작하기</a>를 참조하세요.</li>
<li>Mojo 리포지토리](https://github.com/modularml/mojo/) 에서 더 많은 코드 예제를 살펴보세요. 이 리포지토리에는 여러 가지 예제 외에도 Mojo의 고급 기능을 알려주는 <a href="https://github.com/modularml/mojo/tree/main/examples/notebooks#readme">Jupyter 노트북</a>이 있습니다.</li>
<li>사용 가능한 모든 Mojo API 를 보려면 <a href="https://docs.modular.com/mojo/lib">Mojo 표준 라이브러리 참조</a>를 확인하세요.</li>
<li>설치 중 문제가 발생하면 <a href="https://docs.modular.com/mojo/roadmap#mojo-sdk-known-issues">이미 알려진 문제</a> 문문서를 확인하세요.</li>
</ul>


</section>

 ]]></description>
  <category>Coding</category>
  <category>Programming</category>
  <category>Mojo lang</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Mojo_lang.html</guid>
  <pubDate>Wed, 08 Jan 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>파이썬 코딩 팁</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/Tip_python.html</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="Tip_python.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/Tip_python.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<section id="파이썬-코딩을-위한-조언" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 파이썬 코딩을 위한 조언</h1>
<p>이 글은 <a href="https://qiita.com/sugulu_Ogawa_ISID/items/c0e8a5e6b177bfe05e99">원본 글</a>의 내용을 임의로 번역한 것입니다. 원저자는 데이터 사이언티스트와 AI 엔지니어가 Python으로 효율적으로 코드를 작성하기 위한 다양한 팁과 노하우를 공유하고자 여러 가지 원칙과 기법을 소개합니다. 이 내용을 통해 여러분의 프로그래밍 능력을 한층 더 향상시키길 바랍니다.</p>
<section id="레벨-1" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="레벨-1"><span class="header-section-number">1.1</span> 레벨 1</h2>
<section id="기본적인-명명법" class="level3" data-number="1.1.1">
<h3 data-number="1.1.1" class="anchored" data-anchor-id="기본적인-명명법"><span class="header-section-number">1.1.1</span> 기본적인 명명법</h3>
<p>함수나 변수(Variables)를 명명할 때는 아래의 규칙을 따르는 것이 좋습니다.</p>
<section id="변수-함수-메소드-모듈" class="level4" data-number="1.1.1.1">
<h4 data-number="1.1.1.1" class="anchored" data-anchor-id="변수-함수-메소드-모듈"><span class="header-section-number">1.1.1.1</span> 변수, 함수, 메소드, 모듈</h4>
<p>소문자만 사용하고 필요에 따라 언더스코어(<code>_</code>)로 단어를 구분하는 스네이크 표기법을 따르세요. 읽는 사람이 쉽게 이해할 수 있도록 하는 것이 중요합니다. 예를 들어 <code>test_set</code>이 있습니다.</p>
</section>
<section id="클래스명" class="level4" data-number="1.1.1.2">
<h4 data-number="1.1.1.2" class="anchored" data-anchor-id="클래스명"><span class="header-section-number">1.1.1.2</span> 클래스명</h4>
<p>클래스의 이름은 첫 글자를 대문자로 작성하고, 단어는 언더스코어가 아닌 대문자로 구별합니다. 예시로 <code>ClassAll</code>이 있습니다.</p>
<section id="클래스-내에서만-사용되는-프라이빗-변수" class="level5" data-number="1.1.1.2.1">
<h5 data-number="1.1.1.2.1" class="anchored" data-anchor-id="클래스-내에서만-사용되는-프라이빗-변수"><span class="header-section-number">1.1.1.2.1</span> 클래스 내에서만 사용되는 프라이빗 변수</h5>
<p>변수명 맨 앞에 언더스코어를 붙여야 합니다. 예를 들어 <code>_single_leading_underscores</code>가 있습니다. 클래스 내에서만 사용되는 프라이빗 메소드 또한 메소드명 앞에 언더스코어를 붙입니다. 예시로 <code>_single_leading_underscore(self, ...)</code>가 있습니다.</p>
</section>
</section>
<section id="상수-constants" class="level4" data-number="1.1.1.3">
<h4 data-number="1.1.1.3" class="anchored" data-anchor-id="상수-constants"><span class="header-section-number">1.1.1.3</span> 상수 (Constants)</h4>
<p>상수는 값이 변하지 않으므로 대문자만 사용하여 명명합니다. 단어들은 언더스코어(<code>_</code>)로 구분합니다. 예시로 <code>ALL_CAPS_WITH_UNDERSCORES</code>가 있습니다.</p>
</section>
<section id="패키지명" class="level4" data-number="1.1.1.4">
<h4 data-number="1.1.1.4" class="anchored" data-anchor-id="패키지명"><span class="header-section-number">1.1.1.4</span> 패키지명</h4>
<p>패키지명은 소문자만 사용해야 합니다. 예시로 <code>lowers</code>가 있습니다.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>함수와 메소드의 차이점: 함수는 클래스 안에 독립적으로 존재하며, 메소드는 클래스 내에 있는 함수를 의미합니다.</li>
<li>모듈과 패키지: 패키지는 가장 상위 레벨이며, 모듈은 패키지 내의 파일을 의미합니다. 예를 들어 <code>sklearn</code>은 패키지이고, <code>sklearn.linear_model</code>은 모듈입니다.</li>
</ul>
</div>
</div>
</section>
<section id="명명법-1-장황한-부분-제거하기" class="level4" data-number="1.1.1.5">
<h4 data-number="1.1.1.5" class="anchored" data-anchor-id="명명법-1-장황한-부분-제거하기"><span class="header-section-number">1.1.1.5</span> 명명법 1: 장황한 부분 제거하기</h4>
<p>클래스의 메소드 이름에는 클래스명이 반복되어서는 안 됩니다. 예를 들어 <code>class_1.class_1_max_length = 10</code>보다 <code>class_1.max_length = 10</code>이 더 적절합니다. 즉, 미리 <code>클래스명.변수명</code>을 고려하여 명명해야 합니다.</p>
</section>
<section id="라이브러리-import-규칙" class="level4" data-number="1.1.1.6">
<h4 data-number="1.1.1.6" class="anchored" data-anchor-id="라이브러리-import-규칙"><span class="header-section-number">1.1.1.6</span> 라이브러리 import 규칙</h4>
<section id="라이브러리-순서" class="level5" data-number="1.1.1.6.1">
<h5 data-number="1.1.1.6.1" class="anchored" data-anchor-id="라이브러리-순서"><span class="header-section-number">1.1.1.6.1</span> 라이브러리 순서</h5>
<p>외부 클래스나 함수를 <code>import</code>할 때 주의해야 할 점은 다음 세 가지입니다. 첫 번째는 <code>import</code>하는 순서입니다. 아래와 같은 순서로 라이브러리를 불러오세요.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| echo: false</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> 표준라이브러리</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> 서드파티라이브러리</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> 개인적으로_작성한라이브러리</span></code></pre></div>
<p>모듈 단위로 불러오는 것이 좋습니다. 예를 들어 <code>from pkg.module_1 import class_1</code> 대신 <code>from pkg import module_1</code>으로 하고, 이후에 <code>my_class = module_1.class_1()</code>과 같이 코드를 작성합니다.</p>
</section>
<section id="여러-라이브러리를-한-줄에-불러오지-않기" class="level5" data-number="1.1.1.6.2">
<h5 data-number="1.1.1.6.2" class="anchored" data-anchor-id="여러-라이브러리를-한-줄에-불러오지-않기"><span class="header-section-number">1.1.1.6.2</span> 여러 라이브러리를 한 줄에 불러오지 않기</h5>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| echo: false</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pkg, pkg2  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이 경우 아래와 같이 한 줄씩 작성합니다.</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pkg</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pkg2</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그러나 모듈의 경우 한 줄에 여러 개를 가져와도 괜찮습니다.</span></span>
<span id="cb2-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pkg <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> module_1, module_2</span></code></pre></div>
</section>
</section>
</section>
<section id="재현성을-위해-seed-고정하기" class="level3" data-number="1.1.2">
<h3 data-number="1.1.2" class="anchored" data-anchor-id="재현성을-위해-seed-고정하기"><span class="header-section-number">1.1.2</span> 재현성을 위해 seed 고정하기</h3>
<p>데이터 분석의 재현성을 위해 <code>seed</code> 값을 지정하는 것이 좋습니다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb3-5"></span>
<span id="cb3-6">SEED_VALUE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 값은 무엇이든 괜찮습니다.</span></span>
<span id="cb3-7">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PYTHONHASHSEED'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(SEED_VALUE)</span>
<span id="cb3-8">random.seed(SEED_VALUE)</span>
<span id="cb3-9">np.random.seed(SEED_VALUE)</span>
<span id="cb3-10">torch.manual_seed(SEED_VALUE)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PyTorch의 경우</span></span></code></pre></div>
<p><code>PyTorch</code>에서 GPU를 사용해 연산하는 경우에는 아래와 같이 설정해야 합니다. 다만 계산 속도가 떨어지기 때문에 추천하지는 않습니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">torch.backends.cudnn.deterministic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb4-2">torch.backends.cudnn.benchmark <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
<p>Scikit-learn의 경우 각 알고리즘에 <code>seed</code> 값을 정하는 부분이 있습니다. 예를 들어 아래와 같습니다.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LogisticRegression</span>
<span id="cb5-2"></span>
<span id="cb5-3">SEED_VALUE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb5-4">clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LogisticRegression(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SEED_VALUE)</span></code></pre></div>
</section>
</section>
<section id="레벨-2" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="레벨-2"><span class="header-section-number">1.2</span> 레벨 2</h2>
<section id="역방향-변수-명명-reverse-notation" class="level3" data-number="1.2.1">
<h3 data-number="1.2.1" class="anchored" data-anchor-id="역방향-변수-명명-reverse-notation"><span class="header-section-number">1.2.1</span> 역방향 변수 명명 (Reverse Notation)</h3>
<p>예를 들어 <code>a</code>의 길이, <code>b</code>의 길이, <code>c</code>의 길이와 같은 세 가지 변수를 만들고 싶다면, <code>a_length</code>, <code>b_length</code>, <code>c_length</code> 대신 <code>length_a</code>, <code>length_b</code>, <code>length_c</code>로 작성하는 것이 좋습니다. 이렇게 하면 단어의 앞부분이 동일해져 코드가 더 읽기 쉬워집니다. 만약 특정 변수인 <code>a</code>에 더 집중하고 싶다면, <code>a_length</code>, <code>a_width</code>, <code>a_max_length</code>와 같이 작성할 수 있습니다. 주목해야 할 대상을 변수명 앞에 두어 통일성을 유지하는 것이 바람직합니다.</p>
</section>
<section id="solid-원칙-따르기" class="level3" data-number="1.2.2">
<h3 data-number="1.2.2" class="anchored" data-anchor-id="solid-원칙-따르기"><span class="header-section-number">1.2.2</span> SOLID 원칙 따르기</h3>
<p><a href="https://en.wikipedia.org/wiki/SOLID">SOLID</a>는 로버트 마틴이 제안한 소프트웨어 설계 원리입니다. 모든 원리를 알 필요는 없지만, 첫 번째 원칙인 단일 책임 원리(Single Responsibility Principle)는 반드시 기억해야 합니다.</p>
<p>단일 책임 원리는 “함수나 클래스, 메소드는 단 하나의 책임만을 가져야 한다”는 의미입니다. 여기서 “단 하나”의 정의가 다소 모호할 수 있지만, 가능한 한 함수나 클래스, 메소드를 짧게 작성하여 상위 개념 변경에 영향을 받도록 하라는 의미로 이해하면 됩니다.</p>
<p>데이터 사이언티스트나 AI 엔지니어가 수행하는 작업은 보통 “데이터 전처리, 학습, 추론”과 같은 정형화된 흐름으로 진행됩니다. 따라서 구현하는 프로그램도 이러한 순서를 따르게 되며, 하나의 메인 클래스나 메소드가 비대해지고 여러 작업(책무)을 수행하게 되는 경우가 많습니다.</p>
<p>Jupyter Notebook에서 그치는 수준이라면 괜찮지만, 시스템 개발에 데이터 과학이나 AI를 도입하기 위해서는 이러한 상태가 바람직하지 않습니다.</p>
<p>AI 시스템에서 SoE(System of Engagement)의 개발은 SoR(System of Records)와 같이 요구 사항 정의 및 외부/내부 설계를 철저히 하는 워터폴 개발 방식이 아닌 애자일 개발 형태가 많습니다. 애자일 개발에서는 CI(Continuous Integration), 즉 자동 테스트를 실시하는 것이 기본입니다. 따라서 실제로 프로토타입을 만들고 동작을 살펴본 후 개선점을 발견하여 더 나은 결과물을 만드는 것이 목표입니다.</p>
<p>이러한 “개선” 과정에서 단일 클래스나 메소드의 책임이 클수록 수정해야 할 코드의 양도 많아집니다. 수정해야 할 코드가 많으면 영향 범위도 커지고, 새로운 단위 테스트를 작성해야 할 필요성도 증가합니다. 동시에 기존에 작성한 단위 테스트도 대부분 무용지물이 될 수 있습니다.</p>
<p>단위 테스트의 대폭적인 수정이나 변화가 빈번하게 발생하는 상황에서 개발을 진행하면, 단위 테스트를 제대로 수행할 수 없게 되고 시스템 전체의 품질도 저하될 수 있습니다. 또한, 개선을 위한 수정이 예상치 못한 부분에 영향을 미쳐 버그가 발생하기 쉬워집니다.</p>
</section>
<section id="함수와-메소드에-타입-힌트-작성하기" class="level3" data-number="1.2.3">
<h3 data-number="1.2.3" class="anchored" data-anchor-id="함수와-메소드에-타입-힌트-작성하기"><span class="header-section-number">1.2.3</span> 함수와 메소드에 타입 힌트 작성하기</h3>
<p>“SOLID의 S: 단일 책임”을 염두에 두고 함수나 메소드를 분할하면 많은 함수와 메소드가 생성됩니다. 이처럼 많은 함수와 메소드가 존재하면 이해하기 어려워질 수 있습니다. 코드 작성 시에는 괜찮지만, 3개월 후에 수정하거나 다른 사람이 코드를 사용할 때 “이 함수의 인수에는 무엇이 들어 있고, 어떤 것이 출력되는가?”라는 혼란스러운 상황이 발생할 수 있습니다.</p>
<p>따라서 함수를 구현할 때 타입 힌트를 붙이는 것이 좋습니다. 타입 힌트는 아래와 같이 작성할 수 있습니다.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calc_billing_amount(amount: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, price: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb6-2">    billing_amount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> amount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> price</span>
<span id="cb6-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> billing_amount</span></code></pre></div>
<p>인수 변수의 데이터형을 인수명 뒤에 기재하여 알 수 있도록 하고, 함수에서 반환되는 변수의 데이터형도 명시해주면 좋습니다.</p>
<p>타입 힌트는 강제성이 없으며, 위 예제에서 첫 번째 인수인 <code>amount</code>에 <code>int</code>가 아닌 <code>float</code>를 지정하고 <code>calc_billing_amount(0.5, 100)</code>을 실행해도 에러는 발생하지 않습니다.</p>
<p>리스트나 사전형을 사용할 경우 또는 여러 데이터형을 허용하고 싶다면 다음과 같이 작성합니다.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dict, List, Union</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calc_billing_amount(</span>
<span id="cb7-4">    amount_list: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>], price_dictionary: Dict[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]]</span>
<span id="cb7-5">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb7-6">    billing_amount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb7-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> index, (key, value) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(price_dictionary.items()):</span>
<span id="cb7-8">        billing_amount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> amount_list[index] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> value</span>
<span id="cb7-9"></span>
<span id="cb7-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(billing_amount)</span></code></pre></div>
<p>타입 힌트를 위해 리스트와 사전형을 사용하려면 <code>from typing import List, Dict, Union</code>으로 임포트합니다. 예를 들어 요소가 <code>int</code>형 리스트인 경우는 <code>List[int]</code>로 기재하고, 키가 <code>string</code>형이며 값이 <code>int</code> 또는 <code>float</code>일 경우는 <code>Dict[str, Union[int, float]]</code>로 작성합니다.</p>
<p>실행하면 605가 출력됩니다.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">amount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span>
<span id="cb8-2">price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"item1"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"item2"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">30.5</span>}</span>
<span id="cb8-3">calc_billing_amount(amount, price)</span></code></pre></div>
<p>타입 힌트를 작성하는 것은 번거롭지만 많은 클래스와 메소드를 파악하기 쉽게 만들어주므로 추천합니다.</p>
</section>
<section id="클래스와-메소드에는-docstring-기재하기" class="level3" data-number="1.2.4">
<h3 data-number="1.2.4" class="anchored" data-anchor-id="클래스와-메소드에는-docstring-기재하기"><span class="header-section-number">1.2.4</span> 클래스와 메소드에는 docstring 기재하기</h3>
<p><code>docstring</code>은 클래스나 메소드, 함수의 사양이나 사용 방법을 설명하는 것입니다. 앞서 언급했듯이 단일 책임 원칙으로 인해 생성된 많은 클래스나 함수를 쉽게 파악하기 어려운 경우가 많습니다. 타입 힌트만으로는 여전히 알기 어렵기 때문에 상세한 설명으로 docstring을 작성하는 것이 좋습니다.</p>
<p>그러나 너무 세세하게 작성하는 것은 번거로운 일이므로 프라이빗 메소드나 행 수가 적은 메소드 등은 한 줄의 docstring으로 충분하다고 생각됩니다. 반면 다른 팀원이 사용하는 클래스나 메소드 또는 AI 시스템에서 중요한 역할을 하는 주요 클래스 등은 상세한 설명이 필요합니다.</p>
<p>docstring 작성 방식은 여러 가지가 있지만 보통은 reStructuredText, Google style 또는 Numpy style이 많이 사용됩니다. 이 세 가지 중 하나를 사용하는 이유는 나중에 Sphinx를 통해 자동으로 문서화할 수 있기 때문입니다. 따라서 Sphinx에서 지원하는 docstring 형식을 채택하는 것이 좋습니다. docstring의 세 가지 종류에 대한 설명은 나중에 기회가 있을 때 다루도록 하겠습니다.</p>
<p>Google style과 Numpy style은 길이가 길어 저는 reStructuredText style을 선호합니다. 예시는 아래와 같습니다.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> User:</span>
<span id="cb9-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""본 시스템을 사용하는 어카운트 유저를 표시하는 클래스이다.</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param name: 유저명</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param user_type: 어카운트 타입 (admin 또는 normal)</span></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb9-6"></span>
<span id="cb9-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, user_type: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb9-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name</span>
<span id="cb9-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> user_type</span>
<span id="cb9-10"></span>
<span id="cb9-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> print_user_type(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb9-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""유저의 타입을 출력한다.</span></span>
<span id="cb9-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        :param None: 입력 인수가 없다.</span></span>
<span id="cb9-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        :return: user_type을 문자열로 출력한다.</span></span>
<span id="cb9-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        :rtype: str</span></span>
<span id="cb9-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb9-17">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_type)</span></code></pre></div>
<p>Example까지 포함하면 매우 유용합니다. 얼마나 자세하게 쓸지는 Example이나 인수 및 반환 값 설명 후 결정하면 됩니다.</p>
<p>위와 같이 적으면 VS Code 등의 에디터에서 해당 프로그램 부분에 마우스를 올리면 docstring이 표시되어 프로그램 이해를 돕습니다.</p>
</section>
<section id="학습-완료-모델과-전처리-및-하이퍼파라미터-정보-저장하기" class="level3" data-number="1.2.5">
<h3 data-number="1.2.5" class="anchored" data-anchor-id="학습-완료-모델과-전처리-및-하이퍼파라미터-정보-저장하기"><span class="header-section-number">1.2.5</span> 학습 완료 모델과 전처리 및 하이퍼파라미터 정보 저장하기</h3>
<p>AI, 머신러닝 및 딥러닝에서는 학습 완료 모델만 저장하는 것이 아니라 전처리 파라미터와 모델 하이퍼파라미터 설정 등 학습 재현에 필요한 모든 정보를 저장해야 합니다.</p>
<p>모든 정보가 포함되어 있으면 어떤 저장 방법을 사용하든 상관없지만 scikit-learn과 PyTorch에서 예시는 다음과 같습니다.</p>
<section id="scikit-learn-예시" class="level4" data-number="1.2.5.1">
<h4 data-number="1.2.5.1" class="anchored" data-anchor-id="scikit-learn-예시"><span class="header-section-number">1.2.5.1</span> Scikit-learn 예시</h4>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime, timedelta, timezone</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb10-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> joblib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dump, load</span>
<span id="cb10-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_iris</span>
<span id="cb10-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LogisticRegression</span>
<span id="cb10-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.pipeline <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Pipeline</span>
<span id="cb10-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PolynomialFeatures, StandardScaler</span>
<span id="cb10-8"></span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># iris 데이터 준비</span></span>
<span id="cb10-10">X, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_iris(return_X_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb10-11"></span>
<span id="cb10-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전처리(표준화 및 제곱항 추가)</span></span>
<span id="cb10-13">preprocess_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pipeline(steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"standard_scaler"</span>, StandardScaler())])</span>
<span id="cb10-14">preprocess_pipeline.steps.append((<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"polynomial_features_2"</span>, PolynomialFeatures(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb10-15"></span>
<span id="cb10-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전처리 적용</span></span>
<span id="cb10-17">X_preprocessed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocess_pipeline.fit_transform(X)</span>
<span id="cb10-18"></span>
<span id="cb10-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습기 준비</span></span>
<span id="cb10-20">C <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 하이퍼파라미터 설정</span></span>
<span id="cb10-21">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LogisticRegression(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>C)</span>
<span id="cb10-22"></span>
<span id="cb10-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습 실시</span></span>
<span id="cb10-24">model.fit(X_preprocessed, y)</span>
<span id="cb10-25"></span>
<span id="cb10-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 학습 데이터 성능 평가</span></span>
<span id="cb10-27">accuracy_training <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.score(X_preprocessed, y)</span>
<span id="cb10-28"></span>
<span id="cb10-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 저장할 데이터 준비</span></span>
<span id="cb10-30">KST <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> timezone(timedelta(hours<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KST"</span>) </span>
<span id="cb10-31">now <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.now(KST).strftime(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y%m</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_%H%M%S"</span>)</span>
<span id="cb10-32"></span>
<span id="cb10-33">training_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb10-34">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"training_data"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iris"</span>,</span>
<span id="cb10-35">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model_type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LogisticRegression"</span>,</span>
<span id="cb10-36">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyper_param_logreg_C"</span>: C,</span>
<span id="cb10-37">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"accuracy_training"</span>: accuracy_training,</span>
<span id="cb10-38">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"save_date"</span>: now,</span>
<span id="cb10-39">}</span>
<span id="cb10-40"></span>
<span id="cb10-41">save_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb10-42">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"preprocess_pipeline"</span>: preprocess_pipeline,</span>
<span id="cb10-43">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trained_model"</span>: model,</span>
<span id="cb10-44">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"training_info"</span>: training_info,</span>
<span id="cb10-45">}</span>
<span id="cb10-46">filename <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./iris_model_"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> now <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".joblib"</span></span>
<span id="cb10-47"></span>
<span id="cb10-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 저장</span></span>
<span id="cb10-49">dump(save_data, filename)</span></code></pre></div>
<p>저장한 파일을 불러올 경우 아래와 같이 작성합니다.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">load_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load(filename)</span>
<span id="cb11-2"></span>
<span id="cb11-3">preprocess_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"preprocess_pipeline"</span>]</span>
<span id="cb11-4">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trained_model"</span>]</span>
<span id="cb11-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(load_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"training_info"</span>])</span></code></pre></div>
<p>위 코드의 출력은 다음과 같습니다.</p>
<pre><code>{'training_data': 'iris', 'model_type': 'LogisticRegression', 'hyper_param_logreg_C': 1.2, 'accuracy_training': 0.9866666666666667, 'save_date': '20200503_205145'}</code></pre>
</section>
<section id="pytorch-예시" class="level4" data-number="1.2.5.2">
<h4 data-number="1.2.5.2" class="anchored" data-anchor-id="pytorch-예시"><span class="header-section-number">1.2.5.2</span> PyTorch 예시</h4>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">PATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./checkpoint_'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(epoch) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.pt'</span></span>
<span id="cb13-2"></span>
<span id="cb13-3">torch.save({</span>
<span id="cb13-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'epoch'</span>: epoch,</span>
<span id="cb13-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'total_epoch'</span>: total_epoch,</span>
<span id="cb13-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'model_state_dict'</span>: model.state_dict(),</span>
<span id="cb13-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scheduler_state_dict'</span>: scheduler.state_dict(),</span>
<span id="cb13-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'optimizer_state_dict'</span>: optimizer.state_dict(),</span>
<span id="cb13-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss_train'</span>: loss_train,</span>
<span id="cb13-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss_eval'</span>: loss_eval,</span>
<span id="cb13-11">}, PATH)</span></code></pre></div>
<p>모델을 불러오는 경우 예제 코드는 다음과 같습니다.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TheModelClass()</span>
<span id="cb14-2">scheduler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TheSchedulerClass()</span>
<span id="cb14-3">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TheOptimizerClass()</span>
<span id="cb14-4"></span>
<span id="cb14-5">checkpoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.load(PATH)</span>
<span id="cb14-6">model.load_state_dict(checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'model_state_dict'</span>])</span>
<span id="cb14-7">scheduler.load_state_dict(checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scheduler_state_dict'</span>])</span>
<span id="cb14-8">optimizer.load_state_dict(checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'optimizer_state_dict'</span>])</span>
<span id="cb14-9">total_epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'total_epoch'</span>]</span>
<span id="cb14-10">epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'epoch'</span>]</span>
<span id="cb14-11">loss_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss_train'</span>]</span>
<span id="cb14-12">loss_eval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss_eval'</span>]</span>
<span id="cb14-13"></span>
<span id="cb14-14">model.train()</span>
<span id="cb14-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># model.eval()</span></span></code></pre></div>
<p>딥러닝의 데이터 세트와 데이터 로더까지 체크포인트로 저장하면 파일 크기가 너무 커지므로 별도로 저장하는 것을 추천합니다.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 세트 및 데이터 로더 저장</span></span>
<span id="cb15-2">torch.save(trainset, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./trainset.pt'</span>)</span>
<span id="cb15-3">torch.save(trainloader, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./dataloader.pt'</span>)</span></code></pre></div>
<p>다시 불러오는 코드는 다음과 같습니다.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">trainset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./trainset.pt'</span>)</span>
<span id="cb16-2">trainloader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./dataloader.pt'</span>)</span></code></pre></div>
</section>
</section>
</section>
<section id="레벨-3" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="레벨-3"><span class="header-section-number">1.3</span> 레벨 3</h2>
<section id="적절한-영어-단어와-품사로-명명하기" class="level3" data-number="1.3.1">
<h3 data-number="1.3.1" class="anchored" data-anchor-id="적절한-영어-단어와-품사로-명명하기"><span class="header-section-number">1.3.1</span> 적절한 영어 단어와 품사로 명명하기</h3>
<p>클래스, 메소드, 함수를 많이 만들수록 명명 규칙이 더욱 중요해집니다. 이상적으로는 이름만 보고도 “어떤 처리를 하고 있는가? 즉, 어떤 기능을 수행하며, 어떤 입력을 받고 어떤 출력을 하는가?”를 알 수 있어야 합니다.</p>
<p>하지만 데이터 사이언스나 AI 분야에서는 알고리즘 자체가 복잡하기 때문에, 처음 보는 사람이 주석 없이 클래스나 메소드를 이해하기는 어렵습니다. 따라서 명명 방법은 가능한 한 의도를 명확히 전달하는 것을 목표로 해야 합니다.</p>
<p>지켜야 할 최소한의 규칙은 다음과 같습니다:</p>
<ol type="1">
<li>클래스명과 변수명은 명사로 작성합니다.</li>
<li>메소드와 함수의 이름은 동사로 시작합니다.</li>
<li>멤버 변수의 <code>boolean</code> 형은 동사로 시작하는 것이 좋습니다. 예) <code>is_admin</code>, <code>has_item</code>, <code>can_drive</code> 등</li>
<li>코딩 규칙을 준수합니다.</li>
</ol>
</section>
<section id="적절한-예외-처리-구현하기" class="level3" data-number="1.3.2">
<h3 data-number="1.3.2" class="anchored" data-anchor-id="적절한-예외-처리-구현하기"><span class="header-section-number">1.3.2</span> 적절한 예외 처리 구현하기</h3>
<p>에러(예외)에 대한 <code>try-catch</code> 구문은 데이터 사이언티스트와 AI 엔지니어에게 매우 중요한 부분입니다. AI를 시스템에 구현할 때는 에러 핸들링이 필수적입니다. 예외가 발생하면 시스템 전체가 중단될 수 있기 때문입니다.</p>
<p>따라서 구현 코드에서 <code>try</code> 블록이 상위 레벨에 위치하도록 하여, 코드가 <code>try:</code> 블록 안에 들어가지 않도록 해야 합니다. 아래 예제를 살펴보겠습니다.</p>
<p>예를 들어 나눗셈 함수를 정의할 때:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_division(a, b):</span>
<span id="cb17-2">    ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> b</span>
<span id="cb17-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span></code></pre></div>
<p>위 함수에 <code>func_division(10, 0)</code>과 같이 입력하면 에러가 발생하여 프로그램이 중단됩니다. 따라서 예외 처리를 추가해야 합니다.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_division(a, b):</span>
<span id="cb18-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb18-3">        ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> b</span>
<span id="cb18-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span>
<span id="cb18-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span>:</span>
<span id="cb18-6">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"예외가 발생했습니다."</span>)</span></code></pre></div>
<p>그러나 이것만으로는 충분하지 않습니다. 발생할 수 있는 예외를 구체적으로 처리해야 합니다.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_division(a, b):</span>
<span id="cb19-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb19-3">        ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> b</span>
<span id="cb19-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span>
<span id="cb19-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ZeroDivisionError</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> err:</span>
<span id="cb19-6">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0으로 나누는 에러가 발생했습니다:'</span>, err)</span>
<span id="cb19-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> err:</span>
<span id="cb19-8">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"예기치 못한 에러가 발생했습니다:"</span>, err)</span></code></pre></div>
<p>이제 이전에 발생했던 <code>ans = func_division(10, 0)</code>을 다시 실행하면 “0으로 나누는 에러가 발생했습니다: division by zero”라는 메시지가 출력됩니다. 또한 <code>ans = func_division("hoge", "fuga")</code>를 실행하면 숫자가 아니므로 또 다른 에러가 발생합니다.</p>
</section>
<section id="적절하게-로그-출력하기" class="level3" data-number="1.3.3">
<h3 data-number="1.3.3" class="anchored" data-anchor-id="적절하게-로그-출력하기"><span class="header-section-number">1.3.3</span> 적절하게 로그 출력하기</h3>
<p>코드의 작동을 확인하기 위해 <code>print</code> 문을 사용하는 습관은 좋지 않습니다. 대신 적절한 로그를 출력하도록 작성해야 합니다. 로그 사용법은 다음과 같습니다.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> logging</span>
<span id="cb20-2"></span>
<span id="cb20-3">logger <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> logging.getLogger(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span>)</span>
<span id="cb20-4"></span>
<span id="cb20-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그에 기록할 내용</span></span>
<span id="cb20-6">total_epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb20-7">epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb20-8">loss_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.44444</span></span>
<span id="cb20-9"></span>
<span id="cb20-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그 리스트 생성</span></span>
<span id="cb20-11">log_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [total_epoch, epoch, loss_train]</span>
<span id="cb20-12"></span>
<span id="cb20-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그 기록</span></span>
<span id="cb20-14">logger.info(</span>
<span id="cb20-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"total_epoch: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0[0]}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, epoch: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0[1]}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, loss_train: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0[2]:.2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(log_list)</span>
<span id="cb20-16">)</span>
<span id="cb20-17"></span>
<span id="cb20-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기록된 내용을 출력하여 확인</span></span>
<span id="cb20-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"total_epoch: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0[0]}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, epoch: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0[1]}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, loss_train: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{0[2]:.2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(log_list))</span></code></pre></div>
<p>저장된 로그를 <code>print</code> 문으로 확인하면 다음과 같이 출력됩니다.</p>
<pre><code>total_epoch: 1000, epoch: 100, loss_train: 5.44</code></pre>
<p>여기서 <code>{0:.2f}</code>는 <code>.format</code>으로 받은 리스트의 두 번째 요소를 소수점 두 자리까지 표시하는 것을 의미합니다. 로그 작성에 대한 자세한 내용은 <a href="https://docs.python.org/ko/3/howto/logging.html">공식 문서</a>를 참고하세요.</p>
<p>파이썬 3.8 이상을 사용하는 경우 <code>f-string</code>을 사용하여 다음과 같이 작성할 수 있습니다.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그에 기록할 값 설정</span></span>
<span id="cb22-2">total_epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb22-3">epoch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb22-4">loss_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.44444</span></span>
<span id="cb22-5"></span>
<span id="cb22-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그 기록</span></span>
<span id="cb22-7">logger.info(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>total_epoch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>epoch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, loss_train: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>loss_train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</section>
<section id="함수와-메소드의-인수는-3개-이하로-제한하기" class="level3" data-number="1.3.4">
<h3 data-number="1.3.4" class="anchored" data-anchor-id="함수와-메소드의-인수는-3개-이하로-제한하기"><span class="header-section-number">1.3.4</span> 함수와 메소드의 인수는 3개 이하로 제한하기</h3>
<p>함수나 메소드의 인수는 많아도 최대 3개까지로 제한하는 것이 좋습니다. 4개 이상의 인수는 피하는 것이 바람직합니다. 인수가 많으면 해당 함수의 사용법을 이해하기 어려워지고, 단위 테스트 준비나 관리도 복잡해집니다.</p>
<p>많은 인수를 다루고 싶다면 사전형 변수를 사용하여 <code>hogehoge_config</code>와 같은 형태로 하나의 사전 변수를 전달하는 방법이 있습니다.</p>
<p>예를 들어 복잡한 계산 함수를 정의할 때:</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_many_calculation(a, b, c, d, e):</span>
<span id="cb23-2">    ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> e</span>
<span id="cb23-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span></code></pre></div>
<p>위 함수는 <code>ans = func_many_calculation(10, 2, 3, 5, 2)</code>와 같이 사용하면 인수가 많아 다루기 불편하고 오류가 발생할 가능성이 높습니다. 따라서 다음과 같이 사전형으로 정의하는 것이 좋습니다.</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_many_calculation(func_config):</span>
<span id="cb24-2">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func_config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>]</span>
<span id="cb24-3">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func_config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>]</span>
<span id="cb24-4">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func_config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>]</span>
<span id="cb24-5">    d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func_config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d"</span>]</span>
<span id="cb24-6">    e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func_config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"e"</span>]</span>
<span id="cb24-7">    ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> e</span>
<span id="cb24-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span></code></pre></div>
<p>이렇게 하면 <code>func_config = {"a": 10,"b": 2,"c": 3,"d": 5,"e": 2}</code>를 대입하여 <code>ans = func_many_calculation(func_config)</code>를 실행할 수 있습니다.</p>
<p>그러나 이러한 방식은 함수 정의를 더욱 복잡하게 만들 수 있으므로, 함수 정의 부분에서는 인수를 보통대로 작성하고 실행하는 부분에서는 인수를 적게 사용하는 것이 좋습니다.</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_many_calculation(a, b, c, d, e):</span>
<span id="cb25-2">    ret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> e</span>
<span id="cb25-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> ret</span>
<span id="cb25-4"></span>
<span id="cb25-5">func_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"e"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>}</span>
<span id="cb25-6">ans <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> func_many_calculation(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>func_config)</span></code></pre></div>
</section>
<section id="args-kwargs-를-적절히-사용하기" class="level3" data-number="1.3.5">
<h3 data-number="1.3.5" class="anchored" data-anchor-id="args-kwargs-를-적절히-사용하기"><span class="header-section-number">1.3.5</span> *args, **kwargs 를 적절히 사용하기</h3>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p><code>args</code>는 <code>arguments</code>, <code>kwargs</code>는 <code>keyword arguments</code>의 약어입니다.</p>
</div>
</div>
<p><code>*args</code>와 <code>**kwargs</code>는 가변 길이 인수를 나타냅니다. 여기서 <code>*</code>는 리스트 변수의 언팩(unpacking) 조작이며, <code>**</code>는 사전형 변수의 언팩 조작입니다. 가변 길이 인수를 사용하는 이유는 크게 세 가지입니다.</p>
<p>첫 번째 이유는 함수의 인수에 여분의 값을 받아들이기 위해서입니다. 예를 들어 아래 함수를 실행하면 <code>func_args_kwargs2(10, 20, 30)</code>의 출력이 10이 되어 에러 없이 실행됩니다.</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_args_kwargs2(a, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args):</span>
<span id="cb26-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a)</span></code></pre></div>
<p>두 번째 이유는 함수를 확장하여 인수를 나중에 추가하고 싶을 때입니다. 이 경우 <code>*args</code>로 받으면 함수 본체나 인수 정의 부분을 수정할 필요가 없습니다.</p>
<p>세 번째 이유는 함수나 메소드를 실행할 때 선택적으로 전달할 수 있는 인수를 받아들이기 위해서입니다. 이때에는 기본값을 설정해 두어야 합니다. 예를 들어 다음과 같이 작성할 수 있습니다.</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_args_kwargs3(a, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb27-2">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kwargs.pop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>)</span>
<span id="cb27-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b)</span></code></pre></div>
<p>이렇게 하면 기본값을 설정하면서도 가변 길이 인수를 사용할 수 있습니다.</p>
</section>
</section>
<section id="레벨-4" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="레벨-4"><span class="header-section-number">1.4</span> 레벨 4</h2>
<section id="if-문을-간결하게-작성하기" class="level3" data-number="1.4.1">
<h3 data-number="1.4.1" class="anchored" data-anchor-id="if-문을-간결하게-작성하기"><span class="header-section-number">1.4.1</span> if 문을 간결하게 작성하기</h3>
<p>파이썬에서는 <code>if</code> 문을 한 줄로 작성할 수 있습니다.</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 짝수인지 홀수인지 판별</span></span>
<span id="cb28-2">num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb28-3"></span>
<span id="cb28-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb28-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"짝수"</span>)</span>
<span id="cb28-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb28-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"홀수"</span>)</span></code></pre></div>
<p>위 코드는 다음과 같이 간단하게 표현할 수 있습니다.</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 짝수인지 홀수인지 판별</span></span>
<span id="cb29-2">num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb29-3"></span>
<span id="cb29-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"짝수"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"홀수"</span>)</span></code></pre></div>
</section>
<section id="sklearn-규격에-맞춰-전처리-및-모델-클래스-구현하기" class="level3" data-number="1.4.2">
<h3 data-number="1.4.2" class="anchored" data-anchor-id="sklearn-규격에-맞춰-전처리-및-모델-클래스-구현하기"><span class="header-section-number">1.4.2</span> sklearn 규격에 맞춰 전처리 및 모델 클래스 구현하기</h3>
<p>sklearn 규격이란 <code>scikit-learn</code>의 <code>BaseEstimator</code>, <code>TransformerMixin</code>, <code>ClassifierMixin</code> 등을 상속받아, scikit-learn의 다른 객체와 함께 사용될 수 있도록 구현된 클래스를 의미합니다. 자신이 만든 전처리 클래스나 모델을 sklearn 규격으로 만들면, scikit-learn의 <code>Pipeline</code>과 함께 사용할 수 있어 매우 편리합니다.</p>
<p>예를 들어, 전처리 클래스를 구현할 때는 <code>TransformerMixin</code>과 <code>BaseEstimator</code>를 상속합니다.</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.base <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BaseEstimator, TransformerMixin</span>
<span id="cb30-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.utils.validation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> check_array, check_is_fitted</span>
<span id="cb30-3"></span>
<span id="cb30-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> TemplateTransformer(TransformerMixin, BaseEstimator):</span>
<span id="cb30-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, demo_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'demo'</span>):</span>
<span id="cb30-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.demo_param <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> demo_param</span>
<span id="cb30-7">        </span>
<span id="cb30-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> fit(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, X, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb30-9">        X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_array(X, accept_sparse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb30-10">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.n_features_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> X.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb30-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span></span>
<span id="cb30-12"></span>
<span id="cb30-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> transform(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, X):</span>
<span id="cb30-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" 인수 X에 전처리를 적용한다. """</span></span>
<span id="cb30-15">        check_is_fitted(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_features_'</span>)</span>
<span id="cb30-16">        X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_array(X, accept_sparse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb30-17">        X_transformed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hogehoge(X)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 여기서 hogehoge는 실제 변환 로직으로 대체해야 합니다.</span></span>
<span id="cb30-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> X_transformed</span></code></pre></div>
<p>모델 클래스는 <code>ClassifierMixin</code>과 <code>BaseEstimator</code>를 상속하여 구현할 수 있습니다.</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.base <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BaseEstimator, ClassifierMixin</span>
<span id="cb31-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.utils.validation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> check_array, check_is_fitted, check_X_y</span>
<span id="cb31-3"></span>
<span id="cb31-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> TemplateClassifier(ClassifierMixin, BaseEstimator):</span>
<span id="cb31-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" 모델 클래스의 예시 """</span></span>
<span id="cb31-6">    </span>
<span id="cb31-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, demo_param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"demo"</span>):</span>
<span id="cb31-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.demo_param <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> demo_param </span>
<span id="cb31-9">        </span>
<span id="cb31-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> fit(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, X, y):</span>
<span id="cb31-11">        X, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_X_y(X, y)</span>
<span id="cb31-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fugafuga <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> piyopiyo(X, y)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># piyopiyo는 모델 학습 로직으로 대체해야 합니다.</span></span>
<span id="cb31-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span></span>
<span id="cb31-14"></span>
<span id="cb31-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> predict(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, X):</span>
<span id="cb31-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" 미지의 데이터 추론 """</span></span>
<span id="cb31-17">        check_is_fitted(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fugafuga"</span>])</span>
<span id="cb31-18">        X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> check_array(X)</span>
<span id="cb31-19">        y_predicted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.fugafuga(X)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 여기서도 추론 로직으로 대체해야 합니다.</span></span>
<span id="cb31-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> y_predicted</span></code></pre></div>
<p>sklearn 규격으로 클래스를 구현할 때는 scikit-learn에서 제공하는 템플릿을 기반으로 변경하는 것을 추천합니다.</p>
</section>
<section id="데코레이터를-적절히-활용하기" class="level3" data-number="1.4.3">
<h3 data-number="1.4.3" class="anchored" data-anchor-id="데코레이터를-적절히-활용하기"><span class="header-section-number">1.4.3</span> 데코레이터를 적절히 활용하기</h3>
<p>데코레이터는 <code>@hogehoge</code>와 같은 형태로 주로 메소드나 함수 위에서 사용됩니다. 파이썬에는 표준 데코레이터와 사용자 정의 데코레이터가 있습니다. 자주 사용되는 표준 데코레이터로는 <code>@property</code>, <code>@staticmethod</code>, <code>@classmethod</code>, <code>@abstractmethod</code> 등이 있습니다. 하나씩 살펴보겠습니다.</p>
<section id="property" class="level4" data-number="1.4.3.1">
<h4 data-number="1.4.3.1" class="anchored" data-anchor-id="property"><span class="header-section-number">1.4.3.1</span> <span class="citation" data-cites="property">@property</span></h4>
<p><code>@property</code>는 클래스 외부에서 해당 멤버 변수를 변경할 수 없도록 만드는 데코레이터입니다.</p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> User:</span>
<span id="cb32-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, user_type: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb32-3">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name</span>
<span id="cb32-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.__user_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> user_type</span>
<span id="cb32-5"></span>
<span id="cb32-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@property</span></span>
<span id="cb32-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> user_type(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb32-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.__user_type</span></code></pre></div>
<p>위의 예에서 <code>User</code> 클래스의 <code>user_type</code>은 <code>@property</code>로 정의되어 있습니다. 따라서 <code>taro = User("taro", "admin")</code> 후에 <code>print(taro.user_type)</code>를 실행하면 “admin”이 출력됩니다. 그러나 <code>taro.user_type = "normal"</code>과 같이 변경하려고 하면 에러가 발생합니다. 이렇게 외부에서 변경할 수 없는 변수를 정의할 수 있습니다.</p>
</section>
<section id="staticmethod-및-classmethod" class="level4" data-number="1.4.3.2">
<h4 data-number="1.4.3.2" class="anchored" data-anchor-id="staticmethod-및-classmethod"><span class="header-section-number">1.4.3.2</span> <span class="citation" data-cites="staticmethod">@staticmethod</span> 및 <span class="citation" data-cites="classmethod">@classmethod</span></h4>
<p><code>@staticmethod</code>와 <code>@classmethod</code>는 객체를 생성하지 않고도 메소드를 호출할 수 있게 해줍니다.</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> User:</span>
<span id="cb33-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, user_type: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb33-3">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name</span>
<span id="cb33-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> user_type</span>
<span id="cb33-5"></span>
<span id="cb33-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@staticmethod</span></span>
<span id="cb33-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> say_hello(name):</span>
<span id="cb33-8">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> name)</span></code></pre></div>
<p>위와 같이 정의한 후 아래와 같이 실행하면 “Hello Hanako”가 출력됩니다.</p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">User.say_hello(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hanako"</span>)</span></code></pre></div>
</section>
<section id="abstractmethod" class="level4" data-number="1.4.3.3">
<h4 data-number="1.4.3.3" class="anchored" data-anchor-id="abstractmethod"><span class="header-section-number">1.4.3.3</span> <span class="citation" data-cites="abstractmethod">@abstractmethod</span></h4>
<p>다른 표준 Python 데코레이터인 <code>@abstractmethod</code>는 클래스의 메소드에 붙여 사용하며, 해당 클래스를 상속받은 자식 클래스에서 반드시 그 메소드를 구현해야 합니다. 구현하지 않으면 에러가 발생합니다. 즉, 추상 클래스를 정의하고 자식 클래스에서 메소드 구현을 강제하고 싶을 때 사용합니다.</p>
</section>
<section id="사용자-정의-데코레이터" class="level4" data-number="1.4.3.4">
<h4 data-number="1.4.3.4" class="anchored" data-anchor-id="사용자-정의-데코레이터"><span class="header-section-number">1.4.3.4</span> 사용자 정의 데코레이터</h4>
<p>사용자 정의 데코레이터를 통해 특정 조건을 만족하는 경우에만 메소드를 실행하도록 할 수 있습니다. 예를 들어, 사용자가 ’admin’일 때만 특정 작업을 수행하도록 하는 경우입니다.</p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> admin_only(func):</span>
<span id="cb35-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""데코레이터 정의"""</span></span>
<span id="cb35-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> wrapper(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb35-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"admin"</span>:</span>
<span id="cb35-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> func(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb35-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb35-7">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"권한 오류: 이 기능은 admin만 사용할 수 있습니다."</span>)</span>
<span id="cb35-8">    </span>
<span id="cb35-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> wrapper</span>
<span id="cb35-10"></span>
<span id="cb35-11"></span>
<span id="cb35-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> User:</span>
<span id="cb35-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, user_type: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb35-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name</span>
<span id="cb35-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> user_type</span>
<span id="cb35-16"></span>
<span id="cb35-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@admin_only</span></span>
<span id="cb35-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> func_admin_can_do(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb35-19">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I'm admin."</span>)</span></code></pre></div>
<p>이렇게 정의하면 <code>@admin_only</code> 데코레이터를 붙이는 것만으로 사용자가 ‘admin’인 경우에만 처리가 실행됩니다. ’admin’ 여부를 판단하는 로직이 여러 메소드에 필요하거나 동일한 코드를 반복 작성해야 하는 경우에 데코레이터가 특히 유용합니다.</p>
</section>
<section id="데코레이터-사용의-이점" class="level4" data-number="1.4.3.5">
<h4 data-number="1.4.3.5" class="anchored" data-anchor-id="데코레이터-사용의-이점"><span class="header-section-number">1.4.3.5</span> 데코레이터 사용의 이점</h4>
<p>데코레이터를 사용하면 다음과 같은 이점이 있습니다:</p>
<ol type="1">
<li>코드 중복을 줄일 수 있습니다.</li>
<li>권한 체크 로직을 한 곳에서 관리할 수 있어 유지보수가 쉬워집니다.</li>
<li>메소드의 본래 기능과 권한 체크 로직을 분리하여 코드의 가독성을 향상시킬 수 있습니다.</li>
<li>새로운 admin 전용 메소드를 추가할 때 데코레이터만 붙이면 되므로 개발 효율성이 높아집니다.</li>
</ol>
</section>
</section>
</section>
<section id="마치며" class="level2" data-number="1.5">
<h2 data-number="1.5" class="anchored" data-anchor-id="마치며"><span class="header-section-number">1.5</span> 마치며</h2>
<p>이 글에서는 데이터 사이언티스트와 AI 엔지니어가 Python을 활용하여 효율적으로 작업할 수 있는 다양한 방법과 유용한 팁을 소개했습니다. 마지막으로 이 글이 여러분의 프로그래밍 여정에 작은 도움이 되기를 바라며 앞으로도 지속적인 학습과 개선을 통해 더 나은 개발자가 되시길 응원합니다. 읽어 주셔서 감사합니다.</p>
</section>
</section>
<section id="타입-힌팅" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 타입 힌팅</h1>
<section id="변수" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="변수"><span class="header-section-number">2.1</span> 변수</h2>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">age: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb36-2"></span>
<span id="cb36-3">child: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span></span>
<span id="cb36-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>:</span>
<span id="cb36-5">    child <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb36-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb36-7">    child <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
</section>
<section id="유용한-내부-타입" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="유용한-내부-타입"><span class="header-section-number">2.2</span> 유용한 내부 타입</h2>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb37-2">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span></span>
<span id="cb37-3">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb37-4">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span></span>
<span id="cb37-5">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bytes</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b"test"</span></span>
<span id="cb37-6">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb37-7">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>}</span>
<span id="cb37-8">x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"field"</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>}</span></code></pre></div>
</section>
<section id="함수" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="함수"><span class="header-section-number">2.3</span> 함수</h2>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Callable, Iteractor, Union, Optional</span>
<span id="cb38-2"></span>
<span id="cb38-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> stringfy(num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb38-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(num)</span>
<span id="cb38-5"></span>
<span id="cb38-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plus(num1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, num: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb38-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> num1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> num2</span></code></pre></div>
</section>
<section id="객체-지향-프로그래밍" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="객체-지향-프로그래밍"><span class="header-section-number">2.4</span> 객체 지향 프로그래밍</h2>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Union</span>
<span id="cb39-2"></span>
<span id="cb39-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Calculator:</span>
<span id="cb39-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb39-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb39-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, a: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>], b: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]:</span>
<span id="cb39-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="cb39-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result</span>
<span id="cb39-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> subtract(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, a: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>], b: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]:</span>
<span id="cb39-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b</span>
<span id="cb39-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result</span>
<span id="cb39-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> multiply(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, a: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>], b: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]:</span>
<span id="cb39-13">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b</span>
<span id="cb39-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result</span>
<span id="cb39-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> devide(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, a: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>], b: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]:</span>
<span id="cb39-16">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> b</span>
<span id="cb39-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.result</span></code></pre></div>
</section>
</section>
<section id="기타" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 기타</h1>
<section id="jupyter에서-사용하지-않는-커널-삭제" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="jupyter에서-사용하지-않는-커널-삭제"><span class="header-section-number">3.1</span> Jupyter에서 사용하지 않는 커널 삭제</h2>
<section id="커널-리스트-확인" class="level3" data-number="3.1.1">
<h3 data-number="3.1.1" class="anchored" data-anchor-id="커널-리스트-확인"><span class="header-section-number">3.1.1</span> 커널 리스트 확인</h3>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb40-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jupyter</span> kernelspec list</span></code></pre></div>
</section>
<section id="커널-삭제" class="level3" data-number="3.1.2">
<h3 data-number="3.1.2" class="anchored" data-anchor-id="커널-삭제"><span class="header-section-number">3.1.2</span> 커널 삭제</h3>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb41-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jupyter</span> kernelspec uninstall&nbsp;<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">unwanted_kernel_name</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
</section>
</section>
<section id="api-키-안전하게-사용하기" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="api-키-안전하게-사용하기"><span class="header-section-number">3.2</span> API 키 안전하게 사용하기</h2>
<section id="python-dotenv-사용1" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="python-dotenv-사용1"><span class="header-section-number">3.2.1</span> python-dotenv 사용<sup>1</sup></h3>
<p>API 토큰을 변수에 담아서 사용하는 것은 보안상 좋지 않은 방법이다. 여러가지 우회방법이 있지만 가장 유명한것은 아무래도 <code>python-dotenv</code>를 사용하는 방법이다.</p>
<section id="설치" class="level4" data-number="3.2.1.1">
<h4 data-number="3.2.1.1" class="anchored" data-anchor-id="설치"><span class="header-section-number">3.2.1.1</span> 설치</h4>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb42-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">venv</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> pip install python-dotenv</span></code></pre></div>
</section>
<section id="env-파일-만들기" class="level4" data-number="3.2.1.2">
<h4 data-number="3.2.1.2" class="anchored" data-anchor-id="env-파일-만들기"><span class="header-section-number">3.2.1.2</span> .env 파일 만들기</h4>
<p>설치가 끝나면&nbsp;<code>.env</code>&nbsp;파일을 작성해준다. 문자열이더라도 따옴표는 안 붙여도 된다. 파일 경로는 아무데나 저장해도 상관없는데 보통 프로젝트 루트 디렉토리에 저장한다. 프로젝트 루트 폴더에 <code>.env</code>를 만들고 아래와 같이 API 토큰을 입력한다.</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb43-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">HK_TOKEN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hf_cTKyTsXtqSHWyXPLAuxSIGECiIctuNsBona</span></code></pre></div>
</section>
<section id="gitignore-파일에-예외처리" class="level4" data-number="3.2.1.3">
<h4 data-number="3.2.1.3" class="anchored" data-anchor-id="gitignore-파일에-예외처리"><span class="header-section-number">3.2.1.3</span> .gitignore 파일에 예외처리</h4>
<p>일반적으로는 이미 명시되어 있겠지만 노파심에 한번 <code>.gitignore</code>파일에 아래 내용이 있는지 확인합니다.</p>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb44-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dotenv environment variable files</span></span>
<span id="cb44-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.env</span></span>
<span id="cb44-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.env.development.local</span></span>
<span id="cb44-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.env.test.local</span></span>
<span id="cb44-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.env.production.local</span></span>
<span id="cb44-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.env.local</span></span></code></pre></div>
</section>
<section id="코드-예시" class="level4" data-number="3.2.1.4">
<h4 data-number="3.2.1.4" class="anchored" data-anchor-id="코드-예시"><span class="header-section-number">3.2.1.4</span> 코드 예시</h4>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb45-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dotenv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dotenv</span>
<span id="cb45-3"></span>
<span id="cb45-4">load_dotenv(verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb45-5">TOKEN <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HK_TOKEN'</span>)</span>
<span id="cb45-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(TOKEN)</span></code></pre></div>
<p><code>load_dotenv()</code>&nbsp;함수에 사용되는 변수는 다음과 같다.</p>
<ul>
<li>dotenv_path: .env 파일의 절대경로 및 상대경로</li>
<li>stream: .env 파일 내용에 대한 StringIO 객체</li>
<li>verbose: .env 파일 누락 등의 경고 메시지를 출력할 것인지에 대한 옵션</li>
<li>override: 시스템 환경변수를 .env 파일에 정의한 환경변수가 덮어쓸지에 대한 옵션</li>
</ul>
<hr>
</section>
</section>
</section>
</section>
<section id="reference" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Reference</h1>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><a href="https://pypi.org/project/python-dotenv/">https://pypi.org/project/python-dotenv/</a>↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Tip</category>
  <category>Productivity</category>
  <category>Programming</category>
  <category>Cheatsheet</category>
  <guid>https://tomorrow-lab.github.io/posts/md/Tip_python.html</guid>
  <pubDate>Sat, 21 Dec 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>학술 논문을 효율적으로 읽는 법</title>
  <dc:creator>Taeyoon Kim</dc:creator>
  <link>https://tomorrow-lab.github.io/posts/md/How_readPaper.html</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="how_readPaper.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://tomorrow-lab.github.io/posts/md/how_readPaper.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></a></p>
</figure>
</div>
<p>데이터 과학 분야에서 머신 러닝, 딥 러닝, 새로운 데이터베이스 및 데이터 엔지니어링과 같은 분야에서 사용되는 기술들은 매우 복잡합니다. 게다가 새로운 기술들이 매주 쏟아져 나오고 있어서 최신 동향을 따라잡고 필요한 정보를 얻기 위해서는 꾸준히 논문을 읽고 공부해야 합니다. 다만, 논문을 읽는 것은 쉬운 일이 아닙니다. 왜냐하면 논문은 독자들이 전문적인 지식을 갖추고 있다고 가정하고 쓰여지기 때문입니다. 그러나 논문을 읽는 것은 연습과 노력을 통해 향상될 수 있는 기술로 꾸준한 연습과 학습을 통해 논문을 이해하고 최신 지식을 습득하는 능력을 키워나갈 수 있습니다. 따라서 논문을 읽는 것을 두려워하지 말고 꾸준히 도전하고 연습하여 능력을 향상시켜 나가는 것이 중요합니다.</p>
<section id="논문의-구성" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> 논문의 구성</h1>
<p>다행히 대부분의 논문 들은 아래와 같은 형식을 따릅니다<sup>1</sup>:</p>
<ul>
<li>제목: 흥미로운 제목과 함께, 저자와 그들의 소속에 대한 정보가 포함됩니다.</li>
<li>초록: 전체 논문의 요약으로, 주요 내용과 연구의 목적을 간략하게 설명합니다.</li>
<li>서론: 연구의 배경과 기존 연구에 대한 정보를 제공합니다.</li>
<li>방법: 연구 방법과 도구, 과정에 대한 상세한 설명을 담고 있습니다.</li>
<li>결과: 저자가 수집하고 분석한 데이터와 결과를 제시합니다.</li>
<li>토의: 저자가 결과를 해석하고, 자신의 발견과 가설을 설명하며, 독자를 설득합니다.</li>
<li>참고문헌: 본문에서 인용된 다른 논문과 자료들을 나열합니다.</li>
<li>부록: 추가적인 그림, 수학 공식, 또는 흥미로운 보충 자료를 포함합니다.</li>
</ul>
<p>논문의 구성을 파악하고 읽으면 이해하는 것이 한결 수월해 질 것입니다.</p>
</section>
<section id="체계적으로-논문-읽기" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 체계적으로 논문 읽기</h1>
<p>논문에 담긴 정보는 매우 밀도 높고 복잡하기 때문에 논문을 읽을 때 처음부터 끝까지 한 번에 읽으려고 하는 것은 비효율적입니다. 그래서 저는 논문을 읽을 때 다음과 같은 체계적인 접근법을 사용합니다:<sup>2</sup></p>
<ul>
<li>조용하고 편안한 환경을 선택하세요. 좋아하는 음료와 함께 몇 시간 동안 집중할 수 있는 공간을 마련하세요. 요즘에는 멋진 카페에서 작업하는 것도 좋은 방법입니다.</li>
<li>먼저 제목과 초록을 읽으세요. 논문의 전체적인 내용과 저자의 주요 목표, 핵심 결과를 파악하는 것이 목표입니다. 초록은 논문의 목적을 요약한 광고와 같으니 이를 통해 논문의 방향을 이해하세요.</li>
<li>논문을 훑어보며 전체적인 레이아웃과 내용의 위치를 파악하세요. 약 15 분 정도 그림과 키워드를 살펴보며 논문의 구조를 이해합니다.</li>
<li>서론에 집중하세요. 특히 익숙하지 않은 분야의 논문이라면 서론에 더 많은 시간을 할애하세요. 저자들이 제공하는 배경 정보와 참고 문헌을 통해 논문의 맥락을 이해할 수 있습니다.</li>
<li>그림에 특별한 주의를 기울이세요. 저자의 주요 메시지와 정보를 담고 있으므로 그림을 통해 논문의 핵심 내용을 파악하세요.</li>
<li>잠시 휴식을 취하세요. 산책이나 가벼운 간식을 통해 머리를 식히고 다음 단계로 넘어갑니다.</li>
<li>논문을 처음부터 끝까지 읽으세요. 이 단계에서는 상위 수준의 노트를 작성하기 시작합니다. 이해되지 않는 부분이 있더라도 표시만 하고 넘어가세요. 약 1 시간 30 분 정도 논문을 익히고 전반적인 흐름을 이해하는 데 집중합니다.</li>
<li>다시 초록부터 시작하여 서론을 빠르게 훑어보고 방법 섹션을 주의 깊게 읽으세요. 방법 섹션에는 논문의 근거가 되는 세부 정보가 담겨 있으므로 전체적인 이해를 얻는데 주력합니다. 결과와 토론 섹션을 읽으며 주요 결과와 그 결정 과정을 명확히 이해하세요.</li>
<li>다시 잠시 휴식을 취한 후 그림의 세부 사항을 살펴보세요. 방법, 결과, 토론 섹션을 읽으면 그림에서 더 많은 정보를 얻을 수 있을 것입니다. 30 분에서 1 시간 정도 집중해서 보세요.</li>
<li>두 번째로 전체적인 내용을 훑어보세요. 이번에는 매우 비판적인 시각으로 읽습니다. 이 과정은 이해하기 어려웠던 부분에 집중하고, 각 문장과 단어를 정확히 이해하세요.</li>
<li>이제 토론 섹션을 비판적으로 읽으면서 저자의 추론과 논리를 생각해봅니다. 그리고 논문을 읽으며 배운 내용과 제시된 증거를 비교하고 동료에게 질문할 만한 흥미로운 내용을 찾아보세요. 논문의 저자에게 이메일로 질문하는 것도 좋은 방법입니다.</li>
<li>이 시점에서는 논문에 대해 자신 있게 이야기하고 결과를 비판적으로 생각하며 다른 연구와 비교할 수 있어야 합니다. 그리고 내용을 오래 기억하기 위해 논문에 대한 글을 쓰는 것도 도움이 됩니다. 배운 내용과 결과의 중요성을 짧은 문장으로 정리해보세요.</li>
</ul>
</section>
<section id="논문을-읽을-때-생각해야-할-질문들" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 논문을 읽을 때 생각해야 할 질문들</h1>
<p>논문을 읽을 때 다음과 같은 질문들을 스스로에게 던져보면 내용을 더 쉽게 이해할 수 있습니다.</p>
<ol type="1">
<li>이 논문이 어떤 선행 연구나 이론을 바탕으로 작성되었는지 확인하세요. 소개 섹션에서 주로 이전 연구와 이론에 대한 언급을 찾을 수 있습니다. 이를 통해 논문의 맥락과 배경을 이해할 수 있습니다.</li>
<li>연구의 동기와 목적은 무엇인지 명확히 하세요. 저자가 연구를 수행한 이유와 그 중요성을 이해하는 것이 중요합니다. 소개 섹션에서 연구의 목적과 동기를 찾을 수 있습니다.</li>
<li>연구의 구체적인 목적을 나열하고, 각 목적이 어떻게 달성되었는지 살펴보세요.</li>
<li>연구에 사용된 장비, 소프트웨어, 도구 등을 확인하세요. 방법 섹션에서 이러한 정보들을 찾을 수 있습니다.</li>
<li>실험이나 연구 과정에서 어떤 변수들이 측정되었는지 파악하세요. 방법 섹션에서 변수들의 정의와 측정 방법을 확인할 수 있습니다.</li>
<li>통계적 검정이 사용되었다면, 그 결과와 해석을 주의 깊게 살펴보세요. 방법 또는 결과 섹션에서 통계적 검정의 결과와 의미를 이해해야 합니다.</li>
<li>주요 발견과 결과는 무엇인지 정리하세요. 결과 섹션에서 저자가 강조하는 주요 결과들을 파악하고, 그 중요성을 이해하세요.</li>
<li>이러한 결과가 해당 분야의 다른 연구들과 어떻게 연결되고, 어떤 의미를 갖는지 생각해 보세요. 토론 섹션에서 저자가 다른 연구들과의 비교와 해석을 어떻게 하는지 살펴보세요.</li>
<li>각 그림을 자세히 분석하고, 저자가 전달하려는 메시지를 파악하세요. 그림은 논문의 핵심 내용을 시각적으로 표현하므로, 그림을 통해 논문의 주요 내용을 이해할 수 있습니다.</li>
<li>결과의 재현 가능성과 코드의 존재 여부를 확인하세요. 재현 가능성은 연구의 신뢰성과 투명성을 평가하는 데 중요합니다.</li>
<li>논문의 저자, 연도, 제목을 정확히 기록하세요. 이는 논문을 인용하거나 참고할 때 필수적인 정보입니다.</li>
<li>저자 중에 익숙한 사람이 있는지, 그들의 이전 연구나 업적을 알고 있는지 확인하세요. 저자의 전문성과 연구의 맥락을 이해하는 데 도움이 됩니다.</li>
<li>모르는 핵심 용어와 개념이 있다면, 사전이나 교과서를 통해 찾아보거나, 전문가에게 문의하세요. 이해하지 못한 부분은 논문을 읽는 데 장애물이 될 수 있습니다.</li>
<li>결과에 대한 자신의 생각과 평가를 적어보세요. 결과가 타당하고 설득력 있다고 생각하는지, 다른 관점에서 바라볼 수 있는지 생각해 보세요.</li>
</ol>
</section>
<section id="저널-클럽-참여하기" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 저널 클럽 참여하기</h1>
<p>논문을 읽고 토론하는 저널 클럽은 매우 유익한 활동입니다. 동료들과 함께 정기적으로 논문을 토론하면, 서로 다른 관점과 지식을 공유하고, 더 깊은 통찰력을 얻을 수 있기 때문이죠. 매월 1~2 편의 논문을 선택하여 함께 읽고 토론하는 저널 클럽을 시작해 보세요. 논문을 혼자 읽는 것보다 친구들과 함께 읽고 토론하는 것이 훨씬 더 즐겁고 유익한 경험이 될 것입니다. 저널 클럽을 통해 얻는 장점은 다음과 같습니다:</p>
<ul>
<li>다양한 관점과 해석을 공유하고, 논문에 대한 이해를 심화할 수 있습니다.</li>
<li>논문을 읽는 재미와 동기를 부여합니다.</li>
<li>논문에 대한 비판적 사고와 분석 능력을 향상시킬 수 있습니다.</li>
</ul>
</section>
<section id="논문-읽기를-도와주는-도구들" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 논문 읽기를 도와주는 도구들</h1>
<p>다음은 논문 읽기를 도와주는 유용한 도구들과 그 설명입니다.<sup>3</sup> 논문을 읽고 연구하는 과정에서 이러한 도구들을 활용하면, 정보 접근과 관리를 더 효율적으로 할 수 있습니다. 특히 참고문헌 관리자는 특히 많은 논문을 관리하고 읽을 때 큰 도움이 됩니다.</p>
<section id="논문-검색" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="논문-검색"><span class="header-section-number">5.1</span> 논문 검색</h2>
<ul>
<li><a href="https://arxiv.org">arXiv</a>: 주로 과학, 수학, 공학, 컴퓨터 과학, 물리학, 통계학 등 다양한 분야의 논문을 자유롭게 다운로드하고 읽을 수 있습니다.</li>
<li><a href="https://pmc.ncbi.nlm.nih.gov">PubMed</a>: 미국 국립보건원 국립의학도서관 (NIH/NLM) 에서 제공하는 PubMed Central®(PMC) 은 생명과학 및 의학 관련 논문 전문 보관소입니다. PubMed 는 의학 및 생명 과학 분야의 논문을 검색하고 접근하기에 매우 유용한 도구입니다.</li>
<li><a href="https://scholar.google.com">Google Scholar</a>: 구글의 검색 엔진을 활용하여 학술 문헌을 검색하는 도구입니다. 간단한 검색어를 입력하면 다양한 분야의 논문, 학위 논문, 책, 초록 등을 검색할 수 있습니다.</li>
<li><a href="https://sci-hub.ru">Sci-hub</a>: 유료 학술 논문에 무료로 접근할 수 있게 해주는 웹사이트입니다. 저작권 문제로 논란의 여지가 있지만, 많은 연구자들이 이용하고 있습니다.</li>
<li><a href="https://www.smartquantai.com">Sciencehubmutalaid</a>: 연구자들이 서로 논문을 공유하는 사이트로 주로 유료 학술 논문을 위주로 읽고 싶은 논문에 대해서 요청을 하면 권한이 있는 다른 사람이 찾아 주고는 합니다.</li>
<li><a href="https://scispace.com">SCICSPACE</a>: 논문 검색, 요약, 및 시각화 기능을 제공하는 플랫폼으로 LLM 기술을 사용해 문헌 조사 과정을 간소화하고 효율적으로 만듭니다.</li>
</ul>
</section>
<section id="참고-문헌-관리" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="참고-문헌-관리"><span class="header-section-number">5.2</span> 참고 문헌 관리</h2>
<ul>
<li><a href="https://www.zotero.org">Zotero</a>: 오픈 소스 참고 문헌 관리 소프트웨어로, 웹 브라우저와 통합되어 온라인 자료를 쉽게 수집하고 관리할 수 있습니다.</li>
<li><a href="https://www.mendeley.com">Mendeley</a>: 참고 문헌 관리와 학술 소셜 네트워크 기능을 결합한 도구로, PDF 주석 기능과 협업 기능이 강점입니다.</li>
<li><a href="https://paperpile.com">PaperPile</a>: 클라우드 기반의 참고 문헌 관리 도구로, Google Docs 와의 통합이 뛰어나 온라인 작업 환경에 적합합니다.</li>
<li><a href="https://endnote.com">Endnote</a>: 광범위한 참고 문헌 관리 기능을 제공하는 소프트웨어로, 문헌 수집, 조직화, 인용 및 서지 작성을 효율적으로 수행할 수 있습니다. Microsoft Word 와의 통합이 뛰어나며, 다양한 인용 스타일을 지원합니다.</li>
</ul>
</section>
</section>
<section id="마치며" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> 마치며</h1>
<p>여러분은 이제 체계적인 접근법을 통해 논문을 효율적으로 읽고 이해할 수 있을 것입니다. 그러나 논문을 읽는 것은 꾸준한 연습과 노력이 필요한 과정이므로 항상 자신만의 방법을 찾아가는 것이 가장 중요하다는 사실을 기억하세요.</p>
</section>
<section id="reference" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Reference</h1>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Hubbard, K. E., &amp; Dunbar, S. D. (2017). Perceptions of scientific research literature and strategies for reading papers depend on academic career stage. PloS one, 12(12), e0189753.↩︎</p></li>
<li id="fn2"><p>Shout out to Chris at CoffeeCycle! Simply the best coffee in San Diego.↩︎</p></li>
<li id="fn3"><p>Keshav, S. (2007). How to read a paper. ACM SIGCOMM Computer Communication Review, 37(3), 83–84.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Data science</category>
  <category>Tip</category>
  <category>Productivity</category>
  <guid>https://tomorrow-lab.github.io/posts/md/How_readPaper.html</guid>
  <pubDate>Sat, 30 Nov 2024 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
